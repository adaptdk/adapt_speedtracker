/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

	__webpack_require__(1);
	module.exports = __webpack_require__(2);


/***/ }),
/* 1 */
/***/ (function(module, exports) {

	(function(self) {
	  'use strict';

	  if (self.fetch) {
	    return
	  }

	  var support = {
	    searchParams: 'URLSearchParams' in self,
	    iterable: 'Symbol' in self && 'iterator' in Symbol,
	    blob: 'FileReader' in self && 'Blob' in self && (function() {
	      try {
	        new Blob()
	        return true
	      } catch(e) {
	        return false
	      }
	    })(),
	    formData: 'FormData' in self,
	    arrayBuffer: 'ArrayBuffer' in self
	  }

	  if (support.arrayBuffer) {
	    var viewClasses = [
	      '[object Int8Array]',
	      '[object Uint8Array]',
	      '[object Uint8ClampedArray]',
	      '[object Int16Array]',
	      '[object Uint16Array]',
	      '[object Int32Array]',
	      '[object Uint32Array]',
	      '[object Float32Array]',
	      '[object Float64Array]'
	    ]

	    var isDataView = function(obj) {
	      return obj && DataView.prototype.isPrototypeOf(obj)
	    }

	    var isArrayBufferView = ArrayBuffer.isView || function(obj) {
	      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1
	    }
	  }

	  function normalizeName(name) {
	    if (typeof name !== 'string') {
	      name = String(name)
	    }
	    if (/[^a-z0-9\-#$%&'*+.\^_`|~]/i.test(name)) {
	      throw new TypeError('Invalid character in header field name')
	    }
	    return name.toLowerCase()
	  }

	  function normalizeValue(value) {
	    if (typeof value !== 'string') {
	      value = String(value)
	    }
	    return value
	  }

	  // Build a destructive iterator for the value list
	  function iteratorFor(items) {
	    var iterator = {
	      next: function() {
	        var value = items.shift()
	        return {done: value === undefined, value: value}
	      }
	    }

	    if (support.iterable) {
	      iterator[Symbol.iterator] = function() {
	        return iterator
	      }
	    }

	    return iterator
	  }

	  function Headers(headers) {
	    this.map = {}

	    if (headers instanceof Headers) {
	      headers.forEach(function(value, name) {
	        this.append(name, value)
	      }, this)

	    } else if (headers) {
	      Object.getOwnPropertyNames(headers).forEach(function(name) {
	        this.append(name, headers[name])
	      }, this)
	    }
	  }

	  Headers.prototype.append = function(name, value) {
	    name = normalizeName(name)
	    value = normalizeValue(value)
	    var list = this.map[name]
	    if (!list) {
	      list = []
	      this.map[name] = list
	    }
	    list.push(value)
	  }

	  Headers.prototype['delete'] = function(name) {
	    delete this.map[normalizeName(name)]
	  }

	  Headers.prototype.get = function(name) {
	    var values = this.map[normalizeName(name)]
	    return values ? values[0] : null
	  }

	  Headers.prototype.getAll = function(name) {
	    return this.map[normalizeName(name)] || []
	  }

	  Headers.prototype.has = function(name) {
	    return this.map.hasOwnProperty(normalizeName(name))
	  }

	  Headers.prototype.set = function(name, value) {
	    this.map[normalizeName(name)] = [normalizeValue(value)]
	  }

	  Headers.prototype.forEach = function(callback, thisArg) {
	    Object.getOwnPropertyNames(this.map).forEach(function(name) {
	      this.map[name].forEach(function(value) {
	        callback.call(thisArg, value, name, this)
	      }, this)
	    }, this)
	  }

	  Headers.prototype.keys = function() {
	    var items = []
	    this.forEach(function(value, name) { items.push(name) })
	    return iteratorFor(items)
	  }

	  Headers.prototype.values = function() {
	    var items = []
	    this.forEach(function(value) { items.push(value) })
	    return iteratorFor(items)
	  }

	  Headers.prototype.entries = function() {
	    var items = []
	    this.forEach(function(value, name) { items.push([name, value]) })
	    return iteratorFor(items)
	  }

	  if (support.iterable) {
	    Headers.prototype[Symbol.iterator] = Headers.prototype.entries
	  }

	  function consumed(body) {
	    if (body.bodyUsed) {
	      return Promise.reject(new TypeError('Already read'))
	    }
	    body.bodyUsed = true
	  }

	  function fileReaderReady(reader) {
	    return new Promise(function(resolve, reject) {
	      reader.onload = function() {
	        resolve(reader.result)
	      }
	      reader.onerror = function() {
	        reject(reader.error)
	      }
	    })
	  }

	  function readBlobAsArrayBuffer(blob) {
	    var reader = new FileReader()
	    var promise = fileReaderReady(reader)
	    reader.readAsArrayBuffer(blob)
	    return promise
	  }

	  function readBlobAsText(blob) {
	    var reader = new FileReader()
	    var promise = fileReaderReady(reader)
	    reader.readAsText(blob)
	    return promise
	  }

	  function readArrayBufferAsText(buf) {
	    var view = new Uint8Array(buf)
	    var chars = new Array(view.length)

	    for (var i = 0; i < view.length; i++) {
	      chars[i] = String.fromCharCode(view[i])
	    }
	    return chars.join('')
	  }

	  function bufferClone(buf) {
	    if (buf.slice) {
	      return buf.slice(0)
	    } else {
	      var view = new Uint8Array(buf.byteLength)
	      view.set(new Uint8Array(buf))
	      return view.buffer
	    }
	  }

	  function Body() {
	    this.bodyUsed = false

	    this._initBody = function(body) {
	      this._bodyInit = body
	      if (!body) {
	        this._bodyText = ''
	      } else if (typeof body === 'string') {
	        this._bodyText = body
	      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {
	        this._bodyBlob = body
	      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {
	        this._bodyFormData = body
	      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {
	        this._bodyText = body.toString()
	      } else if (support.arrayBuffer && support.blob && isDataView(body)) {
	        this._bodyArrayBuffer = bufferClone(body.buffer)
	        // IE 10-11 can't handle a DataView body.
	        this._bodyInit = new Blob([this._bodyArrayBuffer])
	      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {
	        this._bodyArrayBuffer = bufferClone(body)
	      } else {
	        throw new Error('unsupported BodyInit type')
	      }

	      if (!this.headers.get('content-type')) {
	        if (typeof body === 'string') {
	          this.headers.set('content-type', 'text/plain;charset=UTF-8')
	        } else if (this._bodyBlob && this._bodyBlob.type) {
	          this.headers.set('content-type', this._bodyBlob.type)
	        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {
	          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')
	        }
	      }
	    }

	    if (support.blob) {
	      this.blob = function() {
	        var rejected = consumed(this)
	        if (rejected) {
	          return rejected
	        }

	        if (this._bodyBlob) {
	          return Promise.resolve(this._bodyBlob)
	        } else if (this._bodyArrayBuffer) {
	          return Promise.resolve(new Blob([this._bodyArrayBuffer]))
	        } else if (this._bodyFormData) {
	          throw new Error('could not read FormData body as blob')
	        } else {
	          return Promise.resolve(new Blob([this._bodyText]))
	        }
	      }

	      this.arrayBuffer = function() {
	        if (this._bodyArrayBuffer) {
	          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)
	        } else {
	          return this.blob().then(readBlobAsArrayBuffer)
	        }
	      }
	    }

	    this.text = function() {
	      var rejected = consumed(this)
	      if (rejected) {
	        return rejected
	      }

	      if (this._bodyBlob) {
	        return readBlobAsText(this._bodyBlob)
	      } else if (this._bodyArrayBuffer) {
	        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))
	      } else if (this._bodyFormData) {
	        throw new Error('could not read FormData body as text')
	      } else {
	        return Promise.resolve(this._bodyText)
	      }
	    }

	    if (support.formData) {
	      this.formData = function() {
	        return this.text().then(decode)
	      }
	    }

	    this.json = function() {
	      return this.text().then(JSON.parse)
	    }

	    return this
	  }

	  // HTTP methods whose capitalization should be normalized
	  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']

	  function normalizeMethod(method) {
	    var upcased = method.toUpperCase()
	    return (methods.indexOf(upcased) > -1) ? upcased : method
	  }

	  function Request(input, options) {
	    options = options || {}
	    var body = options.body

	    if (typeof input === 'string') {
	      this.url = input
	    } else {
	      if (input.bodyUsed) {
	        throw new TypeError('Already read')
	      }
	      this.url = input.url
	      this.credentials = input.credentials
	      if (!options.headers) {
	        this.headers = new Headers(input.headers)
	      }
	      this.method = input.method
	      this.mode = input.mode
	      if (!body && input._bodyInit != null) {
	        body = input._bodyInit
	        input.bodyUsed = true
	      }
	    }

	    this.credentials = options.credentials || this.credentials || 'omit'
	    if (options.headers || !this.headers) {
	      this.headers = new Headers(options.headers)
	    }
	    this.method = normalizeMethod(options.method || this.method || 'GET')
	    this.mode = options.mode || this.mode || null
	    this.referrer = null

	    if ((this.method === 'GET' || this.method === 'HEAD') && body) {
	      throw new TypeError('Body not allowed for GET or HEAD requests')
	    }
	    this._initBody(body)
	  }

	  Request.prototype.clone = function() {
	    return new Request(this, { body: this._bodyInit })
	  }

	  function decode(body) {
	    var form = new FormData()
	    body.trim().split('&').forEach(function(bytes) {
	      if (bytes) {
	        var split = bytes.split('=')
	        var name = split.shift().replace(/\+/g, ' ')
	        var value = split.join('=').replace(/\+/g, ' ')
	        form.append(decodeURIComponent(name), decodeURIComponent(value))
	      }
	    })
	    return form
	  }

	  function parseHeaders(rawHeaders) {
	    var headers = new Headers()
	    rawHeaders.split('\r\n').forEach(function(line) {
	      var parts = line.split(':')
	      var key = parts.shift().trim()
	      if (key) {
	        var value = parts.join(':').trim()
	        headers.append(key, value)
	      }
	    })
	    return headers
	  }

	  Body.call(Request.prototype)

	  function Response(bodyInit, options) {
	    if (!options) {
	      options = {}
	    }

	    this.type = 'default'
	    this.status = 'status' in options ? options.status : 200
	    this.ok = this.status >= 200 && this.status < 300
	    this.statusText = 'statusText' in options ? options.statusText : 'OK'
	    this.headers = new Headers(options.headers)
	    this.url = options.url || ''
	    this._initBody(bodyInit)
	  }

	  Body.call(Response.prototype)

	  Response.prototype.clone = function() {
	    return new Response(this._bodyInit, {
	      status: this.status,
	      statusText: this.statusText,
	      headers: new Headers(this.headers),
	      url: this.url
	    })
	  }

	  Response.error = function() {
	    var response = new Response(null, {status: 0, statusText: ''})
	    response.type = 'error'
	    return response
	  }

	  var redirectStatuses = [301, 302, 303, 307, 308]

	  Response.redirect = function(url, status) {
	    if (redirectStatuses.indexOf(status) === -1) {
	      throw new RangeError('Invalid status code')
	    }

	    return new Response(null, {status: status, headers: {location: url}})
	  }

	  self.Headers = Headers
	  self.Request = Request
	  self.Response = Response

	  self.fetch = function(input, init) {
	    return new Promise(function(resolve, reject) {
	      var request = new Request(input, init)
	      var xhr = new XMLHttpRequest()

	      xhr.onload = function() {
	        var options = {
	          status: xhr.status,
	          statusText: xhr.statusText,
	          headers: parseHeaders(xhr.getAllResponseHeaders() || '')
	        }
	        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')
	        var body = 'response' in xhr ? xhr.response : xhr.responseText
	        resolve(new Response(body, options))
	      }

	      xhr.onerror = function() {
	        reject(new TypeError('Network request failed'))
	      }

	      xhr.ontimeout = function() {
	        reject(new TypeError('Network request failed'))
	      }

	      xhr.open(request.method, request.url, true)

	      if (request.credentials === 'include') {
	        xhr.withCredentials = true
	      }

	      if ('responseType' in xhr && support.blob) {
	        xhr.responseType = 'blob'
	      }

	      request.headers.forEach(function(value, name) {
	        xhr.setRequestHeader(name, value)
	      })

	      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)
	    })
	  }
	  self.fetch.polyfill = true
	})(typeof self !== 'undefined' ? self : this);


/***/ }),
/* 2 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var _reactDom = __webpack_require__(10);

	var _Constants = __webpack_require__(19);

	var _Constants2 = _interopRequireDefault(_Constants);

	var _Dashboard = __webpack_require__(20);

	var _Dashboard2 = _interopRequireDefault(_Dashboard);

	var _Footer = __webpack_require__(159);

	var _Footer2 = _interopRequireDefault(_Footer);

	var _Loader = __webpack_require__(161);

	var _Loader2 = _interopRequireDefault(_Loader);

	var _TopBar = __webpack_require__(162);

	var _TopBar2 = _interopRequireDefault(_TopBar);

	var _Utils = __webpack_require__(154);

	var Utils = _interopRequireWildcard(_Utils);

	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var objectPath = __webpack_require__(157);
	var parseUrl = __webpack_require__(833).parse;

	__webpack_require__(835).polyfill();

	var App = function (_React$Component) {
	  _inherits(App, _React$Component);

	  function App(props) {
	    _classCallCheck(this, App);

	    var _this = _possibleConstructorReturn(this, (App.__proto__ || Object.getPrototypeOf(App)).call(this, props));

	    _this._fetchData = function (dateFrom, dateTo) {
	      var monthFrom = dateFrom.getFullYear() * 100 + dateFrom.getMonth() + 1;
	      var monthTo = dateTo.getFullYear() * 100 + dateTo.getMonth() + 1;

	      var testsForRange = _this.state.tests.filter(function (test) {
	        return test >= monthFrom && test <= monthTo;
	      });

	      var queue = testsForRange.map(function (test) {
	        var year = test.toString().slice(0, 4);
	        var month = test.toString().slice(4, 6);

	        var path = _this.baseUrl + '/results/' + _this.state.profile.slug + '/' + year + '/' + month + '.json';

	        return window.fetch(path).then(function (response) {
	          return response.json();
	        });
	      });

	      _this.setState({
	        loading: true
	      });

	      Promise.all(queue).then(function (resultChunks) {
	        var results = {};

	        resultChunks.forEach(function (chunk) {
	          Utils.traverseObject(chunk._r, function (obj, path) {
	            obj.forEach(function (item, index) {
	              var ts = chunk._ts[index];

	              objectPath.set(results, ts + '.' + path.join('.'), item);
	            });
	          });
	        });

	        _this.setState({
	          loading: false,
	          results: results
	        });
	      });
	    };

	    _this._changePeriod = function (newPeriod) {
	      _this.setState({
	        period: newPeriod
	      });

	      window.history.pushState(null, null, '?period=' + newPeriod);
	    };

	    _this._changeProfile = function (newProfile) {
	      _this.setState({
	        loading: true
	      });

	      window.history.pushState(null, null, _this.baseUrl + '/' + newProfile + '/?period=' + _this.state.period);

	      window.fetch(_this.baseUrl + '/profiles.json').then(function (response) {
	        return response.json();
	      }).then(function (profiles) {
	        var profile = profiles.find(function (profile) {
	          return profile.slug === newProfile;
	        });

	        _this.setState({
	          loading: false,
	          profile: profile,
	          tests: profile.tests
	        });
	      });
	    };

	    var activeProfile = window.PROFILES.find(function (profile) {
	      return profile.active;
	    });

	    var urlParameters = parseUrl(window.location.search);
	    var period = _Constants2.default.periods.indexOf(urlParameters.period) > -1 ? urlParameters.period : 'week';

	    _this.state = {
	      loading: true,
	      period: period,
	      profile: activeProfile,
	      profiles: window.PROFILES,
	      results: null,
	      tests: window.TESTS
	    };

	    _this.baseUrl = window.BASE_URL || '';
	    return _this;
	  }

	  _createClass(App, [{
	    key: 'componentDidMount',
	    value: function componentDidMount() {
	      var dateRange = Utils.getDateRangeForPeriod(this.state.period);

	      this._fetchData(dateRange.from, dateRange.to);
	    }
	  }, {
	    key: 'componentDidUpdate',
	    value: function componentDidUpdate(oldProps, oldState) {
	      if (oldState.period !== this.state.period || oldState.profile !== this.state.profile) {
	        var dateRange = Utils.getDateRangeForPeriod(this.state.period);

	        this._fetchData(dateRange.from, dateRange.to);
	      }
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var state = this.state;

	      return _react2.default.createElement(
	        'div',
	        null,
	        _react2.default.createElement(_TopBar2.default, _extends({}, state, {
	          onPeriodChange: this._changePeriod,
	          onProfileChange: this._changeProfile
	        })),
	        this.state.loading ? _react2.default.createElement(_Loader2.default, null) : _react2.default.createElement(_Dashboard2.default, _extends({}, state, {
	          onPeriodChange: this._changePeriod,
	          onProfileChange: this._changeProfile
	        })),
	        _react2.default.createElement(_Footer2.default, null)
	      );
	    }
	  }]);

	  return App;
	}(_react2.default.Component);

	(0, _reactDom.render)(_react2.default.createElement(App, null), document.getElementById('root'));

/***/ }),
/* 3 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	if (process.env.NODE_ENV === 'production') {
	  module.exports = __webpack_require__(5);
	} else {
	  module.exports = __webpack_require__(7);
	}

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 4 */
/***/ (function(module, exports) {

	// shim for using process in browser
	var process = module.exports = {};

	// cached from whatever global is present so that test runners that stub it
	// don't break things.  But we need to wrap it in a try catch in case it is
	// wrapped in strict mode code which doesn't define any globals.  It's inside a
	// function because try/catches deoptimize in certain engines.

	var cachedSetTimeout;
	var cachedClearTimeout;

	function defaultSetTimout() {
	    throw new Error('setTimeout has not been defined');
	}
	function defaultClearTimeout () {
	    throw new Error('clearTimeout has not been defined');
	}
	(function () {
	    try {
	        if (typeof setTimeout === 'function') {
	            cachedSetTimeout = setTimeout;
	        } else {
	            cachedSetTimeout = defaultSetTimout;
	        }
	    } catch (e) {
	        cachedSetTimeout = defaultSetTimout;
	    }
	    try {
	        if (typeof clearTimeout === 'function') {
	            cachedClearTimeout = clearTimeout;
	        } else {
	            cachedClearTimeout = defaultClearTimeout;
	        }
	    } catch (e) {
	        cachedClearTimeout = defaultClearTimeout;
	    }
	} ())
	function runTimeout(fun) {
	    if (cachedSetTimeout === setTimeout) {
	        //normal enviroments in sane situations
	        return setTimeout(fun, 0);
	    }
	    // if setTimeout wasn't available but was latter defined
	    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
	        cachedSetTimeout = setTimeout;
	        return setTimeout(fun, 0);
	    }
	    try {
	        // when when somebody has screwed with setTimeout but no I.E. maddness
	        return cachedSetTimeout(fun, 0);
	    } catch(e){
	        try {
	            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
	            return cachedSetTimeout.call(null, fun, 0);
	        } catch(e){
	            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
	            return cachedSetTimeout.call(this, fun, 0);
	        }
	    }


	}
	function runClearTimeout(marker) {
	    if (cachedClearTimeout === clearTimeout) {
	        //normal enviroments in sane situations
	        return clearTimeout(marker);
	    }
	    // if clearTimeout wasn't available but was latter defined
	    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
	        cachedClearTimeout = clearTimeout;
	        return clearTimeout(marker);
	    }
	    try {
	        // when when somebody has screwed with setTimeout but no I.E. maddness
	        return cachedClearTimeout(marker);
	    } catch (e){
	        try {
	            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
	            return cachedClearTimeout.call(null, marker);
	        } catch (e){
	            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
	            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
	            return cachedClearTimeout.call(this, marker);
	        }
	    }



	}
	var queue = [];
	var draining = false;
	var currentQueue;
	var queueIndex = -1;

	function cleanUpNextTick() {
	    if (!draining || !currentQueue) {
	        return;
	    }
	    draining = false;
	    if (currentQueue.length) {
	        queue = currentQueue.concat(queue);
	    } else {
	        queueIndex = -1;
	    }
	    if (queue.length) {
	        drainQueue();
	    }
	}

	function drainQueue() {
	    if (draining) {
	        return;
	    }
	    var timeout = runTimeout(cleanUpNextTick);
	    draining = true;

	    var len = queue.length;
	    while(len) {
	        currentQueue = queue;
	        queue = [];
	        while (++queueIndex < len) {
	            if (currentQueue) {
	                currentQueue[queueIndex].run();
	            }
	        }
	        queueIndex = -1;
	        len = queue.length;
	    }
	    currentQueue = null;
	    draining = false;
	    runClearTimeout(timeout);
	}

	process.nextTick = function (fun) {
	    var args = new Array(arguments.length - 1);
	    if (arguments.length > 1) {
	        for (var i = 1; i < arguments.length; i++) {
	            args[i - 1] = arguments[i];
	        }
	    }
	    queue.push(new Item(fun, args));
	    if (queue.length === 1 && !draining) {
	        runTimeout(drainQueue);
	    }
	};

	// v8 likes predictible objects
	function Item(fun, array) {
	    this.fun = fun;
	    this.array = array;
	}
	Item.prototype.run = function () {
	    this.fun.apply(null, this.array);
	};
	process.title = 'browser';
	process.browser = true;
	process.env = {};
	process.argv = [];
	process.version = ''; // empty string to avoid regexp issues
	process.versions = {};

	function noop() {}

	process.on = noop;
	process.addListener = noop;
	process.once = noop;
	process.off = noop;
	process.removeListener = noop;
	process.removeAllListeners = noop;
	process.emit = noop;
	process.prependListener = noop;
	process.prependOnceListener = noop;

	process.listeners = function (name) { return [] }

	process.binding = function (name) {
	    throw new Error('process.binding is not supported');
	};

	process.cwd = function () { return '/' };
	process.chdir = function (dir) {
	    throw new Error('process.chdir is not supported');
	};
	process.umask = function() { return 0; };


/***/ }),
/* 5 */
/***/ (function(module, exports, __webpack_require__) {

	/** @license React v16.8.6
	 * react.production.min.js
	 *
	 * Copyright (c) Facebook, Inc. and its affiliates.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 */

	'use strict';var k=__webpack_require__(6),n="function"===typeof Symbol&&Symbol.for,p=n?Symbol.for("react.element"):60103,q=n?Symbol.for("react.portal"):60106,r=n?Symbol.for("react.fragment"):60107,t=n?Symbol.for("react.strict_mode"):60108,u=n?Symbol.for("react.profiler"):60114,v=n?Symbol.for("react.provider"):60109,w=n?Symbol.for("react.context"):60110,x=n?Symbol.for("react.concurrent_mode"):60111,y=n?Symbol.for("react.forward_ref"):60112,z=n?Symbol.for("react.suspense"):60113,aa=n?Symbol.for("react.memo"):
	60115,ba=n?Symbol.for("react.lazy"):60116,A="function"===typeof Symbol&&Symbol.iterator;function ca(a,b,d,c,e,g,h,f){if(!a){a=void 0;if(void 0===b)a=Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else{var l=[d,c,e,g,h,f],m=0;a=Error(b.replace(/%s/g,function(){return l[m++]}));a.name="Invariant Violation"}a.framesToPop=1;throw a;}}
	function B(a){for(var b=arguments.length-1,d="https://reactjs.org/docs/error-decoder.html?invariant="+a,c=0;c<b;c++)d+="&args[]="+encodeURIComponent(arguments[c+1]);ca(!1,"Minified React error #"+a+"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. ",d)}var C={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},D={};
	function E(a,b,d){this.props=a;this.context=b;this.refs=D;this.updater=d||C}E.prototype.isReactComponent={};E.prototype.setState=function(a,b){"object"!==typeof a&&"function"!==typeof a&&null!=a?B("85"):void 0;this.updater.enqueueSetState(this,a,b,"setState")};E.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,"forceUpdate")};function F(){}F.prototype=E.prototype;function G(a,b,d){this.props=a;this.context=b;this.refs=D;this.updater=d||C}var H=G.prototype=new F;
	H.constructor=G;k(H,E.prototype);H.isPureReactComponent=!0;var I={current:null},J={current:null},K=Object.prototype.hasOwnProperty,L={key:!0,ref:!0,__self:!0,__source:!0};
	function M(a,b,d){var c=void 0,e={},g=null,h=null;if(null!=b)for(c in void 0!==b.ref&&(h=b.ref),void 0!==b.key&&(g=""+b.key),b)K.call(b,c)&&!L.hasOwnProperty(c)&&(e[c]=b[c]);var f=arguments.length-2;if(1===f)e.children=d;else if(1<f){for(var l=Array(f),m=0;m<f;m++)l[m]=arguments[m+2];e.children=l}if(a&&a.defaultProps)for(c in f=a.defaultProps,f)void 0===e[c]&&(e[c]=f[c]);return{$$typeof:p,type:a,key:g,ref:h,props:e,_owner:J.current}}
	function da(a,b){return{$$typeof:p,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}}function N(a){return"object"===typeof a&&null!==a&&a.$$typeof===p}function escape(a){var b={"=":"=0",":":"=2"};return"$"+(""+a).replace(/[=:]/g,function(a){return b[a]})}var O=/\/+/g,P=[];function Q(a,b,d,c){if(P.length){var e=P.pop();e.result=a;e.keyPrefix=b;e.func=d;e.context=c;e.count=0;return e}return{result:a,keyPrefix:b,func:d,context:c,count:0}}
	function R(a){a.result=null;a.keyPrefix=null;a.func=null;a.context=null;a.count=0;10>P.length&&P.push(a)}
	function S(a,b,d,c){var e=typeof a;if("undefined"===e||"boolean"===e)a=null;var g=!1;if(null===a)g=!0;else switch(e){case "string":case "number":g=!0;break;case "object":switch(a.$$typeof){case p:case q:g=!0}}if(g)return d(c,a,""===b?"."+T(a,0):b),1;g=0;b=""===b?".":b+":";if(Array.isArray(a))for(var h=0;h<a.length;h++){e=a[h];var f=b+T(e,h);g+=S(e,f,d,c)}else if(null===a||"object"!==typeof a?f=null:(f=A&&a[A]||a["@@iterator"],f="function"===typeof f?f:null),"function"===typeof f)for(a=f.call(a),h=
	0;!(e=a.next()).done;)e=e.value,f=b+T(e,h++),g+=S(e,f,d,c);else"object"===e&&(d=""+a,B("31","[object Object]"===d?"object with keys {"+Object.keys(a).join(", ")+"}":d,""));return g}function U(a,b,d){return null==a?0:S(a,"",b,d)}function T(a,b){return"object"===typeof a&&null!==a&&null!=a.key?escape(a.key):b.toString(36)}function ea(a,b){a.func.call(a.context,b,a.count++)}
	function fa(a,b,d){var c=a.result,e=a.keyPrefix;a=a.func.call(a.context,b,a.count++);Array.isArray(a)?V(a,c,d,function(a){return a}):null!=a&&(N(a)&&(a=da(a,e+(!a.key||b&&b.key===a.key?"":(""+a.key).replace(O,"$&/")+"/")+d)),c.push(a))}function V(a,b,d,c,e){var g="";null!=d&&(g=(""+d).replace(O,"$&/")+"/");b=Q(b,g,c,e);U(a,fa,b);R(b)}function W(){var a=I.current;null===a?B("321"):void 0;return a}
	var X={Children:{map:function(a,b,d){if(null==a)return a;var c=[];V(a,c,null,b,d);return c},forEach:function(a,b,d){if(null==a)return a;b=Q(null,null,b,d);U(a,ea,b);R(b)},count:function(a){return U(a,function(){return null},null)},toArray:function(a){var b=[];V(a,b,null,function(a){return a});return b},only:function(a){N(a)?void 0:B("143");return a}},createRef:function(){return{current:null}},Component:E,PureComponent:G,createContext:function(a,b){void 0===b&&(b=null);a={$$typeof:w,_calculateChangedBits:b,
	_currentValue:a,_currentValue2:a,_threadCount:0,Provider:null,Consumer:null};a.Provider={$$typeof:v,_context:a};return a.Consumer=a},forwardRef:function(a){return{$$typeof:y,render:a}},lazy:function(a){return{$$typeof:ba,_ctor:a,_status:-1,_result:null}},memo:function(a,b){return{$$typeof:aa,type:a,compare:void 0===b?null:b}},useCallback:function(a,b){return W().useCallback(a,b)},useContext:function(a,b){return W().useContext(a,b)},useEffect:function(a,b){return W().useEffect(a,b)},useImperativeHandle:function(a,
	b,d){return W().useImperativeHandle(a,b,d)},useDebugValue:function(){},useLayoutEffect:function(a,b){return W().useLayoutEffect(a,b)},useMemo:function(a,b){return W().useMemo(a,b)},useReducer:function(a,b,d){return W().useReducer(a,b,d)},useRef:function(a){return W().useRef(a)},useState:function(a){return W().useState(a)},Fragment:r,StrictMode:t,Suspense:z,createElement:M,cloneElement:function(a,b,d){null===a||void 0===a?B("267",a):void 0;var c=void 0,e=k({},a.props),g=a.key,h=a.ref,f=a._owner;if(null!=
	b){void 0!==b.ref&&(h=b.ref,f=J.current);void 0!==b.key&&(g=""+b.key);var l=void 0;a.type&&a.type.defaultProps&&(l=a.type.defaultProps);for(c in b)K.call(b,c)&&!L.hasOwnProperty(c)&&(e[c]=void 0===b[c]&&void 0!==l?l[c]:b[c])}c=arguments.length-2;if(1===c)e.children=d;else if(1<c){l=Array(c);for(var m=0;m<c;m++)l[m]=arguments[m+2];e.children=l}return{$$typeof:p,type:a.type,key:g,ref:h,props:e,_owner:f}},createFactory:function(a){var b=M.bind(null,a);b.type=a;return b},isValidElement:N,version:"16.8.6",
	unstable_ConcurrentMode:x,unstable_Profiler:u,__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{ReactCurrentDispatcher:I,ReactCurrentOwner:J,assign:k}},Y={default:X},Z=Y&&X||Y;module.exports=Z.default||Z;


/***/ }),
/* 6 */
/***/ (function(module, exports) {

	/*
	object-assign
	(c) Sindre Sorhus
	@license MIT
	*/

	'use strict';
	/* eslint-disable no-unused-vars */
	var getOwnPropertySymbols = Object.getOwnPropertySymbols;
	var hasOwnProperty = Object.prototype.hasOwnProperty;
	var propIsEnumerable = Object.prototype.propertyIsEnumerable;

	function toObject(val) {
		if (val === null || val === undefined) {
			throw new TypeError('Object.assign cannot be called with null or undefined');
		}

		return Object(val);
	}

	function shouldUseNative() {
		try {
			if (!Object.assign) {
				return false;
			}

			// Detect buggy property enumeration order in older V8 versions.

			// https://bugs.chromium.org/p/v8/issues/detail?id=4118
			var test1 = new String('abc');  // eslint-disable-line no-new-wrappers
			test1[5] = 'de';
			if (Object.getOwnPropertyNames(test1)[0] === '5') {
				return false;
			}

			// https://bugs.chromium.org/p/v8/issues/detail?id=3056
			var test2 = {};
			for (var i = 0; i < 10; i++) {
				test2['_' + String.fromCharCode(i)] = i;
			}
			var order2 = Object.getOwnPropertyNames(test2).map(function (n) {
				return test2[n];
			});
			if (order2.join('') !== '0123456789') {
				return false;
			}

			// https://bugs.chromium.org/p/v8/issues/detail?id=3056
			var test3 = {};
			'abcdefghijklmnopqrst'.split('').forEach(function (letter) {
				test3[letter] = letter;
			});
			if (Object.keys(Object.assign({}, test3)).join('') !==
					'abcdefghijklmnopqrst') {
				return false;
			}

			return true;
		} catch (err) {
			// We don't expect any of the above to throw, but better to be safe.
			return false;
		}
	}

	module.exports = shouldUseNative() ? Object.assign : function (target, source) {
		var from;
		var to = toObject(target);
		var symbols;

		for (var s = 1; s < arguments.length; s++) {
			from = Object(arguments[s]);

			for (var key in from) {
				if (hasOwnProperty.call(from, key)) {
					to[key] = from[key];
				}
			}

			if (getOwnPropertySymbols) {
				symbols = getOwnPropertySymbols(from);
				for (var i = 0; i < symbols.length; i++) {
					if (propIsEnumerable.call(from, symbols[i])) {
						to[symbols[i]] = from[symbols[i]];
					}
				}
			}
		}

		return to;
	};


/***/ }),
/* 7 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/** @license React v16.8.6
	 * react.development.js
	 *
	 * Copyright (c) Facebook, Inc. and its affiliates.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 */

	'use strict';



	if (process.env.NODE_ENV !== "production") {
	  (function() {
	'use strict';

	var _assign = __webpack_require__(6);
	var checkPropTypes = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"prop-types/checkPropTypes\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	// TODO: this is special because it gets imported during build.

	var ReactVersion = '16.8.6';

	// The Symbol used to tag the ReactElement-like types. If there is no native Symbol
	// nor polyfill, then a plain number is used for performance.
	var hasSymbol = typeof Symbol === 'function' && Symbol.for;

	var REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for('react.element') : 0xeac7;
	var REACT_PORTAL_TYPE = hasSymbol ? Symbol.for('react.portal') : 0xeaca;
	var REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for('react.fragment') : 0xeacb;
	var REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for('react.strict_mode') : 0xeacc;
	var REACT_PROFILER_TYPE = hasSymbol ? Symbol.for('react.profiler') : 0xead2;
	var REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for('react.provider') : 0xeacd;
	var REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for('react.context') : 0xeace;

	var REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for('react.concurrent_mode') : 0xeacf;
	var REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for('react.forward_ref') : 0xead0;
	var REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for('react.suspense') : 0xead1;
	var REACT_MEMO_TYPE = hasSymbol ? Symbol.for('react.memo') : 0xead3;
	var REACT_LAZY_TYPE = hasSymbol ? Symbol.for('react.lazy') : 0xead4;

	var MAYBE_ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
	var FAUX_ITERATOR_SYMBOL = '@@iterator';

	function getIteratorFn(maybeIterable) {
	  if (maybeIterable === null || typeof maybeIterable !== 'object') {
	    return null;
	  }
	  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];
	  if (typeof maybeIterator === 'function') {
	    return maybeIterator;
	  }
	  return null;
	}

	/**
	 * Use invariant() to assert state which your program assumes to be true.
	 *
	 * Provide sprintf-style format (only %s is supported) and arguments
	 * to provide information about what broke and what you were
	 * expecting.
	 *
	 * The invariant message will be stripped in production, but the invariant
	 * will remain to ensure logic does not differ in production.
	 */

	var validateFormat = function () {};

	{
	  validateFormat = function (format) {
	    if (format === undefined) {
	      throw new Error('invariant requires an error message argument');
	    }
	  };
	}

	function invariant(condition, format, a, b, c, d, e, f) {
	  validateFormat(format);

	  if (!condition) {
	    var error = void 0;
	    if (format === undefined) {
	      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');
	    } else {
	      var args = [a, b, c, d, e, f];
	      var argIndex = 0;
	      error = new Error(format.replace(/%s/g, function () {
	        return args[argIndex++];
	      }));
	      error.name = 'Invariant Violation';
	    }

	    error.framesToPop = 1; // we don't care about invariant's own frame
	    throw error;
	  }
	}

	// Relying on the `invariant()` implementation lets us
	// preserve the format and params in the www builds.

	/**
	 * Forked from fbjs/warning:
	 * https://github.com/facebook/fbjs/blob/e66ba20ad5be433eb54423f2b097d829324d9de6/packages/fbjs/src/__forks__/warning.js
	 *
	 * Only change is we use console.warn instead of console.error,
	 * and do nothing when 'console' is not supported.
	 * This really simplifies the code.
	 * ---
	 * Similar to invariant but only logs a warning if the condition is not met.
	 * This can be used to log issues in development environments in critical
	 * paths. Removing the logging code for production environments will keep the
	 * same logic and follow the same code paths.
	 */

	var lowPriorityWarning = function () {};

	{
	  var printWarning = function (format) {
	    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
	      args[_key - 1] = arguments[_key];
	    }

	    var argIndex = 0;
	    var message = 'Warning: ' + format.replace(/%s/g, function () {
	      return args[argIndex++];
	    });
	    if (typeof console !== 'undefined') {
	      console.warn(message);
	    }
	    try {
	      // --- Welcome to debugging React ---
	      // This error was thrown as a convenience so that you can use this stack
	      // to find the callsite that caused this warning to fire.
	      throw new Error(message);
	    } catch (x) {}
	  };

	  lowPriorityWarning = function (condition, format) {
	    if (format === undefined) {
	      throw new Error('`lowPriorityWarning(condition, format, ...args)` requires a warning ' + 'message argument');
	    }
	    if (!condition) {
	      for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
	        args[_key2 - 2] = arguments[_key2];
	      }

	      printWarning.apply(undefined, [format].concat(args));
	    }
	  };
	}

	var lowPriorityWarning$1 = lowPriorityWarning;

	/**
	 * Similar to invariant but only logs a warning if the condition is not met.
	 * This can be used to log issues in development environments in critical
	 * paths. Removing the logging code for production environments will keep the
	 * same logic and follow the same code paths.
	 */

	var warningWithoutStack = function () {};

	{
	  warningWithoutStack = function (condition, format) {
	    for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
	      args[_key - 2] = arguments[_key];
	    }

	    if (format === undefined) {
	      throw new Error('`warningWithoutStack(condition, format, ...args)` requires a warning ' + 'message argument');
	    }
	    if (args.length > 8) {
	      // Check before the condition to catch violations early.
	      throw new Error('warningWithoutStack() currently supports at most 8 arguments.');
	    }
	    if (condition) {
	      return;
	    }
	    if (typeof console !== 'undefined') {
	      var argsWithFormat = args.map(function (item) {
	        return '' + item;
	      });
	      argsWithFormat.unshift('Warning: ' + format);

	      // We intentionally don't use spread (or .apply) directly because it
	      // breaks IE9: https://github.com/facebook/react/issues/13610
	      Function.prototype.apply.call(console.error, console, argsWithFormat);
	    }
	    try {
	      // --- Welcome to debugging React ---
	      // This error was thrown as a convenience so that you can use this stack
	      // to find the callsite that caused this warning to fire.
	      var argIndex = 0;
	      var message = 'Warning: ' + format.replace(/%s/g, function () {
	        return args[argIndex++];
	      });
	      throw new Error(message);
	    } catch (x) {}
	  };
	}

	var warningWithoutStack$1 = warningWithoutStack;

	var didWarnStateUpdateForUnmountedComponent = {};

	function warnNoop(publicInstance, callerName) {
	  {
	    var _constructor = publicInstance.constructor;
	    var componentName = _constructor && (_constructor.displayName || _constructor.name) || 'ReactClass';
	    var warningKey = componentName + '.' + callerName;
	    if (didWarnStateUpdateForUnmountedComponent[warningKey]) {
	      return;
	    }
	    warningWithoutStack$1(false, "Can't call %s on a component that is not yet mounted. " + 'This is a no-op, but it might indicate a bug in your application. ' + 'Instead, assign to `this.state` directly or define a `state = {};` ' + 'class property with the desired state in the %s component.', callerName, componentName);
	    didWarnStateUpdateForUnmountedComponent[warningKey] = true;
	  }
	}

	/**
	 * This is the abstract API for an update queue.
	 */
	var ReactNoopUpdateQueue = {
	  /**
	   * Checks whether or not this composite component is mounted.
	   * @param {ReactClass} publicInstance The instance we want to test.
	   * @return {boolean} True if mounted, false otherwise.
	   * @protected
	   * @final
	   */
	  isMounted: function (publicInstance) {
	    return false;
	  },

	  /**
	   * Forces an update. This should only be invoked when it is known with
	   * certainty that we are **not** in a DOM transaction.
	   *
	   * You may want to call this when you know that some deeper aspect of the
	   * component's state has changed but `setState` was not called.
	   *
	   * This will not invoke `shouldComponentUpdate`, but it will invoke
	   * `componentWillUpdate` and `componentDidUpdate`.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {?function} callback Called after component is updated.
	   * @param {?string} callerName name of the calling function in the public API.
	   * @internal
	   */
	  enqueueForceUpdate: function (publicInstance, callback, callerName) {
	    warnNoop(publicInstance, 'forceUpdate');
	  },

	  /**
	   * Replaces all of the state. Always use this or `setState` to mutate state.
	   * You should treat `this.state` as immutable.
	   *
	   * There is no guarantee that `this.state` will be immediately updated, so
	   * accessing `this.state` after calling this method may return the old value.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} completeState Next state.
	   * @param {?function} callback Called after component is updated.
	   * @param {?string} callerName name of the calling function in the public API.
	   * @internal
	   */
	  enqueueReplaceState: function (publicInstance, completeState, callback, callerName) {
	    warnNoop(publicInstance, 'replaceState');
	  },

	  /**
	   * Sets a subset of the state. This only exists because _pendingState is
	   * internal. This provides a merging strategy that is not available to deep
	   * properties which is confusing. TODO: Expose pendingState or don't use it
	   * during the merge.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} partialState Next partial state to be merged with state.
	   * @param {?function} callback Called after component is updated.
	   * @param {?string} Name of the calling function in the public API.
	   * @internal
	   */
	  enqueueSetState: function (publicInstance, partialState, callback, callerName) {
	    warnNoop(publicInstance, 'setState');
	  }
	};

	var emptyObject = {};
	{
	  Object.freeze(emptyObject);
	}

	/**
	 * Base class helpers for the updating state of a component.
	 */
	function Component(props, context, updater) {
	  this.props = props;
	  this.context = context;
	  // If a component has string refs, we will assign a different object later.
	  this.refs = emptyObject;
	  // We initialize the default updater but the real one gets injected by the
	  // renderer.
	  this.updater = updater || ReactNoopUpdateQueue;
	}

	Component.prototype.isReactComponent = {};

	/**
	 * Sets a subset of the state. Always use this to mutate
	 * state. You should treat `this.state` as immutable.
	 *
	 * There is no guarantee that `this.state` will be immediately updated, so
	 * accessing `this.state` after calling this method may return the old value.
	 *
	 * There is no guarantee that calls to `setState` will run synchronously,
	 * as they may eventually be batched together.  You can provide an optional
	 * callback that will be executed when the call to setState is actually
	 * completed.
	 *
	 * When a function is provided to setState, it will be called at some point in
	 * the future (not synchronously). It will be called with the up to date
	 * component arguments (state, props, context). These values can be different
	 * from this.* because your function may be called after receiveProps but before
	 * shouldComponentUpdate, and this new state, props, and context will not yet be
	 * assigned to this.
	 *
	 * @param {object|function} partialState Next partial state or function to
	 *        produce next partial state to be merged with current state.
	 * @param {?function} callback Called after state is updated.
	 * @final
	 * @protected
	 */
	Component.prototype.setState = function (partialState, callback) {
	  !(typeof partialState === 'object' || typeof partialState === 'function' || partialState == null) ? invariant(false, 'setState(...): takes an object of state variables to update or a function which returns an object of state variables.') : void 0;
	  this.updater.enqueueSetState(this, partialState, callback, 'setState');
	};

	/**
	 * Forces an update. This should only be invoked when it is known with
	 * certainty that we are **not** in a DOM transaction.
	 *
	 * You may want to call this when you know that some deeper aspect of the
	 * component's state has changed but `setState` was not called.
	 *
	 * This will not invoke `shouldComponentUpdate`, but it will invoke
	 * `componentWillUpdate` and `componentDidUpdate`.
	 *
	 * @param {?function} callback Called after update is complete.
	 * @final
	 * @protected
	 */
	Component.prototype.forceUpdate = function (callback) {
	  this.updater.enqueueForceUpdate(this, callback, 'forceUpdate');
	};

	/**
	 * Deprecated APIs. These APIs used to exist on classic React classes but since
	 * we would like to deprecate them, we're not going to move them over to this
	 * modern base class. Instead, we define a getter that warns if it's accessed.
	 */
	{
	  var deprecatedAPIs = {
	    isMounted: ['isMounted', 'Instead, make sure to clean up subscriptions and pending requests in ' + 'componentWillUnmount to prevent memory leaks.'],
	    replaceState: ['replaceState', 'Refactor your code to use setState instead (see ' + 'https://github.com/facebook/react/issues/3236).']
	  };
	  var defineDeprecationWarning = function (methodName, info) {
	    Object.defineProperty(Component.prototype, methodName, {
	      get: function () {
	        lowPriorityWarning$1(false, '%s(...) is deprecated in plain JavaScript React classes. %s', info[0], info[1]);
	        return undefined;
	      }
	    });
	  };
	  for (var fnName in deprecatedAPIs) {
	    if (deprecatedAPIs.hasOwnProperty(fnName)) {
	      defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);
	    }
	  }
	}

	function ComponentDummy() {}
	ComponentDummy.prototype = Component.prototype;

	/**
	 * Convenience component with default shallow equality check for sCU.
	 */
	function PureComponent(props, context, updater) {
	  this.props = props;
	  this.context = context;
	  // If a component has string refs, we will assign a different object later.
	  this.refs = emptyObject;
	  this.updater = updater || ReactNoopUpdateQueue;
	}

	var pureComponentPrototype = PureComponent.prototype = new ComponentDummy();
	pureComponentPrototype.constructor = PureComponent;
	// Avoid an extra prototype jump for these methods.
	_assign(pureComponentPrototype, Component.prototype);
	pureComponentPrototype.isPureReactComponent = true;

	// an immutable object with a single mutable value
	function createRef() {
	  var refObject = {
	    current: null
	  };
	  {
	    Object.seal(refObject);
	  }
	  return refObject;
	}

	/**
	 * Keeps track of the current dispatcher.
	 */
	var ReactCurrentDispatcher = {
	  /**
	   * @internal
	   * @type {ReactComponent}
	   */
	  current: null
	};

	/**
	 * Keeps track of the current owner.
	 *
	 * The current owner is the component who should own any components that are
	 * currently being constructed.
	 */
	var ReactCurrentOwner = {
	  /**
	   * @internal
	   * @type {ReactComponent}
	   */
	  current: null
	};

	var BEFORE_SLASH_RE = /^(.*)[\\\/]/;

	var describeComponentFrame = function (name, source, ownerName) {
	  var sourceInfo = '';
	  if (source) {
	    var path = source.fileName;
	    var fileName = path.replace(BEFORE_SLASH_RE, '');
	    {
	      // In DEV, include code for a common special case:
	      // prefer "folder/index.js" instead of just "index.js".
	      if (/^index\./.test(fileName)) {
	        var match = path.match(BEFORE_SLASH_RE);
	        if (match) {
	          var pathBeforeSlash = match[1];
	          if (pathBeforeSlash) {
	            var folderName = pathBeforeSlash.replace(BEFORE_SLASH_RE, '');
	            fileName = folderName + '/' + fileName;
	          }
	        }
	      }
	    }
	    sourceInfo = ' (at ' + fileName + ':' + source.lineNumber + ')';
	  } else if (ownerName) {
	    sourceInfo = ' (created by ' + ownerName + ')';
	  }
	  return '\n    in ' + (name || 'Unknown') + sourceInfo;
	};

	var Resolved = 1;


	function refineResolvedLazyComponent(lazyComponent) {
	  return lazyComponent._status === Resolved ? lazyComponent._result : null;
	}

	function getWrappedName(outerType, innerType, wrapperName) {
	  var functionName = innerType.displayName || innerType.name || '';
	  return outerType.displayName || (functionName !== '' ? wrapperName + '(' + functionName + ')' : wrapperName);
	}

	function getComponentName(type) {
	  if (type == null) {
	    // Host root, text node or just invalid type.
	    return null;
	  }
	  {
	    if (typeof type.tag === 'number') {
	      warningWithoutStack$1(false, 'Received an unexpected object in getComponentName(). ' + 'This is likely a bug in React. Please file an issue.');
	    }
	  }
	  if (typeof type === 'function') {
	    return type.displayName || type.name || null;
	  }
	  if (typeof type === 'string') {
	    return type;
	  }
	  switch (type) {
	    case REACT_CONCURRENT_MODE_TYPE:
	      return 'ConcurrentMode';
	    case REACT_FRAGMENT_TYPE:
	      return 'Fragment';
	    case REACT_PORTAL_TYPE:
	      return 'Portal';
	    case REACT_PROFILER_TYPE:
	      return 'Profiler';
	    case REACT_STRICT_MODE_TYPE:
	      return 'StrictMode';
	    case REACT_SUSPENSE_TYPE:
	      return 'Suspense';
	  }
	  if (typeof type === 'object') {
	    switch (type.$$typeof) {
	      case REACT_CONTEXT_TYPE:
	        return 'Context.Consumer';
	      case REACT_PROVIDER_TYPE:
	        return 'Context.Provider';
	      case REACT_FORWARD_REF_TYPE:
	        return getWrappedName(type, type.render, 'ForwardRef');
	      case REACT_MEMO_TYPE:
	        return getComponentName(type.type);
	      case REACT_LAZY_TYPE:
	        {
	          var thenable = type;
	          var resolvedThenable = refineResolvedLazyComponent(thenable);
	          if (resolvedThenable) {
	            return getComponentName(resolvedThenable);
	          }
	        }
	    }
	  }
	  return null;
	}

	var ReactDebugCurrentFrame = {};

	var currentlyValidatingElement = null;

	function setCurrentlyValidatingElement(element) {
	  {
	    currentlyValidatingElement = element;
	  }
	}

	{
	  // Stack implementation injected by the current renderer.
	  ReactDebugCurrentFrame.getCurrentStack = null;

	  ReactDebugCurrentFrame.getStackAddendum = function () {
	    var stack = '';

	    // Add an extra top frame while an element is being validated
	    if (currentlyValidatingElement) {
	      var name = getComponentName(currentlyValidatingElement.type);
	      var owner = currentlyValidatingElement._owner;
	      stack += describeComponentFrame(name, currentlyValidatingElement._source, owner && getComponentName(owner.type));
	    }

	    // Delegate to the injected renderer-specific implementation
	    var impl = ReactDebugCurrentFrame.getCurrentStack;
	    if (impl) {
	      stack += impl() || '';
	    }

	    return stack;
	  };
	}

	var ReactSharedInternals = {
	  ReactCurrentDispatcher: ReactCurrentDispatcher,
	  ReactCurrentOwner: ReactCurrentOwner,
	  // Used by renderers to avoid bundling object-assign twice in UMD bundles:
	  assign: _assign
	};

	{
	  _assign(ReactSharedInternals, {
	    // These should not be included in production.
	    ReactDebugCurrentFrame: ReactDebugCurrentFrame,
	    // Shim for React DOM 16.0.0 which still destructured (but not used) this.
	    // TODO: remove in React 17.0.
	    ReactComponentTreeHook: {}
	  });
	}

	/**
	 * Similar to invariant but only logs a warning if the condition is not met.
	 * This can be used to log issues in development environments in critical
	 * paths. Removing the logging code for production environments will keep the
	 * same logic and follow the same code paths.
	 */

	var warning = warningWithoutStack$1;

	{
	  warning = function (condition, format) {
	    if (condition) {
	      return;
	    }
	    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;
	    var stack = ReactDebugCurrentFrame.getStackAddendum();
	    // eslint-disable-next-line react-internal/warning-and-invariant-args

	    for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
	      args[_key - 2] = arguments[_key];
	    }

	    warningWithoutStack$1.apply(undefined, [false, format + '%s'].concat(args, [stack]));
	  };
	}

	var warning$1 = warning;

	var hasOwnProperty = Object.prototype.hasOwnProperty;

	var RESERVED_PROPS = {
	  key: true,
	  ref: true,
	  __self: true,
	  __source: true
	};

	var specialPropKeyWarningShown = void 0;
	var specialPropRefWarningShown = void 0;

	function hasValidRef(config) {
	  {
	    if (hasOwnProperty.call(config, 'ref')) {
	      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;
	      if (getter && getter.isReactWarning) {
	        return false;
	      }
	    }
	  }
	  return config.ref !== undefined;
	}

	function hasValidKey(config) {
	  {
	    if (hasOwnProperty.call(config, 'key')) {
	      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;
	      if (getter && getter.isReactWarning) {
	        return false;
	      }
	    }
	  }
	  return config.key !== undefined;
	}

	function defineKeyPropWarningGetter(props, displayName) {
	  var warnAboutAccessingKey = function () {
	    if (!specialPropKeyWarningShown) {
	      specialPropKeyWarningShown = true;
	      warningWithoutStack$1(false, '%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName);
	    }
	  };
	  warnAboutAccessingKey.isReactWarning = true;
	  Object.defineProperty(props, 'key', {
	    get: warnAboutAccessingKey,
	    configurable: true
	  });
	}

	function defineRefPropWarningGetter(props, displayName) {
	  var warnAboutAccessingRef = function () {
	    if (!specialPropRefWarningShown) {
	      specialPropRefWarningShown = true;
	      warningWithoutStack$1(false, '%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName);
	    }
	  };
	  warnAboutAccessingRef.isReactWarning = true;
	  Object.defineProperty(props, 'ref', {
	    get: warnAboutAccessingRef,
	    configurable: true
	  });
	}

	/**
	 * Factory method to create a new React element. This no longer adheres to
	 * the class pattern, so do not use new to call it. Also, no instanceof check
	 * will work. Instead test $$typeof field against Symbol.for('react.element') to check
	 * if something is a React Element.
	 *
	 * @param {*} type
	 * @param {*} key
	 * @param {string|object} ref
	 * @param {*} self A *temporary* helper to detect places where `this` is
	 * different from the `owner` when React.createElement is called, so that we
	 * can warn. We want to get rid of owner and replace string `ref`s with arrow
	 * functions, and as long as `this` and owner are the same, there will be no
	 * change in behavior.
	 * @param {*} source An annotation object (added by a transpiler or otherwise)
	 * indicating filename, line number, and/or other information.
	 * @param {*} owner
	 * @param {*} props
	 * @internal
	 */
	var ReactElement = function (type, key, ref, self, source, owner, props) {
	  var element = {
	    // This tag allows us to uniquely identify this as a React Element
	    $$typeof: REACT_ELEMENT_TYPE,

	    // Built-in properties that belong on the element
	    type: type,
	    key: key,
	    ref: ref,
	    props: props,

	    // Record the component responsible for creating this element.
	    _owner: owner
	  };

	  {
	    // The validation flag is currently mutative. We put it on
	    // an external backing store so that we can freeze the whole object.
	    // This can be replaced with a WeakMap once they are implemented in
	    // commonly used development environments.
	    element._store = {};

	    // To make comparing ReactElements easier for testing purposes, we make
	    // the validation flag non-enumerable (where possible, which should
	    // include every environment we run tests in), so the test framework
	    // ignores it.
	    Object.defineProperty(element._store, 'validated', {
	      configurable: false,
	      enumerable: false,
	      writable: true,
	      value: false
	    });
	    // self and source are DEV only properties.
	    Object.defineProperty(element, '_self', {
	      configurable: false,
	      enumerable: false,
	      writable: false,
	      value: self
	    });
	    // Two elements created in two different places should be considered
	    // equal for testing purposes and therefore we hide it from enumeration.
	    Object.defineProperty(element, '_source', {
	      configurable: false,
	      enumerable: false,
	      writable: false,
	      value: source
	    });
	    if (Object.freeze) {
	      Object.freeze(element.props);
	      Object.freeze(element);
	    }
	  }

	  return element;
	};

	/**
	 * Create and return a new ReactElement of the given type.
	 * See https://reactjs.org/docs/react-api.html#createelement
	 */
	function createElement(type, config, children) {
	  var propName = void 0;

	  // Reserved names are extracted
	  var props = {};

	  var key = null;
	  var ref = null;
	  var self = null;
	  var source = null;

	  if (config != null) {
	    if (hasValidRef(config)) {
	      ref = config.ref;
	    }
	    if (hasValidKey(config)) {
	      key = '' + config.key;
	    }

	    self = config.__self === undefined ? null : config.__self;
	    source = config.__source === undefined ? null : config.__source;
	    // Remaining properties are added to a new props object
	    for (propName in config) {
	      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
	        props[propName] = config[propName];
	      }
	    }
	  }

	  // Children can be more than one argument, and those are transferred onto
	  // the newly allocated props object.
	  var childrenLength = arguments.length - 2;
	  if (childrenLength === 1) {
	    props.children = children;
	  } else if (childrenLength > 1) {
	    var childArray = Array(childrenLength);
	    for (var i = 0; i < childrenLength; i++) {
	      childArray[i] = arguments[i + 2];
	    }
	    {
	      if (Object.freeze) {
	        Object.freeze(childArray);
	      }
	    }
	    props.children = childArray;
	  }

	  // Resolve default props
	  if (type && type.defaultProps) {
	    var defaultProps = type.defaultProps;
	    for (propName in defaultProps) {
	      if (props[propName] === undefined) {
	        props[propName] = defaultProps[propName];
	      }
	    }
	  }
	  {
	    if (key || ref) {
	      var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;
	      if (key) {
	        defineKeyPropWarningGetter(props, displayName);
	      }
	      if (ref) {
	        defineRefPropWarningGetter(props, displayName);
	      }
	    }
	  }
	  return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);
	}

	/**
	 * Return a function that produces ReactElements of a given type.
	 * See https://reactjs.org/docs/react-api.html#createfactory
	 */


	function cloneAndReplaceKey(oldElement, newKey) {
	  var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);

	  return newElement;
	}

	/**
	 * Clone and return a new ReactElement using element as the starting point.
	 * See https://reactjs.org/docs/react-api.html#cloneelement
	 */
	function cloneElement(element, config, children) {
	  !!(element === null || element === undefined) ? invariant(false, 'React.cloneElement(...): The argument must be a React element, but you passed %s.', element) : void 0;

	  var propName = void 0;

	  // Original props are copied
	  var props = _assign({}, element.props);

	  // Reserved names are extracted
	  var key = element.key;
	  var ref = element.ref;
	  // Self is preserved since the owner is preserved.
	  var self = element._self;
	  // Source is preserved since cloneElement is unlikely to be targeted by a
	  // transpiler, and the original source is probably a better indicator of the
	  // true owner.
	  var source = element._source;

	  // Owner will be preserved, unless ref is overridden
	  var owner = element._owner;

	  if (config != null) {
	    if (hasValidRef(config)) {
	      // Silently steal the ref from the parent.
	      ref = config.ref;
	      owner = ReactCurrentOwner.current;
	    }
	    if (hasValidKey(config)) {
	      key = '' + config.key;
	    }

	    // Remaining properties override existing props
	    var defaultProps = void 0;
	    if (element.type && element.type.defaultProps) {
	      defaultProps = element.type.defaultProps;
	    }
	    for (propName in config) {
	      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
	        if (config[propName] === undefined && defaultProps !== undefined) {
	          // Resolve default props
	          props[propName] = defaultProps[propName];
	        } else {
	          props[propName] = config[propName];
	        }
	      }
	    }
	  }

	  // Children can be more than one argument, and those are transferred onto
	  // the newly allocated props object.
	  var childrenLength = arguments.length - 2;
	  if (childrenLength === 1) {
	    props.children = children;
	  } else if (childrenLength > 1) {
	    var childArray = Array(childrenLength);
	    for (var i = 0; i < childrenLength; i++) {
	      childArray[i] = arguments[i + 2];
	    }
	    props.children = childArray;
	  }

	  return ReactElement(element.type, key, ref, self, source, owner, props);
	}

	/**
	 * Verifies the object is a ReactElement.
	 * See https://reactjs.org/docs/react-api.html#isvalidelement
	 * @param {?object} object
	 * @return {boolean} True if `object` is a ReactElement.
	 * @final
	 */
	function isValidElement(object) {
	  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
	}

	var SEPARATOR = '.';
	var SUBSEPARATOR = ':';

	/**
	 * Escape and wrap key so it is safe to use as a reactid
	 *
	 * @param {string} key to be escaped.
	 * @return {string} the escaped key.
	 */
	function escape(key) {
	  var escapeRegex = /[=:]/g;
	  var escaperLookup = {
	    '=': '=0',
	    ':': '=2'
	  };
	  var escapedString = ('' + key).replace(escapeRegex, function (match) {
	    return escaperLookup[match];
	  });

	  return '$' + escapedString;
	}

	/**
	 * TODO: Test that a single child and an array with one item have the same key
	 * pattern.
	 */

	var didWarnAboutMaps = false;

	var userProvidedKeyEscapeRegex = /\/+/g;
	function escapeUserProvidedKey(text) {
	  return ('' + text).replace(userProvidedKeyEscapeRegex, '$&/');
	}

	var POOL_SIZE = 10;
	var traverseContextPool = [];
	function getPooledTraverseContext(mapResult, keyPrefix, mapFunction, mapContext) {
	  if (traverseContextPool.length) {
	    var traverseContext = traverseContextPool.pop();
	    traverseContext.result = mapResult;
	    traverseContext.keyPrefix = keyPrefix;
	    traverseContext.func = mapFunction;
	    traverseContext.context = mapContext;
	    traverseContext.count = 0;
	    return traverseContext;
	  } else {
	    return {
	      result: mapResult,
	      keyPrefix: keyPrefix,
	      func: mapFunction,
	      context: mapContext,
	      count: 0
	    };
	  }
	}

	function releaseTraverseContext(traverseContext) {
	  traverseContext.result = null;
	  traverseContext.keyPrefix = null;
	  traverseContext.func = null;
	  traverseContext.context = null;
	  traverseContext.count = 0;
	  if (traverseContextPool.length < POOL_SIZE) {
	    traverseContextPool.push(traverseContext);
	  }
	}

	/**
	 * @param {?*} children Children tree container.
	 * @param {!string} nameSoFar Name of the key path so far.
	 * @param {!function} callback Callback to invoke with each child found.
	 * @param {?*} traverseContext Used to pass information throughout the traversal
	 * process.
	 * @return {!number} The number of children in this subtree.
	 */
	function traverseAllChildrenImpl(children, nameSoFar, callback, traverseContext) {
	  var type = typeof children;

	  if (type === 'undefined' || type === 'boolean') {
	    // All of the above are perceived as null.
	    children = null;
	  }

	  var invokeCallback = false;

	  if (children === null) {
	    invokeCallback = true;
	  } else {
	    switch (type) {
	      case 'string':
	      case 'number':
	        invokeCallback = true;
	        break;
	      case 'object':
	        switch (children.$$typeof) {
	          case REACT_ELEMENT_TYPE:
	          case REACT_PORTAL_TYPE:
	            invokeCallback = true;
	        }
	    }
	  }

	  if (invokeCallback) {
	    callback(traverseContext, children,
	    // If it's the only child, treat the name as if it was wrapped in an array
	    // so that it's consistent if the number of children grows.
	    nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar);
	    return 1;
	  }

	  var child = void 0;
	  var nextName = void 0;
	  var subtreeCount = 0; // Count of children found in the current subtree.
	  var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;

	  if (Array.isArray(children)) {
	    for (var i = 0; i < children.length; i++) {
	      child = children[i];
	      nextName = nextNamePrefix + getComponentKey(child, i);
	      subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
	    }
	  } else {
	    var iteratorFn = getIteratorFn(children);
	    if (typeof iteratorFn === 'function') {
	      {
	        // Warn about using Maps as children
	        if (iteratorFn === children.entries) {
	          !didWarnAboutMaps ? warning$1(false, 'Using Maps as children is unsupported and will likely yield ' + 'unexpected results. Convert it to a sequence/iterable of keyed ' + 'ReactElements instead.') : void 0;
	          didWarnAboutMaps = true;
	        }
	      }

	      var iterator = iteratorFn.call(children);
	      var step = void 0;
	      var ii = 0;
	      while (!(step = iterator.next()).done) {
	        child = step.value;
	        nextName = nextNamePrefix + getComponentKey(child, ii++);
	        subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
	      }
	    } else if (type === 'object') {
	      var addendum = '';
	      {
	        addendum = ' If you meant to render a collection of children, use an array ' + 'instead.' + ReactDebugCurrentFrame.getStackAddendum();
	      }
	      var childrenString = '' + children;
	      invariant(false, 'Objects are not valid as a React child (found: %s).%s', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum);
	    }
	  }

	  return subtreeCount;
	}

	/**
	 * Traverses children that are typically specified as `props.children`, but
	 * might also be specified through attributes:
	 *
	 * - `traverseAllChildren(this.props.children, ...)`
	 * - `traverseAllChildren(this.props.leftPanelChildren, ...)`
	 *
	 * The `traverseContext` is an optional argument that is passed through the
	 * entire traversal. It can be used to store accumulations or anything else that
	 * the callback might find relevant.
	 *
	 * @param {?*} children Children tree object.
	 * @param {!function} callback To invoke upon traversing each child.
	 * @param {?*} traverseContext Context for traversal.
	 * @return {!number} The number of children in this subtree.
	 */
	function traverseAllChildren(children, callback, traverseContext) {
	  if (children == null) {
	    return 0;
	  }

	  return traverseAllChildrenImpl(children, '', callback, traverseContext);
	}

	/**
	 * Generate a key string that identifies a component within a set.
	 *
	 * @param {*} component A component that could contain a manual key.
	 * @param {number} index Index that is used if a manual key is not provided.
	 * @return {string}
	 */
	function getComponentKey(component, index) {
	  // Do some typechecking here since we call this blindly. We want to ensure
	  // that we don't block potential future ES APIs.
	  if (typeof component === 'object' && component !== null && component.key != null) {
	    // Explicit key
	    return escape(component.key);
	  }
	  // Implicit key determined by the index in the set
	  return index.toString(36);
	}

	function forEachSingleChild(bookKeeping, child, name) {
	  var func = bookKeeping.func,
	      context = bookKeeping.context;

	  func.call(context, child, bookKeeping.count++);
	}

	/**
	 * Iterates through children that are typically specified as `props.children`.
	 *
	 * See https://reactjs.org/docs/react-api.html#reactchildrenforeach
	 *
	 * The provided forEachFunc(child, index) will be called for each
	 * leaf child.
	 *
	 * @param {?*} children Children tree container.
	 * @param {function(*, int)} forEachFunc
	 * @param {*} forEachContext Context for forEachContext.
	 */
	function forEachChildren(children, forEachFunc, forEachContext) {
	  if (children == null) {
	    return children;
	  }
	  var traverseContext = getPooledTraverseContext(null, null, forEachFunc, forEachContext);
	  traverseAllChildren(children, forEachSingleChild, traverseContext);
	  releaseTraverseContext(traverseContext);
	}

	function mapSingleChildIntoContext(bookKeeping, child, childKey) {
	  var result = bookKeeping.result,
	      keyPrefix = bookKeeping.keyPrefix,
	      func = bookKeeping.func,
	      context = bookKeeping.context;


	  var mappedChild = func.call(context, child, bookKeeping.count++);
	  if (Array.isArray(mappedChild)) {
	    mapIntoWithKeyPrefixInternal(mappedChild, result, childKey, function (c) {
	      return c;
	    });
	  } else if (mappedChild != null) {
	    if (isValidElement(mappedChild)) {
	      mappedChild = cloneAndReplaceKey(mappedChild,
	      // Keep both the (mapped) and old keys if they differ, just as
	      // traverseAllChildren used to do for objects as children
	      keyPrefix + (mappedChild.key && (!child || child.key !== mappedChild.key) ? escapeUserProvidedKey(mappedChild.key) + '/' : '') + childKey);
	    }
	    result.push(mappedChild);
	  }
	}

	function mapIntoWithKeyPrefixInternal(children, array, prefix, func, context) {
	  var escapedPrefix = '';
	  if (prefix != null) {
	    escapedPrefix = escapeUserProvidedKey(prefix) + '/';
	  }
	  var traverseContext = getPooledTraverseContext(array, escapedPrefix, func, context);
	  traverseAllChildren(children, mapSingleChildIntoContext, traverseContext);
	  releaseTraverseContext(traverseContext);
	}

	/**
	 * Maps children that are typically specified as `props.children`.
	 *
	 * See https://reactjs.org/docs/react-api.html#reactchildrenmap
	 *
	 * The provided mapFunction(child, key, index) will be called for each
	 * leaf child.
	 *
	 * @param {?*} children Children tree container.
	 * @param {function(*, int)} func The map function.
	 * @param {*} context Context for mapFunction.
	 * @return {object} Object containing the ordered map of results.
	 */
	function mapChildren(children, func, context) {
	  if (children == null) {
	    return children;
	  }
	  var result = [];
	  mapIntoWithKeyPrefixInternal(children, result, null, func, context);
	  return result;
	}

	/**
	 * Count the number of children that are typically specified as
	 * `props.children`.
	 *
	 * See https://reactjs.org/docs/react-api.html#reactchildrencount
	 *
	 * @param {?*} children Children tree container.
	 * @return {number} The number of children.
	 */
	function countChildren(children) {
	  return traverseAllChildren(children, function () {
	    return null;
	  }, null);
	}

	/**
	 * Flatten a children object (typically specified as `props.children`) and
	 * return an array with appropriately re-keyed children.
	 *
	 * See https://reactjs.org/docs/react-api.html#reactchildrentoarray
	 */
	function toArray(children) {
	  var result = [];
	  mapIntoWithKeyPrefixInternal(children, result, null, function (child) {
	    return child;
	  });
	  return result;
	}

	/**
	 * Returns the first child in a collection of children and verifies that there
	 * is only one child in the collection.
	 *
	 * See https://reactjs.org/docs/react-api.html#reactchildrenonly
	 *
	 * The current implementation of this function assumes that a single child gets
	 * passed without a wrapper, but the purpose of this helper function is to
	 * abstract away the particular structure of children.
	 *
	 * @param {?object} children Child collection structure.
	 * @return {ReactElement} The first and only `ReactElement` contained in the
	 * structure.
	 */
	function onlyChild(children) {
	  !isValidElement(children) ? invariant(false, 'React.Children.only expected to receive a single React element child.') : void 0;
	  return children;
	}

	function createContext(defaultValue, calculateChangedBits) {
	  if (calculateChangedBits === undefined) {
	    calculateChangedBits = null;
	  } else {
	    {
	      !(calculateChangedBits === null || typeof calculateChangedBits === 'function') ? warningWithoutStack$1(false, 'createContext: Expected the optional second argument to be a ' + 'function. Instead received: %s', calculateChangedBits) : void 0;
	    }
	  }

	  var context = {
	    $$typeof: REACT_CONTEXT_TYPE,
	    _calculateChangedBits: calculateChangedBits,
	    // As a workaround to support multiple concurrent renderers, we categorize
	    // some renderers as primary and others as secondary. We only expect
	    // there to be two concurrent renderers at most: React Native (primary) and
	    // Fabric (secondary); React DOM (primary) and React ART (secondary).
	    // Secondary renderers store their context values on separate fields.
	    _currentValue: defaultValue,
	    _currentValue2: defaultValue,
	    // Used to track how many concurrent renderers this context currently
	    // supports within in a single renderer. Such as parallel server rendering.
	    _threadCount: 0,
	    // These are circular
	    Provider: null,
	    Consumer: null
	  };

	  context.Provider = {
	    $$typeof: REACT_PROVIDER_TYPE,
	    _context: context
	  };

	  var hasWarnedAboutUsingNestedContextConsumers = false;
	  var hasWarnedAboutUsingConsumerProvider = false;

	  {
	    // A separate object, but proxies back to the original context object for
	    // backwards compatibility. It has a different $$typeof, so we can properly
	    // warn for the incorrect usage of Context as a Consumer.
	    var Consumer = {
	      $$typeof: REACT_CONTEXT_TYPE,
	      _context: context,
	      _calculateChangedBits: context._calculateChangedBits
	    };
	    // $FlowFixMe: Flow complains about not setting a value, which is intentional here
	    Object.defineProperties(Consumer, {
	      Provider: {
	        get: function () {
	          if (!hasWarnedAboutUsingConsumerProvider) {
	            hasWarnedAboutUsingConsumerProvider = true;
	            warning$1(false, 'Rendering <Context.Consumer.Provider> is not supported and will be removed in ' + 'a future major release. Did you mean to render <Context.Provider> instead?');
	          }
	          return context.Provider;
	        },
	        set: function (_Provider) {
	          context.Provider = _Provider;
	        }
	      },
	      _currentValue: {
	        get: function () {
	          return context._currentValue;
	        },
	        set: function (_currentValue) {
	          context._currentValue = _currentValue;
	        }
	      },
	      _currentValue2: {
	        get: function () {
	          return context._currentValue2;
	        },
	        set: function (_currentValue2) {
	          context._currentValue2 = _currentValue2;
	        }
	      },
	      _threadCount: {
	        get: function () {
	          return context._threadCount;
	        },
	        set: function (_threadCount) {
	          context._threadCount = _threadCount;
	        }
	      },
	      Consumer: {
	        get: function () {
	          if (!hasWarnedAboutUsingNestedContextConsumers) {
	            hasWarnedAboutUsingNestedContextConsumers = true;
	            warning$1(false, 'Rendering <Context.Consumer.Consumer> is not supported and will be removed in ' + 'a future major release. Did you mean to render <Context.Consumer> instead?');
	          }
	          return context.Consumer;
	        }
	      }
	    });
	    // $FlowFixMe: Flow complains about missing properties because it doesn't understand defineProperty
	    context.Consumer = Consumer;
	  }

	  {
	    context._currentRenderer = null;
	    context._currentRenderer2 = null;
	  }

	  return context;
	}

	function lazy(ctor) {
	  var lazyType = {
	    $$typeof: REACT_LAZY_TYPE,
	    _ctor: ctor,
	    // React uses these fields to store the result.
	    _status: -1,
	    _result: null
	  };

	  {
	    // In production, this would just set it on the object.
	    var defaultProps = void 0;
	    var propTypes = void 0;
	    Object.defineProperties(lazyType, {
	      defaultProps: {
	        configurable: true,
	        get: function () {
	          return defaultProps;
	        },
	        set: function (newDefaultProps) {
	          warning$1(false, 'React.lazy(...): It is not supported to assign `defaultProps` to ' + 'a lazy component import. Either specify them where the component ' + 'is defined, or create a wrapping component around it.');
	          defaultProps = newDefaultProps;
	          // Match production behavior more closely:
	          Object.defineProperty(lazyType, 'defaultProps', {
	            enumerable: true
	          });
	        }
	      },
	      propTypes: {
	        configurable: true,
	        get: function () {
	          return propTypes;
	        },
	        set: function (newPropTypes) {
	          warning$1(false, 'React.lazy(...): It is not supported to assign `propTypes` to ' + 'a lazy component import. Either specify them where the component ' + 'is defined, or create a wrapping component around it.');
	          propTypes = newPropTypes;
	          // Match production behavior more closely:
	          Object.defineProperty(lazyType, 'propTypes', {
	            enumerable: true
	          });
	        }
	      }
	    });
	  }

	  return lazyType;
	}

	function forwardRef(render) {
	  {
	    if (render != null && render.$$typeof === REACT_MEMO_TYPE) {
	      warningWithoutStack$1(false, 'forwardRef requires a render function but received a `memo` ' + 'component. Instead of forwardRef(memo(...)), use ' + 'memo(forwardRef(...)).');
	    } else if (typeof render !== 'function') {
	      warningWithoutStack$1(false, 'forwardRef requires a render function but was given %s.', render === null ? 'null' : typeof render);
	    } else {
	      !(
	      // Do not warn for 0 arguments because it could be due to usage of the 'arguments' object
	      render.length === 0 || render.length === 2) ? warningWithoutStack$1(false, 'forwardRef render functions accept exactly two parameters: props and ref. %s', render.length === 1 ? 'Did you forget to use the ref parameter?' : 'Any additional parameter will be undefined.') : void 0;
	    }

	    if (render != null) {
	      !(render.defaultProps == null && render.propTypes == null) ? warningWithoutStack$1(false, 'forwardRef render functions do not support propTypes or defaultProps. ' + 'Did you accidentally pass a React component?') : void 0;
	    }
	  }

	  return {
	    $$typeof: REACT_FORWARD_REF_TYPE,
	    render: render
	  };
	}

	function isValidElementType(type) {
	  return typeof type === 'string' || typeof type === 'function' ||
	  // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.
	  type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || typeof type === 'object' && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE);
	}

	function memo(type, compare) {
	  {
	    if (!isValidElementType(type)) {
	      warningWithoutStack$1(false, 'memo: The first argument must be a component. Instead ' + 'received: %s', type === null ? 'null' : typeof type);
	    }
	  }
	  return {
	    $$typeof: REACT_MEMO_TYPE,
	    type: type,
	    compare: compare === undefined ? null : compare
	  };
	}

	function resolveDispatcher() {
	  var dispatcher = ReactCurrentDispatcher.current;
	  !(dispatcher !== null) ? invariant(false, 'Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:\n1. You might have mismatching versions of React and the renderer (such as React DOM)\n2. You might be breaking the Rules of Hooks\n3. You might have more than one copy of React in the same app\nSee https://fb.me/react-invalid-hook-call for tips about how to debug and fix this problem.') : void 0;
	  return dispatcher;
	}

	function useContext(Context, unstable_observedBits) {
	  var dispatcher = resolveDispatcher();
	  {
	    !(unstable_observedBits === undefined) ? warning$1(false, 'useContext() second argument is reserved for future ' + 'use in React. Passing it is not supported. ' + 'You passed: %s.%s', unstable_observedBits, typeof unstable_observedBits === 'number' && Array.isArray(arguments[2]) ? '\n\nDid you call array.map(useContext)? ' + 'Calling Hooks inside a loop is not supported. ' + 'Learn more at https://fb.me/rules-of-hooks' : '') : void 0;

	    // TODO: add a more generic warning for invalid values.
	    if (Context._context !== undefined) {
	      var realContext = Context._context;
	      // Don't deduplicate because this legitimately causes bugs
	      // and nobody should be using this in existing code.
	      if (realContext.Consumer === Context) {
	        warning$1(false, 'Calling useContext(Context.Consumer) is not supported, may cause bugs, and will be ' + 'removed in a future major release. Did you mean to call useContext(Context) instead?');
	      } else if (realContext.Provider === Context) {
	        warning$1(false, 'Calling useContext(Context.Provider) is not supported. ' + 'Did you mean to call useContext(Context) instead?');
	      }
	    }
	  }
	  return dispatcher.useContext(Context, unstable_observedBits);
	}

	function useState(initialState) {
	  var dispatcher = resolveDispatcher();
	  return dispatcher.useState(initialState);
	}

	function useReducer(reducer, initialArg, init) {
	  var dispatcher = resolveDispatcher();
	  return dispatcher.useReducer(reducer, initialArg, init);
	}

	function useRef(initialValue) {
	  var dispatcher = resolveDispatcher();
	  return dispatcher.useRef(initialValue);
	}

	function useEffect(create, inputs) {
	  var dispatcher = resolveDispatcher();
	  return dispatcher.useEffect(create, inputs);
	}

	function useLayoutEffect(create, inputs) {
	  var dispatcher = resolveDispatcher();
	  return dispatcher.useLayoutEffect(create, inputs);
	}

	function useCallback(callback, inputs) {
	  var dispatcher = resolveDispatcher();
	  return dispatcher.useCallback(callback, inputs);
	}

	function useMemo(create, inputs) {
	  var dispatcher = resolveDispatcher();
	  return dispatcher.useMemo(create, inputs);
	}

	function useImperativeHandle(ref, create, inputs) {
	  var dispatcher = resolveDispatcher();
	  return dispatcher.useImperativeHandle(ref, create, inputs);
	}

	function useDebugValue(value, formatterFn) {
	  {
	    var dispatcher = resolveDispatcher();
	    return dispatcher.useDebugValue(value, formatterFn);
	  }
	}

	/**
	 * ReactElementValidator provides a wrapper around a element factory
	 * which validates the props passed to the element. This is intended to be
	 * used only in DEV and could be replaced by a static type checker for languages
	 * that support it.
	 */

	var propTypesMisspellWarningShown = void 0;

	{
	  propTypesMisspellWarningShown = false;
	}

	function getDeclarationErrorAddendum() {
	  if (ReactCurrentOwner.current) {
	    var name = getComponentName(ReactCurrentOwner.current.type);
	    if (name) {
	      return '\n\nCheck the render method of `' + name + '`.';
	    }
	  }
	  return '';
	}

	function getSourceInfoErrorAddendum(elementProps) {
	  if (elementProps !== null && elementProps !== undefined && elementProps.__source !== undefined) {
	    var source = elementProps.__source;
	    var fileName = source.fileName.replace(/^.*[\\\/]/, '');
	    var lineNumber = source.lineNumber;
	    return '\n\nCheck your code at ' + fileName + ':' + lineNumber + '.';
	  }
	  return '';
	}

	/**
	 * Warn if there's no key explicitly set on dynamic arrays of children or
	 * object keys are not valid. This allows us to keep track of children between
	 * updates.
	 */
	var ownerHasKeyUseWarning = {};

	function getCurrentComponentErrorInfo(parentType) {
	  var info = getDeclarationErrorAddendum();

	  if (!info) {
	    var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;
	    if (parentName) {
	      info = '\n\nCheck the top-level render call using <' + parentName + '>.';
	    }
	  }
	  return info;
	}

	/**
	 * Warn if the element doesn't have an explicit key assigned to it.
	 * This element is in an array. The array could grow and shrink or be
	 * reordered. All children that haven't already been validated are required to
	 * have a "key" property assigned to it. Error statuses are cached so a warning
	 * will only be shown once.
	 *
	 * @internal
	 * @param {ReactElement} element Element that requires a key.
	 * @param {*} parentType element's parent's type.
	 */
	function validateExplicitKey(element, parentType) {
	  if (!element._store || element._store.validated || element.key != null) {
	    return;
	  }
	  element._store.validated = true;

	  var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);
	  if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {
	    return;
	  }
	  ownerHasKeyUseWarning[currentComponentErrorInfo] = true;

	  // Usually the current owner is the offender, but if it accepts children as a
	  // property, it may be the creator of the child that's responsible for
	  // assigning it a key.
	  var childOwner = '';
	  if (element && element._owner && element._owner !== ReactCurrentOwner.current) {
	    // Give the component that originally created this child.
	    childOwner = ' It was passed a child from ' + getComponentName(element._owner.type) + '.';
	  }

	  setCurrentlyValidatingElement(element);
	  {
	    warning$1(false, 'Each child in a list should have a unique "key" prop.' + '%s%s See https://fb.me/react-warning-keys for more information.', currentComponentErrorInfo, childOwner);
	  }
	  setCurrentlyValidatingElement(null);
	}

	/**
	 * Ensure that every element either is passed in a static location, in an
	 * array with an explicit keys property defined, or in an object literal
	 * with valid key property.
	 *
	 * @internal
	 * @param {ReactNode} node Statically passed child of any type.
	 * @param {*} parentType node's parent's type.
	 */
	function validateChildKeys(node, parentType) {
	  if (typeof node !== 'object') {
	    return;
	  }
	  if (Array.isArray(node)) {
	    for (var i = 0; i < node.length; i++) {
	      var child = node[i];
	      if (isValidElement(child)) {
	        validateExplicitKey(child, parentType);
	      }
	    }
	  } else if (isValidElement(node)) {
	    // This element was passed in a valid location.
	    if (node._store) {
	      node._store.validated = true;
	    }
	  } else if (node) {
	    var iteratorFn = getIteratorFn(node);
	    if (typeof iteratorFn === 'function') {
	      // Entry iterators used to provide implicit keys,
	      // but now we print a separate warning for them later.
	      if (iteratorFn !== node.entries) {
	        var iterator = iteratorFn.call(node);
	        var step = void 0;
	        while (!(step = iterator.next()).done) {
	          if (isValidElement(step.value)) {
	            validateExplicitKey(step.value, parentType);
	          }
	        }
	      }
	    }
	  }
	}

	/**
	 * Given an element, validate that its props follow the propTypes definition,
	 * provided by the type.
	 *
	 * @param {ReactElement} element
	 */
	function validatePropTypes(element) {
	  var type = element.type;
	  if (type === null || type === undefined || typeof type === 'string') {
	    return;
	  }
	  var name = getComponentName(type);
	  var propTypes = void 0;
	  if (typeof type === 'function') {
	    propTypes = type.propTypes;
	  } else if (typeof type === 'object' && (type.$$typeof === REACT_FORWARD_REF_TYPE ||
	  // Note: Memo only checks outer props here.
	  // Inner props are checked in the reconciler.
	  type.$$typeof === REACT_MEMO_TYPE)) {
	    propTypes = type.propTypes;
	  } else {
	    return;
	  }
	  if (propTypes) {
	    setCurrentlyValidatingElement(element);
	    checkPropTypes(propTypes, element.props, 'prop', name, ReactDebugCurrentFrame.getStackAddendum);
	    setCurrentlyValidatingElement(null);
	  } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {
	    propTypesMisspellWarningShown = true;
	    warningWithoutStack$1(false, 'Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?', name || 'Unknown');
	  }
	  if (typeof type.getDefaultProps === 'function') {
	    !type.getDefaultProps.isReactClassApproved ? warningWithoutStack$1(false, 'getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.') : void 0;
	  }
	}

	/**
	 * Given a fragment, validate that it can only be provided with fragment props
	 * @param {ReactElement} fragment
	 */
	function validateFragmentProps(fragment) {
	  setCurrentlyValidatingElement(fragment);

	  var keys = Object.keys(fragment.props);
	  for (var i = 0; i < keys.length; i++) {
	    var key = keys[i];
	    if (key !== 'children' && key !== 'key') {
	      warning$1(false, 'Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.', key);
	      break;
	    }
	  }

	  if (fragment.ref !== null) {
	    warning$1(false, 'Invalid attribute `ref` supplied to `React.Fragment`.');
	  }

	  setCurrentlyValidatingElement(null);
	}

	function createElementWithValidation(type, props, children) {
	  var validType = isValidElementType(type);

	  // We warn in this case but don't throw. We expect the element creation to
	  // succeed and there will likely be errors in render.
	  if (!validType) {
	    var info = '';
	    if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {
	      info += ' You likely forgot to export your component from the file ' + "it's defined in, or you might have mixed up default and named imports.";
	    }

	    var sourceInfo = getSourceInfoErrorAddendum(props);
	    if (sourceInfo) {
	      info += sourceInfo;
	    } else {
	      info += getDeclarationErrorAddendum();
	    }

	    var typeString = void 0;
	    if (type === null) {
	      typeString = 'null';
	    } else if (Array.isArray(type)) {
	      typeString = 'array';
	    } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {
	      typeString = '<' + (getComponentName(type.type) || 'Unknown') + ' />';
	      info = ' Did you accidentally export a JSX literal instead of a component?';
	    } else {
	      typeString = typeof type;
	    }

	    warning$1(false, 'React.createElement: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);
	  }

	  var element = createElement.apply(this, arguments);

	  // The result can be nullish if a mock or a custom function is used.
	  // TODO: Drop this when these are no longer allowed as the type argument.
	  if (element == null) {
	    return element;
	  }

	  // Skip key warning if the type isn't valid since our key validation logic
	  // doesn't expect a non-string/function type and can throw confusing errors.
	  // We don't want exception behavior to differ between dev and prod.
	  // (Rendering will throw with a helpful message and as soon as the type is
	  // fixed, the key warnings will appear.)
	  if (validType) {
	    for (var i = 2; i < arguments.length; i++) {
	      validateChildKeys(arguments[i], type);
	    }
	  }

	  if (type === REACT_FRAGMENT_TYPE) {
	    validateFragmentProps(element);
	  } else {
	    validatePropTypes(element);
	  }

	  return element;
	}

	function createFactoryWithValidation(type) {
	  var validatedFactory = createElementWithValidation.bind(null, type);
	  validatedFactory.type = type;
	  // Legacy hook: remove it
	  {
	    Object.defineProperty(validatedFactory, 'type', {
	      enumerable: false,
	      get: function () {
	        lowPriorityWarning$1(false, 'Factory.type is deprecated. Access the class directly ' + 'before passing it to createFactory.');
	        Object.defineProperty(this, 'type', {
	          value: type
	        });
	        return type;
	      }
	    });
	  }

	  return validatedFactory;
	}

	function cloneElementWithValidation(element, props, children) {
	  var newElement = cloneElement.apply(this, arguments);
	  for (var i = 2; i < arguments.length; i++) {
	    validateChildKeys(arguments[i], newElement.type);
	  }
	  validatePropTypes(newElement);
	  return newElement;
	}

	// Helps identify side effects in begin-phase lifecycle hooks and setState reducers:


	// In some cases, StrictMode should also double-render lifecycles.
	// This can be confusing for tests though,
	// And it can be bad for performance in production.
	// This feature flag can be used to control the behavior:


	// To preserve the "Pause on caught exceptions" behavior of the debugger, we
	// replay the begin phase of a failed component inside invokeGuardedCallback.


	// Warn about deprecated, async-unsafe lifecycles; relates to RFC #6:


	// Gather advanced timing metrics for Profiler subtrees.


	// Trace which interactions trigger each commit.


	// Only used in www builds.
	 // TODO: true? Here it might just be false.

	// Only used in www builds.


	// Only used in www builds.


	// React Fire: prevent the value and checked attributes from syncing
	// with their related DOM properties


	// These APIs will no longer be "unstable" in the upcoming 16.7 release,
	// Control this behavior with a flag to support 16.6 minor releases in the meanwhile.
	var enableStableConcurrentModeAPIs = false;

	var React = {
	  Children: {
	    map: mapChildren,
	    forEach: forEachChildren,
	    count: countChildren,
	    toArray: toArray,
	    only: onlyChild
	  },

	  createRef: createRef,
	  Component: Component,
	  PureComponent: PureComponent,

	  createContext: createContext,
	  forwardRef: forwardRef,
	  lazy: lazy,
	  memo: memo,

	  useCallback: useCallback,
	  useContext: useContext,
	  useEffect: useEffect,
	  useImperativeHandle: useImperativeHandle,
	  useDebugValue: useDebugValue,
	  useLayoutEffect: useLayoutEffect,
	  useMemo: useMemo,
	  useReducer: useReducer,
	  useRef: useRef,
	  useState: useState,

	  Fragment: REACT_FRAGMENT_TYPE,
	  StrictMode: REACT_STRICT_MODE_TYPE,
	  Suspense: REACT_SUSPENSE_TYPE,

	  createElement: createElementWithValidation,
	  cloneElement: cloneElementWithValidation,
	  createFactory: createFactoryWithValidation,
	  isValidElement: isValidElement,

	  version: ReactVersion,

	  unstable_ConcurrentMode: REACT_CONCURRENT_MODE_TYPE,
	  unstable_Profiler: REACT_PROFILER_TYPE,

	  __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: ReactSharedInternals
	};

	// Note: some APIs are added with feature flags.
	// Make sure that stable builds for open source
	// don't modify the React object to avoid deopts.
	// Also let's not expose their names in stable builds.

	if (enableStableConcurrentModeAPIs) {
	  React.ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;
	  React.Profiler = REACT_PROFILER_TYPE;
	  React.unstable_ConcurrentMode = undefined;
	  React.unstable_Profiler = undefined;
	}



	var React$2 = Object.freeze({
		default: React
	});

	var React$3 = ( React$2 && React ) || React$2;

	// TODO: decide on the top-level export form.
	// This is hacky but makes it work with both Rollup and Jest.
	var react = React$3.default || React$3;

	module.exports = react;
	  })();
	}

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 8 */,
/* 9 */,
/* 10 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	function checkDCE() {
	  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */
	  if (
	    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||
	    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'
	  ) {
	    return;
	  }
	  if (process.env.NODE_ENV !== 'production') {
	    // This branch is unreachable because this function is only called
	    // in production, but the condition is true only in development.
	    // Therefore if the branch is still here, dead code elimination wasn't
	    // properly applied.
	    // Don't change the message. React DevTools relies on it. Also make sure
	    // this message doesn't occur elsewhere in this function, or it will cause
	    // a false positive.
	    throw new Error('^_^');
	  }
	  try {
	    // Verify that the code above has been dead code eliminated (DCE'd).
	    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);
	  } catch (err) {
	    // DevTools shouldn't crash React, no matter what.
	    // We should still report in case we break this code.
	    console.error(err);
	  }
	}

	if (process.env.NODE_ENV === 'production') {
	  // DCE check should happen before ReactDOM bundle executes so that
	  // DevTools can report bad minification during injection.
	  checkDCE();
	  module.exports = __webpack_require__(11);
	} else {
	  module.exports = __webpack_require__(15);
	}

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 11 */
/***/ (function(module, exports, __webpack_require__) {

	/** @license React v16.8.6
	 * react-dom.production.min.js
	 *
	 * Copyright (c) Facebook, Inc. and its affiliates.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 */

	/*
	 Modernizr 3.0.0pre (Custom Build) | MIT
	*/
	'use strict';var aa=__webpack_require__(3),n=__webpack_require__(6),r=__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"scheduler\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));function ba(a,b,c,d,e,f,g,h){if(!a){a=void 0;if(void 0===b)a=Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else{var l=[c,d,e,f,g,h],k=0;a=Error(b.replace(/%s/g,function(){return l[k++]}));a.name="Invariant Violation"}a.framesToPop=1;throw a;}}
	function x(a){for(var b=arguments.length-1,c="https://reactjs.org/docs/error-decoder.html?invariant="+a,d=0;d<b;d++)c+="&args[]="+encodeURIComponent(arguments[d+1]);ba(!1,"Minified React error #"+a+"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. ",c)}aa?void 0:x("227");function ca(a,b,c,d,e,f,g,h,l){var k=Array.prototype.slice.call(arguments,3);try{b.apply(c,k)}catch(m){this.onError(m)}}
	var da=!1,ea=null,fa=!1,ha=null,ia={onError:function(a){da=!0;ea=a}};function ja(a,b,c,d,e,f,g,h,l){da=!1;ea=null;ca.apply(ia,arguments)}function ka(a,b,c,d,e,f,g,h,l){ja.apply(this,arguments);if(da){if(da){var k=ea;da=!1;ea=null}else x("198"),k=void 0;fa||(fa=!0,ha=k)}}var la=null,ma={};
	function na(){if(la)for(var a in ma){var b=ma[a],c=la.indexOf(a);-1<c?void 0:x("96",a);if(!oa[c]){b.extractEvents?void 0:x("97",a);oa[c]=b;c=b.eventTypes;for(var d in c){var e=void 0;var f=c[d],g=b,h=d;pa.hasOwnProperty(h)?x("99",h):void 0;pa[h]=f;var l=f.phasedRegistrationNames;if(l){for(e in l)l.hasOwnProperty(e)&&qa(l[e],g,h);e=!0}else f.registrationName?(qa(f.registrationName,g,h),e=!0):e=!1;e?void 0:x("98",d,a)}}}}
	function qa(a,b,c){ra[a]?x("100",a):void 0;ra[a]=b;sa[a]=b.eventTypes[c].dependencies}var oa=[],pa={},ra={},sa={},ta=null,ua=null,va=null;function wa(a,b,c){var d=a.type||"unknown-event";a.currentTarget=va(c);ka(d,b,void 0,a);a.currentTarget=null}function xa(a,b){null==b?x("30"):void 0;if(null==a)return b;if(Array.isArray(a)){if(Array.isArray(b))return a.push.apply(a,b),a;a.push(b);return a}return Array.isArray(b)?[a].concat(b):[a,b]}
	function ya(a,b,c){Array.isArray(a)?a.forEach(b,c):a&&b.call(c,a)}var za=null;function Aa(a){if(a){var b=a._dispatchListeners,c=a._dispatchInstances;if(Array.isArray(b))for(var d=0;d<b.length&&!a.isPropagationStopped();d++)wa(a,b[d],c[d]);else b&&wa(a,b,c);a._dispatchListeners=null;a._dispatchInstances=null;a.isPersistent()||a.constructor.release(a)}}
	var Ba={injectEventPluginOrder:function(a){la?x("101"):void 0;la=Array.prototype.slice.call(a);na()},injectEventPluginsByName:function(a){var b=!1,c;for(c in a)if(a.hasOwnProperty(c)){var d=a[c];ma.hasOwnProperty(c)&&ma[c]===d||(ma[c]?x("102",c):void 0,ma[c]=d,b=!0)}b&&na()}};
	function Ca(a,b){var c=a.stateNode;if(!c)return null;var d=ta(c);if(!d)return null;c=d[b];a:switch(b){case "onClick":case "onClickCapture":case "onDoubleClick":case "onDoubleClickCapture":case "onMouseDown":case "onMouseDownCapture":case "onMouseMove":case "onMouseMoveCapture":case "onMouseUp":case "onMouseUpCapture":(d=!d.disabled)||(a=a.type,d=!("button"===a||"input"===a||"select"===a||"textarea"===a));a=!d;break a;default:a=!1}if(a)return null;c&&"function"!==typeof c?x("231",b,typeof c):void 0;
	return c}function Da(a){null!==a&&(za=xa(za,a));a=za;za=null;if(a&&(ya(a,Aa),za?x("95"):void 0,fa))throw a=ha,fa=!1,ha=null,a;}var Ea=Math.random().toString(36).slice(2),Fa="__reactInternalInstance$"+Ea,Ga="__reactEventHandlers$"+Ea;function Ha(a){if(a[Fa])return a[Fa];for(;!a[Fa];)if(a.parentNode)a=a.parentNode;else return null;a=a[Fa];return 5===a.tag||6===a.tag?a:null}function Ia(a){a=a[Fa];return!a||5!==a.tag&&6!==a.tag?null:a}
	function Ja(a){if(5===a.tag||6===a.tag)return a.stateNode;x("33")}function Ka(a){return a[Ga]||null}function La(a){do a=a.return;while(a&&5!==a.tag);return a?a:null}function Ma(a,b,c){if(b=Ca(a,c.dispatchConfig.phasedRegistrationNames[b]))c._dispatchListeners=xa(c._dispatchListeners,b),c._dispatchInstances=xa(c._dispatchInstances,a)}
	function Na(a){if(a&&a.dispatchConfig.phasedRegistrationNames){for(var b=a._targetInst,c=[];b;)c.push(b),b=La(b);for(b=c.length;0<b--;)Ma(c[b],"captured",a);for(b=0;b<c.length;b++)Ma(c[b],"bubbled",a)}}function Oa(a,b,c){a&&c&&c.dispatchConfig.registrationName&&(b=Ca(a,c.dispatchConfig.registrationName))&&(c._dispatchListeners=xa(c._dispatchListeners,b),c._dispatchInstances=xa(c._dispatchInstances,a))}function Pa(a){a&&a.dispatchConfig.registrationName&&Oa(a._targetInst,null,a)}
	function Qa(a){ya(a,Na)}var Ra=!("undefined"===typeof window||!window.document||!window.document.createElement);function Sa(a,b){var c={};c[a.toLowerCase()]=b.toLowerCase();c["Webkit"+a]="webkit"+b;c["Moz"+a]="moz"+b;return c}var Ta={animationend:Sa("Animation","AnimationEnd"),animationiteration:Sa("Animation","AnimationIteration"),animationstart:Sa("Animation","AnimationStart"),transitionend:Sa("Transition","TransitionEnd")},Ua={},Va={};
	Ra&&(Va=document.createElement("div").style,"AnimationEvent"in window||(delete Ta.animationend.animation,delete Ta.animationiteration.animation,delete Ta.animationstart.animation),"TransitionEvent"in window||delete Ta.transitionend.transition);function Wa(a){if(Ua[a])return Ua[a];if(!Ta[a])return a;var b=Ta[a],c;for(c in b)if(b.hasOwnProperty(c)&&c in Va)return Ua[a]=b[c];return a}
	var Xa=Wa("animationend"),Ya=Wa("animationiteration"),Za=Wa("animationstart"),$a=Wa("transitionend"),ab="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),bb=null,cb=null,db=null;
	function eb(){if(db)return db;var a,b=cb,c=b.length,d,e="value"in bb?bb.value:bb.textContent,f=e.length;for(a=0;a<c&&b[a]===e[a];a++);var g=c-a;for(d=1;d<=g&&b[c-d]===e[f-d];d++);return db=e.slice(a,1<d?1-d:void 0)}function fb(){return!0}function gb(){return!1}
	function y(a,b,c,d){this.dispatchConfig=a;this._targetInst=b;this.nativeEvent=c;a=this.constructor.Interface;for(var e in a)a.hasOwnProperty(e)&&((b=a[e])?this[e]=b(c):"target"===e?this.target=d:this[e]=c[e]);this.isDefaultPrevented=(null!=c.defaultPrevented?c.defaultPrevented:!1===c.returnValue)?fb:gb;this.isPropagationStopped=gb;return this}
	n(y.prototype,{preventDefault:function(){this.defaultPrevented=!0;var a=this.nativeEvent;a&&(a.preventDefault?a.preventDefault():"unknown"!==typeof a.returnValue&&(a.returnValue=!1),this.isDefaultPrevented=fb)},stopPropagation:function(){var a=this.nativeEvent;a&&(a.stopPropagation?a.stopPropagation():"unknown"!==typeof a.cancelBubble&&(a.cancelBubble=!0),this.isPropagationStopped=fb)},persist:function(){this.isPersistent=fb},isPersistent:gb,destructor:function(){var a=this.constructor.Interface,
	b;for(b in a)this[b]=null;this.nativeEvent=this._targetInst=this.dispatchConfig=null;this.isPropagationStopped=this.isDefaultPrevented=gb;this._dispatchInstances=this._dispatchListeners=null}});y.Interface={type:null,target:null,currentTarget:function(){return null},eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(a){return a.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null};
	y.extend=function(a){function b(){}function c(){return d.apply(this,arguments)}var d=this;b.prototype=d.prototype;var e=new b;n(e,c.prototype);c.prototype=e;c.prototype.constructor=c;c.Interface=n({},d.Interface,a);c.extend=d.extend;hb(c);return c};hb(y);function ib(a,b,c,d){if(this.eventPool.length){var e=this.eventPool.pop();this.call(e,a,b,c,d);return e}return new this(a,b,c,d)}function jb(a){a instanceof this?void 0:x("279");a.destructor();10>this.eventPool.length&&this.eventPool.push(a)}
	function hb(a){a.eventPool=[];a.getPooled=ib;a.release=jb}var kb=y.extend({data:null}),lb=y.extend({data:null}),mb=[9,13,27,32],nb=Ra&&"CompositionEvent"in window,ob=null;Ra&&"documentMode"in document&&(ob=document.documentMode);
	var pb=Ra&&"TextEvent"in window&&!ob,qb=Ra&&(!nb||ob&&8<ob&&11>=ob),rb=String.fromCharCode(32),sb={beforeInput:{phasedRegistrationNames:{bubbled:"onBeforeInput",captured:"onBeforeInputCapture"},dependencies:["compositionend","keypress","textInput","paste"]},compositionEnd:{phasedRegistrationNames:{bubbled:"onCompositionEnd",captured:"onCompositionEndCapture"},dependencies:"blur compositionend keydown keypress keyup mousedown".split(" ")},compositionStart:{phasedRegistrationNames:{bubbled:"onCompositionStart",
	captured:"onCompositionStartCapture"},dependencies:"blur compositionstart keydown keypress keyup mousedown".split(" ")},compositionUpdate:{phasedRegistrationNames:{bubbled:"onCompositionUpdate",captured:"onCompositionUpdateCapture"},dependencies:"blur compositionupdate keydown keypress keyup mousedown".split(" ")}},tb=!1;
	function ub(a,b){switch(a){case "keyup":return-1!==mb.indexOf(b.keyCode);case "keydown":return 229!==b.keyCode;case "keypress":case "mousedown":case "blur":return!0;default:return!1}}function vb(a){a=a.detail;return"object"===typeof a&&"data"in a?a.data:null}var wb=!1;function xb(a,b){switch(a){case "compositionend":return vb(b);case "keypress":if(32!==b.which)return null;tb=!0;return rb;case "textInput":return a=b.data,a===rb&&tb?null:a;default:return null}}
	function yb(a,b){if(wb)return"compositionend"===a||!nb&&ub(a,b)?(a=eb(),db=cb=bb=null,wb=!1,a):null;switch(a){case "paste":return null;case "keypress":if(!(b.ctrlKey||b.altKey||b.metaKey)||b.ctrlKey&&b.altKey){if(b.char&&1<b.char.length)return b.char;if(b.which)return String.fromCharCode(b.which)}return null;case "compositionend":return qb&&"ko"!==b.locale?null:b.data;default:return null}}
	var zb={eventTypes:sb,extractEvents:function(a,b,c,d){var e=void 0;var f=void 0;if(nb)b:{switch(a){case "compositionstart":e=sb.compositionStart;break b;case "compositionend":e=sb.compositionEnd;break b;case "compositionupdate":e=sb.compositionUpdate;break b}e=void 0}else wb?ub(a,c)&&(e=sb.compositionEnd):"keydown"===a&&229===c.keyCode&&(e=sb.compositionStart);e?(qb&&"ko"!==c.locale&&(wb||e!==sb.compositionStart?e===sb.compositionEnd&&wb&&(f=eb()):(bb=d,cb="value"in bb?bb.value:bb.textContent,wb=
	!0)),e=kb.getPooled(e,b,c,d),f?e.data=f:(f=vb(c),null!==f&&(e.data=f)),Qa(e),f=e):f=null;(a=pb?xb(a,c):yb(a,c))?(b=lb.getPooled(sb.beforeInput,b,c,d),b.data=a,Qa(b)):b=null;return null===f?b:null===b?f:[f,b]}},Ab=null,Bb=null,Cb=null;function Db(a){if(a=ua(a)){"function"!==typeof Ab?x("280"):void 0;var b=ta(a.stateNode);Ab(a.stateNode,a.type,b)}}function Eb(a){Bb?Cb?Cb.push(a):Cb=[a]:Bb=a}function Fb(){if(Bb){var a=Bb,b=Cb;Cb=Bb=null;Db(a);if(b)for(a=0;a<b.length;a++)Db(b[a])}}
	function Gb(a,b){return a(b)}function Hb(a,b,c){return a(b,c)}function Ib(){}var Jb=!1;function Kb(a,b){if(Jb)return a(b);Jb=!0;try{return Gb(a,b)}finally{if(Jb=!1,null!==Bb||null!==Cb)Ib(),Fb()}}var Lb={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Mb(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return"input"===b?!!Lb[a.type]:"textarea"===b?!0:!1}
	function Nb(a){a=a.target||a.srcElement||window;a.correspondingUseElement&&(a=a.correspondingUseElement);return 3===a.nodeType?a.parentNode:a}function Ob(a){if(!Ra)return!1;a="on"+a;var b=a in document;b||(b=document.createElement("div"),b.setAttribute(a,"return;"),b="function"===typeof b[a]);return b}function Pb(a){var b=a.type;return(a=a.nodeName)&&"input"===a.toLowerCase()&&("checkbox"===b||"radio"===b)}
	function Qb(a){var b=Pb(a)?"checked":"value",c=Object.getOwnPropertyDescriptor(a.constructor.prototype,b),d=""+a[b];if(!a.hasOwnProperty(b)&&"undefined"!==typeof c&&"function"===typeof c.get&&"function"===typeof c.set){var e=c.get,f=c.set;Object.defineProperty(a,b,{configurable:!0,get:function(){return e.call(this)},set:function(a){d=""+a;f.call(this,a)}});Object.defineProperty(a,b,{enumerable:c.enumerable});return{getValue:function(){return d},setValue:function(a){d=""+a},stopTracking:function(){a._valueTracker=
	null;delete a[b]}}}}function Rb(a){a._valueTracker||(a._valueTracker=Qb(a))}function Sb(a){if(!a)return!1;var b=a._valueTracker;if(!b)return!0;var c=b.getValue();var d="";a&&(d=Pb(a)?a.checked?"true":"false":a.value);a=d;return a!==c?(b.setValue(a),!0):!1}var Tb=aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;Tb.hasOwnProperty("ReactCurrentDispatcher")||(Tb.ReactCurrentDispatcher={current:null});
	var Ub=/^(.*)[\\\/]/,z="function"===typeof Symbol&&Symbol.for,Vb=z?Symbol.for("react.element"):60103,Wb=z?Symbol.for("react.portal"):60106,Xb=z?Symbol.for("react.fragment"):60107,Yb=z?Symbol.for("react.strict_mode"):60108,Zb=z?Symbol.for("react.profiler"):60114,$b=z?Symbol.for("react.provider"):60109,ac=z?Symbol.for("react.context"):60110,bc=z?Symbol.for("react.concurrent_mode"):60111,cc=z?Symbol.for("react.forward_ref"):60112,dc=z?Symbol.for("react.suspense"):60113,ec=z?Symbol.for("react.memo"):
	60115,fc=z?Symbol.for("react.lazy"):60116,gc="function"===typeof Symbol&&Symbol.iterator;function hc(a){if(null===a||"object"!==typeof a)return null;a=gc&&a[gc]||a["@@iterator"];return"function"===typeof a?a:null}
	function ic(a){if(null==a)return null;if("function"===typeof a)return a.displayName||a.name||null;if("string"===typeof a)return a;switch(a){case bc:return"ConcurrentMode";case Xb:return"Fragment";case Wb:return"Portal";case Zb:return"Profiler";case Yb:return"StrictMode";case dc:return"Suspense"}if("object"===typeof a)switch(a.$$typeof){case ac:return"Context.Consumer";case $b:return"Context.Provider";case cc:var b=a.render;b=b.displayName||b.name||"";return a.displayName||(""!==b?"ForwardRef("+b+
	")":"ForwardRef");case ec:return ic(a.type);case fc:if(a=1===a._status?a._result:null)return ic(a)}return null}function jc(a){var b="";do{a:switch(a.tag){case 3:case 4:case 6:case 7:case 10:case 9:var c="";break a;default:var d=a._debugOwner,e=a._debugSource,f=ic(a.type);c=null;d&&(c=ic(d.type));d=f;f="";e?f=" (at "+e.fileName.replace(Ub,"")+":"+e.lineNumber+")":c&&(f=" (created by "+c+")");c="\n    in "+(d||"Unknown")+f}b+=c;a=a.return}while(a);return b}
	var kc=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,lc=Object.prototype.hasOwnProperty,mc={},nc={};
	function oc(a){if(lc.call(nc,a))return!0;if(lc.call(mc,a))return!1;if(kc.test(a))return nc[a]=!0;mc[a]=!0;return!1}function pc(a,b,c,d){if(null!==c&&0===c.type)return!1;switch(typeof b){case "function":case "symbol":return!0;case "boolean":if(d)return!1;if(null!==c)return!c.acceptsBooleans;a=a.toLowerCase().slice(0,5);return"data-"!==a&&"aria-"!==a;default:return!1}}
	function qc(a,b,c,d){if(null===b||"undefined"===typeof b||pc(a,b,c,d))return!0;if(d)return!1;if(null!==c)switch(c.type){case 3:return!b;case 4:return!1===b;case 5:return isNaN(b);case 6:return isNaN(b)||1>b}return!1}function C(a,b,c,d,e){this.acceptsBooleans=2===b||3===b||4===b;this.attributeName=d;this.attributeNamespace=e;this.mustUseProperty=c;this.propertyName=a;this.type=b}var D={};
	"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(a){D[a]=new C(a,0,!1,a,null)});[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach(function(a){var b=a[0];D[b]=new C(b,1,!1,a[1],null)});["contentEditable","draggable","spellCheck","value"].forEach(function(a){D[a]=new C(a,2,!1,a.toLowerCase(),null)});
	["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach(function(a){D[a]=new C(a,2,!1,a,null)});"allowFullScreen async autoFocus autoPlay controls default defer disabled formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(a){D[a]=new C(a,3,!1,a.toLowerCase(),null)});["checked","multiple","muted","selected"].forEach(function(a){D[a]=new C(a,3,!0,a,null)});
	["capture","download"].forEach(function(a){D[a]=new C(a,4,!1,a,null)});["cols","rows","size","span"].forEach(function(a){D[a]=new C(a,6,!1,a,null)});["rowSpan","start"].forEach(function(a){D[a]=new C(a,5,!1,a.toLowerCase(),null)});var rc=/[\-:]([a-z])/g;function sc(a){return a[1].toUpperCase()}
	"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(a){var b=a.replace(rc,
	sc);D[b]=new C(b,1,!1,a,null)});"xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(a){var b=a.replace(rc,sc);D[b]=new C(b,1,!1,a,"http://www.w3.org/1999/xlink")});["xml:base","xml:lang","xml:space"].forEach(function(a){var b=a.replace(rc,sc);D[b]=new C(b,1,!1,a,"http://www.w3.org/XML/1998/namespace")});["tabIndex","crossOrigin"].forEach(function(a){D[a]=new C(a,1,!1,a.toLowerCase(),null)});
	function tc(a,b,c,d){var e=D.hasOwnProperty(b)?D[b]:null;var f=null!==e?0===e.type:d?!1:!(2<b.length)||"o"!==b[0]&&"O"!==b[0]||"n"!==b[1]&&"N"!==b[1]?!1:!0;f||(qc(b,c,e,d)&&(c=null),d||null===e?oc(b)&&(null===c?a.removeAttribute(b):a.setAttribute(b,""+c)):e.mustUseProperty?a[e.propertyName]=null===c?3===e.type?!1:"":c:(b=e.attributeName,d=e.attributeNamespace,null===c?a.removeAttribute(b):(e=e.type,c=3===e||4===e&&!0===c?"":""+c,d?a.setAttributeNS(d,b,c):a.setAttribute(b,c))))}
	function uc(a){switch(typeof a){case "boolean":case "number":case "object":case "string":case "undefined":return a;default:return""}}function vc(a,b){var c=b.checked;return n({},b,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=c?c:a._wrapperState.initialChecked})}
	function wc(a,b){var c=null==b.defaultValue?"":b.defaultValue,d=null!=b.checked?b.checked:b.defaultChecked;c=uc(null!=b.value?b.value:c);a._wrapperState={initialChecked:d,initialValue:c,controlled:"checkbox"===b.type||"radio"===b.type?null!=b.checked:null!=b.value}}function xc(a,b){b=b.checked;null!=b&&tc(a,"checked",b,!1)}
	function yc(a,b){xc(a,b);var c=uc(b.value),d=b.type;if(null!=c)if("number"===d){if(0===c&&""===a.value||a.value!=c)a.value=""+c}else a.value!==""+c&&(a.value=""+c);else if("submit"===d||"reset"===d){a.removeAttribute("value");return}b.hasOwnProperty("value")?zc(a,b.type,c):b.hasOwnProperty("defaultValue")&&zc(a,b.type,uc(b.defaultValue));null==b.checked&&null!=b.defaultChecked&&(a.defaultChecked=!!b.defaultChecked)}
	function Ac(a,b,c){if(b.hasOwnProperty("value")||b.hasOwnProperty("defaultValue")){var d=b.type;if(!("submit"!==d&&"reset"!==d||void 0!==b.value&&null!==b.value))return;b=""+a._wrapperState.initialValue;c||b===a.value||(a.value=b);a.defaultValue=b}c=a.name;""!==c&&(a.name="");a.defaultChecked=!a.defaultChecked;a.defaultChecked=!!a._wrapperState.initialChecked;""!==c&&(a.name=c)}
	function zc(a,b,c){if("number"!==b||a.ownerDocument.activeElement!==a)null==c?a.defaultValue=""+a._wrapperState.initialValue:a.defaultValue!==""+c&&(a.defaultValue=""+c)}var Bc={change:{phasedRegistrationNames:{bubbled:"onChange",captured:"onChangeCapture"},dependencies:"blur change click focus input keydown keyup selectionchange".split(" ")}};function Cc(a,b,c){a=y.getPooled(Bc.change,a,b,c);a.type="change";Eb(c);Qa(a);return a}var Dc=null,Ec=null;function Fc(a){Da(a)}
	function Gc(a){var b=Ja(a);if(Sb(b))return a}function Hc(a,b){if("change"===a)return b}var Ic=!1;Ra&&(Ic=Ob("input")&&(!document.documentMode||9<document.documentMode));function Jc(){Dc&&(Dc.detachEvent("onpropertychange",Kc),Ec=Dc=null)}function Kc(a){"value"===a.propertyName&&Gc(Ec)&&(a=Cc(Ec,a,Nb(a)),Kb(Fc,a))}function Lc(a,b,c){"focus"===a?(Jc(),Dc=b,Ec=c,Dc.attachEvent("onpropertychange",Kc)):"blur"===a&&Jc()}function Mc(a){if("selectionchange"===a||"keyup"===a||"keydown"===a)return Gc(Ec)}
	function Nc(a,b){if("click"===a)return Gc(b)}function Oc(a,b){if("input"===a||"change"===a)return Gc(b)}
	var Pc={eventTypes:Bc,_isInputEventSupported:Ic,extractEvents:function(a,b,c,d){var e=b?Ja(b):window,f=void 0,g=void 0,h=e.nodeName&&e.nodeName.toLowerCase();"select"===h||"input"===h&&"file"===e.type?f=Hc:Mb(e)?Ic?f=Oc:(f=Mc,g=Lc):(h=e.nodeName)&&"input"===h.toLowerCase()&&("checkbox"===e.type||"radio"===e.type)&&(f=Nc);if(f&&(f=f(a,b)))return Cc(f,c,d);g&&g(a,e,b);"blur"===a&&(a=e._wrapperState)&&a.controlled&&"number"===e.type&&zc(e,"number",e.value)}},Qc=y.extend({view:null,detail:null}),Rc={Alt:"altKey",
	Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function Sc(a){var b=this.nativeEvent;return b.getModifierState?b.getModifierState(a):(a=Rc[a])?!!b[a]:!1}function Tc(){return Sc}
	var Uc=0,Vc=0,Wc=!1,Xc=!1,Yc=Qc.extend({screenX:null,screenY:null,clientX:null,clientY:null,pageX:null,pageY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:Tc,button:null,buttons:null,relatedTarget:function(a){return a.relatedTarget||(a.fromElement===a.srcElement?a.toElement:a.fromElement)},movementX:function(a){if("movementX"in a)return a.movementX;var b=Uc;Uc=a.screenX;return Wc?"mousemove"===a.type?a.screenX-b:0:(Wc=!0,0)},movementY:function(a){if("movementY"in a)return a.movementY;
	var b=Vc;Vc=a.screenY;return Xc?"mousemove"===a.type?a.screenY-b:0:(Xc=!0,0)}}),Zc=Yc.extend({pointerId:null,width:null,height:null,pressure:null,tangentialPressure:null,tiltX:null,tiltY:null,twist:null,pointerType:null,isPrimary:null}),$c={mouseEnter:{registrationName:"onMouseEnter",dependencies:["mouseout","mouseover"]},mouseLeave:{registrationName:"onMouseLeave",dependencies:["mouseout","mouseover"]},pointerEnter:{registrationName:"onPointerEnter",dependencies:["pointerout","pointerover"]},pointerLeave:{registrationName:"onPointerLeave",
	dependencies:["pointerout","pointerover"]}},ad={eventTypes:$c,extractEvents:function(a,b,c,d){var e="mouseover"===a||"pointerover"===a,f="mouseout"===a||"pointerout"===a;if(e&&(c.relatedTarget||c.fromElement)||!f&&!e)return null;e=d.window===d?d:(e=d.ownerDocument)?e.defaultView||e.parentWindow:window;f?(f=b,b=(b=c.relatedTarget||c.toElement)?Ha(b):null):f=null;if(f===b)return null;var g=void 0,h=void 0,l=void 0,k=void 0;if("mouseout"===a||"mouseover"===a)g=Yc,h=$c.mouseLeave,l=$c.mouseEnter,k="mouse";
	else if("pointerout"===a||"pointerover"===a)g=Zc,h=$c.pointerLeave,l=$c.pointerEnter,k="pointer";var m=null==f?e:Ja(f);e=null==b?e:Ja(b);a=g.getPooled(h,f,c,d);a.type=k+"leave";a.target=m;a.relatedTarget=e;c=g.getPooled(l,b,c,d);c.type=k+"enter";c.target=e;c.relatedTarget=m;d=b;if(f&&d)a:{b=f;e=d;k=0;for(g=b;g;g=La(g))k++;g=0;for(l=e;l;l=La(l))g++;for(;0<k-g;)b=La(b),k--;for(;0<g-k;)e=La(e),g--;for(;k--;){if(b===e||b===e.alternate)break a;b=La(b);e=La(e)}b=null}else b=null;e=b;for(b=[];f&&f!==e;){k=
	f.alternate;if(null!==k&&k===e)break;b.push(f);f=La(f)}for(f=[];d&&d!==e;){k=d.alternate;if(null!==k&&k===e)break;f.push(d);d=La(d)}for(d=0;d<b.length;d++)Oa(b[d],"bubbled",a);for(d=f.length;0<d--;)Oa(f[d],"captured",c);return[a,c]}};function bd(a,b){return a===b&&(0!==a||1/a===1/b)||a!==a&&b!==b}var cd=Object.prototype.hasOwnProperty;
	function dd(a,b){if(bd(a,b))return!0;if("object"!==typeof a||null===a||"object"!==typeof b||null===b)return!1;var c=Object.keys(a),d=Object.keys(b);if(c.length!==d.length)return!1;for(d=0;d<c.length;d++)if(!cd.call(b,c[d])||!bd(a[c[d]],b[c[d]]))return!1;return!0}function ed(a){var b=a;if(a.alternate)for(;b.return;)b=b.return;else{if(0!==(b.effectTag&2))return 1;for(;b.return;)if(b=b.return,0!==(b.effectTag&2))return 1}return 3===b.tag?2:3}function fd(a){2!==ed(a)?x("188"):void 0}
	function gd(a){var b=a.alternate;if(!b)return b=ed(a),3===b?x("188"):void 0,1===b?null:a;for(var c=a,d=b;;){var e=c.return,f=e?e.alternate:null;if(!e||!f)break;if(e.child===f.child){for(var g=e.child;g;){if(g===c)return fd(e),a;if(g===d)return fd(e),b;g=g.sibling}x("188")}if(c.return!==d.return)c=e,d=f;else{g=!1;for(var h=e.child;h;){if(h===c){g=!0;c=e;d=f;break}if(h===d){g=!0;d=e;c=f;break}h=h.sibling}if(!g){for(h=f.child;h;){if(h===c){g=!0;c=f;d=e;break}if(h===d){g=!0;d=f;c=e;break}h=h.sibling}g?
	void 0:x("189")}}c.alternate!==d?x("190"):void 0}3!==c.tag?x("188"):void 0;return c.stateNode.current===c?a:b}function hd(a){a=gd(a);if(!a)return null;for(var b=a;;){if(5===b.tag||6===b.tag)return b;if(b.child)b.child.return=b,b=b.child;else{if(b===a)break;for(;!b.sibling;){if(!b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}}return null}
	var id=y.extend({animationName:null,elapsedTime:null,pseudoElement:null}),jd=y.extend({clipboardData:function(a){return"clipboardData"in a?a.clipboardData:window.clipboardData}}),kd=Qc.extend({relatedTarget:null});function ld(a){var b=a.keyCode;"charCode"in a?(a=a.charCode,0===a&&13===b&&(a=13)):a=b;10===a&&(a=13);return 32<=a||13===a?a:0}
	var md={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},nd={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",
	116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},od=Qc.extend({key:function(a){if(a.key){var b=md[a.key]||a.key;if("Unidentified"!==b)return b}return"keypress"===a.type?(a=ld(a),13===a?"Enter":String.fromCharCode(a)):"keydown"===a.type||"keyup"===a.type?nd[a.keyCode]||"Unidentified":""},location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:Tc,charCode:function(a){return"keypress"===
	a.type?ld(a):0},keyCode:function(a){return"keydown"===a.type||"keyup"===a.type?a.keyCode:0},which:function(a){return"keypress"===a.type?ld(a):"keydown"===a.type||"keyup"===a.type?a.keyCode:0}}),pd=Yc.extend({dataTransfer:null}),qd=Qc.extend({touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:Tc}),rd=y.extend({propertyName:null,elapsedTime:null,pseudoElement:null}),sd=Yc.extend({deltaX:function(a){return"deltaX"in a?a.deltaX:"wheelDeltaX"in
	a?-a.wheelDeltaX:0},deltaY:function(a){return"deltaY"in a?a.deltaY:"wheelDeltaY"in a?-a.wheelDeltaY:"wheelDelta"in a?-a.wheelDelta:0},deltaZ:null,deltaMode:null}),td=[["abort","abort"],[Xa,"animationEnd"],[Ya,"animationIteration"],[Za,"animationStart"],["canplay","canPlay"],["canplaythrough","canPlayThrough"],["drag","drag"],["dragenter","dragEnter"],["dragexit","dragExit"],["dragleave","dragLeave"],["dragover","dragOver"],["durationchange","durationChange"],["emptied","emptied"],["encrypted","encrypted"],
	["ended","ended"],["error","error"],["gotpointercapture","gotPointerCapture"],["load","load"],["loadeddata","loadedData"],["loadedmetadata","loadedMetadata"],["loadstart","loadStart"],["lostpointercapture","lostPointerCapture"],["mousemove","mouseMove"],["mouseout","mouseOut"],["mouseover","mouseOver"],["playing","playing"],["pointermove","pointerMove"],["pointerout","pointerOut"],["pointerover","pointerOver"],["progress","progress"],["scroll","scroll"],["seeking","seeking"],["stalled","stalled"],
	["suspend","suspend"],["timeupdate","timeUpdate"],["toggle","toggle"],["touchmove","touchMove"],[$a,"transitionEnd"],["waiting","waiting"],["wheel","wheel"]],ud={},vd={};function wd(a,b){var c=a[0];a=a[1];var d="on"+(a[0].toUpperCase()+a.slice(1));b={phasedRegistrationNames:{bubbled:d,captured:d+"Capture"},dependencies:[c],isInteractive:b};ud[a]=b;vd[c]=b}
	[["blur","blur"],["cancel","cancel"],["click","click"],["close","close"],["contextmenu","contextMenu"],["copy","copy"],["cut","cut"],["auxclick","auxClick"],["dblclick","doubleClick"],["dragend","dragEnd"],["dragstart","dragStart"],["drop","drop"],["focus","focus"],["input","input"],["invalid","invalid"],["keydown","keyDown"],["keypress","keyPress"],["keyup","keyUp"],["mousedown","mouseDown"],["mouseup","mouseUp"],["paste","paste"],["pause","pause"],["play","play"],["pointercancel","pointerCancel"],
	["pointerdown","pointerDown"],["pointerup","pointerUp"],["ratechange","rateChange"],["reset","reset"],["seeked","seeked"],["submit","submit"],["touchcancel","touchCancel"],["touchend","touchEnd"],["touchstart","touchStart"],["volumechange","volumeChange"]].forEach(function(a){wd(a,!0)});td.forEach(function(a){wd(a,!1)});
	var xd={eventTypes:ud,isInteractiveTopLevelEventType:function(a){a=vd[a];return void 0!==a&&!0===a.isInteractive},extractEvents:function(a,b,c,d){var e=vd[a];if(!e)return null;switch(a){case "keypress":if(0===ld(c))return null;case "keydown":case "keyup":a=od;break;case "blur":case "focus":a=kd;break;case "click":if(2===c.button)return null;case "auxclick":case "dblclick":case "mousedown":case "mousemove":case "mouseup":case "mouseout":case "mouseover":case "contextmenu":a=Yc;break;case "drag":case "dragend":case "dragenter":case "dragexit":case "dragleave":case "dragover":case "dragstart":case "drop":a=
	pd;break;case "touchcancel":case "touchend":case "touchmove":case "touchstart":a=qd;break;case Xa:case Ya:case Za:a=id;break;case $a:a=rd;break;case "scroll":a=Qc;break;case "wheel":a=sd;break;case "copy":case "cut":case "paste":a=jd;break;case "gotpointercapture":case "lostpointercapture":case "pointercancel":case "pointerdown":case "pointermove":case "pointerout":case "pointerover":case "pointerup":a=Zc;break;default:a=y}b=a.getPooled(e,b,c,d);Qa(b);return b}},yd=xd.isInteractiveTopLevelEventType,
	zd=[];function Ad(a){var b=a.targetInst,c=b;do{if(!c){a.ancestors.push(c);break}var d;for(d=c;d.return;)d=d.return;d=3!==d.tag?null:d.stateNode.containerInfo;if(!d)break;a.ancestors.push(c);c=Ha(d)}while(c);for(c=0;c<a.ancestors.length;c++){b=a.ancestors[c];var e=Nb(a.nativeEvent);d=a.topLevelType;for(var f=a.nativeEvent,g=null,h=0;h<oa.length;h++){var l=oa[h];l&&(l=l.extractEvents(d,b,f,e))&&(g=xa(g,l))}Da(g)}}var Bd=!0;
	function E(a,b){if(!b)return null;var c=(yd(a)?Cd:Dd).bind(null,a);b.addEventListener(a,c,!1)}function Ed(a,b){if(!b)return null;var c=(yd(a)?Cd:Dd).bind(null,a);b.addEventListener(a,c,!0)}function Cd(a,b){Hb(Dd,a,b)}
	function Dd(a,b){if(Bd){var c=Nb(b);c=Ha(c);null===c||"number"!==typeof c.tag||2===ed(c)||(c=null);if(zd.length){var d=zd.pop();d.topLevelType=a;d.nativeEvent=b;d.targetInst=c;a=d}else a={topLevelType:a,nativeEvent:b,targetInst:c,ancestors:[]};try{Kb(Ad,a)}finally{a.topLevelType=null,a.nativeEvent=null,a.targetInst=null,a.ancestors.length=0,10>zd.length&&zd.push(a)}}}var Fd={},Gd=0,Hd="_reactListenersID"+(""+Math.random()).slice(2);
	function Id(a){Object.prototype.hasOwnProperty.call(a,Hd)||(a[Hd]=Gd++,Fd[a[Hd]]={});return Fd[a[Hd]]}function Jd(a){a=a||("undefined"!==typeof document?document:void 0);if("undefined"===typeof a)return null;try{return a.activeElement||a.body}catch(b){return a.body}}function Kd(a){for(;a&&a.firstChild;)a=a.firstChild;return a}
	function Ld(a,b){var c=Kd(a);a=0;for(var d;c;){if(3===c.nodeType){d=a+c.textContent.length;if(a<=b&&d>=b)return{node:c,offset:b-a};a=d}a:{for(;c;){if(c.nextSibling){c=c.nextSibling;break a}c=c.parentNode}c=void 0}c=Kd(c)}}function Md(a,b){return a&&b?a===b?!0:a&&3===a.nodeType?!1:b&&3===b.nodeType?Md(a,b.parentNode):"contains"in a?a.contains(b):a.compareDocumentPosition?!!(a.compareDocumentPosition(b)&16):!1:!1}
	function Nd(){for(var a=window,b=Jd();b instanceof a.HTMLIFrameElement;){try{var c="string"===typeof b.contentWindow.location.href}catch(d){c=!1}if(c)a=b.contentWindow;else break;b=Jd(a.document)}return b}function Od(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return b&&("input"===b&&("text"===a.type||"search"===a.type||"tel"===a.type||"url"===a.type||"password"===a.type)||"textarea"===b||"true"===a.contentEditable)}
	function Pd(){var a=Nd();if(Od(a)){if("selectionStart"in a)var b={start:a.selectionStart,end:a.selectionEnd};else a:{b=(b=a.ownerDocument)&&b.defaultView||window;var c=b.getSelection&&b.getSelection();if(c&&0!==c.rangeCount){b=c.anchorNode;var d=c.anchorOffset,e=c.focusNode;c=c.focusOffset;try{b.nodeType,e.nodeType}catch(A){b=null;break a}var f=0,g=-1,h=-1,l=0,k=0,m=a,p=null;b:for(;;){for(var t;;){m!==b||0!==d&&3!==m.nodeType||(g=f+d);m!==e||0!==c&&3!==m.nodeType||(h=f+c);3===m.nodeType&&(f+=m.nodeValue.length);
	if(null===(t=m.firstChild))break;p=m;m=t}for(;;){if(m===a)break b;p===b&&++l===d&&(g=f);p===e&&++k===c&&(h=f);if(null!==(t=m.nextSibling))break;m=p;p=m.parentNode}m=t}b=-1===g||-1===h?null:{start:g,end:h}}else b=null}b=b||{start:0,end:0}}else b=null;return{focusedElem:a,selectionRange:b}}
	function Qd(a){var b=Nd(),c=a.focusedElem,d=a.selectionRange;if(b!==c&&c&&c.ownerDocument&&Md(c.ownerDocument.documentElement,c)){if(null!==d&&Od(c))if(b=d.start,a=d.end,void 0===a&&(a=b),"selectionStart"in c)c.selectionStart=b,c.selectionEnd=Math.min(a,c.value.length);else if(a=(b=c.ownerDocument||document)&&b.defaultView||window,a.getSelection){a=a.getSelection();var e=c.textContent.length,f=Math.min(d.start,e);d=void 0===d.end?f:Math.min(d.end,e);!a.extend&&f>d&&(e=d,d=f,f=e);e=Ld(c,f);var g=Ld(c,
	d);e&&g&&(1!==a.rangeCount||a.anchorNode!==e.node||a.anchorOffset!==e.offset||a.focusNode!==g.node||a.focusOffset!==g.offset)&&(b=b.createRange(),b.setStart(e.node,e.offset),a.removeAllRanges(),f>d?(a.addRange(b),a.extend(g.node,g.offset)):(b.setEnd(g.node,g.offset),a.addRange(b)))}b=[];for(a=c;a=a.parentNode;)1===a.nodeType&&b.push({element:a,left:a.scrollLeft,top:a.scrollTop});"function"===typeof c.focus&&c.focus();for(c=0;c<b.length;c++)a=b[c],a.element.scrollLeft=a.left,a.element.scrollTop=a.top}}
	var Rd=Ra&&"documentMode"in document&&11>=document.documentMode,Sd={select:{phasedRegistrationNames:{bubbled:"onSelect",captured:"onSelectCapture"},dependencies:"blur contextmenu dragend focus keydown keyup mousedown mouseup selectionchange".split(" ")}},Td=null,Ud=null,Vd=null,Wd=!1;
	function Xd(a,b){var c=b.window===b?b.document:9===b.nodeType?b:b.ownerDocument;if(Wd||null==Td||Td!==Jd(c))return null;c=Td;"selectionStart"in c&&Od(c)?c={start:c.selectionStart,end:c.selectionEnd}:(c=(c.ownerDocument&&c.ownerDocument.defaultView||window).getSelection(),c={anchorNode:c.anchorNode,anchorOffset:c.anchorOffset,focusNode:c.focusNode,focusOffset:c.focusOffset});return Vd&&dd(Vd,c)?null:(Vd=c,a=y.getPooled(Sd.select,Ud,a,b),a.type="select",a.target=Td,Qa(a),a)}
	var Yd={eventTypes:Sd,extractEvents:function(a,b,c,d){var e=d.window===d?d.document:9===d.nodeType?d:d.ownerDocument,f;if(!(f=!e)){a:{e=Id(e);f=sa.onSelect;for(var g=0;g<f.length;g++){var h=f[g];if(!e.hasOwnProperty(h)||!e[h]){e=!1;break a}}e=!0}f=!e}if(f)return null;e=b?Ja(b):window;switch(a){case "focus":if(Mb(e)||"true"===e.contentEditable)Td=e,Ud=b,Vd=null;break;case "blur":Vd=Ud=Td=null;break;case "mousedown":Wd=!0;break;case "contextmenu":case "mouseup":case "dragend":return Wd=!1,Xd(c,d);case "selectionchange":if(Rd)break;
	case "keydown":case "keyup":return Xd(c,d)}return null}};Ba.injectEventPluginOrder("ResponderEventPlugin SimpleEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin".split(" "));ta=Ka;ua=Ia;va=Ja;Ba.injectEventPluginsByName({SimpleEventPlugin:xd,EnterLeaveEventPlugin:ad,ChangeEventPlugin:Pc,SelectEventPlugin:Yd,BeforeInputEventPlugin:zb});function Zd(a){var b="";aa.Children.forEach(a,function(a){null!=a&&(b+=a)});return b}
	function $d(a,b){a=n({children:void 0},b);if(b=Zd(b.children))a.children=b;return a}function ae(a,b,c,d){a=a.options;if(b){b={};for(var e=0;e<c.length;e++)b["$"+c[e]]=!0;for(c=0;c<a.length;c++)e=b.hasOwnProperty("$"+a[c].value),a[c].selected!==e&&(a[c].selected=e),e&&d&&(a[c].defaultSelected=!0)}else{c=""+uc(c);b=null;for(e=0;e<a.length;e++){if(a[e].value===c){a[e].selected=!0;d&&(a[e].defaultSelected=!0);return}null!==b||a[e].disabled||(b=a[e])}null!==b&&(b.selected=!0)}}
	function be(a,b){null!=b.dangerouslySetInnerHTML?x("91"):void 0;return n({},b,{value:void 0,defaultValue:void 0,children:""+a._wrapperState.initialValue})}function ce(a,b){var c=b.value;null==c&&(c=b.defaultValue,b=b.children,null!=b&&(null!=c?x("92"):void 0,Array.isArray(b)&&(1>=b.length?void 0:x("93"),b=b[0]),c=b),null==c&&(c=""));a._wrapperState={initialValue:uc(c)}}
	function de(a,b){var c=uc(b.value),d=uc(b.defaultValue);null!=c&&(c=""+c,c!==a.value&&(a.value=c),null==b.defaultValue&&a.defaultValue!==c&&(a.defaultValue=c));null!=d&&(a.defaultValue=""+d)}function ee(a){var b=a.textContent;b===a._wrapperState.initialValue&&(a.value=b)}var fe={html:"http://www.w3.org/1999/xhtml",mathml:"http://www.w3.org/1998/Math/MathML",svg:"http://www.w3.org/2000/svg"};
	function ge(a){switch(a){case "svg":return"http://www.w3.org/2000/svg";case "math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function he(a,b){return null==a||"http://www.w3.org/1999/xhtml"===a?ge(b):"http://www.w3.org/2000/svg"===a&&"foreignObject"===b?"http://www.w3.org/1999/xhtml":a}
	var ie=void 0,je=function(a){return"undefined"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(b,c,d,e){MSApp.execUnsafeLocalFunction(function(){return a(b,c,d,e)})}:a}(function(a,b){if(a.namespaceURI!==fe.svg||"innerHTML"in a)a.innerHTML=b;else{ie=ie||document.createElement("div");ie.innerHTML="<svg>"+b+"</svg>";for(b=ie.firstChild;a.firstChild;)a.removeChild(a.firstChild);for(;b.firstChild;)a.appendChild(b.firstChild)}});
	function ke(a,b){if(b){var c=a.firstChild;if(c&&c===a.lastChild&&3===c.nodeType){c.nodeValue=b;return}}a.textContent=b}
	var le={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,
	floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},me=["Webkit","ms","Moz","O"];Object.keys(le).forEach(function(a){me.forEach(function(b){b=b+a.charAt(0).toUpperCase()+a.substring(1);le[b]=le[a]})});function ne(a,b,c){return null==b||"boolean"===typeof b||""===b?"":c||"number"!==typeof b||0===b||le.hasOwnProperty(a)&&le[a]?(""+b).trim():b+"px"}
	function oe(a,b){a=a.style;for(var c in b)if(b.hasOwnProperty(c)){var d=0===c.indexOf("--"),e=ne(c,b[c],d);"float"===c&&(c="cssFloat");d?a.setProperty(c,e):a[c]=e}}var pe=n({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});
	function qe(a,b){b&&(pe[a]&&(null!=b.children||null!=b.dangerouslySetInnerHTML?x("137",a,""):void 0),null!=b.dangerouslySetInnerHTML&&(null!=b.children?x("60"):void 0,"object"===typeof b.dangerouslySetInnerHTML&&"__html"in b.dangerouslySetInnerHTML?void 0:x("61")),null!=b.style&&"object"!==typeof b.style?x("62",""):void 0)}
	function re(a,b){if(-1===a.indexOf("-"))return"string"===typeof b.is;switch(a){case "annotation-xml":case "color-profile":case "font-face":case "font-face-src":case "font-face-uri":case "font-face-format":case "font-face-name":case "missing-glyph":return!1;default:return!0}}
	function se(a,b){a=9===a.nodeType||11===a.nodeType?a:a.ownerDocument;var c=Id(a);b=sa[b];for(var d=0;d<b.length;d++){var e=b[d];if(!c.hasOwnProperty(e)||!c[e]){switch(e){case "scroll":Ed("scroll",a);break;case "focus":case "blur":Ed("focus",a);Ed("blur",a);c.blur=!0;c.focus=!0;break;case "cancel":case "close":Ob(e)&&Ed(e,a);break;case "invalid":case "submit":case "reset":break;default:-1===ab.indexOf(e)&&E(e,a)}c[e]=!0}}}function te(){}var ue=null,ve=null;
	function we(a,b){switch(a){case "button":case "input":case "select":case "textarea":return!!b.autoFocus}return!1}function xe(a,b){return"textarea"===a||"option"===a||"noscript"===a||"string"===typeof b.children||"number"===typeof b.children||"object"===typeof b.dangerouslySetInnerHTML&&null!==b.dangerouslySetInnerHTML&&null!=b.dangerouslySetInnerHTML.__html}
	var ye="function"===typeof setTimeout?setTimeout:void 0,ze="function"===typeof clearTimeout?clearTimeout:void 0,Ae=r.unstable_scheduleCallback,Be=r.unstable_cancelCallback;
	function Ce(a,b,c,d,e){a[Ga]=e;"input"===c&&"radio"===e.type&&null!=e.name&&xc(a,e);re(c,d);d=re(c,e);for(var f=0;f<b.length;f+=2){var g=b[f],h=b[f+1];"style"===g?oe(a,h):"dangerouslySetInnerHTML"===g?je(a,h):"children"===g?ke(a,h):tc(a,g,h,d)}switch(c){case "input":yc(a,e);break;case "textarea":de(a,e);break;case "select":b=a._wrapperState.wasMultiple,a._wrapperState.wasMultiple=!!e.multiple,c=e.value,null!=c?ae(a,!!e.multiple,c,!1):b!==!!e.multiple&&(null!=e.defaultValue?ae(a,!!e.multiple,e.defaultValue,
	!0):ae(a,!!e.multiple,e.multiple?[]:"",!1))}}function De(a){for(a=a.nextSibling;a&&1!==a.nodeType&&3!==a.nodeType;)a=a.nextSibling;return a}function Ee(a){for(a=a.firstChild;a&&1!==a.nodeType&&3!==a.nodeType;)a=a.nextSibling;return a}new Set;var Fe=[],Ge=-1;function F(a){0>Ge||(a.current=Fe[Ge],Fe[Ge]=null,Ge--)}function G(a,b){Ge++;Fe[Ge]=a.current;a.current=b}var He={},H={current:He},I={current:!1},Ie=He;
	function Je(a,b){var c=a.type.contextTypes;if(!c)return He;var d=a.stateNode;if(d&&d.__reactInternalMemoizedUnmaskedChildContext===b)return d.__reactInternalMemoizedMaskedChildContext;var e={},f;for(f in c)e[f]=b[f];d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=b,a.__reactInternalMemoizedMaskedChildContext=e);return e}function J(a){a=a.childContextTypes;return null!==a&&void 0!==a}function Ke(a){F(I,a);F(H,a)}function Le(a){F(I,a);F(H,a)}
	function Me(a,b,c){H.current!==He?x("168"):void 0;G(H,b,a);G(I,c,a)}function Ne(a,b,c){var d=a.stateNode;a=b.childContextTypes;if("function"!==typeof d.getChildContext)return c;d=d.getChildContext();for(var e in d)e in a?void 0:x("108",ic(b)||"Unknown",e);return n({},c,d)}function Oe(a){var b=a.stateNode;b=b&&b.__reactInternalMemoizedMergedChildContext||He;Ie=H.current;G(H,b,a);G(I,I.current,a);return!0}
	function Pe(a,b,c){var d=a.stateNode;d?void 0:x("169");c?(b=Ne(a,b,Ie),d.__reactInternalMemoizedMergedChildContext=b,F(I,a),F(H,a),G(H,b,a)):F(I,a);G(I,c,a)}var Qe=null,Re=null;function Se(a){return function(b){try{return a(b)}catch(c){}}}
	function Te(a){if("undefined"===typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)return!1;var b=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(b.isDisabled||!b.supportsFiber)return!0;try{var c=b.inject(a);Qe=Se(function(a){return b.onCommitFiberRoot(c,a)});Re=Se(function(a){return b.onCommitFiberUnmount(c,a)})}catch(d){}return!0}
	function Ue(a,b,c,d){this.tag=a;this.key=c;this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null;this.index=0;this.ref=null;this.pendingProps=b;this.contextDependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null;this.mode=d;this.effectTag=0;this.lastEffect=this.firstEffect=this.nextEffect=null;this.childExpirationTime=this.expirationTime=0;this.alternate=null}function K(a,b,c,d){return new Ue(a,b,c,d)}
	function Ve(a){a=a.prototype;return!(!a||!a.isReactComponent)}function We(a){if("function"===typeof a)return Ve(a)?1:0;if(void 0!==a&&null!==a){a=a.$$typeof;if(a===cc)return 11;if(a===ec)return 14}return 2}
	function Xe(a,b){var c=a.alternate;null===c?(c=K(a.tag,b,a.key,a.mode),c.elementType=a.elementType,c.type=a.type,c.stateNode=a.stateNode,c.alternate=a,a.alternate=c):(c.pendingProps=b,c.effectTag=0,c.nextEffect=null,c.firstEffect=null,c.lastEffect=null);c.childExpirationTime=a.childExpirationTime;c.expirationTime=a.expirationTime;c.child=a.child;c.memoizedProps=a.memoizedProps;c.memoizedState=a.memoizedState;c.updateQueue=a.updateQueue;c.contextDependencies=a.contextDependencies;c.sibling=a.sibling;
	c.index=a.index;c.ref=a.ref;return c}
	function Ye(a,b,c,d,e,f){var g=2;d=a;if("function"===typeof a)Ve(a)&&(g=1);else if("string"===typeof a)g=5;else a:switch(a){case Xb:return Ze(c.children,e,f,b);case bc:return $e(c,e|3,f,b);case Yb:return $e(c,e|2,f,b);case Zb:return a=K(12,c,b,e|4),a.elementType=Zb,a.type=Zb,a.expirationTime=f,a;case dc:return a=K(13,c,b,e),a.elementType=dc,a.type=dc,a.expirationTime=f,a;default:if("object"===typeof a&&null!==a)switch(a.$$typeof){case $b:g=10;break a;case ac:g=9;break a;case cc:g=11;break a;case ec:g=
	14;break a;case fc:g=16;d=null;break a}x("130",null==a?a:typeof a,"")}b=K(g,c,b,e);b.elementType=a;b.type=d;b.expirationTime=f;return b}function Ze(a,b,c,d){a=K(7,a,d,b);a.expirationTime=c;return a}function $e(a,b,c,d){a=K(8,a,d,b);b=0===(b&1)?Yb:bc;a.elementType=b;a.type=b;a.expirationTime=c;return a}function af(a,b,c){a=K(6,a,null,b);a.expirationTime=c;return a}
	function bf(a,b,c){b=K(4,null!==a.children?a.children:[],a.key,b);b.expirationTime=c;b.stateNode={containerInfo:a.containerInfo,pendingChildren:null,implementation:a.implementation};return b}function cf(a,b){a.didError=!1;var c=a.earliestPendingTime;0===c?a.earliestPendingTime=a.latestPendingTime=b:c<b?a.earliestPendingTime=b:a.latestPendingTime>b&&(a.latestPendingTime=b);df(b,a)}
	function ef(a,b){a.didError=!1;if(0===b)a.earliestPendingTime=0,a.latestPendingTime=0,a.earliestSuspendedTime=0,a.latestSuspendedTime=0,a.latestPingedTime=0;else{b<a.latestPingedTime&&(a.latestPingedTime=0);var c=a.latestPendingTime;0!==c&&(c>b?a.earliestPendingTime=a.latestPendingTime=0:a.earliestPendingTime>b&&(a.earliestPendingTime=a.latestPendingTime));c=a.earliestSuspendedTime;0===c?cf(a,b):b<a.latestSuspendedTime?(a.earliestSuspendedTime=0,a.latestSuspendedTime=0,a.latestPingedTime=0,cf(a,b)):
	b>c&&cf(a,b)}df(0,a)}function ff(a,b){a.didError=!1;a.latestPingedTime>=b&&(a.latestPingedTime=0);var c=a.earliestPendingTime,d=a.latestPendingTime;c===b?a.earliestPendingTime=d===b?a.latestPendingTime=0:d:d===b&&(a.latestPendingTime=c);c=a.earliestSuspendedTime;d=a.latestSuspendedTime;0===c?a.earliestSuspendedTime=a.latestSuspendedTime=b:c<b?a.earliestSuspendedTime=b:d>b&&(a.latestSuspendedTime=b);df(b,a)}
	function gf(a,b){var c=a.earliestPendingTime;a=a.earliestSuspendedTime;c>b&&(b=c);a>b&&(b=a);return b}function df(a,b){var c=b.earliestSuspendedTime,d=b.latestSuspendedTime,e=b.earliestPendingTime,f=b.latestPingedTime;e=0!==e?e:f;0===e&&(0===a||d<a)&&(e=d);a=e;0!==a&&c>a&&(a=c);b.nextExpirationTimeToWorkOn=e;b.expirationTime=a}function L(a,b){if(a&&a.defaultProps){b=n({},b);a=a.defaultProps;for(var c in a)void 0===b[c]&&(b[c]=a[c])}return b}
	function hf(a){var b=a._result;switch(a._status){case 1:return b;case 2:throw b;case 0:throw b;default:a._status=0;b=a._ctor;b=b();b.then(function(b){0===a._status&&(b=b.default,a._status=1,a._result=b)},function(b){0===a._status&&(a._status=2,a._result=b)});switch(a._status){case 1:return a._result;case 2:throw a._result;}a._result=b;throw b;}}var jf=(new aa.Component).refs;
	function kf(a,b,c,d){b=a.memoizedState;c=c(d,b);c=null===c||void 0===c?b:n({},b,c);a.memoizedState=c;d=a.updateQueue;null!==d&&0===a.expirationTime&&(d.baseState=c)}
	var tf={isMounted:function(a){return(a=a._reactInternalFiber)?2===ed(a):!1},enqueueSetState:function(a,b,c){a=a._reactInternalFiber;var d=lf();d=mf(d,a);var e=nf(d);e.payload=b;void 0!==c&&null!==c&&(e.callback=c);of();pf(a,e);qf(a,d)},enqueueReplaceState:function(a,b,c){a=a._reactInternalFiber;var d=lf();d=mf(d,a);var e=nf(d);e.tag=rf;e.payload=b;void 0!==c&&null!==c&&(e.callback=c);of();pf(a,e);qf(a,d)},enqueueForceUpdate:function(a,b){a=a._reactInternalFiber;var c=lf();c=mf(c,a);var d=nf(c);d.tag=
	sf;void 0!==b&&null!==b&&(d.callback=b);of();pf(a,d);qf(a,c)}};function uf(a,b,c,d,e,f,g){a=a.stateNode;return"function"===typeof a.shouldComponentUpdate?a.shouldComponentUpdate(d,f,g):b.prototype&&b.prototype.isPureReactComponent?!dd(c,d)||!dd(e,f):!0}
	function vf(a,b,c){var d=!1,e=He;var f=b.contextType;"object"===typeof f&&null!==f?f=M(f):(e=J(b)?Ie:H.current,d=b.contextTypes,f=(d=null!==d&&void 0!==d)?Je(a,e):He);b=new b(c,f);a.memoizedState=null!==b.state&&void 0!==b.state?b.state:null;b.updater=tf;a.stateNode=b;b._reactInternalFiber=a;d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=e,a.__reactInternalMemoizedMaskedChildContext=f);return b}
	function wf(a,b,c,d){a=b.state;"function"===typeof b.componentWillReceiveProps&&b.componentWillReceiveProps(c,d);"function"===typeof b.UNSAFE_componentWillReceiveProps&&b.UNSAFE_componentWillReceiveProps(c,d);b.state!==a&&tf.enqueueReplaceState(b,b.state,null)}
	function xf(a,b,c,d){var e=a.stateNode;e.props=c;e.state=a.memoizedState;e.refs=jf;var f=b.contextType;"object"===typeof f&&null!==f?e.context=M(f):(f=J(b)?Ie:H.current,e.context=Je(a,f));f=a.updateQueue;null!==f&&(yf(a,f,c,e,d),e.state=a.memoizedState);f=b.getDerivedStateFromProps;"function"===typeof f&&(kf(a,b,f,c),e.state=a.memoizedState);"function"===typeof b.getDerivedStateFromProps||"function"===typeof e.getSnapshotBeforeUpdate||"function"!==typeof e.UNSAFE_componentWillMount&&"function"!==
	typeof e.componentWillMount||(b=e.state,"function"===typeof e.componentWillMount&&e.componentWillMount(),"function"===typeof e.UNSAFE_componentWillMount&&e.UNSAFE_componentWillMount(),b!==e.state&&tf.enqueueReplaceState(e,e.state,null),f=a.updateQueue,null!==f&&(yf(a,f,c,e,d),e.state=a.memoizedState));"function"===typeof e.componentDidMount&&(a.effectTag|=4)}var zf=Array.isArray;
	function Af(a,b,c){a=c.ref;if(null!==a&&"function"!==typeof a&&"object"!==typeof a){if(c._owner){c=c._owner;var d=void 0;c&&(1!==c.tag?x("309"):void 0,d=c.stateNode);d?void 0:x("147",a);var e=""+a;if(null!==b&&null!==b.ref&&"function"===typeof b.ref&&b.ref._stringRef===e)return b.ref;b=function(a){var b=d.refs;b===jf&&(b=d.refs={});null===a?delete b[e]:b[e]=a};b._stringRef=e;return b}"string"!==typeof a?x("284"):void 0;c._owner?void 0:x("290",a)}return a}
	function Bf(a,b){"textarea"!==a.type&&x("31","[object Object]"===Object.prototype.toString.call(b)?"object with keys {"+Object.keys(b).join(", ")+"}":b,"")}
	function Cf(a){function b(b,c){if(a){var d=b.lastEffect;null!==d?(d.nextEffect=c,b.lastEffect=c):b.firstEffect=b.lastEffect=c;c.nextEffect=null;c.effectTag=8}}function c(c,d){if(!a)return null;for(;null!==d;)b(c,d),d=d.sibling;return null}function d(a,b){for(a=new Map;null!==b;)null!==b.key?a.set(b.key,b):a.set(b.index,b),b=b.sibling;return a}function e(a,b,c){a=Xe(a,b,c);a.index=0;a.sibling=null;return a}function f(b,c,d){b.index=d;if(!a)return c;d=b.alternate;if(null!==d)return d=d.index,d<c?(b.effectTag=
	2,c):d;b.effectTag=2;return c}function g(b){a&&null===b.alternate&&(b.effectTag=2);return b}function h(a,b,c,d){if(null===b||6!==b.tag)return b=af(c,a.mode,d),b.return=a,b;b=e(b,c,d);b.return=a;return b}function l(a,b,c,d){if(null!==b&&b.elementType===c.type)return d=e(b,c.props,d),d.ref=Af(a,b,c),d.return=a,d;d=Ye(c.type,c.key,c.props,null,a.mode,d);d.ref=Af(a,b,c);d.return=a;return d}function k(a,b,c,d){if(null===b||4!==b.tag||b.stateNode.containerInfo!==c.containerInfo||b.stateNode.implementation!==
	c.implementation)return b=bf(c,a.mode,d),b.return=a,b;b=e(b,c.children||[],d);b.return=a;return b}function m(a,b,c,d,f){if(null===b||7!==b.tag)return b=Ze(c,a.mode,d,f),b.return=a,b;b=e(b,c,d);b.return=a;return b}function p(a,b,c){if("string"===typeof b||"number"===typeof b)return b=af(""+b,a.mode,c),b.return=a,b;if("object"===typeof b&&null!==b){switch(b.$$typeof){case Vb:return c=Ye(b.type,b.key,b.props,null,a.mode,c),c.ref=Af(a,null,b),c.return=a,c;case Wb:return b=bf(b,a.mode,c),b.return=a,b}if(zf(b)||
	hc(b))return b=Ze(b,a.mode,c,null),b.return=a,b;Bf(a,b)}return null}function t(a,b,c,d){var e=null!==b?b.key:null;if("string"===typeof c||"number"===typeof c)return null!==e?null:h(a,b,""+c,d);if("object"===typeof c&&null!==c){switch(c.$$typeof){case Vb:return c.key===e?c.type===Xb?m(a,b,c.props.children,d,e):l(a,b,c,d):null;case Wb:return c.key===e?k(a,b,c,d):null}if(zf(c)||hc(c))return null!==e?null:m(a,b,c,d,null);Bf(a,c)}return null}function A(a,b,c,d,e){if("string"===typeof d||"number"===typeof d)return a=
	a.get(c)||null,h(b,a,""+d,e);if("object"===typeof d&&null!==d){switch(d.$$typeof){case Vb:return a=a.get(null===d.key?c:d.key)||null,d.type===Xb?m(b,a,d.props.children,e,d.key):l(b,a,d,e);case Wb:return a=a.get(null===d.key?c:d.key)||null,k(b,a,d,e)}if(zf(d)||hc(d))return a=a.get(c)||null,m(b,a,d,e,null);Bf(b,d)}return null}function v(e,g,h,k){for(var l=null,m=null,q=g,u=g=0,B=null;null!==q&&u<h.length;u++){q.index>u?(B=q,q=null):B=q.sibling;var w=t(e,q,h[u],k);if(null===w){null===q&&(q=B);break}a&&
	q&&null===w.alternate&&b(e,q);g=f(w,g,u);null===m?l=w:m.sibling=w;m=w;q=B}if(u===h.length)return c(e,q),l;if(null===q){for(;u<h.length;u++)if(q=p(e,h[u],k))g=f(q,g,u),null===m?l=q:m.sibling=q,m=q;return l}for(q=d(e,q);u<h.length;u++)if(B=A(q,e,u,h[u],k))a&&null!==B.alternate&&q.delete(null===B.key?u:B.key),g=f(B,g,u),null===m?l=B:m.sibling=B,m=B;a&&q.forEach(function(a){return b(e,a)});return l}function R(e,g,h,k){var l=hc(h);"function"!==typeof l?x("150"):void 0;h=l.call(h);null==h?x("151"):void 0;
	for(var m=l=null,q=g,u=g=0,B=null,w=h.next();null!==q&&!w.done;u++,w=h.next()){q.index>u?(B=q,q=null):B=q.sibling;var v=t(e,q,w.value,k);if(null===v){q||(q=B);break}a&&q&&null===v.alternate&&b(e,q);g=f(v,g,u);null===m?l=v:m.sibling=v;m=v;q=B}if(w.done)return c(e,q),l;if(null===q){for(;!w.done;u++,w=h.next())w=p(e,w.value,k),null!==w&&(g=f(w,g,u),null===m?l=w:m.sibling=w,m=w);return l}for(q=d(e,q);!w.done;u++,w=h.next())w=A(q,e,u,w.value,k),null!==w&&(a&&null!==w.alternate&&q.delete(null===w.key?u:
	w.key),g=f(w,g,u),null===m?l=w:m.sibling=w,m=w);a&&q.forEach(function(a){return b(e,a)});return l}return function(a,d,f,h){var k="object"===typeof f&&null!==f&&f.type===Xb&&null===f.key;k&&(f=f.props.children);var l="object"===typeof f&&null!==f;if(l)switch(f.$$typeof){case Vb:a:{l=f.key;for(k=d;null!==k;){if(k.key===l)if(7===k.tag?f.type===Xb:k.elementType===f.type){c(a,k.sibling);d=e(k,f.type===Xb?f.props.children:f.props,h);d.ref=Af(a,k,f);d.return=a;a=d;break a}else{c(a,k);break}else b(a,k);k=
	k.sibling}f.type===Xb?(d=Ze(f.props.children,a.mode,h,f.key),d.return=a,a=d):(h=Ye(f.type,f.key,f.props,null,a.mode,h),h.ref=Af(a,d,f),h.return=a,a=h)}return g(a);case Wb:a:{for(k=f.key;null!==d;){if(d.key===k)if(4===d.tag&&d.stateNode.containerInfo===f.containerInfo&&d.stateNode.implementation===f.implementation){c(a,d.sibling);d=e(d,f.children||[],h);d.return=a;a=d;break a}else{c(a,d);break}else b(a,d);d=d.sibling}d=bf(f,a.mode,h);d.return=a;a=d}return g(a)}if("string"===typeof f||"number"===typeof f)return f=
	""+f,null!==d&&6===d.tag?(c(a,d.sibling),d=e(d,f,h),d.return=a,a=d):(c(a,d),d=af(f,a.mode,h),d.return=a,a=d),g(a);if(zf(f))return v(a,d,f,h);if(hc(f))return R(a,d,f,h);l&&Bf(a,f);if("undefined"===typeof f&&!k)switch(a.tag){case 1:case 0:h=a.type,x("152",h.displayName||h.name||"Component")}return c(a,d)}}var Df=Cf(!0),Ef=Cf(!1),Ff={},N={current:Ff},Gf={current:Ff},Hf={current:Ff};function If(a){a===Ff?x("174"):void 0;return a}
	function Jf(a,b){G(Hf,b,a);G(Gf,a,a);G(N,Ff,a);var c=b.nodeType;switch(c){case 9:case 11:b=(b=b.documentElement)?b.namespaceURI:he(null,"");break;default:c=8===c?b.parentNode:b,b=c.namespaceURI||null,c=c.tagName,b=he(b,c)}F(N,a);G(N,b,a)}function Kf(a){F(N,a);F(Gf,a);F(Hf,a)}function Lf(a){If(Hf.current);var b=If(N.current);var c=he(b,a.type);b!==c&&(G(Gf,a,a),G(N,c,a))}function Mf(a){Gf.current===a&&(F(N,a),F(Gf,a))}
	var Nf=0,Of=2,Pf=4,Qf=8,Rf=16,Sf=32,Tf=64,Uf=128,Vf=Tb.ReactCurrentDispatcher,Wf=0,Xf=null,O=null,P=null,Yf=null,Q=null,Zf=null,$f=0,ag=null,bg=0,cg=!1,dg=null,eg=0;function fg(){x("321")}function gg(a,b){if(null===b)return!1;for(var c=0;c<b.length&&c<a.length;c++)if(!bd(a[c],b[c]))return!1;return!0}
	function hg(a,b,c,d,e,f){Wf=f;Xf=b;P=null!==a?a.memoizedState:null;Vf.current=null===P?ig:jg;b=c(d,e);if(cg){do cg=!1,eg+=1,P=null!==a?a.memoizedState:null,Zf=Yf,ag=Q=O=null,Vf.current=jg,b=c(d,e);while(cg);dg=null;eg=0}Vf.current=kg;a=Xf;a.memoizedState=Yf;a.expirationTime=$f;a.updateQueue=ag;a.effectTag|=bg;a=null!==O&&null!==O.next;Wf=0;Zf=Q=Yf=P=O=Xf=null;$f=0;ag=null;bg=0;a?x("300"):void 0;return b}function lg(){Vf.current=kg;Wf=0;Zf=Q=Yf=P=O=Xf=null;$f=0;ag=null;bg=0;cg=!1;dg=null;eg=0}
	function mg(){var a={memoizedState:null,baseState:null,queue:null,baseUpdate:null,next:null};null===Q?Yf=Q=a:Q=Q.next=a;return Q}function ng(){if(null!==Zf)Q=Zf,Zf=Q.next,O=P,P=null!==O?O.next:null;else{null===P?x("310"):void 0;O=P;var a={memoizedState:O.memoizedState,baseState:O.baseState,queue:O.queue,baseUpdate:O.baseUpdate,next:null};Q=null===Q?Yf=a:Q.next=a;P=O.next}return Q}function og(a,b){return"function"===typeof b?b(a):b}
	function pg(a){var b=ng(),c=b.queue;null===c?x("311"):void 0;c.lastRenderedReducer=a;if(0<eg){var d=c.dispatch;if(null!==dg){var e=dg.get(c);if(void 0!==e){dg.delete(c);var f=b.memoizedState;do f=a(f,e.action),e=e.next;while(null!==e);bd(f,b.memoizedState)||(qg=!0);b.memoizedState=f;b.baseUpdate===c.last&&(b.baseState=f);c.lastRenderedState=f;return[f,d]}}return[b.memoizedState,d]}d=c.last;var g=b.baseUpdate;f=b.baseState;null!==g?(null!==d&&(d.next=null),d=g.next):d=null!==d?d.next:null;if(null!==
	d){var h=e=null,l=d,k=!1;do{var m=l.expirationTime;m<Wf?(k||(k=!0,h=g,e=f),m>$f&&($f=m)):f=l.eagerReducer===a?l.eagerState:a(f,l.action);g=l;l=l.next}while(null!==l&&l!==d);k||(h=g,e=f);bd(f,b.memoizedState)||(qg=!0);b.memoizedState=f;b.baseUpdate=h;b.baseState=e;c.lastRenderedState=f}return[b.memoizedState,c.dispatch]}
	function rg(a,b,c,d){a={tag:a,create:b,destroy:c,deps:d,next:null};null===ag?(ag={lastEffect:null},ag.lastEffect=a.next=a):(b=ag.lastEffect,null===b?ag.lastEffect=a.next=a:(c=b.next,b.next=a,a.next=c,ag.lastEffect=a));return a}function sg(a,b,c,d){var e=mg();bg|=a;e.memoizedState=rg(b,c,void 0,void 0===d?null:d)}
	function tg(a,b,c,d){var e=ng();d=void 0===d?null:d;var f=void 0;if(null!==O){var g=O.memoizedState;f=g.destroy;if(null!==d&&gg(d,g.deps)){rg(Nf,c,f,d);return}}bg|=a;e.memoizedState=rg(b,c,f,d)}function ug(a,b){if("function"===typeof b)return a=a(),b(a),function(){b(null)};if(null!==b&&void 0!==b)return a=a(),b.current=a,function(){b.current=null}}function vg(){}
	function wg(a,b,c){25>eg?void 0:x("301");var d=a.alternate;if(a===Xf||null!==d&&d===Xf)if(cg=!0,a={expirationTime:Wf,action:c,eagerReducer:null,eagerState:null,next:null},null===dg&&(dg=new Map),c=dg.get(b),void 0===c)dg.set(b,a);else{for(b=c;null!==b.next;)b=b.next;b.next=a}else{of();var e=lf();e=mf(e,a);var f={expirationTime:e,action:c,eagerReducer:null,eagerState:null,next:null},g=b.last;if(null===g)f.next=f;else{var h=g.next;null!==h&&(f.next=h);g.next=f}b.last=f;if(0===a.expirationTime&&(null===
	d||0===d.expirationTime)&&(d=b.lastRenderedReducer,null!==d))try{var l=b.lastRenderedState,k=d(l,c);f.eagerReducer=d;f.eagerState=k;if(bd(k,l))return}catch(m){}finally{}qf(a,e)}}
	var kg={readContext:M,useCallback:fg,useContext:fg,useEffect:fg,useImperativeHandle:fg,useLayoutEffect:fg,useMemo:fg,useReducer:fg,useRef:fg,useState:fg,useDebugValue:fg},ig={readContext:M,useCallback:function(a,b){mg().memoizedState=[a,void 0===b?null:b];return a},useContext:M,useEffect:function(a,b){return sg(516,Uf|Tf,a,b)},useImperativeHandle:function(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return sg(4,Pf|Sf,ug.bind(null,b,a),c)},useLayoutEffect:function(a,b){return sg(4,Pf|Sf,a,b)},
	useMemo:function(a,b){var c=mg();b=void 0===b?null:b;a=a();c.memoizedState=[a,b];return a},useReducer:function(a,b,c){var d=mg();b=void 0!==c?c(b):b;d.memoizedState=d.baseState=b;a=d.queue={last:null,dispatch:null,lastRenderedReducer:a,lastRenderedState:b};a=a.dispatch=wg.bind(null,Xf,a);return[d.memoizedState,a]},useRef:function(a){var b=mg();a={current:a};return b.memoizedState=a},useState:function(a){var b=mg();"function"===typeof a&&(a=a());b.memoizedState=b.baseState=a;a=b.queue={last:null,dispatch:null,
	lastRenderedReducer:og,lastRenderedState:a};a=a.dispatch=wg.bind(null,Xf,a);return[b.memoizedState,a]},useDebugValue:vg},jg={readContext:M,useCallback:function(a,b){var c=ng();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&gg(b,d[1]))return d[0];c.memoizedState=[a,b];return a},useContext:M,useEffect:function(a,b){return tg(516,Uf|Tf,a,b)},useImperativeHandle:function(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return tg(4,Pf|Sf,ug.bind(null,b,a),c)},useLayoutEffect:function(a,
	b){return tg(4,Pf|Sf,a,b)},useMemo:function(a,b){var c=ng();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&gg(b,d[1]))return d[0];a=a();c.memoizedState=[a,b];return a},useReducer:pg,useRef:function(){return ng().memoizedState},useState:function(a){return pg(og,a)},useDebugValue:vg},xg=null,yg=null,zg=!1;
	function Ag(a,b){var c=K(5,null,null,0);c.elementType="DELETED";c.type="DELETED";c.stateNode=b;c.return=a;c.effectTag=8;null!==a.lastEffect?(a.lastEffect.nextEffect=c,a.lastEffect=c):a.firstEffect=a.lastEffect=c}function Bg(a,b){switch(a.tag){case 5:var c=a.type;b=1!==b.nodeType||c.toLowerCase()!==b.nodeName.toLowerCase()?null:b;return null!==b?(a.stateNode=b,!0):!1;case 6:return b=""===a.pendingProps||3!==b.nodeType?null:b,null!==b?(a.stateNode=b,!0):!1;case 13:return!1;default:return!1}}
	function Cg(a){if(zg){var b=yg;if(b){var c=b;if(!Bg(a,b)){b=De(c);if(!b||!Bg(a,b)){a.effectTag|=2;zg=!1;xg=a;return}Ag(xg,c)}xg=a;yg=Ee(b)}else a.effectTag|=2,zg=!1,xg=a}}function Dg(a){for(a=a.return;null!==a&&5!==a.tag&&3!==a.tag&&18!==a.tag;)a=a.return;xg=a}function Eg(a){if(a!==xg)return!1;if(!zg)return Dg(a),zg=!0,!1;var b=a.type;if(5!==a.tag||"head"!==b&&"body"!==b&&!xe(b,a.memoizedProps))for(b=yg;b;)Ag(a,b),b=De(b);Dg(a);yg=xg?De(a.stateNode):null;return!0}function Fg(){yg=xg=null;zg=!1}
	var Gg=Tb.ReactCurrentOwner,qg=!1;function S(a,b,c,d){b.child=null===a?Ef(b,null,c,d):Df(b,a.child,c,d)}function Hg(a,b,c,d,e){c=c.render;var f=b.ref;Ig(b,e);d=hg(a,b,c,d,f,e);if(null!==a&&!qg)return b.updateQueue=a.updateQueue,b.effectTag&=-517,a.expirationTime<=e&&(a.expirationTime=0),Jg(a,b,e);b.effectTag|=1;S(a,b,d,e);return b.child}
	function Kg(a,b,c,d,e,f){if(null===a){var g=c.type;if("function"===typeof g&&!Ve(g)&&void 0===g.defaultProps&&null===c.compare&&void 0===c.defaultProps)return b.tag=15,b.type=g,Lg(a,b,g,d,e,f);a=Ye(c.type,null,d,null,b.mode,f);a.ref=b.ref;a.return=b;return b.child=a}g=a.child;if(e<f&&(e=g.memoizedProps,c=c.compare,c=null!==c?c:dd,c(e,d)&&a.ref===b.ref))return Jg(a,b,f);b.effectTag|=1;a=Xe(g,d,f);a.ref=b.ref;a.return=b;return b.child=a}
	function Lg(a,b,c,d,e,f){return null!==a&&dd(a.memoizedProps,d)&&a.ref===b.ref&&(qg=!1,e<f)?Jg(a,b,f):Mg(a,b,c,d,f)}function Ng(a,b){var c=b.ref;if(null===a&&null!==c||null!==a&&a.ref!==c)b.effectTag|=128}function Mg(a,b,c,d,e){var f=J(c)?Ie:H.current;f=Je(b,f);Ig(b,e);c=hg(a,b,c,d,f,e);if(null!==a&&!qg)return b.updateQueue=a.updateQueue,b.effectTag&=-517,a.expirationTime<=e&&(a.expirationTime=0),Jg(a,b,e);b.effectTag|=1;S(a,b,c,e);return b.child}
	function Og(a,b,c,d,e){if(J(c)){var f=!0;Oe(b)}else f=!1;Ig(b,e);if(null===b.stateNode)null!==a&&(a.alternate=null,b.alternate=null,b.effectTag|=2),vf(b,c,d,e),xf(b,c,d,e),d=!0;else if(null===a){var g=b.stateNode,h=b.memoizedProps;g.props=h;var l=g.context,k=c.contextType;"object"===typeof k&&null!==k?k=M(k):(k=J(c)?Ie:H.current,k=Je(b,k));var m=c.getDerivedStateFromProps,p="function"===typeof m||"function"===typeof g.getSnapshotBeforeUpdate;p||"function"!==typeof g.UNSAFE_componentWillReceiveProps&&
	"function"!==typeof g.componentWillReceiveProps||(h!==d||l!==k)&&wf(b,g,d,k);Pg=!1;var t=b.memoizedState;l=g.state=t;var A=b.updateQueue;null!==A&&(yf(b,A,d,g,e),l=b.memoizedState);h!==d||t!==l||I.current||Pg?("function"===typeof m&&(kf(b,c,m,d),l=b.memoizedState),(h=Pg||uf(b,c,h,d,t,l,k))?(p||"function"!==typeof g.UNSAFE_componentWillMount&&"function"!==typeof g.componentWillMount||("function"===typeof g.componentWillMount&&g.componentWillMount(),"function"===typeof g.UNSAFE_componentWillMount&&
	g.UNSAFE_componentWillMount()),"function"===typeof g.componentDidMount&&(b.effectTag|=4)):("function"===typeof g.componentDidMount&&(b.effectTag|=4),b.memoizedProps=d,b.memoizedState=l),g.props=d,g.state=l,g.context=k,d=h):("function"===typeof g.componentDidMount&&(b.effectTag|=4),d=!1)}else g=b.stateNode,h=b.memoizedProps,g.props=b.type===b.elementType?h:L(b.type,h),l=g.context,k=c.contextType,"object"===typeof k&&null!==k?k=M(k):(k=J(c)?Ie:H.current,k=Je(b,k)),m=c.getDerivedStateFromProps,(p="function"===
	typeof m||"function"===typeof g.getSnapshotBeforeUpdate)||"function"!==typeof g.UNSAFE_componentWillReceiveProps&&"function"!==typeof g.componentWillReceiveProps||(h!==d||l!==k)&&wf(b,g,d,k),Pg=!1,l=b.memoizedState,t=g.state=l,A=b.updateQueue,null!==A&&(yf(b,A,d,g,e),t=b.memoizedState),h!==d||l!==t||I.current||Pg?("function"===typeof m&&(kf(b,c,m,d),t=b.memoizedState),(m=Pg||uf(b,c,h,d,l,t,k))?(p||"function"!==typeof g.UNSAFE_componentWillUpdate&&"function"!==typeof g.componentWillUpdate||("function"===
	typeof g.componentWillUpdate&&g.componentWillUpdate(d,t,k),"function"===typeof g.UNSAFE_componentWillUpdate&&g.UNSAFE_componentWillUpdate(d,t,k)),"function"===typeof g.componentDidUpdate&&(b.effectTag|=4),"function"===typeof g.getSnapshotBeforeUpdate&&(b.effectTag|=256)):("function"!==typeof g.componentDidUpdate||h===a.memoizedProps&&l===a.memoizedState||(b.effectTag|=4),"function"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&l===a.memoizedState||(b.effectTag|=256),b.memoizedProps=d,b.memoizedState=
	t),g.props=d,g.state=t,g.context=k,d=m):("function"!==typeof g.componentDidUpdate||h===a.memoizedProps&&l===a.memoizedState||(b.effectTag|=4),"function"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&l===a.memoizedState||(b.effectTag|=256),d=!1);return Qg(a,b,c,d,f,e)}
	function Qg(a,b,c,d,e,f){Ng(a,b);var g=0!==(b.effectTag&64);if(!d&&!g)return e&&Pe(b,c,!1),Jg(a,b,f);d=b.stateNode;Gg.current=b;var h=g&&"function"!==typeof c.getDerivedStateFromError?null:d.render();b.effectTag|=1;null!==a&&g?(b.child=Df(b,a.child,null,f),b.child=Df(b,null,h,f)):S(a,b,h,f);b.memoizedState=d.state;e&&Pe(b,c,!0);return b.child}function Rg(a){var b=a.stateNode;b.pendingContext?Me(a,b.pendingContext,b.pendingContext!==b.context):b.context&&Me(a,b.context,!1);Jf(a,b.containerInfo)}
	function Sg(a,b,c){var d=b.mode,e=b.pendingProps,f=b.memoizedState;if(0===(b.effectTag&64)){f=null;var g=!1}else f={timedOutAt:null!==f?f.timedOutAt:0},g=!0,b.effectTag&=-65;if(null===a)if(g){var h=e.fallback;a=Ze(null,d,0,null);0===(b.mode&1)&&(a.child=null!==b.memoizedState?b.child.child:b.child);d=Ze(h,d,c,null);a.sibling=d;c=a;c.return=d.return=b}else c=d=Ef(b,null,e.children,c);else null!==a.memoizedState?(d=a.child,h=d.sibling,g?(c=e.fallback,e=Xe(d,d.pendingProps,0),0===(b.mode&1)&&(g=null!==
	b.memoizedState?b.child.child:b.child,g!==d.child&&(e.child=g)),d=e.sibling=Xe(h,c,h.expirationTime),c=e,e.childExpirationTime=0,c.return=d.return=b):c=d=Df(b,d.child,e.children,c)):(h=a.child,g?(g=e.fallback,e=Ze(null,d,0,null),e.child=h,0===(b.mode&1)&&(e.child=null!==b.memoizedState?b.child.child:b.child),d=e.sibling=Ze(g,d,c,null),d.effectTag|=2,c=e,e.childExpirationTime=0,c.return=d.return=b):d=c=Df(b,h,e.children,c)),b.stateNode=a.stateNode;b.memoizedState=f;b.child=c;return d}
	function Jg(a,b,c){null!==a&&(b.contextDependencies=a.contextDependencies);if(b.childExpirationTime<c)return null;null!==a&&b.child!==a.child?x("153"):void 0;if(null!==b.child){a=b.child;c=Xe(a,a.pendingProps,a.expirationTime);b.child=c;for(c.return=b;null!==a.sibling;)a=a.sibling,c=c.sibling=Xe(a,a.pendingProps,a.expirationTime),c.return=b;c.sibling=null}return b.child}
	function Tg(a,b,c){var d=b.expirationTime;if(null!==a)if(a.memoizedProps!==b.pendingProps||I.current)qg=!0;else{if(d<c){qg=!1;switch(b.tag){case 3:Rg(b);Fg();break;case 5:Lf(b);break;case 1:J(b.type)&&Oe(b);break;case 4:Jf(b,b.stateNode.containerInfo);break;case 10:Ug(b,b.memoizedProps.value);break;case 13:if(null!==b.memoizedState){d=b.child.childExpirationTime;if(0!==d&&d>=c)return Sg(a,b,c);b=Jg(a,b,c);return null!==b?b.sibling:null}}return Jg(a,b,c)}}else qg=!1;b.expirationTime=0;switch(b.tag){case 2:d=
	b.elementType;null!==a&&(a.alternate=null,b.alternate=null,b.effectTag|=2);a=b.pendingProps;var e=Je(b,H.current);Ig(b,c);e=hg(null,b,d,a,e,c);b.effectTag|=1;if("object"===typeof e&&null!==e&&"function"===typeof e.render&&void 0===e.$$typeof){b.tag=1;lg();if(J(d)){var f=!0;Oe(b)}else f=!1;b.memoizedState=null!==e.state&&void 0!==e.state?e.state:null;var g=d.getDerivedStateFromProps;"function"===typeof g&&kf(b,d,g,a);e.updater=tf;b.stateNode=e;e._reactInternalFiber=b;xf(b,d,a,c);b=Qg(null,b,d,!0,f,
	c)}else b.tag=0,S(null,b,e,c),b=b.child;return b;case 16:e=b.elementType;null!==a&&(a.alternate=null,b.alternate=null,b.effectTag|=2);f=b.pendingProps;a=hf(e);b.type=a;e=b.tag=We(a);f=L(a,f);g=void 0;switch(e){case 0:g=Mg(null,b,a,f,c);break;case 1:g=Og(null,b,a,f,c);break;case 11:g=Hg(null,b,a,f,c);break;case 14:g=Kg(null,b,a,L(a.type,f),d,c);break;default:x("306",a,"")}return g;case 0:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:L(d,e),Mg(a,b,d,e,c);case 1:return d=b.type,e=b.pendingProps,
	e=b.elementType===d?e:L(d,e),Og(a,b,d,e,c);case 3:Rg(b);d=b.updateQueue;null===d?x("282"):void 0;e=b.memoizedState;e=null!==e?e.element:null;yf(b,d,b.pendingProps,null,c);d=b.memoizedState.element;if(d===e)Fg(),b=Jg(a,b,c);else{e=b.stateNode;if(e=(null===a||null===a.child)&&e.hydrate)yg=Ee(b.stateNode.containerInfo),xg=b,e=zg=!0;e?(b.effectTag|=2,b.child=Ef(b,null,d,c)):(S(a,b,d,c),Fg());b=b.child}return b;case 5:return Lf(b),null===a&&Cg(b),d=b.type,e=b.pendingProps,f=null!==a?a.memoizedProps:null,
	g=e.children,xe(d,e)?g=null:null!==f&&xe(d,f)&&(b.effectTag|=16),Ng(a,b),1!==c&&b.mode&1&&e.hidden?(b.expirationTime=b.childExpirationTime=1,b=null):(S(a,b,g,c),b=b.child),b;case 6:return null===a&&Cg(b),null;case 13:return Sg(a,b,c);case 4:return Jf(b,b.stateNode.containerInfo),d=b.pendingProps,null===a?b.child=Df(b,null,d,c):S(a,b,d,c),b.child;case 11:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:L(d,e),Hg(a,b,d,e,c);case 7:return S(a,b,b.pendingProps,c),b.child;case 8:return S(a,b,b.pendingProps.children,
	c),b.child;case 12:return S(a,b,b.pendingProps.children,c),b.child;case 10:a:{d=b.type._context;e=b.pendingProps;g=b.memoizedProps;f=e.value;Ug(b,f);if(null!==g){var h=g.value;f=bd(h,f)?0:("function"===typeof d._calculateChangedBits?d._calculateChangedBits(h,f):1073741823)|0;if(0===f){if(g.children===e.children&&!I.current){b=Jg(a,b,c);break a}}else for(h=b.child,null!==h&&(h.return=b);null!==h;){var l=h.contextDependencies;if(null!==l){g=h.child;for(var k=l.first;null!==k;){if(k.context===d&&0!==
	(k.observedBits&f)){1===h.tag&&(k=nf(c),k.tag=sf,pf(h,k));h.expirationTime<c&&(h.expirationTime=c);k=h.alternate;null!==k&&k.expirationTime<c&&(k.expirationTime=c);k=c;for(var m=h.return;null!==m;){var p=m.alternate;if(m.childExpirationTime<k)m.childExpirationTime=k,null!==p&&p.childExpirationTime<k&&(p.childExpirationTime=k);else if(null!==p&&p.childExpirationTime<k)p.childExpirationTime=k;else break;m=m.return}l.expirationTime<c&&(l.expirationTime=c);break}k=k.next}}else g=10===h.tag?h.type===b.type?
	null:h.child:h.child;if(null!==g)g.return=h;else for(g=h;null!==g;){if(g===b){g=null;break}h=g.sibling;if(null!==h){h.return=g.return;g=h;break}g=g.return}h=g}}S(a,b,e.children,c);b=b.child}return b;case 9:return e=b.type,f=b.pendingProps,d=f.children,Ig(b,c),e=M(e,f.unstable_observedBits),d=d(e),b.effectTag|=1,S(a,b,d,c),b.child;case 14:return e=b.type,f=L(e,b.pendingProps),f=L(e.type,f),Kg(a,b,e,f,d,c);case 15:return Lg(a,b,b.type,b.pendingProps,d,c);case 17:return d=b.type,e=b.pendingProps,e=b.elementType===
	d?e:L(d,e),null!==a&&(a.alternate=null,b.alternate=null,b.effectTag|=2),b.tag=1,J(d)?(a=!0,Oe(b)):a=!1,Ig(b,c),vf(b,d,e,c),xf(b,d,e,c),Qg(null,b,d,!0,a,c)}x("156")}var Vg={current:null},Wg=null,Xg=null,Yg=null;function Ug(a,b){var c=a.type._context;G(Vg,c._currentValue,a);c._currentValue=b}function Zg(a){var b=Vg.current;F(Vg,a);a.type._context._currentValue=b}function Ig(a,b){Wg=a;Yg=Xg=null;var c=a.contextDependencies;null!==c&&c.expirationTime>=b&&(qg=!0);a.contextDependencies=null}
	function M(a,b){if(Yg!==a&&!1!==b&&0!==b){if("number"!==typeof b||1073741823===b)Yg=a,b=1073741823;b={context:a,observedBits:b,next:null};null===Xg?(null===Wg?x("308"):void 0,Xg=b,Wg.contextDependencies={first:b,expirationTime:0}):Xg=Xg.next=b}return a._currentValue}var $g=0,rf=1,sf=2,ah=3,Pg=!1;function bh(a){return{baseState:a,firstUpdate:null,lastUpdate:null,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}
	function ch(a){return{baseState:a.baseState,firstUpdate:a.firstUpdate,lastUpdate:a.lastUpdate,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}function nf(a){return{expirationTime:a,tag:$g,payload:null,callback:null,next:null,nextEffect:null}}function dh(a,b){null===a.lastUpdate?a.firstUpdate=a.lastUpdate=b:(a.lastUpdate.next=b,a.lastUpdate=b)}
	function pf(a,b){var c=a.alternate;if(null===c){var d=a.updateQueue;var e=null;null===d&&(d=a.updateQueue=bh(a.memoizedState))}else d=a.updateQueue,e=c.updateQueue,null===d?null===e?(d=a.updateQueue=bh(a.memoizedState),e=c.updateQueue=bh(c.memoizedState)):d=a.updateQueue=ch(e):null===e&&(e=c.updateQueue=ch(d));null===e||d===e?dh(d,b):null===d.lastUpdate||null===e.lastUpdate?(dh(d,b),dh(e,b)):(dh(d,b),e.lastUpdate=b)}
	function eh(a,b){var c=a.updateQueue;c=null===c?a.updateQueue=bh(a.memoizedState):fh(a,c);null===c.lastCapturedUpdate?c.firstCapturedUpdate=c.lastCapturedUpdate=b:(c.lastCapturedUpdate.next=b,c.lastCapturedUpdate=b)}function fh(a,b){var c=a.alternate;null!==c&&b===c.updateQueue&&(b=a.updateQueue=ch(b));return b}
	function gh(a,b,c,d,e,f){switch(c.tag){case rf:return a=c.payload,"function"===typeof a?a.call(f,d,e):a;case ah:a.effectTag=a.effectTag&-2049|64;case $g:a=c.payload;e="function"===typeof a?a.call(f,d,e):a;if(null===e||void 0===e)break;return n({},d,e);case sf:Pg=!0}return d}
	function yf(a,b,c,d,e){Pg=!1;b=fh(a,b);for(var f=b.baseState,g=null,h=0,l=b.firstUpdate,k=f;null!==l;){var m=l.expirationTime;m<e?(null===g&&(g=l,f=k),h<m&&(h=m)):(k=gh(a,b,l,k,c,d),null!==l.callback&&(a.effectTag|=32,l.nextEffect=null,null===b.lastEffect?b.firstEffect=b.lastEffect=l:(b.lastEffect.nextEffect=l,b.lastEffect=l)));l=l.next}m=null;for(l=b.firstCapturedUpdate;null!==l;){var p=l.expirationTime;p<e?(null===m&&(m=l,null===g&&(f=k)),h<p&&(h=p)):(k=gh(a,b,l,k,c,d),null!==l.callback&&(a.effectTag|=
	32,l.nextEffect=null,null===b.lastCapturedEffect?b.firstCapturedEffect=b.lastCapturedEffect=l:(b.lastCapturedEffect.nextEffect=l,b.lastCapturedEffect=l)));l=l.next}null===g&&(b.lastUpdate=null);null===m?b.lastCapturedUpdate=null:a.effectTag|=32;null===g&&null===m&&(f=k);b.baseState=f;b.firstUpdate=g;b.firstCapturedUpdate=m;a.expirationTime=h;a.memoizedState=k}
	function hh(a,b,c){null!==b.firstCapturedUpdate&&(null!==b.lastUpdate&&(b.lastUpdate.next=b.firstCapturedUpdate,b.lastUpdate=b.lastCapturedUpdate),b.firstCapturedUpdate=b.lastCapturedUpdate=null);ih(b.firstEffect,c);b.firstEffect=b.lastEffect=null;ih(b.firstCapturedEffect,c);b.firstCapturedEffect=b.lastCapturedEffect=null}function ih(a,b){for(;null!==a;){var c=a.callback;if(null!==c){a.callback=null;var d=b;"function"!==typeof c?x("191",c):void 0;c.call(d)}a=a.nextEffect}}
	function jh(a,b){return{value:a,source:b,stack:jc(b)}}function kh(a){a.effectTag|=4}var lh=void 0,mh=void 0,nh=void 0,oh=void 0;lh=function(a,b){for(var c=b.child;null!==c;){if(5===c.tag||6===c.tag)a.appendChild(c.stateNode);else if(4!==c.tag&&null!==c.child){c.child.return=c;c=c.child;continue}if(c===b)break;for(;null===c.sibling;){if(null===c.return||c.return===b)return;c=c.return}c.sibling.return=c.return;c=c.sibling}};mh=function(){};
	nh=function(a,b,c,d,e){var f=a.memoizedProps;if(f!==d){var g=b.stateNode;If(N.current);a=null;switch(c){case "input":f=vc(g,f);d=vc(g,d);a=[];break;case "option":f=$d(g,f);d=$d(g,d);a=[];break;case "select":f=n({},f,{value:void 0});d=n({},d,{value:void 0});a=[];break;case "textarea":f=be(g,f);d=be(g,d);a=[];break;default:"function"!==typeof f.onClick&&"function"===typeof d.onClick&&(g.onclick=te)}qe(c,d);g=c=void 0;var h=null;for(c in f)if(!d.hasOwnProperty(c)&&f.hasOwnProperty(c)&&null!=f[c])if("style"===
	c){var l=f[c];for(g in l)l.hasOwnProperty(g)&&(h||(h={}),h[g]="")}else"dangerouslySetInnerHTML"!==c&&"children"!==c&&"suppressContentEditableWarning"!==c&&"suppressHydrationWarning"!==c&&"autoFocus"!==c&&(ra.hasOwnProperty(c)?a||(a=[]):(a=a||[]).push(c,null));for(c in d){var k=d[c];l=null!=f?f[c]:void 0;if(d.hasOwnProperty(c)&&k!==l&&(null!=k||null!=l))if("style"===c)if(l){for(g in l)!l.hasOwnProperty(g)||k&&k.hasOwnProperty(g)||(h||(h={}),h[g]="");for(g in k)k.hasOwnProperty(g)&&l[g]!==k[g]&&(h||
	(h={}),h[g]=k[g])}else h||(a||(a=[]),a.push(c,h)),h=k;else"dangerouslySetInnerHTML"===c?(k=k?k.__html:void 0,l=l?l.__html:void 0,null!=k&&l!==k&&(a=a||[]).push(c,""+k)):"children"===c?l===k||"string"!==typeof k&&"number"!==typeof k||(a=a||[]).push(c,""+k):"suppressContentEditableWarning"!==c&&"suppressHydrationWarning"!==c&&(ra.hasOwnProperty(c)?(null!=k&&se(e,c),a||l===k||(a=[])):(a=a||[]).push(c,k))}h&&(a=a||[]).push("style",h);e=a;(b.updateQueue=e)&&kh(b)}};oh=function(a,b,c,d){c!==d&&kh(b)};
	var ph="function"===typeof WeakSet?WeakSet:Set;function qh(a,b){var c=b.source,d=b.stack;null===d&&null!==c&&(d=jc(c));null!==c&&ic(c.type);b=b.value;null!==a&&1===a.tag&&ic(a.type);try{console.error(b)}catch(e){setTimeout(function(){throw e;})}}function rh(a){var b=a.ref;if(null!==b)if("function"===typeof b)try{b(null)}catch(c){sh(a,c)}else b.current=null}
	function th(a,b,c){c=c.updateQueue;c=null!==c?c.lastEffect:null;if(null!==c){var d=c=c.next;do{if((d.tag&a)!==Nf){var e=d.destroy;d.destroy=void 0;void 0!==e&&e()}(d.tag&b)!==Nf&&(e=d.create,d.destroy=e());d=d.next}while(d!==c)}}
	function uh(a,b){for(var c=a;;){if(5===c.tag){var d=c.stateNode;if(b)d.style.display="none";else{d=c.stateNode;var e=c.memoizedProps.style;e=void 0!==e&&null!==e&&e.hasOwnProperty("display")?e.display:null;d.style.display=ne("display",e)}}else if(6===c.tag)c.stateNode.nodeValue=b?"":c.memoizedProps;else if(13===c.tag&&null!==c.memoizedState){d=c.child.sibling;d.return=c;c=d;continue}else if(null!==c.child){c.child.return=c;c=c.child;continue}if(c===a)break;for(;null===c.sibling;){if(null===c.return||
	c.return===a)return;c=c.return}c.sibling.return=c.return;c=c.sibling}}
	function vh(a){"function"===typeof Re&&Re(a);switch(a.tag){case 0:case 11:case 14:case 15:var b=a.updateQueue;if(null!==b&&(b=b.lastEffect,null!==b)){var c=b=b.next;do{var d=c.destroy;if(void 0!==d){var e=a;try{d()}catch(f){sh(e,f)}}c=c.next}while(c!==b)}break;case 1:rh(a);b=a.stateNode;if("function"===typeof b.componentWillUnmount)try{b.props=a.memoizedProps,b.state=a.memoizedState,b.componentWillUnmount()}catch(f){sh(a,f)}break;case 5:rh(a);break;case 4:wh(a)}}
	function xh(a){return 5===a.tag||3===a.tag||4===a.tag}
	function yh(a){a:{for(var b=a.return;null!==b;){if(xh(b)){var c=b;break a}b=b.return}x("160");c=void 0}var d=b=void 0;switch(c.tag){case 5:b=c.stateNode;d=!1;break;case 3:b=c.stateNode.containerInfo;d=!0;break;case 4:b=c.stateNode.containerInfo;d=!0;break;default:x("161")}c.effectTag&16&&(ke(b,""),c.effectTag&=-17);a:b:for(c=a;;){for(;null===c.sibling;){if(null===c.return||xh(c.return)){c=null;break a}c=c.return}c.sibling.return=c.return;for(c=c.sibling;5!==c.tag&&6!==c.tag&&18!==c.tag;){if(c.effectTag&
	2)continue b;if(null===c.child||4===c.tag)continue b;else c.child.return=c,c=c.child}if(!(c.effectTag&2)){c=c.stateNode;break a}}for(var e=a;;){if(5===e.tag||6===e.tag)if(c)if(d){var f=b,g=e.stateNode,h=c;8===f.nodeType?f.parentNode.insertBefore(g,h):f.insertBefore(g,h)}else b.insertBefore(e.stateNode,c);else d?(g=b,h=e.stateNode,8===g.nodeType?(f=g.parentNode,f.insertBefore(h,g)):(f=g,f.appendChild(h)),g=g._reactRootContainer,null!==g&&void 0!==g||null!==f.onclick||(f.onclick=te)):b.appendChild(e.stateNode);
	else if(4!==e.tag&&null!==e.child){e.child.return=e;e=e.child;continue}if(e===a)break;for(;null===e.sibling;){if(null===e.return||e.return===a)return;e=e.return}e.sibling.return=e.return;e=e.sibling}}
	function wh(a){for(var b=a,c=!1,d=void 0,e=void 0;;){if(!c){c=b.return;a:for(;;){null===c?x("160"):void 0;switch(c.tag){case 5:d=c.stateNode;e=!1;break a;case 3:d=c.stateNode.containerInfo;e=!0;break a;case 4:d=c.stateNode.containerInfo;e=!0;break a}c=c.return}c=!0}if(5===b.tag||6===b.tag){a:for(var f=b,g=f;;)if(vh(g),null!==g.child&&4!==g.tag)g.child.return=g,g=g.child;else{if(g===f)break;for(;null===g.sibling;){if(null===g.return||g.return===f)break a;g=g.return}g.sibling.return=g.return;g=g.sibling}e?
	(f=d,g=b.stateNode,8===f.nodeType?f.parentNode.removeChild(g):f.removeChild(g)):d.removeChild(b.stateNode)}else if(4===b.tag){if(null!==b.child){d=b.stateNode.containerInfo;e=!0;b.child.return=b;b=b.child;continue}}else if(vh(b),null!==b.child){b.child.return=b;b=b.child;continue}if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return;b=b.return;4===b.tag&&(c=!1)}b.sibling.return=b.return;b=b.sibling}}
	function zh(a,b){switch(b.tag){case 0:case 11:case 14:case 15:th(Pf,Qf,b);break;case 1:break;case 5:var c=b.stateNode;if(null!=c){var d=b.memoizedProps;a=null!==a?a.memoizedProps:d;var e=b.type,f=b.updateQueue;b.updateQueue=null;null!==f&&Ce(c,f,e,a,d,b)}break;case 6:null===b.stateNode?x("162"):void 0;b.stateNode.nodeValue=b.memoizedProps;break;case 3:break;case 12:break;case 13:c=b.memoizedState;d=void 0;a=b;null===c?d=!1:(d=!0,a=b.child,0===c.timedOutAt&&(c.timedOutAt=lf()));null!==a&&uh(a,d);c=
	b.updateQueue;if(null!==c){b.updateQueue=null;var g=b.stateNode;null===g&&(g=b.stateNode=new ph);c.forEach(function(a){var c=Ah.bind(null,b,a);g.has(a)||(g.add(a),a.then(c,c))})}break;case 17:break;default:x("163")}}var Bh="function"===typeof WeakMap?WeakMap:Map;function Ch(a,b,c){c=nf(c);c.tag=ah;c.payload={element:null};var d=b.value;c.callback=function(){Dh(d);qh(a,b)};return c}
	function Eh(a,b,c){c=nf(c);c.tag=ah;var d=a.type.getDerivedStateFromError;if("function"===typeof d){var e=b.value;c.payload=function(){return d(e)}}var f=a.stateNode;null!==f&&"function"===typeof f.componentDidCatch&&(c.callback=function(){"function"!==typeof d&&(null===Fh?Fh=new Set([this]):Fh.add(this));var c=b.value,e=b.stack;qh(a,b);this.componentDidCatch(c,{componentStack:null!==e?e:""})});return c}
	function Gh(a){switch(a.tag){case 1:J(a.type)&&Ke(a);var b=a.effectTag;return b&2048?(a.effectTag=b&-2049|64,a):null;case 3:return Kf(a),Le(a),b=a.effectTag,0!==(b&64)?x("285"):void 0,a.effectTag=b&-2049|64,a;case 5:return Mf(a),null;case 13:return b=a.effectTag,b&2048?(a.effectTag=b&-2049|64,a):null;case 18:return null;case 4:return Kf(a),null;case 10:return Zg(a),null;default:return null}}
	var Hh=Tb.ReactCurrentDispatcher,Ih=Tb.ReactCurrentOwner,Jh=1073741822,Kh=!1,T=null,Lh=null,U=0,Mh=-1,Nh=!1,V=null,Oh=!1,Ph=null,Qh=null,Rh=null,Fh=null;function Sh(){if(null!==T)for(var a=T.return;null!==a;){var b=a;switch(b.tag){case 1:var c=b.type.childContextTypes;null!==c&&void 0!==c&&Ke(b);break;case 3:Kf(b);Le(b);break;case 5:Mf(b);break;case 4:Kf(b);break;case 10:Zg(b)}a=a.return}Lh=null;U=0;Mh=-1;Nh=!1;T=null}
	function Th(){for(;null!==V;){var a=V.effectTag;a&16&&ke(V.stateNode,"");if(a&128){var b=V.alternate;null!==b&&(b=b.ref,null!==b&&("function"===typeof b?b(null):b.current=null))}switch(a&14){case 2:yh(V);V.effectTag&=-3;break;case 6:yh(V);V.effectTag&=-3;zh(V.alternate,V);break;case 4:zh(V.alternate,V);break;case 8:a=V,wh(a),a.return=null,a.child=null,a.memoizedState=null,a.updateQueue=null,a=a.alternate,null!==a&&(a.return=null,a.child=null,a.memoizedState=null,a.updateQueue=null)}V=V.nextEffect}}
	function Uh(){for(;null!==V;){if(V.effectTag&256)a:{var a=V.alternate,b=V;switch(b.tag){case 0:case 11:case 15:th(Of,Nf,b);break a;case 1:if(b.effectTag&256&&null!==a){var c=a.memoizedProps,d=a.memoizedState;a=b.stateNode;b=a.getSnapshotBeforeUpdate(b.elementType===b.type?c:L(b.type,c),d);a.__reactInternalSnapshotBeforeUpdate=b}break a;case 3:case 5:case 6:case 4:case 17:break a;default:x("163")}}V=V.nextEffect}}
	function Vh(a,b){for(;null!==V;){var c=V.effectTag;if(c&36){var d=V.alternate,e=V,f=b;switch(e.tag){case 0:case 11:case 15:th(Rf,Sf,e);break;case 1:var g=e.stateNode;if(e.effectTag&4)if(null===d)g.componentDidMount();else{var h=e.elementType===e.type?d.memoizedProps:L(e.type,d.memoizedProps);g.componentDidUpdate(h,d.memoizedState,g.__reactInternalSnapshotBeforeUpdate)}d=e.updateQueue;null!==d&&hh(e,d,g,f);break;case 3:d=e.updateQueue;if(null!==d){g=null;if(null!==e.child)switch(e.child.tag){case 5:g=
	e.child.stateNode;break;case 1:g=e.child.stateNode}hh(e,d,g,f)}break;case 5:f=e.stateNode;null===d&&e.effectTag&4&&we(e.type,e.memoizedProps)&&f.focus();break;case 6:break;case 4:break;case 12:break;case 13:break;case 17:break;default:x("163")}}c&128&&(e=V.ref,null!==e&&(f=V.stateNode,"function"===typeof e?e(f):e.current=f));c&512&&(Ph=a);V=V.nextEffect}}
	function Wh(a,b){Rh=Qh=Ph=null;var c=W;W=!0;do{if(b.effectTag&512){var d=!1,e=void 0;try{var f=b;th(Uf,Nf,f);th(Nf,Tf,f)}catch(g){d=!0,e=g}d&&sh(b,e)}b=b.nextEffect}while(null!==b);W=c;c=a.expirationTime;0!==c&&Xh(a,c);X||W||Yh(1073741823,!1)}function of(){null!==Qh&&Be(Qh);null!==Rh&&Rh()}
	function Zh(a,b){Oh=Kh=!0;a.current===b?x("177"):void 0;var c=a.pendingCommitExpirationTime;0===c?x("261"):void 0;a.pendingCommitExpirationTime=0;var d=b.expirationTime,e=b.childExpirationTime;ef(a,e>d?e:d);Ih.current=null;d=void 0;1<b.effectTag?null!==b.lastEffect?(b.lastEffect.nextEffect=b,d=b.firstEffect):d=b:d=b.firstEffect;ue=Bd;ve=Pd();Bd=!1;for(V=d;null!==V;){e=!1;var f=void 0;try{Uh()}catch(h){e=!0,f=h}e&&(null===V?x("178"):void 0,sh(V,f),null!==V&&(V=V.nextEffect))}for(V=d;null!==V;){e=!1;
	f=void 0;try{Th()}catch(h){e=!0,f=h}e&&(null===V?x("178"):void 0,sh(V,f),null!==V&&(V=V.nextEffect))}Qd(ve);ve=null;Bd=!!ue;ue=null;a.current=b;for(V=d;null!==V;){e=!1;f=void 0;try{Vh(a,c)}catch(h){e=!0,f=h}e&&(null===V?x("178"):void 0,sh(V,f),null!==V&&(V=V.nextEffect))}if(null!==d&&null!==Ph){var g=Wh.bind(null,a,d);Qh=r.unstable_runWithPriority(r.unstable_NormalPriority,function(){return Ae(g)});Rh=g}Kh=Oh=!1;"function"===typeof Qe&&Qe(b.stateNode);c=b.expirationTime;b=b.childExpirationTime;b=
	b>c?b:c;0===b&&(Fh=null);$h(a,b)}
	function ai(a){for(;;){var b=a.alternate,c=a.return,d=a.sibling;if(0===(a.effectTag&1024)){T=a;a:{var e=b;b=a;var f=U;var g=b.pendingProps;switch(b.tag){case 2:break;case 16:break;case 15:case 0:break;case 1:J(b.type)&&Ke(b);break;case 3:Kf(b);Le(b);g=b.stateNode;g.pendingContext&&(g.context=g.pendingContext,g.pendingContext=null);if(null===e||null===e.child)Eg(b),b.effectTag&=-3;mh(b);break;case 5:Mf(b);var h=If(Hf.current);f=b.type;if(null!==e&&null!=b.stateNode)nh(e,b,f,g,h),e.ref!==b.ref&&(b.effectTag|=
	128);else if(g){var l=If(N.current);if(Eg(b)){g=b;e=g.stateNode;var k=g.type,m=g.memoizedProps,p=h;e[Fa]=g;e[Ga]=m;f=void 0;h=k;switch(h){case "iframe":case "object":E("load",e);break;case "video":case "audio":for(k=0;k<ab.length;k++)E(ab[k],e);break;case "source":E("error",e);break;case "img":case "image":case "link":E("error",e);E("load",e);break;case "form":E("reset",e);E("submit",e);break;case "details":E("toggle",e);break;case "input":wc(e,m);E("invalid",e);se(p,"onChange");break;case "select":e._wrapperState=
	{wasMultiple:!!m.multiple};E("invalid",e);se(p,"onChange");break;case "textarea":ce(e,m),E("invalid",e),se(p,"onChange")}qe(h,m);k=null;for(f in m)m.hasOwnProperty(f)&&(l=m[f],"children"===f?"string"===typeof l?e.textContent!==l&&(k=["children",l]):"number"===typeof l&&e.textContent!==""+l&&(k=["children",""+l]):ra.hasOwnProperty(f)&&null!=l&&se(p,f));switch(h){case "input":Rb(e);Ac(e,m,!0);break;case "textarea":Rb(e);ee(e,m);break;case "select":case "option":break;default:"function"===typeof m.onClick&&
	(e.onclick=te)}f=k;g.updateQueue=f;g=null!==f?!0:!1;g&&kh(b)}else{m=b;p=f;e=g;k=9===h.nodeType?h:h.ownerDocument;l===fe.html&&(l=ge(p));l===fe.html?"script"===p?(e=k.createElement("div"),e.innerHTML="<script>\x3c/script>",k=e.removeChild(e.firstChild)):"string"===typeof e.is?k=k.createElement(p,{is:e.is}):(k=k.createElement(p),"select"===p&&(p=k,e.multiple?p.multiple=!0:e.size&&(p.size=e.size))):k=k.createElementNS(l,p);e=k;e[Fa]=m;e[Ga]=g;lh(e,b,!1,!1);p=e;k=f;m=g;var t=h,A=re(k,m);switch(k){case "iframe":case "object":E("load",
	p);h=m;break;case "video":case "audio":for(h=0;h<ab.length;h++)E(ab[h],p);h=m;break;case "source":E("error",p);h=m;break;case "img":case "image":case "link":E("error",p);E("load",p);h=m;break;case "form":E("reset",p);E("submit",p);h=m;break;case "details":E("toggle",p);h=m;break;case "input":wc(p,m);h=vc(p,m);E("invalid",p);se(t,"onChange");break;case "option":h=$d(p,m);break;case "select":p._wrapperState={wasMultiple:!!m.multiple};h=n({},m,{value:void 0});E("invalid",p);se(t,"onChange");break;case "textarea":ce(p,
	m);h=be(p,m);E("invalid",p);se(t,"onChange");break;default:h=m}qe(k,h);l=void 0;var v=k,R=p,u=h;for(l in u)if(u.hasOwnProperty(l)){var q=u[l];"style"===l?oe(R,q):"dangerouslySetInnerHTML"===l?(q=q?q.__html:void 0,null!=q&&je(R,q)):"children"===l?"string"===typeof q?("textarea"!==v||""!==q)&&ke(R,q):"number"===typeof q&&ke(R,""+q):"suppressContentEditableWarning"!==l&&"suppressHydrationWarning"!==l&&"autoFocus"!==l&&(ra.hasOwnProperty(l)?null!=q&&se(t,l):null!=q&&tc(R,l,q,A))}switch(k){case "input":Rb(p);
	Ac(p,m,!1);break;case "textarea":Rb(p);ee(p,m);break;case "option":null!=m.value&&p.setAttribute("value",""+uc(m.value));break;case "select":h=p;h.multiple=!!m.multiple;p=m.value;null!=p?ae(h,!!m.multiple,p,!1):null!=m.defaultValue&&ae(h,!!m.multiple,m.defaultValue,!0);break;default:"function"===typeof h.onClick&&(p.onclick=te)}(g=we(f,g))&&kh(b);b.stateNode=e}null!==b.ref&&(b.effectTag|=128)}else null===b.stateNode?x("166"):void 0;break;case 6:e&&null!=b.stateNode?oh(e,b,e.memoizedProps,g):("string"!==
	typeof g&&(null===b.stateNode?x("166"):void 0),e=If(Hf.current),If(N.current),Eg(b)?(g=b,f=g.stateNode,e=g.memoizedProps,f[Fa]=g,(g=f.nodeValue!==e)&&kh(b)):(f=b,g=(9===e.nodeType?e:e.ownerDocument).createTextNode(g),g[Fa]=b,f.stateNode=g));break;case 11:break;case 13:g=b.memoizedState;if(0!==(b.effectTag&64)){b.expirationTime=f;T=b;break a}g=null!==g;f=null!==e&&null!==e.memoizedState;null!==e&&!g&&f&&(e=e.child.sibling,null!==e&&(h=b.firstEffect,null!==h?(b.firstEffect=e,e.nextEffect=h):(b.firstEffect=
	b.lastEffect=e,e.nextEffect=null),e.effectTag=8));if(g||f)b.effectTag|=4;break;case 7:break;case 8:break;case 12:break;case 4:Kf(b);mh(b);break;case 10:Zg(b);break;case 9:break;case 14:break;case 17:J(b.type)&&Ke(b);break;case 18:break;default:x("156")}T=null}b=a;if(1===U||1!==b.childExpirationTime){g=0;for(f=b.child;null!==f;)e=f.expirationTime,h=f.childExpirationTime,e>g&&(g=e),h>g&&(g=h),f=f.sibling;b.childExpirationTime=g}if(null!==T)return T;null!==c&&0===(c.effectTag&1024)&&(null===c.firstEffect&&
	(c.firstEffect=a.firstEffect),null!==a.lastEffect&&(null!==c.lastEffect&&(c.lastEffect.nextEffect=a.firstEffect),c.lastEffect=a.lastEffect),1<a.effectTag&&(null!==c.lastEffect?c.lastEffect.nextEffect=a:c.firstEffect=a,c.lastEffect=a))}else{a=Gh(a,U);if(null!==a)return a.effectTag&=1023,a;null!==c&&(c.firstEffect=c.lastEffect=null,c.effectTag|=1024)}if(null!==d)return d;if(null!==c)a=c;else break}return null}
	function bi(a){var b=Tg(a.alternate,a,U);a.memoizedProps=a.pendingProps;null===b&&(b=ai(a));Ih.current=null;return b}
	function ci(a,b){Kh?x("243"):void 0;of();Kh=!0;var c=Hh.current;Hh.current=kg;var d=a.nextExpirationTimeToWorkOn;if(d!==U||a!==Lh||null===T)Sh(),Lh=a,U=d,T=Xe(Lh.current,null,U),a.pendingCommitExpirationTime=0;var e=!1;do{try{if(b)for(;null!==T&&!di();)T=bi(T);else for(;null!==T;)T=bi(T)}catch(u){if(Yg=Xg=Wg=null,lg(),null===T)e=!0,Dh(u);else{null===T?x("271"):void 0;var f=T,g=f.return;if(null===g)e=!0,Dh(u);else{a:{var h=a,l=g,k=f,m=u;g=U;k.effectTag|=1024;k.firstEffect=k.lastEffect=null;if(null!==
	m&&"object"===typeof m&&"function"===typeof m.then){var p=m;m=l;var t=-1,A=-1;do{if(13===m.tag){var v=m.alternate;if(null!==v&&(v=v.memoizedState,null!==v)){A=10*(1073741822-v.timedOutAt);break}v=m.pendingProps.maxDuration;if("number"===typeof v)if(0>=v)t=0;else if(-1===t||v<t)t=v}m=m.return}while(null!==m);m=l;do{if(v=13===m.tag)v=void 0===m.memoizedProps.fallback?!1:null===m.memoizedState;if(v){l=m.updateQueue;null===l?(l=new Set,l.add(p),m.updateQueue=l):l.add(p);if(0===(m.mode&1)){m.effectTag|=
	64;k.effectTag&=-1957;1===k.tag&&(null===k.alternate?k.tag=17:(g=nf(1073741823),g.tag=sf,pf(k,g)));k.expirationTime=1073741823;break a}k=h;l=g;var R=k.pingCache;null===R?(R=k.pingCache=new Bh,v=new Set,R.set(p,v)):(v=R.get(p),void 0===v&&(v=new Set,R.set(p,v)));v.has(l)||(v.add(l),k=ei.bind(null,k,p,l),p.then(k,k));-1===t?h=1073741823:(-1===A&&(A=10*(1073741822-gf(h,g))-5E3),h=A+t);0<=h&&Mh<h&&(Mh=h);m.effectTag|=2048;m.expirationTime=g;break a}m=m.return}while(null!==m);m=Error((ic(k.type)||"A React component")+
	" suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display."+jc(k))}Nh=!0;m=jh(m,k);h=l;do{switch(h.tag){case 3:h.effectTag|=2048;h.expirationTime=g;g=Ch(h,m,g);eh(h,g);break a;case 1:if(t=m,A=h.type,k=h.stateNode,0===(h.effectTag&64)&&("function"===typeof A.getDerivedStateFromError||null!==k&&"function"===typeof k.componentDidCatch&&(null===Fh||!Fh.has(k)))){h.effectTag|=2048;
	h.expirationTime=g;g=Eh(h,t,g);eh(h,g);break a}}h=h.return}while(null!==h)}T=ai(f);continue}}}break}while(1);Kh=!1;Hh.current=c;Yg=Xg=Wg=null;lg();if(e)Lh=null,a.finishedWork=null;else if(null!==T)a.finishedWork=null;else{c=a.current.alternate;null===c?x("281"):void 0;Lh=null;if(Nh){e=a.latestPendingTime;f=a.latestSuspendedTime;g=a.latestPingedTime;if(0!==e&&e<d||0!==f&&f<d||0!==g&&g<d){ff(a,d);fi(a,c,d,a.expirationTime,-1);return}if(!a.didError&&b){a.didError=!0;d=a.nextExpirationTimeToWorkOn=d;
	b=a.expirationTime=1073741823;fi(a,c,d,b,-1);return}}b&&-1!==Mh?(ff(a,d),b=10*(1073741822-gf(a,d)),b<Mh&&(Mh=b),b=10*(1073741822-lf()),b=Mh-b,fi(a,c,d,a.expirationTime,0>b?0:b)):(a.pendingCommitExpirationTime=d,a.finishedWork=c)}}
	function sh(a,b){for(var c=a.return;null!==c;){switch(c.tag){case 1:var d=c.stateNode;if("function"===typeof c.type.getDerivedStateFromError||"function"===typeof d.componentDidCatch&&(null===Fh||!Fh.has(d))){a=jh(b,a);a=Eh(c,a,1073741823);pf(c,a);qf(c,1073741823);return}break;case 3:a=jh(b,a);a=Ch(c,a,1073741823);pf(c,a);qf(c,1073741823);return}c=c.return}3===a.tag&&(c=jh(b,a),c=Ch(a,c,1073741823),pf(a,c),qf(a,1073741823))}
	function mf(a,b){var c=r.unstable_getCurrentPriorityLevel(),d=void 0;if(0===(b.mode&1))d=1073741823;else if(Kh&&!Oh)d=U;else{switch(c){case r.unstable_ImmediatePriority:d=1073741823;break;case r.unstable_UserBlockingPriority:d=1073741822-10*(((1073741822-a+15)/10|0)+1);break;case r.unstable_NormalPriority:d=1073741822-25*(((1073741822-a+500)/25|0)+1);break;case r.unstable_LowPriority:case r.unstable_IdlePriority:d=1;break;default:x("313")}null!==Lh&&d===U&&--d}c===r.unstable_UserBlockingPriority&&
	(0===gi||d<gi)&&(gi=d);return d}function ei(a,b,c){var d=a.pingCache;null!==d&&d.delete(b);if(null!==Lh&&U===c)Lh=null;else if(b=a.earliestSuspendedTime,d=a.latestSuspendedTime,0!==b&&c<=b&&c>=d){a.didError=!1;b=a.latestPingedTime;if(0===b||b>c)a.latestPingedTime=c;df(c,a);c=a.expirationTime;0!==c&&Xh(a,c)}}function Ah(a,b){var c=a.stateNode;null!==c&&c.delete(b);b=lf();b=mf(b,a);a=hi(a,b);null!==a&&(cf(a,b),b=a.expirationTime,0!==b&&Xh(a,b))}
	function hi(a,b){a.expirationTime<b&&(a.expirationTime=b);var c=a.alternate;null!==c&&c.expirationTime<b&&(c.expirationTime=b);var d=a.return,e=null;if(null===d&&3===a.tag)e=a.stateNode;else for(;null!==d;){c=d.alternate;d.childExpirationTime<b&&(d.childExpirationTime=b);null!==c&&c.childExpirationTime<b&&(c.childExpirationTime=b);if(null===d.return&&3===d.tag){e=d.stateNode;break}d=d.return}return e}
	function qf(a,b){a=hi(a,b);null!==a&&(!Kh&&0!==U&&b>U&&Sh(),cf(a,b),Kh&&!Oh&&Lh===a||Xh(a,a.expirationTime),ii>ji&&(ii=0,x("185")))}function ki(a,b,c,d,e){return r.unstable_runWithPriority(r.unstable_ImmediatePriority,function(){return a(b,c,d,e)})}var li=null,Y=null,mi=0,ni=void 0,W=!1,oi=null,Z=0,gi=0,pi=!1,qi=null,X=!1,ri=!1,si=null,ti=r.unstable_now(),ui=1073741822-(ti/10|0),vi=ui,ji=50,ii=0,wi=null;function xi(){ui=1073741822-((r.unstable_now()-ti)/10|0)}
	function yi(a,b){if(0!==mi){if(b<mi)return;null!==ni&&r.unstable_cancelCallback(ni)}mi=b;a=r.unstable_now()-ti;ni=r.unstable_scheduleCallback(zi,{timeout:10*(1073741822-b)-a})}function fi(a,b,c,d,e){a.expirationTime=d;0!==e||di()?0<e&&(a.timeoutHandle=ye(Ai.bind(null,a,b,c),e)):(a.pendingCommitExpirationTime=c,a.finishedWork=b)}function Ai(a,b,c){a.pendingCommitExpirationTime=c;a.finishedWork=b;xi();vi=ui;Bi(a,c)}function $h(a,b){a.expirationTime=b;a.finishedWork=null}
	function lf(){if(W)return vi;Ci();if(0===Z||1===Z)xi(),vi=ui;return vi}function Xh(a,b){null===a.nextScheduledRoot?(a.expirationTime=b,null===Y?(li=Y=a,a.nextScheduledRoot=a):(Y=Y.nextScheduledRoot=a,Y.nextScheduledRoot=li)):b>a.expirationTime&&(a.expirationTime=b);W||(X?ri&&(oi=a,Z=1073741823,Di(a,1073741823,!1)):1073741823===b?Yh(1073741823,!1):yi(a,b))}
	function Ci(){var a=0,b=null;if(null!==Y)for(var c=Y,d=li;null!==d;){var e=d.expirationTime;if(0===e){null===c||null===Y?x("244"):void 0;if(d===d.nextScheduledRoot){li=Y=d.nextScheduledRoot=null;break}else if(d===li)li=e=d.nextScheduledRoot,Y.nextScheduledRoot=e,d.nextScheduledRoot=null;else if(d===Y){Y=c;Y.nextScheduledRoot=li;d.nextScheduledRoot=null;break}else c.nextScheduledRoot=d.nextScheduledRoot,d.nextScheduledRoot=null;d=c.nextScheduledRoot}else{e>a&&(a=e,b=d);if(d===Y)break;if(1073741823===
	a)break;c=d;d=d.nextScheduledRoot}}oi=b;Z=a}var Ei=!1;function di(){return Ei?!0:r.unstable_shouldYield()?Ei=!0:!1}function zi(){try{if(!di()&&null!==li){xi();var a=li;do{var b=a.expirationTime;0!==b&&ui<=b&&(a.nextExpirationTimeToWorkOn=ui);a=a.nextScheduledRoot}while(a!==li)}Yh(0,!0)}finally{Ei=!1}}
	function Yh(a,b){Ci();if(b)for(xi(),vi=ui;null!==oi&&0!==Z&&a<=Z&&!(Ei&&ui>Z);)Di(oi,Z,ui>Z),Ci(),xi(),vi=ui;else for(;null!==oi&&0!==Z&&a<=Z;)Di(oi,Z,!1),Ci();b&&(mi=0,ni=null);0!==Z&&yi(oi,Z);ii=0;wi=null;if(null!==si)for(a=si,si=null,b=0;b<a.length;b++){var c=a[b];try{c._onComplete()}catch(d){pi||(pi=!0,qi=d)}}if(pi)throw a=qi,qi=null,pi=!1,a;}function Bi(a,b){W?x("253"):void 0;oi=a;Z=b;Di(a,b,!1);Yh(1073741823,!1)}
	function Di(a,b,c){W?x("245"):void 0;W=!0;if(c){var d=a.finishedWork;null!==d?Fi(a,d,b):(a.finishedWork=null,d=a.timeoutHandle,-1!==d&&(a.timeoutHandle=-1,ze(d)),ci(a,c),d=a.finishedWork,null!==d&&(di()?a.finishedWork=d:Fi(a,d,b)))}else d=a.finishedWork,null!==d?Fi(a,d,b):(a.finishedWork=null,d=a.timeoutHandle,-1!==d&&(a.timeoutHandle=-1,ze(d)),ci(a,c),d=a.finishedWork,null!==d&&Fi(a,d,b));W=!1}
	function Fi(a,b,c){var d=a.firstBatch;if(null!==d&&d._expirationTime>=c&&(null===si?si=[d]:si.push(d),d._defer)){a.finishedWork=b;a.expirationTime=0;return}a.finishedWork=null;a===wi?ii++:(wi=a,ii=0);r.unstable_runWithPriority(r.unstable_ImmediatePriority,function(){Zh(a,b)})}function Dh(a){null===oi?x("246"):void 0;oi.expirationTime=0;pi||(pi=!0,qi=a)}function Gi(a,b){var c=X;X=!0;try{return a(b)}finally{(X=c)||W||Yh(1073741823,!1)}}
	function Hi(a,b){if(X&&!ri){ri=!0;try{return a(b)}finally{ri=!1}}return a(b)}function Ii(a,b,c){X||W||0===gi||(Yh(gi,!1),gi=0);var d=X;X=!0;try{return r.unstable_runWithPriority(r.unstable_UserBlockingPriority,function(){return a(b,c)})}finally{(X=d)||W||Yh(1073741823,!1)}}
	function Ji(a,b,c,d,e){var f=b.current;a:if(c){c=c._reactInternalFiber;b:{2===ed(c)&&1===c.tag?void 0:x("170");var g=c;do{switch(g.tag){case 3:g=g.stateNode.context;break b;case 1:if(J(g.type)){g=g.stateNode.__reactInternalMemoizedMergedChildContext;break b}}g=g.return}while(null!==g);x("171");g=void 0}if(1===c.tag){var h=c.type;if(J(h)){c=Ne(c,h,g);break a}}c=g}else c=He;null===b.context?b.context=c:b.pendingContext=c;b=e;e=nf(d);e.payload={element:a};b=void 0===b?null:b;null!==b&&(e.callback=b);
	of();pf(f,e);qf(f,d);return d}function Ki(a,b,c,d){var e=b.current,f=lf();e=mf(f,e);return Ji(a,b,c,e,d)}function Li(a){a=a.current;if(!a.child)return null;switch(a.child.tag){case 5:return a.child.stateNode;default:return a.child.stateNode}}function Mi(a,b,c){var d=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:Wb,key:null==d?null:""+d,children:a,containerInfo:b,implementation:c}}
	Ab=function(a,b,c){switch(b){case "input":yc(a,c);b=c.name;if("radio"===c.type&&null!=b){for(c=a;c.parentNode;)c=c.parentNode;c=c.querySelectorAll("input[name="+JSON.stringify(""+b)+'][type="radio"]');for(b=0;b<c.length;b++){var d=c[b];if(d!==a&&d.form===a.form){var e=Ka(d);e?void 0:x("90");Sb(d);yc(d,e)}}}break;case "textarea":de(a,c);break;case "select":b=c.value,null!=b&&ae(a,!!c.multiple,b,!1)}};
	function Ni(a){var b=1073741822-25*(((1073741822-lf()+500)/25|0)+1);b>=Jh&&(b=Jh-1);this._expirationTime=Jh=b;this._root=a;this._callbacks=this._next=null;this._hasChildren=this._didComplete=!1;this._children=null;this._defer=!0}Ni.prototype.render=function(a){this._defer?void 0:x("250");this._hasChildren=!0;this._children=a;var b=this._root._internalRoot,c=this._expirationTime,d=new Oi;Ji(a,b,null,c,d._onCommit);return d};
	Ni.prototype.then=function(a){if(this._didComplete)a();else{var b=this._callbacks;null===b&&(b=this._callbacks=[]);b.push(a)}};
	Ni.prototype.commit=function(){var a=this._root._internalRoot,b=a.firstBatch;this._defer&&null!==b?void 0:x("251");if(this._hasChildren){var c=this._expirationTime;if(b!==this){this._hasChildren&&(c=this._expirationTime=b._expirationTime,this.render(this._children));for(var d=null,e=b;e!==this;)d=e,e=e._next;null===d?x("251"):void 0;d._next=e._next;this._next=b;a.firstBatch=this}this._defer=!1;Bi(a,c);b=this._next;this._next=null;b=a.firstBatch=b;null!==b&&b._hasChildren&&b.render(b._children)}else this._next=
	null,this._defer=!1};Ni.prototype._onComplete=function(){if(!this._didComplete){this._didComplete=!0;var a=this._callbacks;if(null!==a)for(var b=0;b<a.length;b++)(0,a[b])()}};function Oi(){this._callbacks=null;this._didCommit=!1;this._onCommit=this._onCommit.bind(this)}Oi.prototype.then=function(a){if(this._didCommit)a();else{var b=this._callbacks;null===b&&(b=this._callbacks=[]);b.push(a)}};
	Oi.prototype._onCommit=function(){if(!this._didCommit){this._didCommit=!0;var a=this._callbacks;if(null!==a)for(var b=0;b<a.length;b++){var c=a[b];"function"!==typeof c?x("191",c):void 0;c()}}};
	function Pi(a,b,c){b=K(3,null,null,b?3:0);a={current:b,containerInfo:a,pendingChildren:null,pingCache:null,earliestPendingTime:0,latestPendingTime:0,earliestSuspendedTime:0,latestSuspendedTime:0,latestPingedTime:0,didError:!1,pendingCommitExpirationTime:0,finishedWork:null,timeoutHandle:-1,context:null,pendingContext:null,hydrate:c,nextExpirationTimeToWorkOn:0,expirationTime:0,firstBatch:null,nextScheduledRoot:null};this._internalRoot=b.stateNode=a}
	Pi.prototype.render=function(a,b){var c=this._internalRoot,d=new Oi;b=void 0===b?null:b;null!==b&&d.then(b);Ki(a,c,null,d._onCommit);return d};Pi.prototype.unmount=function(a){var b=this._internalRoot,c=new Oi;a=void 0===a?null:a;null!==a&&c.then(a);Ki(null,b,null,c._onCommit);return c};Pi.prototype.legacy_renderSubtreeIntoContainer=function(a,b,c){var d=this._internalRoot,e=new Oi;c=void 0===c?null:c;null!==c&&e.then(c);Ki(b,d,a,e._onCommit);return e};
	Pi.prototype.createBatch=function(){var a=new Ni(this),b=a._expirationTime,c=this._internalRoot,d=c.firstBatch;if(null===d)c.firstBatch=a,a._next=null;else{for(c=null;null!==d&&d._expirationTime>=b;)c=d,d=d._next;a._next=d;null!==c&&(c._next=a)}return a};function Qi(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType&&(8!==a.nodeType||" react-mount-point-unstable "!==a.nodeValue))}Gb=Gi;Hb=Ii;Ib=function(){W||0===gi||(Yh(gi,!1),gi=0)};
	function Ri(a,b){b||(b=a?9===a.nodeType?a.documentElement:a.firstChild:null,b=!(!b||1!==b.nodeType||!b.hasAttribute("data-reactroot")));if(!b)for(var c;c=a.lastChild;)a.removeChild(c);return new Pi(a,!1,b)}
	function Si(a,b,c,d,e){var f=c._reactRootContainer;if(f){if("function"===typeof e){var g=e;e=function(){var a=Li(f._internalRoot);g.call(a)}}null!=a?f.legacy_renderSubtreeIntoContainer(a,b,e):f.render(b,e)}else{f=c._reactRootContainer=Ri(c,d);if("function"===typeof e){var h=e;e=function(){var a=Li(f._internalRoot);h.call(a)}}Hi(function(){null!=a?f.legacy_renderSubtreeIntoContainer(a,b,e):f.render(b,e)})}return Li(f._internalRoot)}
	function Ti(a,b){var c=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;Qi(b)?void 0:x("200");return Mi(a,b,null,c)}
	var Vi={createPortal:Ti,findDOMNode:function(a){if(null==a)return null;if(1===a.nodeType)return a;var b=a._reactInternalFiber;void 0===b&&("function"===typeof a.render?x("188"):x("268",Object.keys(a)));a=hd(b);a=null===a?null:a.stateNode;return a},hydrate:function(a,b,c){Qi(b)?void 0:x("200");return Si(null,a,b,!0,c)},render:function(a,b,c){Qi(b)?void 0:x("200");return Si(null,a,b,!1,c)},unstable_renderSubtreeIntoContainer:function(a,b,c,d){Qi(c)?void 0:x("200");null==a||void 0===a._reactInternalFiber?
	x("38"):void 0;return Si(a,b,c,!1,d)},unmountComponentAtNode:function(a){Qi(a)?void 0:x("40");return a._reactRootContainer?(Hi(function(){Si(null,null,a,!1,function(){a._reactRootContainer=null})}),!0):!1},unstable_createPortal:function(){return Ti.apply(void 0,arguments)},unstable_batchedUpdates:Gi,unstable_interactiveUpdates:Ii,flushSync:function(a,b){W?x("187"):void 0;var c=X;X=!0;try{return ki(a,b)}finally{X=c,Yh(1073741823,!1)}},unstable_createRoot:Ui,unstable_flushControlled:function(a){var b=
	X;X=!0;try{ki(a)}finally{(X=b)||W||Yh(1073741823,!1)}},__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{Events:[Ia,Ja,Ka,Ba.injectEventPluginsByName,pa,Qa,function(a){ya(a,Pa)},Eb,Fb,Dd,Da]}};function Ui(a,b){Qi(a)?void 0:x("299","unstable_createRoot");return new Pi(a,!0,null!=b&&!0===b.hydrate)}
	(function(a){var b=a.findFiberByHostInstance;return Te(n({},a,{overrideProps:null,currentDispatcherRef:Tb.ReactCurrentDispatcher,findHostInstanceByFiber:function(a){a=hd(a);return null===a?null:a.stateNode},findFiberByHostInstance:function(a){return b?b(a):null}}))})({findFiberByHostInstance:Ha,bundleType:0,version:"16.8.6",rendererPackageName:"react-dom"});var Wi={default:Vi},Xi=Wi&&Vi||Wi;module.exports=Xi.default||Xi;


/***/ }),
/* 12 */,
/* 13 */,
/* 14 */,
/* 15 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/** @license React v16.8.6
	 * react-dom.development.js
	 *
	 * Copyright (c) Facebook, Inc. and its affiliates.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 */

	'use strict';



	if (process.env.NODE_ENV !== "production") {
	  (function() {
	'use strict';

	var React = __webpack_require__(3);
	var _assign = __webpack_require__(6);
	var checkPropTypes = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"prop-types/checkPropTypes\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));
	var scheduler = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"scheduler\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));
	var tracing = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"scheduler/tracing\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	/**
	 * Use invariant() to assert state which your program assumes to be true.
	 *
	 * Provide sprintf-style format (only %s is supported) and arguments
	 * to provide information about what broke and what you were
	 * expecting.
	 *
	 * The invariant message will be stripped in production, but the invariant
	 * will remain to ensure logic does not differ in production.
	 */

	var validateFormat = function () {};

	{
	  validateFormat = function (format) {
	    if (format === undefined) {
	      throw new Error('invariant requires an error message argument');
	    }
	  };
	}

	function invariant(condition, format, a, b, c, d, e, f) {
	  validateFormat(format);

	  if (!condition) {
	    var error = void 0;
	    if (format === undefined) {
	      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');
	    } else {
	      var args = [a, b, c, d, e, f];
	      var argIndex = 0;
	      error = new Error(format.replace(/%s/g, function () {
	        return args[argIndex++];
	      }));
	      error.name = 'Invariant Violation';
	    }

	    error.framesToPop = 1; // we don't care about invariant's own frame
	    throw error;
	  }
	}

	// Relying on the `invariant()` implementation lets us
	// preserve the format and params in the www builds.

	!React ? invariant(false, 'ReactDOM was loaded before React. Make sure you load the React package before loading ReactDOM.') : void 0;

	var invokeGuardedCallbackImpl = function (name, func, context, a, b, c, d, e, f) {
	  var funcArgs = Array.prototype.slice.call(arguments, 3);
	  try {
	    func.apply(context, funcArgs);
	  } catch (error) {
	    this.onError(error);
	  }
	};

	{
	  // In DEV mode, we swap out invokeGuardedCallback for a special version
	  // that plays more nicely with the browser's DevTools. The idea is to preserve
	  // "Pause on exceptions" behavior. Because React wraps all user-provided
	  // functions in invokeGuardedCallback, and the production version of
	  // invokeGuardedCallback uses a try-catch, all user exceptions are treated
	  // like caught exceptions, and the DevTools won't pause unless the developer
	  // takes the extra step of enabling pause on caught exceptions. This is
	  // unintuitive, though, because even though React has caught the error, from
	  // the developer's perspective, the error is uncaught.
	  //
	  // To preserve the expected "Pause on exceptions" behavior, we don't use a
	  // try-catch in DEV. Instead, we synchronously dispatch a fake event to a fake
	  // DOM node, and call the user-provided callback from inside an event handler
	  // for that fake event. If the callback throws, the error is "captured" using
	  // a global event handler. But because the error happens in a different
	  // event loop context, it does not interrupt the normal program flow.
	  // Effectively, this gives us try-catch behavior without actually using
	  // try-catch. Neat!

	  // Check that the browser supports the APIs we need to implement our special
	  // DEV version of invokeGuardedCallback
	  if (typeof window !== 'undefined' && typeof window.dispatchEvent === 'function' && typeof document !== 'undefined' && typeof document.createEvent === 'function') {
	    var fakeNode = document.createElement('react');

	    var invokeGuardedCallbackDev = function (name, func, context, a, b, c, d, e, f) {
	      // If document doesn't exist we know for sure we will crash in this method
	      // when we call document.createEvent(). However this can cause confusing
	      // errors: https://github.com/facebookincubator/create-react-app/issues/3482
	      // So we preemptively throw with a better message instead.
	      !(typeof document !== 'undefined') ? invariant(false, 'The `document` global was defined when React was initialized, but is not defined anymore. This can happen in a test environment if a component schedules an update from an asynchronous callback, but the test has already finished running. To solve this, you can either unmount the component at the end of your test (and ensure that any asynchronous operations get canceled in `componentWillUnmount`), or you can change the test itself to be asynchronous.') : void 0;
	      var evt = document.createEvent('Event');

	      // Keeps track of whether the user-provided callback threw an error. We
	      // set this to true at the beginning, then set it to false right after
	      // calling the function. If the function errors, `didError` will never be
	      // set to false. This strategy works even if the browser is flaky and
	      // fails to call our global error handler, because it doesn't rely on
	      // the error event at all.
	      var didError = true;

	      // Keeps track of the value of window.event so that we can reset it
	      // during the callback to let user code access window.event in the
	      // browsers that support it.
	      var windowEvent = window.event;

	      // Keeps track of the descriptor of window.event to restore it after event
	      // dispatching: https://github.com/facebook/react/issues/13688
	      var windowEventDescriptor = Object.getOwnPropertyDescriptor(window, 'event');

	      // Create an event handler for our fake event. We will synchronously
	      // dispatch our fake event using `dispatchEvent`. Inside the handler, we
	      // call the user-provided callback.
	      var funcArgs = Array.prototype.slice.call(arguments, 3);
	      function callCallback() {
	        // We immediately remove the callback from event listeners so that
	        // nested `invokeGuardedCallback` calls do not clash. Otherwise, a
	        // nested call would trigger the fake event handlers of any call higher
	        // in the stack.
	        fakeNode.removeEventListener(evtType, callCallback, false);

	        // We check for window.hasOwnProperty('event') to prevent the
	        // window.event assignment in both IE <= 10 as they throw an error
	        // "Member not found" in strict mode, and in Firefox which does not
	        // support window.event.
	        if (typeof window.event !== 'undefined' && window.hasOwnProperty('event')) {
	          window.event = windowEvent;
	        }

	        func.apply(context, funcArgs);
	        didError = false;
	      }

	      // Create a global error event handler. We use this to capture the value
	      // that was thrown. It's possible that this error handler will fire more
	      // than once; for example, if non-React code also calls `dispatchEvent`
	      // and a handler for that event throws. We should be resilient to most of
	      // those cases. Even if our error event handler fires more than once, the
	      // last error event is always used. If the callback actually does error,
	      // we know that the last error event is the correct one, because it's not
	      // possible for anything else to have happened in between our callback
	      // erroring and the code that follows the `dispatchEvent` call below. If
	      // the callback doesn't error, but the error event was fired, we know to
	      // ignore it because `didError` will be false, as described above.
	      var error = void 0;
	      // Use this to track whether the error event is ever called.
	      var didSetError = false;
	      var isCrossOriginError = false;

	      function handleWindowError(event) {
	        error = event.error;
	        didSetError = true;
	        if (error === null && event.colno === 0 && event.lineno === 0) {
	          isCrossOriginError = true;
	        }
	        if (event.defaultPrevented) {
	          // Some other error handler has prevented default.
	          // Browsers silence the error report if this happens.
	          // We'll remember this to later decide whether to log it or not.
	          if (error != null && typeof error === 'object') {
	            try {
	              error._suppressLogging = true;
	            } catch (inner) {
	              // Ignore.
	            }
	          }
	        }
	      }

	      // Create a fake event type.
	      var evtType = 'react-' + (name ? name : 'invokeguardedcallback');

	      // Attach our event handlers
	      window.addEventListener('error', handleWindowError);
	      fakeNode.addEventListener(evtType, callCallback, false);

	      // Synchronously dispatch our fake event. If the user-provided function
	      // errors, it will trigger our global error handler.
	      evt.initEvent(evtType, false, false);
	      fakeNode.dispatchEvent(evt);

	      if (windowEventDescriptor) {
	        Object.defineProperty(window, 'event', windowEventDescriptor);
	      }

	      if (didError) {
	        if (!didSetError) {
	          // The callback errored, but the error event never fired.
	          error = new Error('An error was thrown inside one of your components, but React ' + "doesn't know what it was. This is likely due to browser " + 'flakiness. React does its best to preserve the "Pause on ' + 'exceptions" behavior of the DevTools, which requires some ' + "DEV-mode only tricks. It's possible that these don't work in " + 'your browser. Try triggering the error in production mode, ' + 'or switching to a modern browser. If you suspect that this is ' + 'actually an issue with React, please file an issue.');
	        } else if (isCrossOriginError) {
	          error = new Error("A cross-origin error was thrown. React doesn't have access to " + 'the actual error object in development. ' + 'See https://fb.me/react-crossorigin-error for more information.');
	        }
	        this.onError(error);
	      }

	      // Remove our event listeners
	      window.removeEventListener('error', handleWindowError);
	    };

	    invokeGuardedCallbackImpl = invokeGuardedCallbackDev;
	  }
	}

	var invokeGuardedCallbackImpl$1 = invokeGuardedCallbackImpl;

	// Used by Fiber to simulate a try-catch.
	var hasError = false;
	var caughtError = null;

	// Used by event system to capture/rethrow the first error.
	var hasRethrowError = false;
	var rethrowError = null;

	var reporter = {
	  onError: function (error) {
	    hasError = true;
	    caughtError = error;
	  }
	};

	/**
	 * Call a function while guarding against errors that happens within it.
	 * Returns an error if it throws, otherwise null.
	 *
	 * In production, this is implemented using a try-catch. The reason we don't
	 * use a try-catch directly is so that we can swap out a different
	 * implementation in DEV mode.
	 *
	 * @param {String} name of the guard to use for logging or debugging
	 * @param {Function} func The function to invoke
	 * @param {*} context The context to use when calling the function
	 * @param {...*} args Arguments for function
	 */
	function invokeGuardedCallback(name, func, context, a, b, c, d, e, f) {
	  hasError = false;
	  caughtError = null;
	  invokeGuardedCallbackImpl$1.apply(reporter, arguments);
	}

	/**
	 * Same as invokeGuardedCallback, but instead of returning an error, it stores
	 * it in a global so it can be rethrown by `rethrowCaughtError` later.
	 * TODO: See if caughtError and rethrowError can be unified.
	 *
	 * @param {String} name of the guard to use for logging or debugging
	 * @param {Function} func The function to invoke
	 * @param {*} context The context to use when calling the function
	 * @param {...*} args Arguments for function
	 */
	function invokeGuardedCallbackAndCatchFirstError(name, func, context, a, b, c, d, e, f) {
	  invokeGuardedCallback.apply(this, arguments);
	  if (hasError) {
	    var error = clearCaughtError();
	    if (!hasRethrowError) {
	      hasRethrowError = true;
	      rethrowError = error;
	    }
	  }
	}

	/**
	 * During execution of guarded functions we will capture the first error which
	 * we will rethrow to be handled by the top level error handler.
	 */
	function rethrowCaughtError() {
	  if (hasRethrowError) {
	    var error = rethrowError;
	    hasRethrowError = false;
	    rethrowError = null;
	    throw error;
	  }
	}

	function hasCaughtError() {
	  return hasError;
	}

	function clearCaughtError() {
	  if (hasError) {
	    var error = caughtError;
	    hasError = false;
	    caughtError = null;
	    return error;
	  } else {
	    invariant(false, 'clearCaughtError was called but no error was captured. This error is likely caused by a bug in React. Please file an issue.');
	  }
	}

	/**
	 * Injectable ordering of event plugins.
	 */
	var eventPluginOrder = null;

	/**
	 * Injectable mapping from names to event plugin modules.
	 */
	var namesToPlugins = {};

	/**
	 * Recomputes the plugin list using the injected plugins and plugin ordering.
	 *
	 * @private
	 */
	function recomputePluginOrdering() {
	  if (!eventPluginOrder) {
	    // Wait until an `eventPluginOrder` is injected.
	    return;
	  }
	  for (var pluginName in namesToPlugins) {
	    var pluginModule = namesToPlugins[pluginName];
	    var pluginIndex = eventPluginOrder.indexOf(pluginName);
	    !(pluginIndex > -1) ? invariant(false, 'EventPluginRegistry: Cannot inject event plugins that do not exist in the plugin ordering, `%s`.', pluginName) : void 0;
	    if (plugins[pluginIndex]) {
	      continue;
	    }
	    !pluginModule.extractEvents ? invariant(false, 'EventPluginRegistry: Event plugins must implement an `extractEvents` method, but `%s` does not.', pluginName) : void 0;
	    plugins[pluginIndex] = pluginModule;
	    var publishedEvents = pluginModule.eventTypes;
	    for (var eventName in publishedEvents) {
	      !publishEventForPlugin(publishedEvents[eventName], pluginModule, eventName) ? invariant(false, 'EventPluginRegistry: Failed to publish event `%s` for plugin `%s`.', eventName, pluginName) : void 0;
	    }
	  }
	}

	/**
	 * Publishes an event so that it can be dispatched by the supplied plugin.
	 *
	 * @param {object} dispatchConfig Dispatch configuration for the event.
	 * @param {object} PluginModule Plugin publishing the event.
	 * @return {boolean} True if the event was successfully published.
	 * @private
	 */
	function publishEventForPlugin(dispatchConfig, pluginModule, eventName) {
	  !!eventNameDispatchConfigs.hasOwnProperty(eventName) ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same event name, `%s`.', eventName) : void 0;
	  eventNameDispatchConfigs[eventName] = dispatchConfig;

	  var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;
	  if (phasedRegistrationNames) {
	    for (var phaseName in phasedRegistrationNames) {
	      if (phasedRegistrationNames.hasOwnProperty(phaseName)) {
	        var phasedRegistrationName = phasedRegistrationNames[phaseName];
	        publishRegistrationName(phasedRegistrationName, pluginModule, eventName);
	      }
	    }
	    return true;
	  } else if (dispatchConfig.registrationName) {
	    publishRegistrationName(dispatchConfig.registrationName, pluginModule, eventName);
	    return true;
	  }
	  return false;
	}

	/**
	 * Publishes a registration name that is used to identify dispatched events.
	 *
	 * @param {string} registrationName Registration name to add.
	 * @param {object} PluginModule Plugin publishing the event.
	 * @private
	 */
	function publishRegistrationName(registrationName, pluginModule, eventName) {
	  !!registrationNameModules[registrationName] ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same registration name, `%s`.', registrationName) : void 0;
	  registrationNameModules[registrationName] = pluginModule;
	  registrationNameDependencies[registrationName] = pluginModule.eventTypes[eventName].dependencies;

	  {
	    var lowerCasedName = registrationName.toLowerCase();
	    possibleRegistrationNames[lowerCasedName] = registrationName;

	    if (registrationName === 'onDoubleClick') {
	      possibleRegistrationNames.ondblclick = registrationName;
	    }
	  }
	}

	/**
	 * Registers plugins so that they can extract and dispatch events.
	 *
	 * @see {EventPluginHub}
	 */

	/**
	 * Ordered list of injected plugins.
	 */
	var plugins = [];

	/**
	 * Mapping from event name to dispatch config
	 */
	var eventNameDispatchConfigs = {};

	/**
	 * Mapping from registration name to plugin module
	 */
	var registrationNameModules = {};

	/**
	 * Mapping from registration name to event name
	 */
	var registrationNameDependencies = {};

	/**
	 * Mapping from lowercase registration names to the properly cased version,
	 * used to warn in the case of missing event handlers. Available
	 * only in true.
	 * @type {Object}
	 */
	var possibleRegistrationNames = {};
	// Trust the developer to only use possibleRegistrationNames in true

	/**
	 * Injects an ordering of plugins (by plugin name). This allows the ordering
	 * to be decoupled from injection of the actual plugins so that ordering is
	 * always deterministic regardless of packaging, on-the-fly injection, etc.
	 *
	 * @param {array} InjectedEventPluginOrder
	 * @internal
	 * @see {EventPluginHub.injection.injectEventPluginOrder}
	 */
	function injectEventPluginOrder(injectedEventPluginOrder) {
	  !!eventPluginOrder ? invariant(false, 'EventPluginRegistry: Cannot inject event plugin ordering more than once. You are likely trying to load more than one copy of React.') : void 0;
	  // Clone the ordering so it cannot be dynamically mutated.
	  eventPluginOrder = Array.prototype.slice.call(injectedEventPluginOrder);
	  recomputePluginOrdering();
	}

	/**
	 * Injects plugins to be used by `EventPluginHub`. The plugin names must be
	 * in the ordering injected by `injectEventPluginOrder`.
	 *
	 * Plugins can be injected as part of page initialization or on-the-fly.
	 *
	 * @param {object} injectedNamesToPlugins Map from names to plugin modules.
	 * @internal
	 * @see {EventPluginHub.injection.injectEventPluginsByName}
	 */
	function injectEventPluginsByName(injectedNamesToPlugins) {
	  var isOrderingDirty = false;
	  for (var pluginName in injectedNamesToPlugins) {
	    if (!injectedNamesToPlugins.hasOwnProperty(pluginName)) {
	      continue;
	    }
	    var pluginModule = injectedNamesToPlugins[pluginName];
	    if (!namesToPlugins.hasOwnProperty(pluginName) || namesToPlugins[pluginName] !== pluginModule) {
	      !!namesToPlugins[pluginName] ? invariant(false, 'EventPluginRegistry: Cannot inject two different event plugins using the same name, `%s`.', pluginName) : void 0;
	      namesToPlugins[pluginName] = pluginModule;
	      isOrderingDirty = true;
	    }
	  }
	  if (isOrderingDirty) {
	    recomputePluginOrdering();
	  }
	}

	/**
	 * Similar to invariant but only logs a warning if the condition is not met.
	 * This can be used to log issues in development environments in critical
	 * paths. Removing the logging code for production environments will keep the
	 * same logic and follow the same code paths.
	 */

	var warningWithoutStack = function () {};

	{
	  warningWithoutStack = function (condition, format) {
	    for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
	      args[_key - 2] = arguments[_key];
	    }

	    if (format === undefined) {
	      throw new Error('`warningWithoutStack(condition, format, ...args)` requires a warning ' + 'message argument');
	    }
	    if (args.length > 8) {
	      // Check before the condition to catch violations early.
	      throw new Error('warningWithoutStack() currently supports at most 8 arguments.');
	    }
	    if (condition) {
	      return;
	    }
	    if (typeof console !== 'undefined') {
	      var argsWithFormat = args.map(function (item) {
	        return '' + item;
	      });
	      argsWithFormat.unshift('Warning: ' + format);

	      // We intentionally don't use spread (or .apply) directly because it
	      // breaks IE9: https://github.com/facebook/react/issues/13610
	      Function.prototype.apply.call(console.error, console, argsWithFormat);
	    }
	    try {
	      // --- Welcome to debugging React ---
	      // This error was thrown as a convenience so that you can use this stack
	      // to find the callsite that caused this warning to fire.
	      var argIndex = 0;
	      var message = 'Warning: ' + format.replace(/%s/g, function () {
	        return args[argIndex++];
	      });
	      throw new Error(message);
	    } catch (x) {}
	  };
	}

	var warningWithoutStack$1 = warningWithoutStack;

	var getFiberCurrentPropsFromNode = null;
	var getInstanceFromNode = null;
	var getNodeFromInstance = null;

	function setComponentTree(getFiberCurrentPropsFromNodeImpl, getInstanceFromNodeImpl, getNodeFromInstanceImpl) {
	  getFiberCurrentPropsFromNode = getFiberCurrentPropsFromNodeImpl;
	  getInstanceFromNode = getInstanceFromNodeImpl;
	  getNodeFromInstance = getNodeFromInstanceImpl;
	  {
	    !(getNodeFromInstance && getInstanceFromNode) ? warningWithoutStack$1(false, 'EventPluginUtils.setComponentTree(...): Injected ' + 'module is missing getNodeFromInstance or getInstanceFromNode.') : void 0;
	  }
	}

	var validateEventDispatches = void 0;
	{
	  validateEventDispatches = function (event) {
	    var dispatchListeners = event._dispatchListeners;
	    var dispatchInstances = event._dispatchInstances;

	    var listenersIsArr = Array.isArray(dispatchListeners);
	    var listenersLen = listenersIsArr ? dispatchListeners.length : dispatchListeners ? 1 : 0;

	    var instancesIsArr = Array.isArray(dispatchInstances);
	    var instancesLen = instancesIsArr ? dispatchInstances.length : dispatchInstances ? 1 : 0;

	    !(instancesIsArr === listenersIsArr && instancesLen === listenersLen) ? warningWithoutStack$1(false, 'EventPluginUtils: Invalid `event`.') : void 0;
	  };
	}

	/**
	 * Dispatch the event to the listener.
	 * @param {SyntheticEvent} event SyntheticEvent to handle
	 * @param {function} listener Application-level callback
	 * @param {*} inst Internal component instance
	 */
	function executeDispatch(event, listener, inst) {
	  var type = event.type || 'unknown-event';
	  event.currentTarget = getNodeFromInstance(inst);
	  invokeGuardedCallbackAndCatchFirstError(type, listener, undefined, event);
	  event.currentTarget = null;
	}

	/**
	 * Standard/simple iteration through an event's collected dispatches.
	 */
	function executeDispatchesInOrder(event) {
	  var dispatchListeners = event._dispatchListeners;
	  var dispatchInstances = event._dispatchInstances;
	  {
	    validateEventDispatches(event);
	  }
	  if (Array.isArray(dispatchListeners)) {
	    for (var i = 0; i < dispatchListeners.length; i++) {
	      if (event.isPropagationStopped()) {
	        break;
	      }
	      // Listeners and Instances are two parallel arrays that are always in sync.
	      executeDispatch(event, dispatchListeners[i], dispatchInstances[i]);
	    }
	  } else if (dispatchListeners) {
	    executeDispatch(event, dispatchListeners, dispatchInstances);
	  }
	  event._dispatchListeners = null;
	  event._dispatchInstances = null;
	}

	/**
	 * @see executeDispatchesInOrderStopAtTrueImpl
	 */


	/**
	 * Execution of a "direct" dispatch - there must be at most one dispatch
	 * accumulated on the event or it is considered an error. It doesn't really make
	 * sense for an event with multiple dispatches (bubbled) to keep track of the
	 * return values at each dispatch execution, but it does tend to make sense when
	 * dealing with "direct" dispatches.
	 *
	 * @return {*} The return value of executing the single dispatch.
	 */


	/**
	 * @param {SyntheticEvent} event
	 * @return {boolean} True iff number of dispatches accumulated is greater than 0.
	 */

	/**
	 * Accumulates items that must not be null or undefined into the first one. This
	 * is used to conserve memory by avoiding array allocations, and thus sacrifices
	 * API cleanness. Since `current` can be null before being passed in and not
	 * null after this function, make sure to assign it back to `current`:
	 *
	 * `a = accumulateInto(a, b);`
	 *
	 * This API should be sparingly used. Try `accumulate` for something cleaner.
	 *
	 * @return {*|array<*>} An accumulation of items.
	 */

	function accumulateInto(current, next) {
	  !(next != null) ? invariant(false, 'accumulateInto(...): Accumulated items must not be null or undefined.') : void 0;

	  if (current == null) {
	    return next;
	  }

	  // Both are not empty. Warning: Never call x.concat(y) when you are not
	  // certain that x is an Array (x could be a string with concat method).
	  if (Array.isArray(current)) {
	    if (Array.isArray(next)) {
	      current.push.apply(current, next);
	      return current;
	    }
	    current.push(next);
	    return current;
	  }

	  if (Array.isArray(next)) {
	    // A bit too dangerous to mutate `next`.
	    return [current].concat(next);
	  }

	  return [current, next];
	}

	/**
	 * @param {array} arr an "accumulation" of items which is either an Array or
	 * a single item. Useful when paired with the `accumulate` module. This is a
	 * simple utility that allows us to reason about a collection of items, but
	 * handling the case when there is exactly one item (and we do not need to
	 * allocate an array).
	 * @param {function} cb Callback invoked with each element or a collection.
	 * @param {?} [scope] Scope used as `this` in a callback.
	 */
	function forEachAccumulated(arr, cb, scope) {
	  if (Array.isArray(arr)) {
	    arr.forEach(cb, scope);
	  } else if (arr) {
	    cb.call(scope, arr);
	  }
	}

	/**
	 * Internal queue of events that have accumulated their dispatches and are
	 * waiting to have their dispatches executed.
	 */
	var eventQueue = null;

	/**
	 * Dispatches an event and releases it back into the pool, unless persistent.
	 *
	 * @param {?object} event Synthetic event to be dispatched.
	 * @private
	 */
	var executeDispatchesAndRelease = function (event) {
	  if (event) {
	    executeDispatchesInOrder(event);

	    if (!event.isPersistent()) {
	      event.constructor.release(event);
	    }
	  }
	};
	var executeDispatchesAndReleaseTopLevel = function (e) {
	  return executeDispatchesAndRelease(e);
	};

	function isInteractive(tag) {
	  return tag === 'button' || tag === 'input' || tag === 'select' || tag === 'textarea';
	}

	function shouldPreventMouseEvent(name, type, props) {
	  switch (name) {
	    case 'onClick':
	    case 'onClickCapture':
	    case 'onDoubleClick':
	    case 'onDoubleClickCapture':
	    case 'onMouseDown':
	    case 'onMouseDownCapture':
	    case 'onMouseMove':
	    case 'onMouseMoveCapture':
	    case 'onMouseUp':
	    case 'onMouseUpCapture':
	      return !!(props.disabled && isInteractive(type));
	    default:
	      return false;
	  }
	}

	/**
	 * This is a unified interface for event plugins to be installed and configured.
	 *
	 * Event plugins can implement the following properties:
	 *
	 *   `extractEvents` {function(string, DOMEventTarget, string, object): *}
	 *     Required. When a top-level event is fired, this method is expected to
	 *     extract synthetic events that will in turn be queued and dispatched.
	 *
	 *   `eventTypes` {object}
	 *     Optional, plugins that fire events must publish a mapping of registration
	 *     names that are used to register listeners. Values of this mapping must
	 *     be objects that contain `registrationName` or `phasedRegistrationNames`.
	 *
	 *   `executeDispatch` {function(object, function, string)}
	 *     Optional, allows plugins to override how an event gets dispatched. By
	 *     default, the listener is simply invoked.
	 *
	 * Each plugin that is injected into `EventsPluginHub` is immediately operable.
	 *
	 * @public
	 */

	/**
	 * Methods for injecting dependencies.
	 */
	var injection = {
	  /**
	   * @param {array} InjectedEventPluginOrder
	   * @public
	   */
	  injectEventPluginOrder: injectEventPluginOrder,

	  /**
	   * @param {object} injectedNamesToPlugins Map from names to plugin modules.
	   */
	  injectEventPluginsByName: injectEventPluginsByName
	};

	/**
	 * @param {object} inst The instance, which is the source of events.
	 * @param {string} registrationName Name of listener (e.g. `onClick`).
	 * @return {?function} The stored callback.
	 */
	function getListener(inst, registrationName) {
	  var listener = void 0;

	  // TODO: shouldPreventMouseEvent is DOM-specific and definitely should not
	  // live here; needs to be moved to a better place soon
	  var stateNode = inst.stateNode;
	  if (!stateNode) {
	    // Work in progress (ex: onload events in incremental mode).
	    return null;
	  }
	  var props = getFiberCurrentPropsFromNode(stateNode);
	  if (!props) {
	    // Work in progress.
	    return null;
	  }
	  listener = props[registrationName];
	  if (shouldPreventMouseEvent(registrationName, inst.type, props)) {
	    return null;
	  }
	  !(!listener || typeof listener === 'function') ? invariant(false, 'Expected `%s` listener to be a function, instead got a value of `%s` type.', registrationName, typeof listener) : void 0;
	  return listener;
	}

	/**
	 * Allows registered plugins an opportunity to extract events from top-level
	 * native browser events.
	 *
	 * @return {*} An accumulation of synthetic events.
	 * @internal
	 */
	function extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	  var events = null;
	  for (var i = 0; i < plugins.length; i++) {
	    // Not every plugin in the ordering may be loaded at runtime.
	    var possiblePlugin = plugins[i];
	    if (possiblePlugin) {
	      var extractedEvents = possiblePlugin.extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget);
	      if (extractedEvents) {
	        events = accumulateInto(events, extractedEvents);
	      }
	    }
	  }
	  return events;
	}

	function runEventsInBatch(events) {
	  if (events !== null) {
	    eventQueue = accumulateInto(eventQueue, events);
	  }

	  // Set `eventQueue` to null before processing it so that we can tell if more
	  // events get enqueued while processing.
	  var processingEventQueue = eventQueue;
	  eventQueue = null;

	  if (!processingEventQueue) {
	    return;
	  }

	  forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseTopLevel);
	  !!eventQueue ? invariant(false, 'processEventQueue(): Additional events were enqueued while processing an event queue. Support for this has not yet been implemented.') : void 0;
	  // This would be a good time to rethrow if any of the event handlers threw.
	  rethrowCaughtError();
	}

	function runExtractedEventsInBatch(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	  var events = extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget);
	  runEventsInBatch(events);
	}

	var FunctionComponent = 0;
	var ClassComponent = 1;
	var IndeterminateComponent = 2; // Before we know whether it is function or class
	var HostRoot = 3; // Root of a host tree. Could be nested inside another node.
	var HostPortal = 4; // A subtree. Could be an entry point to a different renderer.
	var HostComponent = 5;
	var HostText = 6;
	var Fragment = 7;
	var Mode = 8;
	var ContextConsumer = 9;
	var ContextProvider = 10;
	var ForwardRef = 11;
	var Profiler = 12;
	var SuspenseComponent = 13;
	var MemoComponent = 14;
	var SimpleMemoComponent = 15;
	var LazyComponent = 16;
	var IncompleteClassComponent = 17;
	var DehydratedSuspenseComponent = 18;

	var randomKey = Math.random().toString(36).slice(2);
	var internalInstanceKey = '__reactInternalInstance$' + randomKey;
	var internalEventHandlersKey = '__reactEventHandlers$' + randomKey;

	function precacheFiberNode(hostInst, node) {
	  node[internalInstanceKey] = hostInst;
	}

	/**
	 * Given a DOM node, return the closest ReactDOMComponent or
	 * ReactDOMTextComponent instance ancestor.
	 */
	function getClosestInstanceFromNode(node) {
	  if (node[internalInstanceKey]) {
	    return node[internalInstanceKey];
	  }

	  while (!node[internalInstanceKey]) {
	    if (node.parentNode) {
	      node = node.parentNode;
	    } else {
	      // Top of the tree. This node must not be part of a React tree (or is
	      // unmounted, potentially).
	      return null;
	    }
	  }

	  var inst = node[internalInstanceKey];
	  if (inst.tag === HostComponent || inst.tag === HostText) {
	    // In Fiber, this will always be the deepest root.
	    return inst;
	  }

	  return null;
	}

	/**
	 * Given a DOM node, return the ReactDOMComponent or ReactDOMTextComponent
	 * instance, or null if the node was not rendered by this React.
	 */
	function getInstanceFromNode$1(node) {
	  var inst = node[internalInstanceKey];
	  if (inst) {
	    if (inst.tag === HostComponent || inst.tag === HostText) {
	      return inst;
	    } else {
	      return null;
	    }
	  }
	  return null;
	}

	/**
	 * Given a ReactDOMComponent or ReactDOMTextComponent, return the corresponding
	 * DOM node.
	 */
	function getNodeFromInstance$1(inst) {
	  if (inst.tag === HostComponent || inst.tag === HostText) {
	    // In Fiber this, is just the state node right now. We assume it will be
	    // a host component or host text.
	    return inst.stateNode;
	  }

	  // Without this first invariant, passing a non-DOM-component triggers the next
	  // invariant for a missing parent, which is super confusing.
	  invariant(false, 'getNodeFromInstance: Invalid argument.');
	}

	function getFiberCurrentPropsFromNode$1(node) {
	  return node[internalEventHandlersKey] || null;
	}

	function updateFiberProps(node, props) {
	  node[internalEventHandlersKey] = props;
	}

	function getParent(inst) {
	  do {
	    inst = inst.return;
	    // TODO: If this is a HostRoot we might want to bail out.
	    // That is depending on if we want nested subtrees (layers) to bubble
	    // events to their parent. We could also go through parentNode on the
	    // host node but that wouldn't work for React Native and doesn't let us
	    // do the portal feature.
	  } while (inst && inst.tag !== HostComponent);
	  if (inst) {
	    return inst;
	  }
	  return null;
	}

	/**
	 * Return the lowest common ancestor of A and B, or null if they are in
	 * different trees.
	 */
	function getLowestCommonAncestor(instA, instB) {
	  var depthA = 0;
	  for (var tempA = instA; tempA; tempA = getParent(tempA)) {
	    depthA++;
	  }
	  var depthB = 0;
	  for (var tempB = instB; tempB; tempB = getParent(tempB)) {
	    depthB++;
	  }

	  // If A is deeper, crawl up.
	  while (depthA - depthB > 0) {
	    instA = getParent(instA);
	    depthA--;
	  }

	  // If B is deeper, crawl up.
	  while (depthB - depthA > 0) {
	    instB = getParent(instB);
	    depthB--;
	  }

	  // Walk in lockstep until we find a match.
	  var depth = depthA;
	  while (depth--) {
	    if (instA === instB || instA === instB.alternate) {
	      return instA;
	    }
	    instA = getParent(instA);
	    instB = getParent(instB);
	  }
	  return null;
	}

	/**
	 * Return if A is an ancestor of B.
	 */


	/**
	 * Return the parent instance of the passed-in instance.
	 */


	/**
	 * Simulates the traversal of a two-phase, capture/bubble event dispatch.
	 */
	function traverseTwoPhase(inst, fn, arg) {
	  var path = [];
	  while (inst) {
	    path.push(inst);
	    inst = getParent(inst);
	  }
	  var i = void 0;
	  for (i = path.length; i-- > 0;) {
	    fn(path[i], 'captured', arg);
	  }
	  for (i = 0; i < path.length; i++) {
	    fn(path[i], 'bubbled', arg);
	  }
	}

	/**
	 * Traverses the ID hierarchy and invokes the supplied `cb` on any IDs that
	 * should would receive a `mouseEnter` or `mouseLeave` event.
	 *
	 * Does not invoke the callback on the nearest common ancestor because nothing
	 * "entered" or "left" that element.
	 */
	function traverseEnterLeave(from, to, fn, argFrom, argTo) {
	  var common = from && to ? getLowestCommonAncestor(from, to) : null;
	  var pathFrom = [];
	  while (true) {
	    if (!from) {
	      break;
	    }
	    if (from === common) {
	      break;
	    }
	    var alternate = from.alternate;
	    if (alternate !== null && alternate === common) {
	      break;
	    }
	    pathFrom.push(from);
	    from = getParent(from);
	  }
	  var pathTo = [];
	  while (true) {
	    if (!to) {
	      break;
	    }
	    if (to === common) {
	      break;
	    }
	    var _alternate = to.alternate;
	    if (_alternate !== null && _alternate === common) {
	      break;
	    }
	    pathTo.push(to);
	    to = getParent(to);
	  }
	  for (var i = 0; i < pathFrom.length; i++) {
	    fn(pathFrom[i], 'bubbled', argFrom);
	  }
	  for (var _i = pathTo.length; _i-- > 0;) {
	    fn(pathTo[_i], 'captured', argTo);
	  }
	}

	/**
	 * Some event types have a notion of different registration names for different
	 * "phases" of propagation. This finds listeners by a given phase.
	 */
	function listenerAtPhase(inst, event, propagationPhase) {
	  var registrationName = event.dispatchConfig.phasedRegistrationNames[propagationPhase];
	  return getListener(inst, registrationName);
	}

	/**
	 * A small set of propagation patterns, each of which will accept a small amount
	 * of information, and generate a set of "dispatch ready event objects" - which
	 * are sets of events that have already been annotated with a set of dispatched
	 * listener functions/ids. The API is designed this way to discourage these
	 * propagation strategies from actually executing the dispatches, since we
	 * always want to collect the entire set of dispatches before executing even a
	 * single one.
	 */

	/**
	 * Tags a `SyntheticEvent` with dispatched listeners. Creating this function
	 * here, allows us to not have to bind or create functions for each event.
	 * Mutating the event's members allows us to not have to create a wrapping
	 * "dispatch" object that pairs the event with the listener.
	 */
	function accumulateDirectionalDispatches(inst, phase, event) {
	  {
	    !inst ? warningWithoutStack$1(false, 'Dispatching inst must not be null') : void 0;
	  }
	  var listener = listenerAtPhase(inst, event, phase);
	  if (listener) {
	    event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);
	    event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);
	  }
	}

	/**
	 * Collect dispatches (must be entirely collected before dispatching - see unit
	 * tests). Lazily allocate the array to conserve memory.  We must loop through
	 * each event and perform the traversal for each one. We cannot perform a
	 * single traversal for the entire collection of events because each event may
	 * have a different target.
	 */
	function accumulateTwoPhaseDispatchesSingle(event) {
	  if (event && event.dispatchConfig.phasedRegistrationNames) {
	    traverseTwoPhase(event._targetInst, accumulateDirectionalDispatches, event);
	  }
	}

	/**
	 * Accumulates without regard to direction, does not look for phased
	 * registration names. Same as `accumulateDirectDispatchesSingle` but without
	 * requiring that the `dispatchMarker` be the same as the dispatched ID.
	 */
	function accumulateDispatches(inst, ignoredDirection, event) {
	  if (inst && event && event.dispatchConfig.registrationName) {
	    var registrationName = event.dispatchConfig.registrationName;
	    var listener = getListener(inst, registrationName);
	    if (listener) {
	      event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);
	      event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);
	    }
	  }
	}

	/**
	 * Accumulates dispatches on an `SyntheticEvent`, but only for the
	 * `dispatchMarker`.
	 * @param {SyntheticEvent} event
	 */
	function accumulateDirectDispatchesSingle(event) {
	  if (event && event.dispatchConfig.registrationName) {
	    accumulateDispatches(event._targetInst, null, event);
	  }
	}

	function accumulateTwoPhaseDispatches(events) {
	  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingle);
	}



	function accumulateEnterLeaveDispatches(leave, enter, from, to) {
	  traverseEnterLeave(from, to, accumulateDispatches, leave, enter);
	}

	function accumulateDirectDispatches(events) {
	  forEachAccumulated(events, accumulateDirectDispatchesSingle);
	}

	var canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);

	// Do not uses the below two methods directly!
	// Instead use constants exported from DOMTopLevelEventTypes in ReactDOM.
	// (It is the only module that is allowed to access these methods.)

	function unsafeCastStringToDOMTopLevelType(topLevelType) {
	  return topLevelType;
	}

	function unsafeCastDOMTopLevelTypeToString(topLevelType) {
	  return topLevelType;
	}

	/**
	 * Generate a mapping of standard vendor prefixes using the defined style property and event name.
	 *
	 * @param {string} styleProp
	 * @param {string} eventName
	 * @returns {object}
	 */
	function makePrefixMap(styleProp, eventName) {
	  var prefixes = {};

	  prefixes[styleProp.toLowerCase()] = eventName.toLowerCase();
	  prefixes['Webkit' + styleProp] = 'webkit' + eventName;
	  prefixes['Moz' + styleProp] = 'moz' + eventName;

	  return prefixes;
	}

	/**
	 * A list of event names to a configurable list of vendor prefixes.
	 */
	var vendorPrefixes = {
	  animationend: makePrefixMap('Animation', 'AnimationEnd'),
	  animationiteration: makePrefixMap('Animation', 'AnimationIteration'),
	  animationstart: makePrefixMap('Animation', 'AnimationStart'),
	  transitionend: makePrefixMap('Transition', 'TransitionEnd')
	};

	/**
	 * Event names that have already been detected and prefixed (if applicable).
	 */
	var prefixedEventNames = {};

	/**
	 * Element to check for prefixes on.
	 */
	var style = {};

	/**
	 * Bootstrap if a DOM exists.
	 */
	if (canUseDOM) {
	  style = document.createElement('div').style;

	  // On some platforms, in particular some releases of Android 4.x,
	  // the un-prefixed "animation" and "transition" properties are defined on the
	  // style object but the events that fire will still be prefixed, so we need
	  // to check if the un-prefixed events are usable, and if not remove them from the map.
	  if (!('AnimationEvent' in window)) {
	    delete vendorPrefixes.animationend.animation;
	    delete vendorPrefixes.animationiteration.animation;
	    delete vendorPrefixes.animationstart.animation;
	  }

	  // Same as above
	  if (!('TransitionEvent' in window)) {
	    delete vendorPrefixes.transitionend.transition;
	  }
	}

	/**
	 * Attempts to determine the correct vendor prefixed event name.
	 *
	 * @param {string} eventName
	 * @returns {string}
	 */
	function getVendorPrefixedEventName(eventName) {
	  if (prefixedEventNames[eventName]) {
	    return prefixedEventNames[eventName];
	  } else if (!vendorPrefixes[eventName]) {
	    return eventName;
	  }

	  var prefixMap = vendorPrefixes[eventName];

	  for (var styleProp in prefixMap) {
	    if (prefixMap.hasOwnProperty(styleProp) && styleProp in style) {
	      return prefixedEventNames[eventName] = prefixMap[styleProp];
	    }
	  }

	  return eventName;
	}

	/**
	 * To identify top level events in ReactDOM, we use constants defined by this
	 * module. This is the only module that uses the unsafe* methods to express
	 * that the constants actually correspond to the browser event names. This lets
	 * us save some bundle size by avoiding a top level type -> event name map.
	 * The rest of ReactDOM code should import top level types from this file.
	 */
	var TOP_ABORT = unsafeCastStringToDOMTopLevelType('abort');
	var TOP_ANIMATION_END = unsafeCastStringToDOMTopLevelType(getVendorPrefixedEventName('animationend'));
	var TOP_ANIMATION_ITERATION = unsafeCastStringToDOMTopLevelType(getVendorPrefixedEventName('animationiteration'));
	var TOP_ANIMATION_START = unsafeCastStringToDOMTopLevelType(getVendorPrefixedEventName('animationstart'));
	var TOP_BLUR = unsafeCastStringToDOMTopLevelType('blur');
	var TOP_CAN_PLAY = unsafeCastStringToDOMTopLevelType('canplay');
	var TOP_CAN_PLAY_THROUGH = unsafeCastStringToDOMTopLevelType('canplaythrough');
	var TOP_CANCEL = unsafeCastStringToDOMTopLevelType('cancel');
	var TOP_CHANGE = unsafeCastStringToDOMTopLevelType('change');
	var TOP_CLICK = unsafeCastStringToDOMTopLevelType('click');
	var TOP_CLOSE = unsafeCastStringToDOMTopLevelType('close');
	var TOP_COMPOSITION_END = unsafeCastStringToDOMTopLevelType('compositionend');
	var TOP_COMPOSITION_START = unsafeCastStringToDOMTopLevelType('compositionstart');
	var TOP_COMPOSITION_UPDATE = unsafeCastStringToDOMTopLevelType('compositionupdate');
	var TOP_CONTEXT_MENU = unsafeCastStringToDOMTopLevelType('contextmenu');
	var TOP_COPY = unsafeCastStringToDOMTopLevelType('copy');
	var TOP_CUT = unsafeCastStringToDOMTopLevelType('cut');
	var TOP_DOUBLE_CLICK = unsafeCastStringToDOMTopLevelType('dblclick');
	var TOP_AUX_CLICK = unsafeCastStringToDOMTopLevelType('auxclick');
	var TOP_DRAG = unsafeCastStringToDOMTopLevelType('drag');
	var TOP_DRAG_END = unsafeCastStringToDOMTopLevelType('dragend');
	var TOP_DRAG_ENTER = unsafeCastStringToDOMTopLevelType('dragenter');
	var TOP_DRAG_EXIT = unsafeCastStringToDOMTopLevelType('dragexit');
	var TOP_DRAG_LEAVE = unsafeCastStringToDOMTopLevelType('dragleave');
	var TOP_DRAG_OVER = unsafeCastStringToDOMTopLevelType('dragover');
	var TOP_DRAG_START = unsafeCastStringToDOMTopLevelType('dragstart');
	var TOP_DROP = unsafeCastStringToDOMTopLevelType('drop');
	var TOP_DURATION_CHANGE = unsafeCastStringToDOMTopLevelType('durationchange');
	var TOP_EMPTIED = unsafeCastStringToDOMTopLevelType('emptied');
	var TOP_ENCRYPTED = unsafeCastStringToDOMTopLevelType('encrypted');
	var TOP_ENDED = unsafeCastStringToDOMTopLevelType('ended');
	var TOP_ERROR = unsafeCastStringToDOMTopLevelType('error');
	var TOP_FOCUS = unsafeCastStringToDOMTopLevelType('focus');
	var TOP_GOT_POINTER_CAPTURE = unsafeCastStringToDOMTopLevelType('gotpointercapture');
	var TOP_INPUT = unsafeCastStringToDOMTopLevelType('input');
	var TOP_INVALID = unsafeCastStringToDOMTopLevelType('invalid');
	var TOP_KEY_DOWN = unsafeCastStringToDOMTopLevelType('keydown');
	var TOP_KEY_PRESS = unsafeCastStringToDOMTopLevelType('keypress');
	var TOP_KEY_UP = unsafeCastStringToDOMTopLevelType('keyup');
	var TOP_LOAD = unsafeCastStringToDOMTopLevelType('load');
	var TOP_LOAD_START = unsafeCastStringToDOMTopLevelType('loadstart');
	var TOP_LOADED_DATA = unsafeCastStringToDOMTopLevelType('loadeddata');
	var TOP_LOADED_METADATA = unsafeCastStringToDOMTopLevelType('loadedmetadata');
	var TOP_LOST_POINTER_CAPTURE = unsafeCastStringToDOMTopLevelType('lostpointercapture');
	var TOP_MOUSE_DOWN = unsafeCastStringToDOMTopLevelType('mousedown');
	var TOP_MOUSE_MOVE = unsafeCastStringToDOMTopLevelType('mousemove');
	var TOP_MOUSE_OUT = unsafeCastStringToDOMTopLevelType('mouseout');
	var TOP_MOUSE_OVER = unsafeCastStringToDOMTopLevelType('mouseover');
	var TOP_MOUSE_UP = unsafeCastStringToDOMTopLevelType('mouseup');
	var TOP_PASTE = unsafeCastStringToDOMTopLevelType('paste');
	var TOP_PAUSE = unsafeCastStringToDOMTopLevelType('pause');
	var TOP_PLAY = unsafeCastStringToDOMTopLevelType('play');
	var TOP_PLAYING = unsafeCastStringToDOMTopLevelType('playing');
	var TOP_POINTER_CANCEL = unsafeCastStringToDOMTopLevelType('pointercancel');
	var TOP_POINTER_DOWN = unsafeCastStringToDOMTopLevelType('pointerdown');


	var TOP_POINTER_MOVE = unsafeCastStringToDOMTopLevelType('pointermove');
	var TOP_POINTER_OUT = unsafeCastStringToDOMTopLevelType('pointerout');
	var TOP_POINTER_OVER = unsafeCastStringToDOMTopLevelType('pointerover');
	var TOP_POINTER_UP = unsafeCastStringToDOMTopLevelType('pointerup');
	var TOP_PROGRESS = unsafeCastStringToDOMTopLevelType('progress');
	var TOP_RATE_CHANGE = unsafeCastStringToDOMTopLevelType('ratechange');
	var TOP_RESET = unsafeCastStringToDOMTopLevelType('reset');
	var TOP_SCROLL = unsafeCastStringToDOMTopLevelType('scroll');
	var TOP_SEEKED = unsafeCastStringToDOMTopLevelType('seeked');
	var TOP_SEEKING = unsafeCastStringToDOMTopLevelType('seeking');
	var TOP_SELECTION_CHANGE = unsafeCastStringToDOMTopLevelType('selectionchange');
	var TOP_STALLED = unsafeCastStringToDOMTopLevelType('stalled');
	var TOP_SUBMIT = unsafeCastStringToDOMTopLevelType('submit');
	var TOP_SUSPEND = unsafeCastStringToDOMTopLevelType('suspend');
	var TOP_TEXT_INPUT = unsafeCastStringToDOMTopLevelType('textInput');
	var TOP_TIME_UPDATE = unsafeCastStringToDOMTopLevelType('timeupdate');
	var TOP_TOGGLE = unsafeCastStringToDOMTopLevelType('toggle');
	var TOP_TOUCH_CANCEL = unsafeCastStringToDOMTopLevelType('touchcancel');
	var TOP_TOUCH_END = unsafeCastStringToDOMTopLevelType('touchend');
	var TOP_TOUCH_MOVE = unsafeCastStringToDOMTopLevelType('touchmove');
	var TOP_TOUCH_START = unsafeCastStringToDOMTopLevelType('touchstart');
	var TOP_TRANSITION_END = unsafeCastStringToDOMTopLevelType(getVendorPrefixedEventName('transitionend'));
	var TOP_VOLUME_CHANGE = unsafeCastStringToDOMTopLevelType('volumechange');
	var TOP_WAITING = unsafeCastStringToDOMTopLevelType('waiting');
	var TOP_WHEEL = unsafeCastStringToDOMTopLevelType('wheel');

	// List of events that need to be individually attached to media elements.
	// Note that events in this list will *not* be listened to at the top level
	// unless they're explicitly whitelisted in `ReactBrowserEventEmitter.listenTo`.
	var mediaEventTypes = [TOP_ABORT, TOP_CAN_PLAY, TOP_CAN_PLAY_THROUGH, TOP_DURATION_CHANGE, TOP_EMPTIED, TOP_ENCRYPTED, TOP_ENDED, TOP_ERROR, TOP_LOADED_DATA, TOP_LOADED_METADATA, TOP_LOAD_START, TOP_PAUSE, TOP_PLAY, TOP_PLAYING, TOP_PROGRESS, TOP_RATE_CHANGE, TOP_SEEKED, TOP_SEEKING, TOP_STALLED, TOP_SUSPEND, TOP_TIME_UPDATE, TOP_VOLUME_CHANGE, TOP_WAITING];

	function getRawEventName(topLevelType) {
	  return unsafeCastDOMTopLevelTypeToString(topLevelType);
	}

	/**
	 * These variables store information about text content of a target node,
	 * allowing comparison of content before and after a given event.
	 *
	 * Identify the node where selection currently begins, then observe
	 * both its text content and its current position in the DOM. Since the
	 * browser may natively replace the target node during composition, we can
	 * use its position to find its replacement.
	 *
	 *
	 */

	var root = null;
	var startText = null;
	var fallbackText = null;

	function initialize(nativeEventTarget) {
	  root = nativeEventTarget;
	  startText = getText();
	  return true;
	}

	function reset() {
	  root = null;
	  startText = null;
	  fallbackText = null;
	}

	function getData() {
	  if (fallbackText) {
	    return fallbackText;
	  }

	  var start = void 0;
	  var startValue = startText;
	  var startLength = startValue.length;
	  var end = void 0;
	  var endValue = getText();
	  var endLength = endValue.length;

	  for (start = 0; start < startLength; start++) {
	    if (startValue[start] !== endValue[start]) {
	      break;
	    }
	  }

	  var minEnd = startLength - start;
	  for (end = 1; end <= minEnd; end++) {
	    if (startValue[startLength - end] !== endValue[endLength - end]) {
	      break;
	    }
	  }

	  var sliceTail = end > 1 ? 1 - end : undefined;
	  fallbackText = endValue.slice(start, sliceTail);
	  return fallbackText;
	}

	function getText() {
	  if ('value' in root) {
	    return root.value;
	  }
	  return root.textContent;
	}

	/* eslint valid-typeof: 0 */

	var EVENT_POOL_SIZE = 10;

	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var EventInterface = {
	  type: null,
	  target: null,
	  // currentTarget is set when dispatching; no use in copying it here
	  currentTarget: function () {
	    return null;
	  },
	  eventPhase: null,
	  bubbles: null,
	  cancelable: null,
	  timeStamp: function (event) {
	    return event.timeStamp || Date.now();
	  },
	  defaultPrevented: null,
	  isTrusted: null
	};

	function functionThatReturnsTrue() {
	  return true;
	}

	function functionThatReturnsFalse() {
	  return false;
	}

	/**
	 * Synthetic events are dispatched by event plugins, typically in response to a
	 * top-level event delegation handler.
	 *
	 * These systems should generally use pooling to reduce the frequency of garbage
	 * collection. The system should check `isPersistent` to determine whether the
	 * event should be released into the pool after being dispatched. Users that
	 * need a persisted event should invoke `persist`.
	 *
	 * Synthetic events (and subclasses) implement the DOM Level 3 Events API by
	 * normalizing browser quirks. Subclasses do not necessarily have to implement a
	 * DOM interface; custom application-specific events can also subclass this.
	 *
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {*} targetInst Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @param {DOMEventTarget} nativeEventTarget Target node.
	 */
	function SyntheticEvent(dispatchConfig, targetInst, nativeEvent, nativeEventTarget) {
	  {
	    // these have a getter/setter for warnings
	    delete this.nativeEvent;
	    delete this.preventDefault;
	    delete this.stopPropagation;
	    delete this.isDefaultPrevented;
	    delete this.isPropagationStopped;
	  }

	  this.dispatchConfig = dispatchConfig;
	  this._targetInst = targetInst;
	  this.nativeEvent = nativeEvent;

	  var Interface = this.constructor.Interface;
	  for (var propName in Interface) {
	    if (!Interface.hasOwnProperty(propName)) {
	      continue;
	    }
	    {
	      delete this[propName]; // this has a getter/setter for warnings
	    }
	    var normalize = Interface[propName];
	    if (normalize) {
	      this[propName] = normalize(nativeEvent);
	    } else {
	      if (propName === 'target') {
	        this.target = nativeEventTarget;
	      } else {
	        this[propName] = nativeEvent[propName];
	      }
	    }
	  }

	  var defaultPrevented = nativeEvent.defaultPrevented != null ? nativeEvent.defaultPrevented : nativeEvent.returnValue === false;
	  if (defaultPrevented) {
	    this.isDefaultPrevented = functionThatReturnsTrue;
	  } else {
	    this.isDefaultPrevented = functionThatReturnsFalse;
	  }
	  this.isPropagationStopped = functionThatReturnsFalse;
	  return this;
	}

	_assign(SyntheticEvent.prototype, {
	  preventDefault: function () {
	    this.defaultPrevented = true;
	    var event = this.nativeEvent;
	    if (!event) {
	      return;
	    }

	    if (event.preventDefault) {
	      event.preventDefault();
	    } else if (typeof event.returnValue !== 'unknown') {
	      event.returnValue = false;
	    }
	    this.isDefaultPrevented = functionThatReturnsTrue;
	  },

	  stopPropagation: function () {
	    var event = this.nativeEvent;
	    if (!event) {
	      return;
	    }

	    if (event.stopPropagation) {
	      event.stopPropagation();
	    } else if (typeof event.cancelBubble !== 'unknown') {
	      // The ChangeEventPlugin registers a "propertychange" event for
	      // IE. This event does not support bubbling or cancelling, and
	      // any references to cancelBubble throw "Member not found".  A
	      // typeof check of "unknown" circumvents this issue (and is also
	      // IE specific).
	      event.cancelBubble = true;
	    }

	    this.isPropagationStopped = functionThatReturnsTrue;
	  },

	  /**
	   * We release all dispatched `SyntheticEvent`s after each event loop, adding
	   * them back into the pool. This allows a way to hold onto a reference that
	   * won't be added back into the pool.
	   */
	  persist: function () {
	    this.isPersistent = functionThatReturnsTrue;
	  },

	  /**
	   * Checks if this event should be released back into the pool.
	   *
	   * @return {boolean} True if this should not be released, false otherwise.
	   */
	  isPersistent: functionThatReturnsFalse,

	  /**
	   * `PooledClass` looks for `destructor` on each instance it releases.
	   */
	  destructor: function () {
	    var Interface = this.constructor.Interface;
	    for (var propName in Interface) {
	      {
	        Object.defineProperty(this, propName, getPooledWarningPropertyDefinition(propName, Interface[propName]));
	      }
	    }
	    this.dispatchConfig = null;
	    this._targetInst = null;
	    this.nativeEvent = null;
	    this.isDefaultPrevented = functionThatReturnsFalse;
	    this.isPropagationStopped = functionThatReturnsFalse;
	    this._dispatchListeners = null;
	    this._dispatchInstances = null;
	    {
	      Object.defineProperty(this, 'nativeEvent', getPooledWarningPropertyDefinition('nativeEvent', null));
	      Object.defineProperty(this, 'isDefaultPrevented', getPooledWarningPropertyDefinition('isDefaultPrevented', functionThatReturnsFalse));
	      Object.defineProperty(this, 'isPropagationStopped', getPooledWarningPropertyDefinition('isPropagationStopped', functionThatReturnsFalse));
	      Object.defineProperty(this, 'preventDefault', getPooledWarningPropertyDefinition('preventDefault', function () {}));
	      Object.defineProperty(this, 'stopPropagation', getPooledWarningPropertyDefinition('stopPropagation', function () {}));
	    }
	  }
	});

	SyntheticEvent.Interface = EventInterface;

	/**
	 * Helper to reduce boilerplate when creating subclasses.
	 */
	SyntheticEvent.extend = function (Interface) {
	  var Super = this;

	  var E = function () {};
	  E.prototype = Super.prototype;
	  var prototype = new E();

	  function Class() {
	    return Super.apply(this, arguments);
	  }
	  _assign(prototype, Class.prototype);
	  Class.prototype = prototype;
	  Class.prototype.constructor = Class;

	  Class.Interface = _assign({}, Super.Interface, Interface);
	  Class.extend = Super.extend;
	  addEventPoolingTo(Class);

	  return Class;
	};

	addEventPoolingTo(SyntheticEvent);

	/**
	 * Helper to nullify syntheticEvent instance properties when destructing
	 *
	 * @param {String} propName
	 * @param {?object} getVal
	 * @return {object} defineProperty object
	 */
	function getPooledWarningPropertyDefinition(propName, getVal) {
	  var isFunction = typeof getVal === 'function';
	  return {
	    configurable: true,
	    set: set,
	    get: get
	  };

	  function set(val) {
	    var action = isFunction ? 'setting the method' : 'setting the property';
	    warn(action, 'This is effectively a no-op');
	    return val;
	  }

	  function get() {
	    var action = isFunction ? 'accessing the method' : 'accessing the property';
	    var result = isFunction ? 'This is a no-op function' : 'This is set to null';
	    warn(action, result);
	    return getVal;
	  }

	  function warn(action, result) {
	    var warningCondition = false;
	    !warningCondition ? warningWithoutStack$1(false, "This synthetic event is reused for performance reasons. If you're seeing this, " + "you're %s `%s` on a released/nullified synthetic event. %s. " + 'If you must keep the original synthetic event around, use event.persist(). ' + 'See https://fb.me/react-event-pooling for more information.', action, propName, result) : void 0;
	  }
	}

	function getPooledEvent(dispatchConfig, targetInst, nativeEvent, nativeInst) {
	  var EventConstructor = this;
	  if (EventConstructor.eventPool.length) {
	    var instance = EventConstructor.eventPool.pop();
	    EventConstructor.call(instance, dispatchConfig, targetInst, nativeEvent, nativeInst);
	    return instance;
	  }
	  return new EventConstructor(dispatchConfig, targetInst, nativeEvent, nativeInst);
	}

	function releasePooledEvent(event) {
	  var EventConstructor = this;
	  !(event instanceof EventConstructor) ? invariant(false, 'Trying to release an event instance into a pool of a different type.') : void 0;
	  event.destructor();
	  if (EventConstructor.eventPool.length < EVENT_POOL_SIZE) {
	    EventConstructor.eventPool.push(event);
	  }
	}

	function addEventPoolingTo(EventConstructor) {
	  EventConstructor.eventPool = [];
	  EventConstructor.getPooled = getPooledEvent;
	  EventConstructor.release = releasePooledEvent;
	}

	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/#events-compositionevents
	 */
	var SyntheticCompositionEvent = SyntheticEvent.extend({
	  data: null
	});

	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105
	 *      /#events-inputevents
	 */
	var SyntheticInputEvent = SyntheticEvent.extend({
	  data: null
	});

	var END_KEYCODES = [9, 13, 27, 32]; // Tab, Return, Esc, Space
	var START_KEYCODE = 229;

	var canUseCompositionEvent = canUseDOM && 'CompositionEvent' in window;

	var documentMode = null;
	if (canUseDOM && 'documentMode' in document) {
	  documentMode = document.documentMode;
	}

	// Webkit offers a very useful `textInput` event that can be used to
	// directly represent `beforeInput`. The IE `textinput` event is not as
	// useful, so we don't use it.
	var canUseTextInputEvent = canUseDOM && 'TextEvent' in window && !documentMode;

	// In IE9+, we have access to composition events, but the data supplied
	// by the native compositionend event may be incorrect. Japanese ideographic
	// spaces, for instance (\u3000) are not recorded correctly.
	var useFallbackCompositionData = canUseDOM && (!canUseCompositionEvent || documentMode && documentMode > 8 && documentMode <= 11);

	var SPACEBAR_CODE = 32;
	var SPACEBAR_CHAR = String.fromCharCode(SPACEBAR_CODE);

	// Events and their corresponding property names.
	var eventTypes = {
	  beforeInput: {
	    phasedRegistrationNames: {
	      bubbled: 'onBeforeInput',
	      captured: 'onBeforeInputCapture'
	    },
	    dependencies: [TOP_COMPOSITION_END, TOP_KEY_PRESS, TOP_TEXT_INPUT, TOP_PASTE]
	  },
	  compositionEnd: {
	    phasedRegistrationNames: {
	      bubbled: 'onCompositionEnd',
	      captured: 'onCompositionEndCapture'
	    },
	    dependencies: [TOP_BLUR, TOP_COMPOSITION_END, TOP_KEY_DOWN, TOP_KEY_PRESS, TOP_KEY_UP, TOP_MOUSE_DOWN]
	  },
	  compositionStart: {
	    phasedRegistrationNames: {
	      bubbled: 'onCompositionStart',
	      captured: 'onCompositionStartCapture'
	    },
	    dependencies: [TOP_BLUR, TOP_COMPOSITION_START, TOP_KEY_DOWN, TOP_KEY_PRESS, TOP_KEY_UP, TOP_MOUSE_DOWN]
	  },
	  compositionUpdate: {
	    phasedRegistrationNames: {
	      bubbled: 'onCompositionUpdate',
	      captured: 'onCompositionUpdateCapture'
	    },
	    dependencies: [TOP_BLUR, TOP_COMPOSITION_UPDATE, TOP_KEY_DOWN, TOP_KEY_PRESS, TOP_KEY_UP, TOP_MOUSE_DOWN]
	  }
	};

	// Track whether we've ever handled a keypress on the space key.
	var hasSpaceKeypress = false;

	/**
	 * Return whether a native keypress event is assumed to be a command.
	 * This is required because Firefox fires `keypress` events for key commands
	 * (cut, copy, select-all, etc.) even though no character is inserted.
	 */
	function isKeypressCommand(nativeEvent) {
	  return (nativeEvent.ctrlKey || nativeEvent.altKey || nativeEvent.metaKey) &&
	  // ctrlKey && altKey is equivalent to AltGr, and is not a command.
	  !(nativeEvent.ctrlKey && nativeEvent.altKey);
	}

	/**
	 * Translate native top level events into event types.
	 *
	 * @param {string} topLevelType
	 * @return {object}
	 */
	function getCompositionEventType(topLevelType) {
	  switch (topLevelType) {
	    case TOP_COMPOSITION_START:
	      return eventTypes.compositionStart;
	    case TOP_COMPOSITION_END:
	      return eventTypes.compositionEnd;
	    case TOP_COMPOSITION_UPDATE:
	      return eventTypes.compositionUpdate;
	  }
	}

	/**
	 * Does our fallback best-guess model think this event signifies that
	 * composition has begun?
	 *
	 * @param {string} topLevelType
	 * @param {object} nativeEvent
	 * @return {boolean}
	 */
	function isFallbackCompositionStart(topLevelType, nativeEvent) {
	  return topLevelType === TOP_KEY_DOWN && nativeEvent.keyCode === START_KEYCODE;
	}

	/**
	 * Does our fallback mode think that this event is the end of composition?
	 *
	 * @param {string} topLevelType
	 * @param {object} nativeEvent
	 * @return {boolean}
	 */
	function isFallbackCompositionEnd(topLevelType, nativeEvent) {
	  switch (topLevelType) {
	    case TOP_KEY_UP:
	      // Command keys insert or clear IME input.
	      return END_KEYCODES.indexOf(nativeEvent.keyCode) !== -1;
	    case TOP_KEY_DOWN:
	      // Expect IME keyCode on each keydown. If we get any other
	      // code we must have exited earlier.
	      return nativeEvent.keyCode !== START_KEYCODE;
	    case TOP_KEY_PRESS:
	    case TOP_MOUSE_DOWN:
	    case TOP_BLUR:
	      // Events are not possible without cancelling IME.
	      return true;
	    default:
	      return false;
	  }
	}

	/**
	 * Google Input Tools provides composition data via a CustomEvent,
	 * with the `data` property populated in the `detail` object. If this
	 * is available on the event object, use it. If not, this is a plain
	 * composition event and we have nothing special to extract.
	 *
	 * @param {object} nativeEvent
	 * @return {?string}
	 */
	function getDataFromCustomEvent(nativeEvent) {
	  var detail = nativeEvent.detail;
	  if (typeof detail === 'object' && 'data' in detail) {
	    return detail.data;
	  }
	  return null;
	}

	/**
	 * Check if a composition event was triggered by Korean IME.
	 * Our fallback mode does not work well with IE's Korean IME,
	 * so just use native composition events when Korean IME is used.
	 * Although CompositionEvent.locale property is deprecated,
	 * it is available in IE, where our fallback mode is enabled.
	 *
	 * @param {object} nativeEvent
	 * @return {boolean}
	 */
	function isUsingKoreanIME(nativeEvent) {
	  return nativeEvent.locale === 'ko';
	}

	// Track the current IME composition status, if any.
	var isComposing = false;

	/**
	 * @return {?object} A SyntheticCompositionEvent.
	 */
	function extractCompositionEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	  var eventType = void 0;
	  var fallbackData = void 0;

	  if (canUseCompositionEvent) {
	    eventType = getCompositionEventType(topLevelType);
	  } else if (!isComposing) {
	    if (isFallbackCompositionStart(topLevelType, nativeEvent)) {
	      eventType = eventTypes.compositionStart;
	    }
	  } else if (isFallbackCompositionEnd(topLevelType, nativeEvent)) {
	    eventType = eventTypes.compositionEnd;
	  }

	  if (!eventType) {
	    return null;
	  }

	  if (useFallbackCompositionData && !isUsingKoreanIME(nativeEvent)) {
	    // The current composition is stored statically and must not be
	    // overwritten while composition continues.
	    if (!isComposing && eventType === eventTypes.compositionStart) {
	      isComposing = initialize(nativeEventTarget);
	    } else if (eventType === eventTypes.compositionEnd) {
	      if (isComposing) {
	        fallbackData = getData();
	      }
	    }
	  }

	  var event = SyntheticCompositionEvent.getPooled(eventType, targetInst, nativeEvent, nativeEventTarget);

	  if (fallbackData) {
	    // Inject data generated from fallback path into the synthetic event.
	    // This matches the property of native CompositionEventInterface.
	    event.data = fallbackData;
	  } else {
	    var customData = getDataFromCustomEvent(nativeEvent);
	    if (customData !== null) {
	      event.data = customData;
	    }
	  }

	  accumulateTwoPhaseDispatches(event);
	  return event;
	}

	/**
	 * @param {TopLevelType} topLevelType Number from `TopLevelType`.
	 * @param {object} nativeEvent Native browser event.
	 * @return {?string} The string corresponding to this `beforeInput` event.
	 */
	function getNativeBeforeInputChars(topLevelType, nativeEvent) {
	  switch (topLevelType) {
	    case TOP_COMPOSITION_END:
	      return getDataFromCustomEvent(nativeEvent);
	    case TOP_KEY_PRESS:
	      /**
	       * If native `textInput` events are available, our goal is to make
	       * use of them. However, there is a special case: the spacebar key.
	       * In Webkit, preventing default on a spacebar `textInput` event
	       * cancels character insertion, but it *also* causes the browser
	       * to fall back to its default spacebar behavior of scrolling the
	       * page.
	       *
	       * Tracking at:
	       * https://code.google.com/p/chromium/issues/detail?id=355103
	       *
	       * To avoid this issue, use the keypress event as if no `textInput`
	       * event is available.
	       */
	      var which = nativeEvent.which;
	      if (which !== SPACEBAR_CODE) {
	        return null;
	      }

	      hasSpaceKeypress = true;
	      return SPACEBAR_CHAR;

	    case TOP_TEXT_INPUT:
	      // Record the characters to be added to the DOM.
	      var chars = nativeEvent.data;

	      // If it's a spacebar character, assume that we have already handled
	      // it at the keypress level and bail immediately. Android Chrome
	      // doesn't give us keycodes, so we need to ignore it.
	      if (chars === SPACEBAR_CHAR && hasSpaceKeypress) {
	        return null;
	      }

	      return chars;

	    default:
	      // For other native event types, do nothing.
	      return null;
	  }
	}

	/**
	 * For browsers that do not provide the `textInput` event, extract the
	 * appropriate string to use for SyntheticInputEvent.
	 *
	 * @param {number} topLevelType Number from `TopLevelEventTypes`.
	 * @param {object} nativeEvent Native browser event.
	 * @return {?string} The fallback string for this `beforeInput` event.
	 */
	function getFallbackBeforeInputChars(topLevelType, nativeEvent) {
	  // If we are currently composing (IME) and using a fallback to do so,
	  // try to extract the composed characters from the fallback object.
	  // If composition event is available, we extract a string only at
	  // compositionevent, otherwise extract it at fallback events.
	  if (isComposing) {
	    if (topLevelType === TOP_COMPOSITION_END || !canUseCompositionEvent && isFallbackCompositionEnd(topLevelType, nativeEvent)) {
	      var chars = getData();
	      reset();
	      isComposing = false;
	      return chars;
	    }
	    return null;
	  }

	  switch (topLevelType) {
	    case TOP_PASTE:
	      // If a paste event occurs after a keypress, throw out the input
	      // chars. Paste events should not lead to BeforeInput events.
	      return null;
	    case TOP_KEY_PRESS:
	      /**
	       * As of v27, Firefox may fire keypress events even when no character
	       * will be inserted. A few possibilities:
	       *
	       * - `which` is `0`. Arrow keys, Esc key, etc.
	       *
	       * - `which` is the pressed key code, but no char is available.
	       *   Ex: 'AltGr + d` in Polish. There is no modified character for
	       *   this key combination and no character is inserted into the
	       *   document, but FF fires the keypress for char code `100` anyway.
	       *   No `input` event will occur.
	       *
	       * - `which` is the pressed key code, but a command combination is
	       *   being used. Ex: `Cmd+C`. No character is inserted, and no
	       *   `input` event will occur.
	       */
	      if (!isKeypressCommand(nativeEvent)) {
	        // IE fires the `keypress` event when a user types an emoji via
	        // Touch keyboard of Windows.  In such a case, the `char` property
	        // holds an emoji character like `\uD83D\uDE0A`.  Because its length
	        // is 2, the property `which` does not represent an emoji correctly.
	        // In such a case, we directly return the `char` property instead of
	        // using `which`.
	        if (nativeEvent.char && nativeEvent.char.length > 1) {
	          return nativeEvent.char;
	        } else if (nativeEvent.which) {
	          return String.fromCharCode(nativeEvent.which);
	        }
	      }
	      return null;
	    case TOP_COMPOSITION_END:
	      return useFallbackCompositionData && !isUsingKoreanIME(nativeEvent) ? null : nativeEvent.data;
	    default:
	      return null;
	  }
	}

	/**
	 * Extract a SyntheticInputEvent for `beforeInput`, based on either native
	 * `textInput` or fallback behavior.
	 *
	 * @return {?object} A SyntheticInputEvent.
	 */
	function extractBeforeInputEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	  var chars = void 0;

	  if (canUseTextInputEvent) {
	    chars = getNativeBeforeInputChars(topLevelType, nativeEvent);
	  } else {
	    chars = getFallbackBeforeInputChars(topLevelType, nativeEvent);
	  }

	  // If no characters are being inserted, no BeforeInput event should
	  // be fired.
	  if (!chars) {
	    return null;
	  }

	  var event = SyntheticInputEvent.getPooled(eventTypes.beforeInput, targetInst, nativeEvent, nativeEventTarget);

	  event.data = chars;
	  accumulateTwoPhaseDispatches(event);
	  return event;
	}

	/**
	 * Create an `onBeforeInput` event to match
	 * http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105/#events-inputevents.
	 *
	 * This event plugin is based on the native `textInput` event
	 * available in Chrome, Safari, Opera, and IE. This event fires after
	 * `onKeyPress` and `onCompositionEnd`, but before `onInput`.
	 *
	 * `beforeInput` is spec'd but not implemented in any browsers, and
	 * the `input` event does not provide any useful information about what has
	 * actually been added, contrary to the spec. Thus, `textInput` is the best
	 * available event to identify the characters that have actually been inserted
	 * into the target node.
	 *
	 * This plugin is also responsible for emitting `composition` events, thus
	 * allowing us to share composition fallback code for both `beforeInput` and
	 * `composition` event types.
	 */
	var BeforeInputEventPlugin = {
	  eventTypes: eventTypes,

	  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    var composition = extractCompositionEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget);

	    var beforeInput = extractBeforeInputEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget);

	    if (composition === null) {
	      return beforeInput;
	    }

	    if (beforeInput === null) {
	      return composition;
	    }

	    return [composition, beforeInput];
	  }
	};

	// Use to restore controlled state after a change event has fired.

	var restoreImpl = null;
	var restoreTarget = null;
	var restoreQueue = null;

	function restoreStateOfTarget(target) {
	  // We perform this translation at the end of the event loop so that we
	  // always receive the correct fiber here
	  var internalInstance = getInstanceFromNode(target);
	  if (!internalInstance) {
	    // Unmounted
	    return;
	  }
	  !(typeof restoreImpl === 'function') ? invariant(false, 'setRestoreImplementation() needs to be called to handle a target for controlled events. This error is likely caused by a bug in React. Please file an issue.') : void 0;
	  var props = getFiberCurrentPropsFromNode(internalInstance.stateNode);
	  restoreImpl(internalInstance.stateNode, internalInstance.type, props);
	}

	function setRestoreImplementation(impl) {
	  restoreImpl = impl;
	}

	function enqueueStateRestore(target) {
	  if (restoreTarget) {
	    if (restoreQueue) {
	      restoreQueue.push(target);
	    } else {
	      restoreQueue = [target];
	    }
	  } else {
	    restoreTarget = target;
	  }
	}

	function needsStateRestore() {
	  return restoreTarget !== null || restoreQueue !== null;
	}

	function restoreStateIfNeeded() {
	  if (!restoreTarget) {
	    return;
	  }
	  var target = restoreTarget;
	  var queuedTargets = restoreQueue;
	  restoreTarget = null;
	  restoreQueue = null;

	  restoreStateOfTarget(target);
	  if (queuedTargets) {
	    for (var i = 0; i < queuedTargets.length; i++) {
	      restoreStateOfTarget(queuedTargets[i]);
	    }
	  }
	}

	// Used as a way to call batchedUpdates when we don't have a reference to
	// the renderer. Such as when we're dispatching events or if third party
	// libraries need to call batchedUpdates. Eventually, this API will go away when
	// everything is batched by default. We'll then have a similar API to opt-out of
	// scheduled work and instead do synchronous work.

	// Defaults
	var _batchedUpdatesImpl = function (fn, bookkeeping) {
	  return fn(bookkeeping);
	};
	var _interactiveUpdatesImpl = function (fn, a, b) {
	  return fn(a, b);
	};
	var _flushInteractiveUpdatesImpl = function () {};

	var isBatching = false;
	function batchedUpdates(fn, bookkeeping) {
	  if (isBatching) {
	    // If we are currently inside another batch, we need to wait until it
	    // fully completes before restoring state.
	    return fn(bookkeeping);
	  }
	  isBatching = true;
	  try {
	    return _batchedUpdatesImpl(fn, bookkeeping);
	  } finally {
	    // Here we wait until all updates have propagated, which is important
	    // when using controlled components within layers:
	    // https://github.com/facebook/react/issues/1698
	    // Then we restore state of any controlled component.
	    isBatching = false;
	    var controlledComponentsHavePendingUpdates = needsStateRestore();
	    if (controlledComponentsHavePendingUpdates) {
	      // If a controlled event was fired, we may need to restore the state of
	      // the DOM node back to the controlled value. This is necessary when React
	      // bails out of the update without touching the DOM.
	      _flushInteractiveUpdatesImpl();
	      restoreStateIfNeeded();
	    }
	  }
	}

	function interactiveUpdates(fn, a, b) {
	  return _interactiveUpdatesImpl(fn, a, b);
	}



	function setBatchingImplementation(batchedUpdatesImpl, interactiveUpdatesImpl, flushInteractiveUpdatesImpl) {
	  _batchedUpdatesImpl = batchedUpdatesImpl;
	  _interactiveUpdatesImpl = interactiveUpdatesImpl;
	  _flushInteractiveUpdatesImpl = flushInteractiveUpdatesImpl;
	}

	/**
	 * @see http://www.whatwg.org/specs/web-apps/current-work/multipage/the-input-element.html#input-type-attr-summary
	 */
	var supportedInputTypes = {
	  color: true,
	  date: true,
	  datetime: true,
	  'datetime-local': true,
	  email: true,
	  month: true,
	  number: true,
	  password: true,
	  range: true,
	  search: true,
	  tel: true,
	  text: true,
	  time: true,
	  url: true,
	  week: true
	};

	function isTextInputElement(elem) {
	  var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();

	  if (nodeName === 'input') {
	    return !!supportedInputTypes[elem.type];
	  }

	  if (nodeName === 'textarea') {
	    return true;
	  }

	  return false;
	}

	/**
	 * HTML nodeType values that represent the type of the node
	 */

	var ELEMENT_NODE = 1;
	var TEXT_NODE = 3;
	var COMMENT_NODE = 8;
	var DOCUMENT_NODE = 9;
	var DOCUMENT_FRAGMENT_NODE = 11;

	/**
	 * Gets the target node from a native browser event by accounting for
	 * inconsistencies in browser DOM APIs.
	 *
	 * @param {object} nativeEvent Native browser event.
	 * @return {DOMEventTarget} Target node.
	 */
	function getEventTarget(nativeEvent) {
	  // Fallback to nativeEvent.srcElement for IE9
	  // https://github.com/facebook/react/issues/12506
	  var target = nativeEvent.target || nativeEvent.srcElement || window;

	  // Normalize SVG <use> element events #4963
	  if (target.correspondingUseElement) {
	    target = target.correspondingUseElement;
	  }

	  // Safari may fire events on text nodes (Node.TEXT_NODE is 3).
	  // @see http://www.quirksmode.org/js/events_properties.html
	  return target.nodeType === TEXT_NODE ? target.parentNode : target;
	}

	/**
	 * Checks if an event is supported in the current execution environment.
	 *
	 * NOTE: This will not work correctly for non-generic events such as `change`,
	 * `reset`, `load`, `error`, and `select`.
	 *
	 * Borrows from Modernizr.
	 *
	 * @param {string} eventNameSuffix Event name, e.g. "click".
	 * @return {boolean} True if the event is supported.
	 * @internal
	 * @license Modernizr 3.0.0pre (Custom Build) | MIT
	 */
	function isEventSupported(eventNameSuffix) {
	  if (!canUseDOM) {
	    return false;
	  }

	  var eventName = 'on' + eventNameSuffix;
	  var isSupported = eventName in document;

	  if (!isSupported) {
	    var element = document.createElement('div');
	    element.setAttribute(eventName, 'return;');
	    isSupported = typeof element[eventName] === 'function';
	  }

	  return isSupported;
	}

	function isCheckable(elem) {
	  var type = elem.type;
	  var nodeName = elem.nodeName;
	  return nodeName && nodeName.toLowerCase() === 'input' && (type === 'checkbox' || type === 'radio');
	}

	function getTracker(node) {
	  return node._valueTracker;
	}

	function detachTracker(node) {
	  node._valueTracker = null;
	}

	function getValueFromNode(node) {
	  var value = '';
	  if (!node) {
	    return value;
	  }

	  if (isCheckable(node)) {
	    value = node.checked ? 'true' : 'false';
	  } else {
	    value = node.value;
	  }

	  return value;
	}

	function trackValueOnNode(node) {
	  var valueField = isCheckable(node) ? 'checked' : 'value';
	  var descriptor = Object.getOwnPropertyDescriptor(node.constructor.prototype, valueField);

	  var currentValue = '' + node[valueField];

	  // if someone has already defined a value or Safari, then bail
	  // and don't track value will cause over reporting of changes,
	  // but it's better then a hard failure
	  // (needed for certain tests that spyOn input values and Safari)
	  if (node.hasOwnProperty(valueField) || typeof descriptor === 'undefined' || typeof descriptor.get !== 'function' || typeof descriptor.set !== 'function') {
	    return;
	  }
	  var get = descriptor.get,
	      set = descriptor.set;

	  Object.defineProperty(node, valueField, {
	    configurable: true,
	    get: function () {
	      return get.call(this);
	    },
	    set: function (value) {
	      currentValue = '' + value;
	      set.call(this, value);
	    }
	  });
	  // We could've passed this the first time
	  // but it triggers a bug in IE11 and Edge 14/15.
	  // Calling defineProperty() again should be equivalent.
	  // https://github.com/facebook/react/issues/11768
	  Object.defineProperty(node, valueField, {
	    enumerable: descriptor.enumerable
	  });

	  var tracker = {
	    getValue: function () {
	      return currentValue;
	    },
	    setValue: function (value) {
	      currentValue = '' + value;
	    },
	    stopTracking: function () {
	      detachTracker(node);
	      delete node[valueField];
	    }
	  };
	  return tracker;
	}

	function track(node) {
	  if (getTracker(node)) {
	    return;
	  }

	  // TODO: Once it's just Fiber we can move this to node._wrapperState
	  node._valueTracker = trackValueOnNode(node);
	}

	function updateValueIfChanged(node) {
	  if (!node) {
	    return false;
	  }

	  var tracker = getTracker(node);
	  // if there is no tracker at this point it's unlikely
	  // that trying again will succeed
	  if (!tracker) {
	    return true;
	  }

	  var lastValue = tracker.getValue();
	  var nextValue = getValueFromNode(node);
	  if (nextValue !== lastValue) {
	    tracker.setValue(nextValue);
	    return true;
	  }
	  return false;
	}

	var ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;

	// Prevent newer renderers from RTE when used with older react package versions.
	// Current owner and dispatcher used to share the same ref,
	// but PR #14548 split them out to better support the react-debug-tools package.
	if (!ReactSharedInternals.hasOwnProperty('ReactCurrentDispatcher')) {
	  ReactSharedInternals.ReactCurrentDispatcher = {
	    current: null
	  };
	}

	var BEFORE_SLASH_RE = /^(.*)[\\\/]/;

	var describeComponentFrame = function (name, source, ownerName) {
	  var sourceInfo = '';
	  if (source) {
	    var path = source.fileName;
	    var fileName = path.replace(BEFORE_SLASH_RE, '');
	    {
	      // In DEV, include code for a common special case:
	      // prefer "folder/index.js" instead of just "index.js".
	      if (/^index\./.test(fileName)) {
	        var match = path.match(BEFORE_SLASH_RE);
	        if (match) {
	          var pathBeforeSlash = match[1];
	          if (pathBeforeSlash) {
	            var folderName = pathBeforeSlash.replace(BEFORE_SLASH_RE, '');
	            fileName = folderName + '/' + fileName;
	          }
	        }
	      }
	    }
	    sourceInfo = ' (at ' + fileName + ':' + source.lineNumber + ')';
	  } else if (ownerName) {
	    sourceInfo = ' (created by ' + ownerName + ')';
	  }
	  return '\n    in ' + (name || 'Unknown') + sourceInfo;
	};

	// The Symbol used to tag the ReactElement-like types. If there is no native Symbol
	// nor polyfill, then a plain number is used for performance.
	var hasSymbol = typeof Symbol === 'function' && Symbol.for;

	var REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for('react.element') : 0xeac7;
	var REACT_PORTAL_TYPE = hasSymbol ? Symbol.for('react.portal') : 0xeaca;
	var REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for('react.fragment') : 0xeacb;
	var REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for('react.strict_mode') : 0xeacc;
	var REACT_PROFILER_TYPE = hasSymbol ? Symbol.for('react.profiler') : 0xead2;
	var REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for('react.provider') : 0xeacd;
	var REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for('react.context') : 0xeace;

	var REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for('react.concurrent_mode') : 0xeacf;
	var REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for('react.forward_ref') : 0xead0;
	var REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for('react.suspense') : 0xead1;
	var REACT_MEMO_TYPE = hasSymbol ? Symbol.for('react.memo') : 0xead3;
	var REACT_LAZY_TYPE = hasSymbol ? Symbol.for('react.lazy') : 0xead4;

	var MAYBE_ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
	var FAUX_ITERATOR_SYMBOL = '@@iterator';

	function getIteratorFn(maybeIterable) {
	  if (maybeIterable === null || typeof maybeIterable !== 'object') {
	    return null;
	  }
	  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];
	  if (typeof maybeIterator === 'function') {
	    return maybeIterator;
	  }
	  return null;
	}

	var Pending = 0;
	var Resolved = 1;
	var Rejected = 2;

	function refineResolvedLazyComponent(lazyComponent) {
	  return lazyComponent._status === Resolved ? lazyComponent._result : null;
	}

	function getWrappedName(outerType, innerType, wrapperName) {
	  var functionName = innerType.displayName || innerType.name || '';
	  return outerType.displayName || (functionName !== '' ? wrapperName + '(' + functionName + ')' : wrapperName);
	}

	function getComponentName(type) {
	  if (type == null) {
	    // Host root, text node or just invalid type.
	    return null;
	  }
	  {
	    if (typeof type.tag === 'number') {
	      warningWithoutStack$1(false, 'Received an unexpected object in getComponentName(). ' + 'This is likely a bug in React. Please file an issue.');
	    }
	  }
	  if (typeof type === 'function') {
	    return type.displayName || type.name || null;
	  }
	  if (typeof type === 'string') {
	    return type;
	  }
	  switch (type) {
	    case REACT_CONCURRENT_MODE_TYPE:
	      return 'ConcurrentMode';
	    case REACT_FRAGMENT_TYPE:
	      return 'Fragment';
	    case REACT_PORTAL_TYPE:
	      return 'Portal';
	    case REACT_PROFILER_TYPE:
	      return 'Profiler';
	    case REACT_STRICT_MODE_TYPE:
	      return 'StrictMode';
	    case REACT_SUSPENSE_TYPE:
	      return 'Suspense';
	  }
	  if (typeof type === 'object') {
	    switch (type.$$typeof) {
	      case REACT_CONTEXT_TYPE:
	        return 'Context.Consumer';
	      case REACT_PROVIDER_TYPE:
	        return 'Context.Provider';
	      case REACT_FORWARD_REF_TYPE:
	        return getWrappedName(type, type.render, 'ForwardRef');
	      case REACT_MEMO_TYPE:
	        return getComponentName(type.type);
	      case REACT_LAZY_TYPE:
	        {
	          var thenable = type;
	          var resolvedThenable = refineResolvedLazyComponent(thenable);
	          if (resolvedThenable) {
	            return getComponentName(resolvedThenable);
	          }
	        }
	    }
	  }
	  return null;
	}

	var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;

	function describeFiber(fiber) {
	  switch (fiber.tag) {
	    case HostRoot:
	    case HostPortal:
	    case HostText:
	    case Fragment:
	    case ContextProvider:
	    case ContextConsumer:
	      return '';
	    default:
	      var owner = fiber._debugOwner;
	      var source = fiber._debugSource;
	      var name = getComponentName(fiber.type);
	      var ownerName = null;
	      if (owner) {
	        ownerName = getComponentName(owner.type);
	      }
	      return describeComponentFrame(name, source, ownerName);
	  }
	}

	function getStackByFiberInDevAndProd(workInProgress) {
	  var info = '';
	  var node = workInProgress;
	  do {
	    info += describeFiber(node);
	    node = node.return;
	  } while (node);
	  return info;
	}

	var current = null;
	var phase = null;

	function getCurrentFiberOwnerNameInDevOrNull() {
	  {
	    if (current === null) {
	      return null;
	    }
	    var owner = current._debugOwner;
	    if (owner !== null && typeof owner !== 'undefined') {
	      return getComponentName(owner.type);
	    }
	  }
	  return null;
	}

	function getCurrentFiberStackInDev() {
	  {
	    if (current === null) {
	      return '';
	    }
	    // Safe because if current fiber exists, we are reconciling,
	    // and it is guaranteed to be the work-in-progress version.
	    return getStackByFiberInDevAndProd(current);
	  }
	  return '';
	}

	function resetCurrentFiber() {
	  {
	    ReactDebugCurrentFrame.getCurrentStack = null;
	    current = null;
	    phase = null;
	  }
	}

	function setCurrentFiber(fiber) {
	  {
	    ReactDebugCurrentFrame.getCurrentStack = getCurrentFiberStackInDev;
	    current = fiber;
	    phase = null;
	  }
	}

	function setCurrentPhase(lifeCyclePhase) {
	  {
	    phase = lifeCyclePhase;
	  }
	}

	/**
	 * Similar to invariant but only logs a warning if the condition is not met.
	 * This can be used to log issues in development environments in critical
	 * paths. Removing the logging code for production environments will keep the
	 * same logic and follow the same code paths.
	 */

	var warning = warningWithoutStack$1;

	{
	  warning = function (condition, format) {
	    if (condition) {
	      return;
	    }
	    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;
	    var stack = ReactDebugCurrentFrame.getStackAddendum();
	    // eslint-disable-next-line react-internal/warning-and-invariant-args

	    for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
	      args[_key - 2] = arguments[_key];
	    }

	    warningWithoutStack$1.apply(undefined, [false, format + '%s'].concat(args, [stack]));
	  };
	}

	var warning$1 = warning;

	// A reserved attribute.
	// It is handled by React separately and shouldn't be written to the DOM.
	var RESERVED = 0;

	// A simple string attribute.
	// Attributes that aren't in the whitelist are presumed to have this type.
	var STRING = 1;

	// A string attribute that accepts booleans in React. In HTML, these are called
	// "enumerated" attributes with "true" and "false" as possible values.
	// When true, it should be set to a "true" string.
	// When false, it should be set to a "false" string.
	var BOOLEANISH_STRING = 2;

	// A real boolean attribute.
	// When true, it should be present (set either to an empty string or its name).
	// When false, it should be omitted.
	var BOOLEAN = 3;

	// An attribute that can be used as a flag as well as with a value.
	// When true, it should be present (set either to an empty string or its name).
	// When false, it should be omitted.
	// For any other value, should be present with that value.
	var OVERLOADED_BOOLEAN = 4;

	// An attribute that must be numeric or parse as a numeric.
	// When falsy, it should be removed.
	var NUMERIC = 5;

	// An attribute that must be positive numeric or parse as a positive numeric.
	// When falsy, it should be removed.
	var POSITIVE_NUMERIC = 6;

	/* eslint-disable max-len */
	var ATTRIBUTE_NAME_START_CHAR = ':A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD';
	/* eslint-enable max-len */
	var ATTRIBUTE_NAME_CHAR = ATTRIBUTE_NAME_START_CHAR + '\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040';


	var ROOT_ATTRIBUTE_NAME = 'data-reactroot';
	var VALID_ATTRIBUTE_NAME_REGEX = new RegExp('^[' + ATTRIBUTE_NAME_START_CHAR + '][' + ATTRIBUTE_NAME_CHAR + ']*$');

	var hasOwnProperty = Object.prototype.hasOwnProperty;
	var illegalAttributeNameCache = {};
	var validatedAttributeNameCache = {};

	function isAttributeNameSafe(attributeName) {
	  if (hasOwnProperty.call(validatedAttributeNameCache, attributeName)) {
	    return true;
	  }
	  if (hasOwnProperty.call(illegalAttributeNameCache, attributeName)) {
	    return false;
	  }
	  if (VALID_ATTRIBUTE_NAME_REGEX.test(attributeName)) {
	    validatedAttributeNameCache[attributeName] = true;
	    return true;
	  }
	  illegalAttributeNameCache[attributeName] = true;
	  {
	    warning$1(false, 'Invalid attribute name: `%s`', attributeName);
	  }
	  return false;
	}

	function shouldIgnoreAttribute(name, propertyInfo, isCustomComponentTag) {
	  if (propertyInfo !== null) {
	    return propertyInfo.type === RESERVED;
	  }
	  if (isCustomComponentTag) {
	    return false;
	  }
	  if (name.length > 2 && (name[0] === 'o' || name[0] === 'O') && (name[1] === 'n' || name[1] === 'N')) {
	    return true;
	  }
	  return false;
	}

	function shouldRemoveAttributeWithWarning(name, value, propertyInfo, isCustomComponentTag) {
	  if (propertyInfo !== null && propertyInfo.type === RESERVED) {
	    return false;
	  }
	  switch (typeof value) {
	    case 'function':
	    // $FlowIssue symbol is perfectly valid here
	    case 'symbol':
	      // eslint-disable-line
	      return true;
	    case 'boolean':
	      {
	        if (isCustomComponentTag) {
	          return false;
	        }
	        if (propertyInfo !== null) {
	          return !propertyInfo.acceptsBooleans;
	        } else {
	          var prefix = name.toLowerCase().slice(0, 5);
	          return prefix !== 'data-' && prefix !== 'aria-';
	        }
	      }
	    default:
	      return false;
	  }
	}

	function shouldRemoveAttribute(name, value, propertyInfo, isCustomComponentTag) {
	  if (value === null || typeof value === 'undefined') {
	    return true;
	  }
	  if (shouldRemoveAttributeWithWarning(name, value, propertyInfo, isCustomComponentTag)) {
	    return true;
	  }
	  if (isCustomComponentTag) {
	    return false;
	  }
	  if (propertyInfo !== null) {
	    switch (propertyInfo.type) {
	      case BOOLEAN:
	        return !value;
	      case OVERLOADED_BOOLEAN:
	        return value === false;
	      case NUMERIC:
	        return isNaN(value);
	      case POSITIVE_NUMERIC:
	        return isNaN(value) || value < 1;
	    }
	  }
	  return false;
	}

	function getPropertyInfo(name) {
	  return properties.hasOwnProperty(name) ? properties[name] : null;
	}

	function PropertyInfoRecord(name, type, mustUseProperty, attributeName, attributeNamespace) {
	  this.acceptsBooleans = type === BOOLEANISH_STRING || type === BOOLEAN || type === OVERLOADED_BOOLEAN;
	  this.attributeName = attributeName;
	  this.attributeNamespace = attributeNamespace;
	  this.mustUseProperty = mustUseProperty;
	  this.propertyName = name;
	  this.type = type;
	}

	// When adding attributes to this list, be sure to also add them to
	// the `possibleStandardNames` module to ensure casing and incorrect
	// name warnings.
	var properties = {};

	// These props are reserved by React. They shouldn't be written to the DOM.
	['children', 'dangerouslySetInnerHTML',
	// TODO: This prevents the assignment of defaultValue to regular
	// elements (not just inputs). Now that ReactDOMInput assigns to the
	// defaultValue property -- do we need this?
	'defaultValue', 'defaultChecked', 'innerHTML', 'suppressContentEditableWarning', 'suppressHydrationWarning', 'style'].forEach(function (name) {
	  properties[name] = new PropertyInfoRecord(name, RESERVED, false, // mustUseProperty
	  name, // attributeName
	  null);
	} // attributeNamespace
	);

	// A few React string attributes have a different name.
	// This is a mapping from React prop names to the attribute names.
	[['acceptCharset', 'accept-charset'], ['className', 'class'], ['htmlFor', 'for'], ['httpEquiv', 'http-equiv']].forEach(function (_ref) {
	  var name = _ref[0],
	      attributeName = _ref[1];

	  properties[name] = new PropertyInfoRecord(name, STRING, false, // mustUseProperty
	  attributeName, // attributeName
	  null);
	} // attributeNamespace
	);

	// These are "enumerated" HTML attributes that accept "true" and "false".
	// In React, we let users pass `true` and `false` even though technically
	// these aren't boolean attributes (they are coerced to strings).
	['contentEditable', 'draggable', 'spellCheck', 'value'].forEach(function (name) {
	  properties[name] = new PropertyInfoRecord(name, BOOLEANISH_STRING, false, // mustUseProperty
	  name.toLowerCase(), // attributeName
	  null);
	} // attributeNamespace
	);

	// These are "enumerated" SVG attributes that accept "true" and "false".
	// In React, we let users pass `true` and `false` even though technically
	// these aren't boolean attributes (they are coerced to strings).
	// Since these are SVG attributes, their attribute names are case-sensitive.
	['autoReverse', 'externalResourcesRequired', 'focusable', 'preserveAlpha'].forEach(function (name) {
	  properties[name] = new PropertyInfoRecord(name, BOOLEANISH_STRING, false, // mustUseProperty
	  name, // attributeName
	  null);
	} // attributeNamespace
	);

	// These are HTML boolean attributes.
	['allowFullScreen', 'async',
	// Note: there is a special case that prevents it from being written to the DOM
	// on the client side because the browsers are inconsistent. Instead we call focus().
	'autoFocus', 'autoPlay', 'controls', 'default', 'defer', 'disabled', 'formNoValidate', 'hidden', 'loop', 'noModule', 'noValidate', 'open', 'playsInline', 'readOnly', 'required', 'reversed', 'scoped', 'seamless',
	// Microdata
	'itemScope'].forEach(function (name) {
	  properties[name] = new PropertyInfoRecord(name, BOOLEAN, false, // mustUseProperty
	  name.toLowerCase(), // attributeName
	  null);
	} // attributeNamespace
	);

	// These are the few React props that we set as DOM properties
	// rather than attributes. These are all booleans.
	['checked',
	// Note: `option.selected` is not updated if `select.multiple` is
	// disabled with `removeAttribute`. We have special logic for handling this.
	'multiple', 'muted', 'selected'].forEach(function (name) {
	  properties[name] = new PropertyInfoRecord(name, BOOLEAN, true, // mustUseProperty
	  name, // attributeName
	  null);
	} // attributeNamespace
	);

	// These are HTML attributes that are "overloaded booleans": they behave like
	// booleans, but can also accept a string value.
	['capture', 'download'].forEach(function (name) {
	  properties[name] = new PropertyInfoRecord(name, OVERLOADED_BOOLEAN, false, // mustUseProperty
	  name, // attributeName
	  null);
	} // attributeNamespace
	);

	// These are HTML attributes that must be positive numbers.
	['cols', 'rows', 'size', 'span'].forEach(function (name) {
	  properties[name] = new PropertyInfoRecord(name, POSITIVE_NUMERIC, false, // mustUseProperty
	  name, // attributeName
	  null);
	} // attributeNamespace
	);

	// These are HTML attributes that must be numbers.
	['rowSpan', 'start'].forEach(function (name) {
	  properties[name] = new PropertyInfoRecord(name, NUMERIC, false, // mustUseProperty
	  name.toLowerCase(), // attributeName
	  null);
	} // attributeNamespace
	);

	var CAMELIZE = /[\-\:]([a-z])/g;
	var capitalize = function (token) {
	  return token[1].toUpperCase();
	};

	// This is a list of all SVG attributes that need special casing, namespacing,
	// or boolean value assignment. Regular attributes that just accept strings
	// and have the same names are omitted, just like in the HTML whitelist.
	// Some of these attributes can be hard to find. This list was created by
	// scrapping the MDN documentation.
	['accent-height', 'alignment-baseline', 'arabic-form', 'baseline-shift', 'cap-height', 'clip-path', 'clip-rule', 'color-interpolation', 'color-interpolation-filters', 'color-profile', 'color-rendering', 'dominant-baseline', 'enable-background', 'fill-opacity', 'fill-rule', 'flood-color', 'flood-opacity', 'font-family', 'font-size', 'font-size-adjust', 'font-stretch', 'font-style', 'font-variant', 'font-weight', 'glyph-name', 'glyph-orientation-horizontal', 'glyph-orientation-vertical', 'horiz-adv-x', 'horiz-origin-x', 'image-rendering', 'letter-spacing', 'lighting-color', 'marker-end', 'marker-mid', 'marker-start', 'overline-position', 'overline-thickness', 'paint-order', 'panose-1', 'pointer-events', 'rendering-intent', 'shape-rendering', 'stop-color', 'stop-opacity', 'strikethrough-position', 'strikethrough-thickness', 'stroke-dasharray', 'stroke-dashoffset', 'stroke-linecap', 'stroke-linejoin', 'stroke-miterlimit', 'stroke-opacity', 'stroke-width', 'text-anchor', 'text-decoration', 'text-rendering', 'underline-position', 'underline-thickness', 'unicode-bidi', 'unicode-range', 'units-per-em', 'v-alphabetic', 'v-hanging', 'v-ideographic', 'v-mathematical', 'vector-effect', 'vert-adv-y', 'vert-origin-x', 'vert-origin-y', 'word-spacing', 'writing-mode', 'xmlns:xlink', 'x-height'].forEach(function (attributeName) {
	  var name = attributeName.replace(CAMELIZE, capitalize);
	  properties[name] = new PropertyInfoRecord(name, STRING, false, // mustUseProperty
	  attributeName, null);
	} // attributeNamespace
	);

	// String SVG attributes with the xlink namespace.
	['xlink:actuate', 'xlink:arcrole', 'xlink:href', 'xlink:role', 'xlink:show', 'xlink:title', 'xlink:type'].forEach(function (attributeName) {
	  var name = attributeName.replace(CAMELIZE, capitalize);
	  properties[name] = new PropertyInfoRecord(name, STRING, false, // mustUseProperty
	  attributeName, 'http://www.w3.org/1999/xlink');
	});

	// String SVG attributes with the xml namespace.
	['xml:base', 'xml:lang', 'xml:space'].forEach(function (attributeName) {
	  var name = attributeName.replace(CAMELIZE, capitalize);
	  properties[name] = new PropertyInfoRecord(name, STRING, false, // mustUseProperty
	  attributeName, 'http://www.w3.org/XML/1998/namespace');
	});

	// These attribute exists both in HTML and SVG.
	// The attribute name is case-sensitive in SVG so we can't just use
	// the React name like we do for attributes that exist only in HTML.
	['tabIndex', 'crossOrigin'].forEach(function (attributeName) {
	  properties[attributeName] = new PropertyInfoRecord(attributeName, STRING, false, // mustUseProperty
	  attributeName.toLowerCase(), // attributeName
	  null);
	} // attributeNamespace
	);

	/**
	 * Get the value for a property on a node. Only used in DEV for SSR validation.
	 * The "expected" argument is used as a hint of what the expected value is.
	 * Some properties have multiple equivalent values.
	 */
	function getValueForProperty(node, name, expected, propertyInfo) {
	  {
	    if (propertyInfo.mustUseProperty) {
	      var propertyName = propertyInfo.propertyName;

	      return node[propertyName];
	    } else {
	      var attributeName = propertyInfo.attributeName;

	      var stringValue = null;

	      if (propertyInfo.type === OVERLOADED_BOOLEAN) {
	        if (node.hasAttribute(attributeName)) {
	          var value = node.getAttribute(attributeName);
	          if (value === '') {
	            return true;
	          }
	          if (shouldRemoveAttribute(name, expected, propertyInfo, false)) {
	            return value;
	          }
	          if (value === '' + expected) {
	            return expected;
	          }
	          return value;
	        }
	      } else if (node.hasAttribute(attributeName)) {
	        if (shouldRemoveAttribute(name, expected, propertyInfo, false)) {
	          // We had an attribute but shouldn't have had one, so read it
	          // for the error message.
	          return node.getAttribute(attributeName);
	        }
	        if (propertyInfo.type === BOOLEAN) {
	          // If this was a boolean, it doesn't matter what the value is
	          // the fact that we have it is the same as the expected.
	          return expected;
	        }
	        // Even if this property uses a namespace we use getAttribute
	        // because we assume its namespaced name is the same as our config.
	        // To use getAttributeNS we need the local name which we don't have
	        // in our config atm.
	        stringValue = node.getAttribute(attributeName);
	      }

	      if (shouldRemoveAttribute(name, expected, propertyInfo, false)) {
	        return stringValue === null ? expected : stringValue;
	      } else if (stringValue === '' + expected) {
	        return expected;
	      } else {
	        return stringValue;
	      }
	    }
	  }
	}

	/**
	 * Get the value for a attribute on a node. Only used in DEV for SSR validation.
	 * The third argument is used as a hint of what the expected value is. Some
	 * attributes have multiple equivalent values.
	 */
	function getValueForAttribute(node, name, expected) {
	  {
	    if (!isAttributeNameSafe(name)) {
	      return;
	    }
	    if (!node.hasAttribute(name)) {
	      return expected === undefined ? undefined : null;
	    }
	    var value = node.getAttribute(name);
	    if (value === '' + expected) {
	      return expected;
	    }
	    return value;
	  }
	}

	/**
	 * Sets the value for a property on a node.
	 *
	 * @param {DOMElement} node
	 * @param {string} name
	 * @param {*} value
	 */
	function setValueForProperty(node, name, value, isCustomComponentTag) {
	  var propertyInfo = getPropertyInfo(name);
	  if (shouldIgnoreAttribute(name, propertyInfo, isCustomComponentTag)) {
	    return;
	  }
	  if (shouldRemoveAttribute(name, value, propertyInfo, isCustomComponentTag)) {
	    value = null;
	  }
	  // If the prop isn't in the special list, treat it as a simple attribute.
	  if (isCustomComponentTag || propertyInfo === null) {
	    if (isAttributeNameSafe(name)) {
	      var _attributeName = name;
	      if (value === null) {
	        node.removeAttribute(_attributeName);
	      } else {
	        node.setAttribute(_attributeName, '' + value);
	      }
	    }
	    return;
	  }
	  var mustUseProperty = propertyInfo.mustUseProperty;

	  if (mustUseProperty) {
	    var propertyName = propertyInfo.propertyName;

	    if (value === null) {
	      var type = propertyInfo.type;

	      node[propertyName] = type === BOOLEAN ? false : '';
	    } else {
	      // Contrary to `setAttribute`, object properties are properly
	      // `toString`ed by IE8/9.
	      node[propertyName] = value;
	    }
	    return;
	  }
	  // The rest are treated as attributes with special cases.
	  var attributeName = propertyInfo.attributeName,
	      attributeNamespace = propertyInfo.attributeNamespace;

	  if (value === null) {
	    node.removeAttribute(attributeName);
	  } else {
	    var _type = propertyInfo.type;

	    var attributeValue = void 0;
	    if (_type === BOOLEAN || _type === OVERLOADED_BOOLEAN && value === true) {
	      attributeValue = '';
	    } else {
	      // `setAttribute` with objects becomes only `[object]` in IE8/9,
	      // ('' + value) makes it output the correct toString()-value.
	      attributeValue = '' + value;
	    }
	    if (attributeNamespace) {
	      node.setAttributeNS(attributeNamespace, attributeName, attributeValue);
	    } else {
	      node.setAttribute(attributeName, attributeValue);
	    }
	  }
	}

	// Flow does not allow string concatenation of most non-string types. To work
	// around this limitation, we use an opaque type that can only be obtained by
	// passing the value through getToStringValue first.
	function toString(value) {
	  return '' + value;
	}

	function getToStringValue(value) {
	  switch (typeof value) {
	    case 'boolean':
	    case 'number':
	    case 'object':
	    case 'string':
	    case 'undefined':
	      return value;
	    default:
	      // function, symbol are assigned as empty strings
	      return '';
	  }
	}

	var ReactDebugCurrentFrame$1 = null;

	var ReactControlledValuePropTypes = {
	  checkPropTypes: null
	};

	{
	  ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;

	  var hasReadOnlyValue = {
	    button: true,
	    checkbox: true,
	    image: true,
	    hidden: true,
	    radio: true,
	    reset: true,
	    submit: true
	  };

	  var propTypes = {
	    value: function (props, propName, componentName) {
	      if (hasReadOnlyValue[props.type] || props.onChange || props.readOnly || props.disabled || props[propName] == null) {
	        return null;
	      }
	      return new Error('You provided a `value` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultValue`. Otherwise, ' + 'set either `onChange` or `readOnly`.');
	    },
	    checked: function (props, propName, componentName) {
	      if (props.onChange || props.readOnly || props.disabled || props[propName] == null) {
	        return null;
	      }
	      return new Error('You provided a `checked` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultChecked`. Otherwise, ' + 'set either `onChange` or `readOnly`.');
	    }
	  };

	  /**
	   * Provide a linked `value` attribute for controlled forms. You should not use
	   * this outside of the ReactDOM controlled form components.
	   */
	  ReactControlledValuePropTypes.checkPropTypes = function (tagName, props) {
	    checkPropTypes(propTypes, props, 'prop', tagName, ReactDebugCurrentFrame$1.getStackAddendum);
	  };
	}

	var enableUserTimingAPI = true;

	// Helps identify side effects in begin-phase lifecycle hooks and setState reducers:
	var debugRenderPhaseSideEffects = false;

	// In some cases, StrictMode should also double-render lifecycles.
	// This can be confusing for tests though,
	// And it can be bad for performance in production.
	// This feature flag can be used to control the behavior:
	var debugRenderPhaseSideEffectsForStrictMode = true;

	// To preserve the "Pause on caught exceptions" behavior of the debugger, we
	// replay the begin phase of a failed component inside invokeGuardedCallback.
	var replayFailedUnitOfWorkWithInvokeGuardedCallback = true;

	// Warn about deprecated, async-unsafe lifecycles; relates to RFC #6:
	var warnAboutDeprecatedLifecycles = false;

	// Gather advanced timing metrics for Profiler subtrees.
	var enableProfilerTimer = true;

	// Trace which interactions trigger each commit.
	var enableSchedulerTracing = true;

	// Only used in www builds.
	var enableSuspenseServerRenderer = false; // TODO: true? Here it might just be false.

	// Only used in www builds.


	// Only used in www builds.


	// React Fire: prevent the value and checked attributes from syncing
	// with their related DOM properties
	var disableInputAttributeSyncing = false;

	// These APIs will no longer be "unstable" in the upcoming 16.7 release,
	// Control this behavior with a flag to support 16.6 minor releases in the meanwhile.
	var enableStableConcurrentModeAPIs = false;

	var warnAboutShorthandPropertyCollision = false;

	// TODO: direct imports like some-package/src/* are bad. Fix me.
	var didWarnValueDefaultValue = false;
	var didWarnCheckedDefaultChecked = false;
	var didWarnControlledToUncontrolled = false;
	var didWarnUncontrolledToControlled = false;

	function isControlled(props) {
	  var usesChecked = props.type === 'checkbox' || props.type === 'radio';
	  return usesChecked ? props.checked != null : props.value != null;
	}

	/**
	 * Implements an <input> host component that allows setting these optional
	 * props: `checked`, `value`, `defaultChecked`, and `defaultValue`.
	 *
	 * If `checked` or `value` are not supplied (or null/undefined), user actions
	 * that affect the checked state or value will trigger updates to the element.
	 *
	 * If they are supplied (and not null/undefined), the rendered element will not
	 * trigger updates to the element. Instead, the props must change in order for
	 * the rendered element to be updated.
	 *
	 * The rendered element will be initialized as unchecked (or `defaultChecked`)
	 * with an empty value (or `defaultValue`).
	 *
	 * See http://www.w3.org/TR/2012/WD-html5-20121025/the-input-element.html
	 */

	function getHostProps(element, props) {
	  var node = element;
	  var checked = props.checked;

	  var hostProps = _assign({}, props, {
	    defaultChecked: undefined,
	    defaultValue: undefined,
	    value: undefined,
	    checked: checked != null ? checked : node._wrapperState.initialChecked
	  });

	  return hostProps;
	}

	function initWrapperState(element, props) {
	  {
	    ReactControlledValuePropTypes.checkPropTypes('input', props);

	    if (props.checked !== undefined && props.defaultChecked !== undefined && !didWarnCheckedDefaultChecked) {
	      warning$1(false, '%s contains an input of type %s with both checked and defaultChecked props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the checked prop, or the defaultChecked prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components', getCurrentFiberOwnerNameInDevOrNull() || 'A component', props.type);
	      didWarnCheckedDefaultChecked = true;
	    }
	    if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue) {
	      warning$1(false, '%s contains an input of type %s with both value and defaultValue props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components', getCurrentFiberOwnerNameInDevOrNull() || 'A component', props.type);
	      didWarnValueDefaultValue = true;
	    }
	  }

	  var node = element;
	  var defaultValue = props.defaultValue == null ? '' : props.defaultValue;

	  node._wrapperState = {
	    initialChecked: props.checked != null ? props.checked : props.defaultChecked,
	    initialValue: getToStringValue(props.value != null ? props.value : defaultValue),
	    controlled: isControlled(props)
	  };
	}

	function updateChecked(element, props) {
	  var node = element;
	  var checked = props.checked;
	  if (checked != null) {
	    setValueForProperty(node, 'checked', checked, false);
	  }
	}

	function updateWrapper(element, props) {
	  var node = element;
	  {
	    var _controlled = isControlled(props);

	    if (!node._wrapperState.controlled && _controlled && !didWarnUncontrolledToControlled) {
	      warning$1(false, 'A component is changing an uncontrolled input of type %s to be controlled. ' + 'Input elements should not switch from uncontrolled to controlled (or vice versa). ' + 'Decide between using a controlled or uncontrolled input ' + 'element for the lifetime of the component. More info: https://fb.me/react-controlled-components', props.type);
	      didWarnUncontrolledToControlled = true;
	    }
	    if (node._wrapperState.controlled && !_controlled && !didWarnControlledToUncontrolled) {
	      warning$1(false, 'A component is changing a controlled input of type %s to be uncontrolled. ' + 'Input elements should not switch from controlled to uncontrolled (or vice versa). ' + 'Decide between using a controlled or uncontrolled input ' + 'element for the lifetime of the component. More info: https://fb.me/react-controlled-components', props.type);
	      didWarnControlledToUncontrolled = true;
	    }
	  }

	  updateChecked(element, props);

	  var value = getToStringValue(props.value);
	  var type = props.type;

	  if (value != null) {
	    if (type === 'number') {
	      if (value === 0 && node.value === '' ||
	      // We explicitly want to coerce to number here if possible.
	      // eslint-disable-next-line
	      node.value != value) {
	        node.value = toString(value);
	      }
	    } else if (node.value !== toString(value)) {
	      node.value = toString(value);
	    }
	  } else if (type === 'submit' || type === 'reset') {
	    // Submit/reset inputs need the attribute removed completely to avoid
	    // blank-text buttons.
	    node.removeAttribute('value');
	    return;
	  }

	  if (disableInputAttributeSyncing) {
	    // When not syncing the value attribute, React only assigns a new value
	    // whenever the defaultValue React prop has changed. When not present,
	    // React does nothing
	    if (props.hasOwnProperty('defaultValue')) {
	      setDefaultValue(node, props.type, getToStringValue(props.defaultValue));
	    }
	  } else {
	    // When syncing the value attribute, the value comes from a cascade of
	    // properties:
	    //  1. The value React property
	    //  2. The defaultValue React property
	    //  3. Otherwise there should be no change
	    if (props.hasOwnProperty('value')) {
	      setDefaultValue(node, props.type, value);
	    } else if (props.hasOwnProperty('defaultValue')) {
	      setDefaultValue(node, props.type, getToStringValue(props.defaultValue));
	    }
	  }

	  if (disableInputAttributeSyncing) {
	    // When not syncing the checked attribute, the attribute is directly
	    // controllable from the defaultValue React property. It needs to be
	    // updated as new props come in.
	    if (props.defaultChecked == null) {
	      node.removeAttribute('checked');
	    } else {
	      node.defaultChecked = !!props.defaultChecked;
	    }
	  } else {
	    // When syncing the checked attribute, it only changes when it needs
	    // to be removed, such as transitioning from a checkbox into a text input
	    if (props.checked == null && props.defaultChecked != null) {
	      node.defaultChecked = !!props.defaultChecked;
	    }
	  }
	}

	function postMountWrapper(element, props, isHydrating) {
	  var node = element;

	  // Do not assign value if it is already set. This prevents user text input
	  // from being lost during SSR hydration.
	  if (props.hasOwnProperty('value') || props.hasOwnProperty('defaultValue')) {
	    var type = props.type;
	    var isButton = type === 'submit' || type === 'reset';

	    // Avoid setting value attribute on submit/reset inputs as it overrides the
	    // default value provided by the browser. See: #12872
	    if (isButton && (props.value === undefined || props.value === null)) {
	      return;
	    }

	    var _initialValue = toString(node._wrapperState.initialValue);

	    // Do not assign value if it is already set. This prevents user text input
	    // from being lost during SSR hydration.
	    if (!isHydrating) {
	      if (disableInputAttributeSyncing) {
	        var value = getToStringValue(props.value);

	        // When not syncing the value attribute, the value property points
	        // directly to the React prop. Only assign it if it exists.
	        if (value != null) {
	          // Always assign on buttons so that it is possible to assign an
	          // empty string to clear button text.
	          //
	          // Otherwise, do not re-assign the value property if is empty. This
	          // potentially avoids a DOM write and prevents Firefox (~60.0.1) from
	          // prematurely marking required inputs as invalid. Equality is compared
	          // to the current value in case the browser provided value is not an
	          // empty string.
	          if (isButton || value !== node.value) {
	            node.value = toString(value);
	          }
	        }
	      } else {
	        // When syncing the value attribute, the value property should use
	        // the wrapperState._initialValue property. This uses:
	        //
	        //   1. The value React property when present
	        //   2. The defaultValue React property when present
	        //   3. An empty string
	        if (_initialValue !== node.value) {
	          node.value = _initialValue;
	        }
	      }
	    }

	    if (disableInputAttributeSyncing) {
	      // When not syncing the value attribute, assign the value attribute
	      // directly from the defaultValue React property (when present)
	      var defaultValue = getToStringValue(props.defaultValue);
	      if (defaultValue != null) {
	        node.defaultValue = toString(defaultValue);
	      }
	    } else {
	      // Otherwise, the value attribute is synchronized to the property,
	      // so we assign defaultValue to the same thing as the value property
	      // assignment step above.
	      node.defaultValue = _initialValue;
	    }
	  }

	  // Normally, we'd just do `node.checked = node.checked` upon initial mount, less this bug
	  // this is needed to work around a chrome bug where setting defaultChecked
	  // will sometimes influence the value of checked (even after detachment).
	  // Reference: https://bugs.chromium.org/p/chromium/issues/detail?id=608416
	  // We need to temporarily unset name to avoid disrupting radio button groups.
	  var name = node.name;
	  if (name !== '') {
	    node.name = '';
	  }

	  if (disableInputAttributeSyncing) {
	    // When not syncing the checked attribute, the checked property
	    // never gets assigned. It must be manually set. We don't want
	    // to do this when hydrating so that existing user input isn't
	    // modified
	    if (!isHydrating) {
	      updateChecked(element, props);
	    }

	    // Only assign the checked attribute if it is defined. This saves
	    // a DOM write when controlling the checked attribute isn't needed
	    // (text inputs, submit/reset)
	    if (props.hasOwnProperty('defaultChecked')) {
	      node.defaultChecked = !node.defaultChecked;
	      node.defaultChecked = !!props.defaultChecked;
	    }
	  } else {
	    // When syncing the checked attribute, both the checked property and
	    // attribute are assigned at the same time using defaultChecked. This uses:
	    //
	    //   1. The checked React property when present
	    //   2. The defaultChecked React property when present
	    //   3. Otherwise, false
	    node.defaultChecked = !node.defaultChecked;
	    node.defaultChecked = !!node._wrapperState.initialChecked;
	  }

	  if (name !== '') {
	    node.name = name;
	  }
	}

	function restoreControlledState(element, props) {
	  var node = element;
	  updateWrapper(node, props);
	  updateNamedCousins(node, props);
	}

	function updateNamedCousins(rootNode, props) {
	  var name = props.name;
	  if (props.type === 'radio' && name != null) {
	    var queryRoot = rootNode;

	    while (queryRoot.parentNode) {
	      queryRoot = queryRoot.parentNode;
	    }

	    // If `rootNode.form` was non-null, then we could try `form.elements`,
	    // but that sometimes behaves strangely in IE8. We could also try using
	    // `form.getElementsByName`, but that will only return direct children
	    // and won't include inputs that use the HTML5 `form=` attribute. Since
	    // the input might not even be in a form. It might not even be in the
	    // document. Let's just use the local `querySelectorAll` to ensure we don't
	    // miss anything.
	    var group = queryRoot.querySelectorAll('input[name=' + JSON.stringify('' + name) + '][type="radio"]');

	    for (var i = 0; i < group.length; i++) {
	      var otherNode = group[i];
	      if (otherNode === rootNode || otherNode.form !== rootNode.form) {
	        continue;
	      }
	      // This will throw if radio buttons rendered by different copies of React
	      // and the same name are rendered into the same form (same as #1939).
	      // That's probably okay; we don't support it just as we don't support
	      // mixing React radio buttons with non-React ones.
	      var otherProps = getFiberCurrentPropsFromNode$1(otherNode);
	      !otherProps ? invariant(false, 'ReactDOMInput: Mixing React and non-React radio inputs with the same `name` is not supported.') : void 0;

	      // We need update the tracked value on the named cousin since the value
	      // was changed but the input saw no event or value set
	      updateValueIfChanged(otherNode);

	      // If this is a controlled radio button group, forcing the input that
	      // was previously checked to update will cause it to be come re-checked
	      // as appropriate.
	      updateWrapper(otherNode, otherProps);
	    }
	  }
	}

	// In Chrome, assigning defaultValue to certain input types triggers input validation.
	// For number inputs, the display value loses trailing decimal points. For email inputs,
	// Chrome raises "The specified value <x> is not a valid email address".
	//
	// Here we check to see if the defaultValue has actually changed, avoiding these problems
	// when the user is inputting text
	//
	// https://github.com/facebook/react/issues/7253
	function setDefaultValue(node, type, value) {
	  if (
	  // Focused number inputs synchronize on blur. See ChangeEventPlugin.js
	  type !== 'number' || node.ownerDocument.activeElement !== node) {
	    if (value == null) {
	      node.defaultValue = toString(node._wrapperState.initialValue);
	    } else if (node.defaultValue !== toString(value)) {
	      node.defaultValue = toString(value);
	    }
	  }
	}

	var eventTypes$1 = {
	  change: {
	    phasedRegistrationNames: {
	      bubbled: 'onChange',
	      captured: 'onChangeCapture'
	    },
	    dependencies: [TOP_BLUR, TOP_CHANGE, TOP_CLICK, TOP_FOCUS, TOP_INPUT, TOP_KEY_DOWN, TOP_KEY_UP, TOP_SELECTION_CHANGE]
	  }
	};

	function createAndAccumulateChangeEvent(inst, nativeEvent, target) {
	  var event = SyntheticEvent.getPooled(eventTypes$1.change, inst, nativeEvent, target);
	  event.type = 'change';
	  // Flag this event loop as needing state restore.
	  enqueueStateRestore(target);
	  accumulateTwoPhaseDispatches(event);
	  return event;
	}
	/**
	 * For IE shims
	 */
	var activeElement = null;
	var activeElementInst = null;

	/**
	 * SECTION: handle `change` event
	 */
	function shouldUseChangeEvent(elem) {
	  var nodeName = elem.nodeName && elem.nodeName.toLowerCase();
	  return nodeName === 'select' || nodeName === 'input' && elem.type === 'file';
	}

	function manualDispatchChangeEvent(nativeEvent) {
	  var event = createAndAccumulateChangeEvent(activeElementInst, nativeEvent, getEventTarget(nativeEvent));

	  // If change and propertychange bubbled, we'd just bind to it like all the
	  // other events and have it go through ReactBrowserEventEmitter. Since it
	  // doesn't, we manually listen for the events and so we have to enqueue and
	  // process the abstract event manually.
	  //
	  // Batching is necessary here in order to ensure that all event handlers run
	  // before the next rerender (including event handlers attached to ancestor
	  // elements instead of directly on the input). Without this, controlled
	  // components don't work properly in conjunction with event bubbling because
	  // the component is rerendered and the value reverted before all the event
	  // handlers can run. See https://github.com/facebook/react/issues/708.
	  batchedUpdates(runEventInBatch, event);
	}

	function runEventInBatch(event) {
	  runEventsInBatch(event);
	}

	function getInstIfValueChanged(targetInst) {
	  var targetNode = getNodeFromInstance$1(targetInst);
	  if (updateValueIfChanged(targetNode)) {
	    return targetInst;
	  }
	}

	function getTargetInstForChangeEvent(topLevelType, targetInst) {
	  if (topLevelType === TOP_CHANGE) {
	    return targetInst;
	  }
	}

	/**
	 * SECTION: handle `input` event
	 */
	var isInputEventSupported = false;
	if (canUseDOM) {
	  // IE9 claims to support the input event but fails to trigger it when
	  // deleting text, so we ignore its input events.
	  isInputEventSupported = isEventSupported('input') && (!document.documentMode || document.documentMode > 9);
	}

	/**
	 * (For IE <=9) Starts tracking propertychange events on the passed-in element
	 * and override the value property so that we can distinguish user events from
	 * value changes in JS.
	 */
	function startWatchingForValueChange(target, targetInst) {
	  activeElement = target;
	  activeElementInst = targetInst;
	  activeElement.attachEvent('onpropertychange', handlePropertyChange);
	}

	/**
	 * (For IE <=9) Removes the event listeners from the currently-tracked element,
	 * if any exists.
	 */
	function stopWatchingForValueChange() {
	  if (!activeElement) {
	    return;
	  }
	  activeElement.detachEvent('onpropertychange', handlePropertyChange);
	  activeElement = null;
	  activeElementInst = null;
	}

	/**
	 * (For IE <=9) Handles a propertychange event, sending a `change` event if
	 * the value of the active element has changed.
	 */
	function handlePropertyChange(nativeEvent) {
	  if (nativeEvent.propertyName !== 'value') {
	    return;
	  }
	  if (getInstIfValueChanged(activeElementInst)) {
	    manualDispatchChangeEvent(nativeEvent);
	  }
	}

	function handleEventsForInputEventPolyfill(topLevelType, target, targetInst) {
	  if (topLevelType === TOP_FOCUS) {
	    // In IE9, propertychange fires for most input events but is buggy and
	    // doesn't fire when text is deleted, but conveniently, selectionchange
	    // appears to fire in all of the remaining cases so we catch those and
	    // forward the event if the value has changed
	    // In either case, we don't want to call the event handler if the value
	    // is changed from JS so we redefine a setter for `.value` that updates
	    // our activeElementValue variable, allowing us to ignore those changes
	    //
	    // stopWatching() should be a noop here but we call it just in case we
	    // missed a blur event somehow.
	    stopWatchingForValueChange();
	    startWatchingForValueChange(target, targetInst);
	  } else if (topLevelType === TOP_BLUR) {
	    stopWatchingForValueChange();
	  }
	}

	// For IE8 and IE9.
	function getTargetInstForInputEventPolyfill(topLevelType, targetInst) {
	  if (topLevelType === TOP_SELECTION_CHANGE || topLevelType === TOP_KEY_UP || topLevelType === TOP_KEY_DOWN) {
	    // On the selectionchange event, the target is just document which isn't
	    // helpful for us so just check activeElement instead.
	    //
	    // 99% of the time, keydown and keyup aren't necessary. IE8 fails to fire
	    // propertychange on the first input event after setting `value` from a
	    // script and fires only keydown, keypress, keyup. Catching keyup usually
	    // gets it and catching keydown lets us fire an event for the first
	    // keystroke if user does a key repeat (it'll be a little delayed: right
	    // before the second keystroke). Other input methods (e.g., paste) seem to
	    // fire selectionchange normally.
	    return getInstIfValueChanged(activeElementInst);
	  }
	}

	/**
	 * SECTION: handle `click` event
	 */
	function shouldUseClickEvent(elem) {
	  // Use the `click` event to detect changes to checkbox and radio inputs.
	  // This approach works across all browsers, whereas `change` does not fire
	  // until `blur` in IE8.
	  var nodeName = elem.nodeName;
	  return nodeName && nodeName.toLowerCase() === 'input' && (elem.type === 'checkbox' || elem.type === 'radio');
	}

	function getTargetInstForClickEvent(topLevelType, targetInst) {
	  if (topLevelType === TOP_CLICK) {
	    return getInstIfValueChanged(targetInst);
	  }
	}

	function getTargetInstForInputOrChangeEvent(topLevelType, targetInst) {
	  if (topLevelType === TOP_INPUT || topLevelType === TOP_CHANGE) {
	    return getInstIfValueChanged(targetInst);
	  }
	}

	function handleControlledInputBlur(node) {
	  var state = node._wrapperState;

	  if (!state || !state.controlled || node.type !== 'number') {
	    return;
	  }

	  if (!disableInputAttributeSyncing) {
	    // If controlled, assign the value attribute to the current value on blur
	    setDefaultValue(node, 'number', node.value);
	  }
	}

	/**
	 * This plugin creates an `onChange` event that normalizes change events
	 * across form elements. This event fires at a time when it's possible to
	 * change the element's value without seeing a flicker.
	 *
	 * Supported elements are:
	 * - input (see `isTextInputElement`)
	 * - textarea
	 * - select
	 */
	var ChangeEventPlugin = {
	  eventTypes: eventTypes$1,

	  _isInputEventSupported: isInputEventSupported,

	  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    var targetNode = targetInst ? getNodeFromInstance$1(targetInst) : window;

	    var getTargetInstFunc = void 0,
	        handleEventFunc = void 0;
	    if (shouldUseChangeEvent(targetNode)) {
	      getTargetInstFunc = getTargetInstForChangeEvent;
	    } else if (isTextInputElement(targetNode)) {
	      if (isInputEventSupported) {
	        getTargetInstFunc = getTargetInstForInputOrChangeEvent;
	      } else {
	        getTargetInstFunc = getTargetInstForInputEventPolyfill;
	        handleEventFunc = handleEventsForInputEventPolyfill;
	      }
	    } else if (shouldUseClickEvent(targetNode)) {
	      getTargetInstFunc = getTargetInstForClickEvent;
	    }

	    if (getTargetInstFunc) {
	      var inst = getTargetInstFunc(topLevelType, targetInst);
	      if (inst) {
	        var event = createAndAccumulateChangeEvent(inst, nativeEvent, nativeEventTarget);
	        return event;
	      }
	    }

	    if (handleEventFunc) {
	      handleEventFunc(topLevelType, targetNode, targetInst);
	    }

	    // When blurring, set the value attribute for number inputs
	    if (topLevelType === TOP_BLUR) {
	      handleControlledInputBlur(targetNode);
	    }
	  }
	};

	/**
	 * Module that is injectable into `EventPluginHub`, that specifies a
	 * deterministic ordering of `EventPlugin`s. A convenient way to reason about
	 * plugins, without having to package every one of them. This is better than
	 * having plugins be ordered in the same order that they are injected because
	 * that ordering would be influenced by the packaging order.
	 * `ResponderEventPlugin` must occur before `SimpleEventPlugin` so that
	 * preventing default on events is convenient in `SimpleEventPlugin` handlers.
	 */
	var DOMEventPluginOrder = ['ResponderEventPlugin', 'SimpleEventPlugin', 'EnterLeaveEventPlugin', 'ChangeEventPlugin', 'SelectEventPlugin', 'BeforeInputEventPlugin'];

	var SyntheticUIEvent = SyntheticEvent.extend({
	  view: null,
	  detail: null
	});

	var modifierKeyToProp = {
	  Alt: 'altKey',
	  Control: 'ctrlKey',
	  Meta: 'metaKey',
	  Shift: 'shiftKey'
	};

	// Older browsers (Safari <= 10, iOS Safari <= 10.2) do not support
	// getModifierState. If getModifierState is not supported, we map it to a set of
	// modifier keys exposed by the event. In this case, Lock-keys are not supported.
	/**
	 * Translation from modifier key to the associated property in the event.
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/#keys-Modifiers
	 */

	function modifierStateGetter(keyArg) {
	  var syntheticEvent = this;
	  var nativeEvent = syntheticEvent.nativeEvent;
	  if (nativeEvent.getModifierState) {
	    return nativeEvent.getModifierState(keyArg);
	  }
	  var keyProp = modifierKeyToProp[keyArg];
	  return keyProp ? !!nativeEvent[keyProp] : false;
	}

	function getEventModifierState(nativeEvent) {
	  return modifierStateGetter;
	}

	var previousScreenX = 0;
	var previousScreenY = 0;
	// Use flags to signal movementX/Y has already been set
	var isMovementXSet = false;
	var isMovementYSet = false;

	/**
	 * @interface MouseEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var SyntheticMouseEvent = SyntheticUIEvent.extend({
	  screenX: null,
	  screenY: null,
	  clientX: null,
	  clientY: null,
	  pageX: null,
	  pageY: null,
	  ctrlKey: null,
	  shiftKey: null,
	  altKey: null,
	  metaKey: null,
	  getModifierState: getEventModifierState,
	  button: null,
	  buttons: null,
	  relatedTarget: function (event) {
	    return event.relatedTarget || (event.fromElement === event.srcElement ? event.toElement : event.fromElement);
	  },
	  movementX: function (event) {
	    if ('movementX' in event) {
	      return event.movementX;
	    }

	    var screenX = previousScreenX;
	    previousScreenX = event.screenX;

	    if (!isMovementXSet) {
	      isMovementXSet = true;
	      return 0;
	    }

	    return event.type === 'mousemove' ? event.screenX - screenX : 0;
	  },
	  movementY: function (event) {
	    if ('movementY' in event) {
	      return event.movementY;
	    }

	    var screenY = previousScreenY;
	    previousScreenY = event.screenY;

	    if (!isMovementYSet) {
	      isMovementYSet = true;
	      return 0;
	    }

	    return event.type === 'mousemove' ? event.screenY - screenY : 0;
	  }
	});

	/**
	 * @interface PointerEvent
	 * @see http://www.w3.org/TR/pointerevents/
	 */
	var SyntheticPointerEvent = SyntheticMouseEvent.extend({
	  pointerId: null,
	  width: null,
	  height: null,
	  pressure: null,
	  tangentialPressure: null,
	  tiltX: null,
	  tiltY: null,
	  twist: null,
	  pointerType: null,
	  isPrimary: null
	});

	var eventTypes$2 = {
	  mouseEnter: {
	    registrationName: 'onMouseEnter',
	    dependencies: [TOP_MOUSE_OUT, TOP_MOUSE_OVER]
	  },
	  mouseLeave: {
	    registrationName: 'onMouseLeave',
	    dependencies: [TOP_MOUSE_OUT, TOP_MOUSE_OVER]
	  },
	  pointerEnter: {
	    registrationName: 'onPointerEnter',
	    dependencies: [TOP_POINTER_OUT, TOP_POINTER_OVER]
	  },
	  pointerLeave: {
	    registrationName: 'onPointerLeave',
	    dependencies: [TOP_POINTER_OUT, TOP_POINTER_OVER]
	  }
	};

	var EnterLeaveEventPlugin = {
	  eventTypes: eventTypes$2,

	  /**
	   * For almost every interaction we care about, there will be both a top-level
	   * `mouseover` and `mouseout` event that occurs. Only use `mouseout` so that
	   * we do not extract duplicate events. However, moving the mouse into the
	   * browser from outside will not fire a `mouseout` event. In this case, we use
	   * the `mouseover` top-level event.
	   */
	  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    var isOverEvent = topLevelType === TOP_MOUSE_OVER || topLevelType === TOP_POINTER_OVER;
	    var isOutEvent = topLevelType === TOP_MOUSE_OUT || topLevelType === TOP_POINTER_OUT;

	    if (isOverEvent && (nativeEvent.relatedTarget || nativeEvent.fromElement)) {
	      return null;
	    }

	    if (!isOutEvent && !isOverEvent) {
	      // Must not be a mouse or pointer in or out - ignoring.
	      return null;
	    }

	    var win = void 0;
	    if (nativeEventTarget.window === nativeEventTarget) {
	      // `nativeEventTarget` is probably a window object.
	      win = nativeEventTarget;
	    } else {
	      // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.
	      var doc = nativeEventTarget.ownerDocument;
	      if (doc) {
	        win = doc.defaultView || doc.parentWindow;
	      } else {
	        win = window;
	      }
	    }

	    var from = void 0;
	    var to = void 0;
	    if (isOutEvent) {
	      from = targetInst;
	      var related = nativeEvent.relatedTarget || nativeEvent.toElement;
	      to = related ? getClosestInstanceFromNode(related) : null;
	    } else {
	      // Moving to a node from outside the window.
	      from = null;
	      to = targetInst;
	    }

	    if (from === to) {
	      // Nothing pertains to our managed components.
	      return null;
	    }

	    var eventInterface = void 0,
	        leaveEventType = void 0,
	        enterEventType = void 0,
	        eventTypePrefix = void 0;

	    if (topLevelType === TOP_MOUSE_OUT || topLevelType === TOP_MOUSE_OVER) {
	      eventInterface = SyntheticMouseEvent;
	      leaveEventType = eventTypes$2.mouseLeave;
	      enterEventType = eventTypes$2.mouseEnter;
	      eventTypePrefix = 'mouse';
	    } else if (topLevelType === TOP_POINTER_OUT || topLevelType === TOP_POINTER_OVER) {
	      eventInterface = SyntheticPointerEvent;
	      leaveEventType = eventTypes$2.pointerLeave;
	      enterEventType = eventTypes$2.pointerEnter;
	      eventTypePrefix = 'pointer';
	    }

	    var fromNode = from == null ? win : getNodeFromInstance$1(from);
	    var toNode = to == null ? win : getNodeFromInstance$1(to);

	    var leave = eventInterface.getPooled(leaveEventType, from, nativeEvent, nativeEventTarget);
	    leave.type = eventTypePrefix + 'leave';
	    leave.target = fromNode;
	    leave.relatedTarget = toNode;

	    var enter = eventInterface.getPooled(enterEventType, to, nativeEvent, nativeEventTarget);
	    enter.type = eventTypePrefix + 'enter';
	    enter.target = toNode;
	    enter.relatedTarget = fromNode;

	    accumulateEnterLeaveDispatches(leave, enter, from, to);

	    return [leave, enter];
	  }
	};

	/**
	 * inlined Object.is polyfill to avoid requiring consumers ship their own
	 * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
	 */
	function is(x, y) {
	  return x === y && (x !== 0 || 1 / x === 1 / y) || x !== x && y !== y // eslint-disable-line no-self-compare
	  ;
	}

	var hasOwnProperty$1 = Object.prototype.hasOwnProperty;

	/**
	 * Performs equality by iterating through keys on an object and returning false
	 * when any key has values which are not strictly equal between the arguments.
	 * Returns true when the values of all keys are strictly equal.
	 */
	function shallowEqual(objA, objB) {
	  if (is(objA, objB)) {
	    return true;
	  }

	  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {
	    return false;
	  }

	  var keysA = Object.keys(objA);
	  var keysB = Object.keys(objB);

	  if (keysA.length !== keysB.length) {
	    return false;
	  }

	  // Test for A's keys different from B.
	  for (var i = 0; i < keysA.length; i++) {
	    if (!hasOwnProperty$1.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {
	      return false;
	    }
	  }

	  return true;
	}

	/**
	 * `ReactInstanceMap` maintains a mapping from a public facing stateful
	 * instance (key) and the internal representation (value). This allows public
	 * methods to accept the user facing instance as an argument and map them back
	 * to internal methods.
	 *
	 * Note that this module is currently shared and assumed to be stateless.
	 * If this becomes an actual Map, that will break.
	 */

	/**
	 * This API should be called `delete` but we'd have to make sure to always
	 * transform these to strings for IE support. When this transform is fully
	 * supported we can rename it.
	 */


	function get(key) {
	  return key._reactInternalFiber;
	}

	function has(key) {
	  return key._reactInternalFiber !== undefined;
	}

	function set(key, value) {
	  key._reactInternalFiber = value;
	}

	// Don't change these two values. They're used by React Dev Tools.
	var NoEffect = /*              */0;
	var PerformedWork = /*         */1;

	// You can change the rest (and add more).
	var Placement = /*             */2;
	var Update = /*                */4;
	var PlacementAndUpdate = /*    */6;
	var Deletion = /*              */8;
	var ContentReset = /*          */16;
	var Callback = /*              */32;
	var DidCapture = /*            */64;
	var Ref = /*                   */128;
	var Snapshot = /*              */256;
	var Passive = /*               */512;

	// Passive & Update & Callback & Ref & Snapshot
	var LifecycleEffectMask = /*   */932;

	// Union of all host effects
	var HostEffectMask = /*        */1023;

	var Incomplete = /*            */1024;
	var ShouldCapture = /*         */2048;

	var ReactCurrentOwner$1 = ReactSharedInternals.ReactCurrentOwner;

	var MOUNTING = 1;
	var MOUNTED = 2;
	var UNMOUNTED = 3;

	function isFiberMountedImpl(fiber) {
	  var node = fiber;
	  if (!fiber.alternate) {
	    // If there is no alternate, this might be a new tree that isn't inserted
	    // yet. If it is, then it will have a pending insertion effect on it.
	    if ((node.effectTag & Placement) !== NoEffect) {
	      return MOUNTING;
	    }
	    while (node.return) {
	      node = node.return;
	      if ((node.effectTag & Placement) !== NoEffect) {
	        return MOUNTING;
	      }
	    }
	  } else {
	    while (node.return) {
	      node = node.return;
	    }
	  }
	  if (node.tag === HostRoot) {
	    // TODO: Check if this was a nested HostRoot when used with
	    // renderContainerIntoSubtree.
	    return MOUNTED;
	  }
	  // If we didn't hit the root, that means that we're in an disconnected tree
	  // that has been unmounted.
	  return UNMOUNTED;
	}

	function isFiberMounted(fiber) {
	  return isFiberMountedImpl(fiber) === MOUNTED;
	}

	function isMounted(component) {
	  {
	    var owner = ReactCurrentOwner$1.current;
	    if (owner !== null && owner.tag === ClassComponent) {
	      var ownerFiber = owner;
	      var instance = ownerFiber.stateNode;
	      !instance._warnedAboutRefsInRender ? warningWithoutStack$1(false, '%s is accessing isMounted inside its render() function. ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', getComponentName(ownerFiber.type) || 'A component') : void 0;
	      instance._warnedAboutRefsInRender = true;
	    }
	  }

	  var fiber = get(component);
	  if (!fiber) {
	    return false;
	  }
	  return isFiberMountedImpl(fiber) === MOUNTED;
	}

	function assertIsMounted(fiber) {
	  !(isFiberMountedImpl(fiber) === MOUNTED) ? invariant(false, 'Unable to find node on an unmounted component.') : void 0;
	}

	function findCurrentFiberUsingSlowPath(fiber) {
	  var alternate = fiber.alternate;
	  if (!alternate) {
	    // If there is no alternate, then we only need to check if it is mounted.
	    var state = isFiberMountedImpl(fiber);
	    !(state !== UNMOUNTED) ? invariant(false, 'Unable to find node on an unmounted component.') : void 0;
	    if (state === MOUNTING) {
	      return null;
	    }
	    return fiber;
	  }
	  // If we have two possible branches, we'll walk backwards up to the root
	  // to see what path the root points to. On the way we may hit one of the
	  // special cases and we'll deal with them.
	  var a = fiber;
	  var b = alternate;
	  while (true) {
	    var parentA = a.return;
	    var parentB = parentA ? parentA.alternate : null;
	    if (!parentA || !parentB) {
	      // We're at the root.
	      break;
	    }

	    // If both copies of the parent fiber point to the same child, we can
	    // assume that the child is current. This happens when we bailout on low
	    // priority: the bailed out fiber's child reuses the current child.
	    if (parentA.child === parentB.child) {
	      var child = parentA.child;
	      while (child) {
	        if (child === a) {
	          // We've determined that A is the current branch.
	          assertIsMounted(parentA);
	          return fiber;
	        }
	        if (child === b) {
	          // We've determined that B is the current branch.
	          assertIsMounted(parentA);
	          return alternate;
	        }
	        child = child.sibling;
	      }
	      // We should never have an alternate for any mounting node. So the only
	      // way this could possibly happen is if this was unmounted, if at all.
	      invariant(false, 'Unable to find node on an unmounted component.');
	    }

	    if (a.return !== b.return) {
	      // The return pointer of A and the return pointer of B point to different
	      // fibers. We assume that return pointers never criss-cross, so A must
	      // belong to the child set of A.return, and B must belong to the child
	      // set of B.return.
	      a = parentA;
	      b = parentB;
	    } else {
	      // The return pointers point to the same fiber. We'll have to use the
	      // default, slow path: scan the child sets of each parent alternate to see
	      // which child belongs to which set.
	      //
	      // Search parent A's child set
	      var didFindChild = false;
	      var _child = parentA.child;
	      while (_child) {
	        if (_child === a) {
	          didFindChild = true;
	          a = parentA;
	          b = parentB;
	          break;
	        }
	        if (_child === b) {
	          didFindChild = true;
	          b = parentA;
	          a = parentB;
	          break;
	        }
	        _child = _child.sibling;
	      }
	      if (!didFindChild) {
	        // Search parent B's child set
	        _child = parentB.child;
	        while (_child) {
	          if (_child === a) {
	            didFindChild = true;
	            a = parentB;
	            b = parentA;
	            break;
	          }
	          if (_child === b) {
	            didFindChild = true;
	            b = parentB;
	            a = parentA;
	            break;
	          }
	          _child = _child.sibling;
	        }
	        !didFindChild ? invariant(false, 'Child was not found in either parent set. This indicates a bug in React related to the return pointer. Please file an issue.') : void 0;
	      }
	    }

	    !(a.alternate === b) ? invariant(false, 'Return fibers should always be each others\' alternates. This error is likely caused by a bug in React. Please file an issue.') : void 0;
	  }
	  // If the root is not a host container, we're in a disconnected tree. I.e.
	  // unmounted.
	  !(a.tag === HostRoot) ? invariant(false, 'Unable to find node on an unmounted component.') : void 0;
	  if (a.stateNode.current === a) {
	    // We've determined that A is the current branch.
	    return fiber;
	  }
	  // Otherwise B has to be current branch.
	  return alternate;
	}

	function findCurrentHostFiber(parent) {
	  var currentParent = findCurrentFiberUsingSlowPath(parent);
	  if (!currentParent) {
	    return null;
	  }

	  // Next we'll drill down this component to find the first HostComponent/Text.
	  var node = currentParent;
	  while (true) {
	    if (node.tag === HostComponent || node.tag === HostText) {
	      return node;
	    } else if (node.child) {
	      node.child.return = node;
	      node = node.child;
	      continue;
	    }
	    if (node === currentParent) {
	      return null;
	    }
	    while (!node.sibling) {
	      if (!node.return || node.return === currentParent) {
	        return null;
	      }
	      node = node.return;
	    }
	    node.sibling.return = node.return;
	    node = node.sibling;
	  }
	  // Flow needs the return null here, but ESLint complains about it.
	  // eslint-disable-next-line no-unreachable
	  return null;
	}

	function findCurrentHostFiberWithNoPortals(parent) {
	  var currentParent = findCurrentFiberUsingSlowPath(parent);
	  if (!currentParent) {
	    return null;
	  }

	  // Next we'll drill down this component to find the first HostComponent/Text.
	  var node = currentParent;
	  while (true) {
	    if (node.tag === HostComponent || node.tag === HostText) {
	      return node;
	    } else if (node.child && node.tag !== HostPortal) {
	      node.child.return = node;
	      node = node.child;
	      continue;
	    }
	    if (node === currentParent) {
	      return null;
	    }
	    while (!node.sibling) {
	      if (!node.return || node.return === currentParent) {
	        return null;
	      }
	      node = node.return;
	    }
	    node.sibling.return = node.return;
	    node = node.sibling;
	  }
	  // Flow needs the return null here, but ESLint complains about it.
	  // eslint-disable-next-line no-unreachable
	  return null;
	}

	function addEventBubbleListener(element, eventType, listener) {
	  element.addEventListener(eventType, listener, false);
	}

	function addEventCaptureListener(element, eventType, listener) {
	  element.addEventListener(eventType, listener, true);
	}

	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/css3-animations/#AnimationEvent-interface
	 * @see https://developer.mozilla.org/en-US/docs/Web/API/AnimationEvent
	 */
	var SyntheticAnimationEvent = SyntheticEvent.extend({
	  animationName: null,
	  elapsedTime: null,
	  pseudoElement: null
	});

	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/clipboard-apis/
	 */
	var SyntheticClipboardEvent = SyntheticEvent.extend({
	  clipboardData: function (event) {
	    return 'clipboardData' in event ? event.clipboardData : window.clipboardData;
	  }
	});

	/**
	 * @interface FocusEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var SyntheticFocusEvent = SyntheticUIEvent.extend({
	  relatedTarget: null
	});

	/**
	 * `charCode` represents the actual "character code" and is safe to use with
	 * `String.fromCharCode`. As such, only keys that correspond to printable
	 * characters produce a valid `charCode`, the only exception to this is Enter.
	 * The Tab-key is considered non-printable and does not have a `charCode`,
	 * presumably because it does not produce a tab-character in browsers.
	 *
	 * @param {object} nativeEvent Native browser event.
	 * @return {number} Normalized `charCode` property.
	 */
	function getEventCharCode(nativeEvent) {
	  var charCode = void 0;
	  var keyCode = nativeEvent.keyCode;

	  if ('charCode' in nativeEvent) {
	    charCode = nativeEvent.charCode;

	    // FF does not set `charCode` for the Enter-key, check against `keyCode`.
	    if (charCode === 0 && keyCode === 13) {
	      charCode = 13;
	    }
	  } else {
	    // IE8 does not implement `charCode`, but `keyCode` has the correct value.
	    charCode = keyCode;
	  }

	  // IE and Edge (on Windows) and Chrome / Safari (on Windows and Linux)
	  // report Enter as charCode 10 when ctrl is pressed.
	  if (charCode === 10) {
	    charCode = 13;
	  }

	  // Some non-printable keys are reported in `charCode`/`keyCode`, discard them.
	  // Must not discard the (non-)printable Enter-key.
	  if (charCode >= 32 || charCode === 13) {
	    return charCode;
	  }

	  return 0;
	}

	/**
	 * Normalization of deprecated HTML5 `key` values
	 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
	 */
	var normalizeKey = {
	  Esc: 'Escape',
	  Spacebar: ' ',
	  Left: 'ArrowLeft',
	  Up: 'ArrowUp',
	  Right: 'ArrowRight',
	  Down: 'ArrowDown',
	  Del: 'Delete',
	  Win: 'OS',
	  Menu: 'ContextMenu',
	  Apps: 'ContextMenu',
	  Scroll: 'ScrollLock',
	  MozPrintableKey: 'Unidentified'
	};

	/**
	 * Translation from legacy `keyCode` to HTML5 `key`
	 * Only special keys supported, all others depend on keyboard layout or browser
	 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
	 */
	var translateToKey = {
	  '8': 'Backspace',
	  '9': 'Tab',
	  '12': 'Clear',
	  '13': 'Enter',
	  '16': 'Shift',
	  '17': 'Control',
	  '18': 'Alt',
	  '19': 'Pause',
	  '20': 'CapsLock',
	  '27': 'Escape',
	  '32': ' ',
	  '33': 'PageUp',
	  '34': 'PageDown',
	  '35': 'End',
	  '36': 'Home',
	  '37': 'ArrowLeft',
	  '38': 'ArrowUp',
	  '39': 'ArrowRight',
	  '40': 'ArrowDown',
	  '45': 'Insert',
	  '46': 'Delete',
	  '112': 'F1',
	  '113': 'F2',
	  '114': 'F3',
	  '115': 'F4',
	  '116': 'F5',
	  '117': 'F6',
	  '118': 'F7',
	  '119': 'F8',
	  '120': 'F9',
	  '121': 'F10',
	  '122': 'F11',
	  '123': 'F12',
	  '144': 'NumLock',
	  '145': 'ScrollLock',
	  '224': 'Meta'
	};

	/**
	 * @param {object} nativeEvent Native browser event.
	 * @return {string} Normalized `key` property.
	 */
	function getEventKey(nativeEvent) {
	  if (nativeEvent.key) {
	    // Normalize inconsistent values reported by browsers due to
	    // implementations of a working draft specification.

	    // FireFox implements `key` but returns `MozPrintableKey` for all
	    // printable characters (normalized to `Unidentified`), ignore it.
	    var key = normalizeKey[nativeEvent.key] || nativeEvent.key;
	    if (key !== 'Unidentified') {
	      return key;
	    }
	  }

	  // Browser does not implement `key`, polyfill as much of it as we can.
	  if (nativeEvent.type === 'keypress') {
	    var charCode = getEventCharCode(nativeEvent);

	    // The enter-key is technically both printable and non-printable and can
	    // thus be captured by `keypress`, no other non-printable key should.
	    return charCode === 13 ? 'Enter' : String.fromCharCode(charCode);
	  }
	  if (nativeEvent.type === 'keydown' || nativeEvent.type === 'keyup') {
	    // While user keyboard layout determines the actual meaning of each
	    // `keyCode` value, almost all function keys have a universal value.
	    return translateToKey[nativeEvent.keyCode] || 'Unidentified';
	  }
	  return '';
	}

	/**
	 * @interface KeyboardEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var SyntheticKeyboardEvent = SyntheticUIEvent.extend({
	  key: getEventKey,
	  location: null,
	  ctrlKey: null,
	  shiftKey: null,
	  altKey: null,
	  metaKey: null,
	  repeat: null,
	  locale: null,
	  getModifierState: getEventModifierState,
	  // Legacy Interface
	  charCode: function (event) {
	    // `charCode` is the result of a KeyPress event and represents the value of
	    // the actual printable character.

	    // KeyPress is deprecated, but its replacement is not yet final and not
	    // implemented in any major browser. Only KeyPress has charCode.
	    if (event.type === 'keypress') {
	      return getEventCharCode(event);
	    }
	    return 0;
	  },
	  keyCode: function (event) {
	    // `keyCode` is the result of a KeyDown/Up event and represents the value of
	    // physical keyboard key.

	    // The actual meaning of the value depends on the users' keyboard layout
	    // which cannot be detected. Assuming that it is a US keyboard layout
	    // provides a surprisingly accurate mapping for US and European users.
	    // Due to this, it is left to the user to implement at this time.
	    if (event.type === 'keydown' || event.type === 'keyup') {
	      return event.keyCode;
	    }
	    return 0;
	  },
	  which: function (event) {
	    // `which` is an alias for either `keyCode` or `charCode` depending on the
	    // type of the event.
	    if (event.type === 'keypress') {
	      return getEventCharCode(event);
	    }
	    if (event.type === 'keydown' || event.type === 'keyup') {
	      return event.keyCode;
	    }
	    return 0;
	  }
	});

	/**
	 * @interface DragEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var SyntheticDragEvent = SyntheticMouseEvent.extend({
	  dataTransfer: null
	});

	/**
	 * @interface TouchEvent
	 * @see http://www.w3.org/TR/touch-events/
	 */
	var SyntheticTouchEvent = SyntheticUIEvent.extend({
	  touches: null,
	  targetTouches: null,
	  changedTouches: null,
	  altKey: null,
	  metaKey: null,
	  ctrlKey: null,
	  shiftKey: null,
	  getModifierState: getEventModifierState
	});

	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/2009/WD-css3-transitions-20090320/#transition-events-
	 * @see https://developer.mozilla.org/en-US/docs/Web/API/TransitionEvent
	 */
	var SyntheticTransitionEvent = SyntheticEvent.extend({
	  propertyName: null,
	  elapsedTime: null,
	  pseudoElement: null
	});

	/**
	 * @interface WheelEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var SyntheticWheelEvent = SyntheticMouseEvent.extend({
	  deltaX: function (event) {
	    return 'deltaX' in event ? event.deltaX : // Fallback to `wheelDeltaX` for Webkit and normalize (right is positive).
	    'wheelDeltaX' in event ? -event.wheelDeltaX : 0;
	  },
	  deltaY: function (event) {
	    return 'deltaY' in event ? event.deltaY : // Fallback to `wheelDeltaY` for Webkit and normalize (down is positive).
	    'wheelDeltaY' in event ? -event.wheelDeltaY : // Fallback to `wheelDelta` for IE<9 and normalize (down is positive).
	    'wheelDelta' in event ? -event.wheelDelta : 0;
	  },

	  deltaZ: null,

	  // Browsers without "deltaMode" is reporting in raw wheel delta where one
	  // notch on the scroll is always +/- 120, roughly equivalent to pixels.
	  // A good approximation of DOM_DELTA_LINE (1) is 5% of viewport size or
	  // ~40 pixels, for DOM_DELTA_SCREEN (2) it is 87.5% of viewport size.
	  deltaMode: null
	});

	/**
	 * Turns
	 * ['abort', ...]
	 * into
	 * eventTypes = {
	 *   'abort': {
	 *     phasedRegistrationNames: {
	 *       bubbled: 'onAbort',
	 *       captured: 'onAbortCapture',
	 *     },
	 *     dependencies: [TOP_ABORT],
	 *   },
	 *   ...
	 * };
	 * topLevelEventsToDispatchConfig = new Map([
	 *   [TOP_ABORT, { sameConfig }],
	 * ]);
	 */

	var interactiveEventTypeNames = [[TOP_BLUR, 'blur'], [TOP_CANCEL, 'cancel'], [TOP_CLICK, 'click'], [TOP_CLOSE, 'close'], [TOP_CONTEXT_MENU, 'contextMenu'], [TOP_COPY, 'copy'], [TOP_CUT, 'cut'], [TOP_AUX_CLICK, 'auxClick'], [TOP_DOUBLE_CLICK, 'doubleClick'], [TOP_DRAG_END, 'dragEnd'], [TOP_DRAG_START, 'dragStart'], [TOP_DROP, 'drop'], [TOP_FOCUS, 'focus'], [TOP_INPUT, 'input'], [TOP_INVALID, 'invalid'], [TOP_KEY_DOWN, 'keyDown'], [TOP_KEY_PRESS, 'keyPress'], [TOP_KEY_UP, 'keyUp'], [TOP_MOUSE_DOWN, 'mouseDown'], [TOP_MOUSE_UP, 'mouseUp'], [TOP_PASTE, 'paste'], [TOP_PAUSE, 'pause'], [TOP_PLAY, 'play'], [TOP_POINTER_CANCEL, 'pointerCancel'], [TOP_POINTER_DOWN, 'pointerDown'], [TOP_POINTER_UP, 'pointerUp'], [TOP_RATE_CHANGE, 'rateChange'], [TOP_RESET, 'reset'], [TOP_SEEKED, 'seeked'], [TOP_SUBMIT, 'submit'], [TOP_TOUCH_CANCEL, 'touchCancel'], [TOP_TOUCH_END, 'touchEnd'], [TOP_TOUCH_START, 'touchStart'], [TOP_VOLUME_CHANGE, 'volumeChange']];
	var nonInteractiveEventTypeNames = [[TOP_ABORT, 'abort'], [TOP_ANIMATION_END, 'animationEnd'], [TOP_ANIMATION_ITERATION, 'animationIteration'], [TOP_ANIMATION_START, 'animationStart'], [TOP_CAN_PLAY, 'canPlay'], [TOP_CAN_PLAY_THROUGH, 'canPlayThrough'], [TOP_DRAG, 'drag'], [TOP_DRAG_ENTER, 'dragEnter'], [TOP_DRAG_EXIT, 'dragExit'], [TOP_DRAG_LEAVE, 'dragLeave'], [TOP_DRAG_OVER, 'dragOver'], [TOP_DURATION_CHANGE, 'durationChange'], [TOP_EMPTIED, 'emptied'], [TOP_ENCRYPTED, 'encrypted'], [TOP_ENDED, 'ended'], [TOP_ERROR, 'error'], [TOP_GOT_POINTER_CAPTURE, 'gotPointerCapture'], [TOP_LOAD, 'load'], [TOP_LOADED_DATA, 'loadedData'], [TOP_LOADED_METADATA, 'loadedMetadata'], [TOP_LOAD_START, 'loadStart'], [TOP_LOST_POINTER_CAPTURE, 'lostPointerCapture'], [TOP_MOUSE_MOVE, 'mouseMove'], [TOP_MOUSE_OUT, 'mouseOut'], [TOP_MOUSE_OVER, 'mouseOver'], [TOP_PLAYING, 'playing'], [TOP_POINTER_MOVE, 'pointerMove'], [TOP_POINTER_OUT, 'pointerOut'], [TOP_POINTER_OVER, 'pointerOver'], [TOP_PROGRESS, 'progress'], [TOP_SCROLL, 'scroll'], [TOP_SEEKING, 'seeking'], [TOP_STALLED, 'stalled'], [TOP_SUSPEND, 'suspend'], [TOP_TIME_UPDATE, 'timeUpdate'], [TOP_TOGGLE, 'toggle'], [TOP_TOUCH_MOVE, 'touchMove'], [TOP_TRANSITION_END, 'transitionEnd'], [TOP_WAITING, 'waiting'], [TOP_WHEEL, 'wheel']];

	var eventTypes$4 = {};
	var topLevelEventsToDispatchConfig = {};

	function addEventTypeNameToConfig(_ref, isInteractive) {
	  var topEvent = _ref[0],
	      event = _ref[1];

	  var capitalizedEvent = event[0].toUpperCase() + event.slice(1);
	  var onEvent = 'on' + capitalizedEvent;

	  var type = {
	    phasedRegistrationNames: {
	      bubbled: onEvent,
	      captured: onEvent + 'Capture'
	    },
	    dependencies: [topEvent],
	    isInteractive: isInteractive
	  };
	  eventTypes$4[event] = type;
	  topLevelEventsToDispatchConfig[topEvent] = type;
	}

	interactiveEventTypeNames.forEach(function (eventTuple) {
	  addEventTypeNameToConfig(eventTuple, true);
	});
	nonInteractiveEventTypeNames.forEach(function (eventTuple) {
	  addEventTypeNameToConfig(eventTuple, false);
	});

	// Only used in DEV for exhaustiveness validation.
	var knownHTMLTopLevelTypes = [TOP_ABORT, TOP_CANCEL, TOP_CAN_PLAY, TOP_CAN_PLAY_THROUGH, TOP_CLOSE, TOP_DURATION_CHANGE, TOP_EMPTIED, TOP_ENCRYPTED, TOP_ENDED, TOP_ERROR, TOP_INPUT, TOP_INVALID, TOP_LOAD, TOP_LOADED_DATA, TOP_LOADED_METADATA, TOP_LOAD_START, TOP_PAUSE, TOP_PLAY, TOP_PLAYING, TOP_PROGRESS, TOP_RATE_CHANGE, TOP_RESET, TOP_SEEKED, TOP_SEEKING, TOP_STALLED, TOP_SUBMIT, TOP_SUSPEND, TOP_TIME_UPDATE, TOP_TOGGLE, TOP_VOLUME_CHANGE, TOP_WAITING];

	var SimpleEventPlugin = {
	  eventTypes: eventTypes$4,

	  isInteractiveTopLevelEventType: function (topLevelType) {
	    var config = topLevelEventsToDispatchConfig[topLevelType];
	    return config !== undefined && config.isInteractive === true;
	  },


	  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    var dispatchConfig = topLevelEventsToDispatchConfig[topLevelType];
	    if (!dispatchConfig) {
	      return null;
	    }
	    var EventConstructor = void 0;
	    switch (topLevelType) {
	      case TOP_KEY_PRESS:
	        // Firefox creates a keypress event for function keys too. This removes
	        // the unwanted keypress events. Enter is however both printable and
	        // non-printable. One would expect Tab to be as well (but it isn't).
	        if (getEventCharCode(nativeEvent) === 0) {
	          return null;
	        }
	      /* falls through */
	      case TOP_KEY_DOWN:
	      case TOP_KEY_UP:
	        EventConstructor = SyntheticKeyboardEvent;
	        break;
	      case TOP_BLUR:
	      case TOP_FOCUS:
	        EventConstructor = SyntheticFocusEvent;
	        break;
	      case TOP_CLICK:
	        // Firefox creates a click event on right mouse clicks. This removes the
	        // unwanted click events.
	        if (nativeEvent.button === 2) {
	          return null;
	        }
	      /* falls through */
	      case TOP_AUX_CLICK:
	      case TOP_DOUBLE_CLICK:
	      case TOP_MOUSE_DOWN:
	      case TOP_MOUSE_MOVE:
	      case TOP_MOUSE_UP:
	      // TODO: Disabled elements should not respond to mouse events
	      /* falls through */
	      case TOP_MOUSE_OUT:
	      case TOP_MOUSE_OVER:
	      case TOP_CONTEXT_MENU:
	        EventConstructor = SyntheticMouseEvent;
	        break;
	      case TOP_DRAG:
	      case TOP_DRAG_END:
	      case TOP_DRAG_ENTER:
	      case TOP_DRAG_EXIT:
	      case TOP_DRAG_LEAVE:
	      case TOP_DRAG_OVER:
	      case TOP_DRAG_START:
	      case TOP_DROP:
	        EventConstructor = SyntheticDragEvent;
	        break;
	      case TOP_TOUCH_CANCEL:
	      case TOP_TOUCH_END:
	      case TOP_TOUCH_MOVE:
	      case TOP_TOUCH_START:
	        EventConstructor = SyntheticTouchEvent;
	        break;
	      case TOP_ANIMATION_END:
	      case TOP_ANIMATION_ITERATION:
	      case TOP_ANIMATION_START:
	        EventConstructor = SyntheticAnimationEvent;
	        break;
	      case TOP_TRANSITION_END:
	        EventConstructor = SyntheticTransitionEvent;
	        break;
	      case TOP_SCROLL:
	        EventConstructor = SyntheticUIEvent;
	        break;
	      case TOP_WHEEL:
	        EventConstructor = SyntheticWheelEvent;
	        break;
	      case TOP_COPY:
	      case TOP_CUT:
	      case TOP_PASTE:
	        EventConstructor = SyntheticClipboardEvent;
	        break;
	      case TOP_GOT_POINTER_CAPTURE:
	      case TOP_LOST_POINTER_CAPTURE:
	      case TOP_POINTER_CANCEL:
	      case TOP_POINTER_DOWN:
	      case TOP_POINTER_MOVE:
	      case TOP_POINTER_OUT:
	      case TOP_POINTER_OVER:
	      case TOP_POINTER_UP:
	        EventConstructor = SyntheticPointerEvent;
	        break;
	      default:
	        {
	          if (knownHTMLTopLevelTypes.indexOf(topLevelType) === -1) {
	            warningWithoutStack$1(false, 'SimpleEventPlugin: Unhandled event type, `%s`. This warning ' + 'is likely caused by a bug in React. Please file an issue.', topLevelType);
	          }
	        }
	        // HTML Events
	        // @see http://www.w3.org/TR/html5/index.html#events-0
	        EventConstructor = SyntheticEvent;
	        break;
	    }
	    var event = EventConstructor.getPooled(dispatchConfig, targetInst, nativeEvent, nativeEventTarget);
	    accumulateTwoPhaseDispatches(event);
	    return event;
	  }
	};

	var isInteractiveTopLevelEventType = SimpleEventPlugin.isInteractiveTopLevelEventType;


	var CALLBACK_BOOKKEEPING_POOL_SIZE = 10;
	var callbackBookkeepingPool = [];

	/**
	 * Find the deepest React component completely containing the root of the
	 * passed-in instance (for use when entire React trees are nested within each
	 * other). If React trees are not nested, returns null.
	 */
	function findRootContainerNode(inst) {
	  // TODO: It may be a good idea to cache this to prevent unnecessary DOM
	  // traversal, but caching is difficult to do correctly without using a
	  // mutation observer to listen for all DOM changes.
	  while (inst.return) {
	    inst = inst.return;
	  }
	  if (inst.tag !== HostRoot) {
	    // This can happen if we're in a detached tree.
	    return null;
	  }
	  return inst.stateNode.containerInfo;
	}

	// Used to store ancestor hierarchy in top level callback
	function getTopLevelCallbackBookKeeping(topLevelType, nativeEvent, targetInst) {
	  if (callbackBookkeepingPool.length) {
	    var instance = callbackBookkeepingPool.pop();
	    instance.topLevelType = topLevelType;
	    instance.nativeEvent = nativeEvent;
	    instance.targetInst = targetInst;
	    return instance;
	  }
	  return {
	    topLevelType: topLevelType,
	    nativeEvent: nativeEvent,
	    targetInst: targetInst,
	    ancestors: []
	  };
	}

	function releaseTopLevelCallbackBookKeeping(instance) {
	  instance.topLevelType = null;
	  instance.nativeEvent = null;
	  instance.targetInst = null;
	  instance.ancestors.length = 0;
	  if (callbackBookkeepingPool.length < CALLBACK_BOOKKEEPING_POOL_SIZE) {
	    callbackBookkeepingPool.push(instance);
	  }
	}

	function handleTopLevel(bookKeeping) {
	  var targetInst = bookKeeping.targetInst;

	  // Loop through the hierarchy, in case there's any nested components.
	  // It's important that we build the array of ancestors before calling any
	  // event handlers, because event handlers can modify the DOM, leading to
	  // inconsistencies with ReactMount's node cache. See #1105.
	  var ancestor = targetInst;
	  do {
	    if (!ancestor) {
	      bookKeeping.ancestors.push(ancestor);
	      break;
	    }
	    var root = findRootContainerNode(ancestor);
	    if (!root) {
	      break;
	    }
	    bookKeeping.ancestors.push(ancestor);
	    ancestor = getClosestInstanceFromNode(root);
	  } while (ancestor);

	  for (var i = 0; i < bookKeeping.ancestors.length; i++) {
	    targetInst = bookKeeping.ancestors[i];
	    runExtractedEventsInBatch(bookKeeping.topLevelType, targetInst, bookKeeping.nativeEvent, getEventTarget(bookKeeping.nativeEvent));
	  }
	}

	// TODO: can we stop exporting these?
	var _enabled = true;

	function setEnabled(enabled) {
	  _enabled = !!enabled;
	}

	function isEnabled() {
	  return _enabled;
	}

	/**
	 * Traps top-level events by using event bubbling.
	 *
	 * @param {number} topLevelType Number from `TopLevelEventTypes`.
	 * @param {object} element Element on which to attach listener.
	 * @return {?object} An object with a remove function which will forcefully
	 *                  remove the listener.
	 * @internal
	 */
	function trapBubbledEvent(topLevelType, element) {
	  if (!element) {
	    return null;
	  }
	  var dispatch = isInteractiveTopLevelEventType(topLevelType) ? dispatchInteractiveEvent : dispatchEvent;

	  addEventBubbleListener(element, getRawEventName(topLevelType),
	  // Check if interactive and wrap in interactiveUpdates
	  dispatch.bind(null, topLevelType));
	}

	/**
	 * Traps a top-level event by using event capturing.
	 *
	 * @param {number} topLevelType Number from `TopLevelEventTypes`.
	 * @param {object} element Element on which to attach listener.
	 * @return {?object} An object with a remove function which will forcefully
	 *                  remove the listener.
	 * @internal
	 */
	function trapCapturedEvent(topLevelType, element) {
	  if (!element) {
	    return null;
	  }
	  var dispatch = isInteractiveTopLevelEventType(topLevelType) ? dispatchInteractiveEvent : dispatchEvent;

	  addEventCaptureListener(element, getRawEventName(topLevelType),
	  // Check if interactive and wrap in interactiveUpdates
	  dispatch.bind(null, topLevelType));
	}

	function dispatchInteractiveEvent(topLevelType, nativeEvent) {
	  interactiveUpdates(dispatchEvent, topLevelType, nativeEvent);
	}

	function dispatchEvent(topLevelType, nativeEvent) {
	  if (!_enabled) {
	    return;
	  }

	  var nativeEventTarget = getEventTarget(nativeEvent);
	  var targetInst = getClosestInstanceFromNode(nativeEventTarget);
	  if (targetInst !== null && typeof targetInst.tag === 'number' && !isFiberMounted(targetInst)) {
	    // If we get an event (ex: img onload) before committing that
	    // component's mount, ignore it for now (that is, treat it as if it was an
	    // event on a non-React tree). We might also consider queueing events and
	    // dispatching them after the mount.
	    targetInst = null;
	  }

	  var bookKeeping = getTopLevelCallbackBookKeeping(topLevelType, nativeEvent, targetInst);

	  try {
	    // Event queue being processed in the same cycle allows
	    // `preventDefault`.
	    batchedUpdates(handleTopLevel, bookKeeping);
	  } finally {
	    releaseTopLevelCallbackBookKeeping(bookKeeping);
	  }
	}

	/**
	 * Summary of `ReactBrowserEventEmitter` event handling:
	 *
	 *  - Top-level delegation is used to trap most native browser events. This
	 *    may only occur in the main thread and is the responsibility of
	 *    ReactDOMEventListener, which is injected and can therefore support
	 *    pluggable event sources. This is the only work that occurs in the main
	 *    thread.
	 *
	 *  - We normalize and de-duplicate events to account for browser quirks. This
	 *    may be done in the worker thread.
	 *
	 *  - Forward these native events (with the associated top-level type used to
	 *    trap it) to `EventPluginHub`, which in turn will ask plugins if they want
	 *    to extract any synthetic events.
	 *
	 *  - The `EventPluginHub` will then process each event by annotating them with
	 *    "dispatches", a sequence of listeners and IDs that care about that event.
	 *
	 *  - The `EventPluginHub` then dispatches the events.
	 *
	 * Overview of React and the event system:
	 *
	 * +------------+    .
	 * |    DOM     |    .
	 * +------------+    .
	 *       |           .
	 *       v           .
	 * +------------+    .
	 * | ReactEvent |    .
	 * |  Listener  |    .
	 * +------------+    .                         +-----------+
	 *       |           .               +--------+|SimpleEvent|
	 *       |           .               |         |Plugin     |
	 * +-----|------+    .               v         +-----------+
	 * |     |      |    .    +--------------+                    +------------+
	 * |     +-----------.--->|EventPluginHub|                    |    Event   |
	 * |            |    .    |              |     +-----------+  | Propagators|
	 * | ReactEvent |    .    |              |     |TapEvent   |  |------------|
	 * |  Emitter   |    .    |              |<---+|Plugin     |  |other plugin|
	 * |            |    .    |              |     +-----------+  |  utilities |
	 * |     +-----------.--->|              |                    +------------+
	 * |     |      |    .    +--------------+
	 * +-----|------+    .                ^        +-----------+
	 *       |           .                |        |Enter/Leave|
	 *       +           .                +-------+|Plugin     |
	 * +-------------+   .                         +-----------+
	 * | application |   .
	 * |-------------|   .
	 * |             |   .
	 * |             |   .
	 * +-------------+   .
	 *                   .
	 *    React Core     .  General Purpose Event Plugin System
	 */

	var alreadyListeningTo = {};
	var reactTopListenersCounter = 0;

	/**
	 * To ensure no conflicts with other potential React instances on the page
	 */
	var topListenersIDKey = '_reactListenersID' + ('' + Math.random()).slice(2);

	function getListeningForDocument(mountAt) {
	  // In IE8, `mountAt` is a host object and doesn't have `hasOwnProperty`
	  // directly.
	  if (!Object.prototype.hasOwnProperty.call(mountAt, topListenersIDKey)) {
	    mountAt[topListenersIDKey] = reactTopListenersCounter++;
	    alreadyListeningTo[mountAt[topListenersIDKey]] = {};
	  }
	  return alreadyListeningTo[mountAt[topListenersIDKey]];
	}

	/**
	 * We listen for bubbled touch events on the document object.
	 *
	 * Firefox v8.01 (and possibly others) exhibited strange behavior when
	 * mounting `onmousemove` events at some node that was not the document
	 * element. The symptoms were that if your mouse is not moving over something
	 * contained within that mount point (for example on the background) the
	 * top-level listeners for `onmousemove` won't be called. However, if you
	 * register the `mousemove` on the document object, then it will of course
	 * catch all `mousemove`s. This along with iOS quirks, justifies restricting
	 * top-level listeners to the document object only, at least for these
	 * movement types of events and possibly all events.
	 *
	 * @see http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html
	 *
	 * Also, `keyup`/`keypress`/`keydown` do not bubble to the window on IE, but
	 * they bubble to document.
	 *
	 * @param {string} registrationName Name of listener (e.g. `onClick`).
	 * @param {object} mountAt Container where to mount the listener
	 */
	function listenTo(registrationName, mountAt) {
	  var isListening = getListeningForDocument(mountAt);
	  var dependencies = registrationNameDependencies[registrationName];

	  for (var i = 0; i < dependencies.length; i++) {
	    var dependency = dependencies[i];
	    if (!(isListening.hasOwnProperty(dependency) && isListening[dependency])) {
	      switch (dependency) {
	        case TOP_SCROLL:
	          trapCapturedEvent(TOP_SCROLL, mountAt);
	          break;
	        case TOP_FOCUS:
	        case TOP_BLUR:
	          trapCapturedEvent(TOP_FOCUS, mountAt);
	          trapCapturedEvent(TOP_BLUR, mountAt);
	          // We set the flag for a single dependency later in this function,
	          // but this ensures we mark both as attached rather than just one.
	          isListening[TOP_BLUR] = true;
	          isListening[TOP_FOCUS] = true;
	          break;
	        case TOP_CANCEL:
	        case TOP_CLOSE:
	          if (isEventSupported(getRawEventName(dependency))) {
	            trapCapturedEvent(dependency, mountAt);
	          }
	          break;
	        case TOP_INVALID:
	        case TOP_SUBMIT:
	        case TOP_RESET:
	          // We listen to them on the target DOM elements.
	          // Some of them bubble so we don't want them to fire twice.
	          break;
	        default:
	          // By default, listen on the top level to all non-media events.
	          // Media events don't bubble so adding the listener wouldn't do anything.
	          var isMediaEvent = mediaEventTypes.indexOf(dependency) !== -1;
	          if (!isMediaEvent) {
	            trapBubbledEvent(dependency, mountAt);
	          }
	          break;
	      }
	      isListening[dependency] = true;
	    }
	  }
	}

	function isListeningToAllDependencies(registrationName, mountAt) {
	  var isListening = getListeningForDocument(mountAt);
	  var dependencies = registrationNameDependencies[registrationName];
	  for (var i = 0; i < dependencies.length; i++) {
	    var dependency = dependencies[i];
	    if (!(isListening.hasOwnProperty(dependency) && isListening[dependency])) {
	      return false;
	    }
	  }
	  return true;
	}

	function getActiveElement(doc) {
	  doc = doc || (typeof document !== 'undefined' ? document : undefined);
	  if (typeof doc === 'undefined') {
	    return null;
	  }
	  try {
	    return doc.activeElement || doc.body;
	  } catch (e) {
	    return doc.body;
	  }
	}

	/**
	 * Given any node return the first leaf node without children.
	 *
	 * @param {DOMElement|DOMTextNode} node
	 * @return {DOMElement|DOMTextNode}
	 */
	function getLeafNode(node) {
	  while (node && node.firstChild) {
	    node = node.firstChild;
	  }
	  return node;
	}

	/**
	 * Get the next sibling within a container. This will walk up the
	 * DOM if a node's siblings have been exhausted.
	 *
	 * @param {DOMElement|DOMTextNode} node
	 * @return {?DOMElement|DOMTextNode}
	 */
	function getSiblingNode(node) {
	  while (node) {
	    if (node.nextSibling) {
	      return node.nextSibling;
	    }
	    node = node.parentNode;
	  }
	}

	/**
	 * Get object describing the nodes which contain characters at offset.
	 *
	 * @param {DOMElement|DOMTextNode} root
	 * @param {number} offset
	 * @return {?object}
	 */
	function getNodeForCharacterOffset(root, offset) {
	  var node = getLeafNode(root);
	  var nodeStart = 0;
	  var nodeEnd = 0;

	  while (node) {
	    if (node.nodeType === TEXT_NODE) {
	      nodeEnd = nodeStart + node.textContent.length;

	      if (nodeStart <= offset && nodeEnd >= offset) {
	        return {
	          node: node,
	          offset: offset - nodeStart
	        };
	      }

	      nodeStart = nodeEnd;
	    }

	    node = getLeafNode(getSiblingNode(node));
	  }
	}

	/**
	 * @param {DOMElement} outerNode
	 * @return {?object}
	 */
	function getOffsets(outerNode) {
	  var ownerDocument = outerNode.ownerDocument;

	  var win = ownerDocument && ownerDocument.defaultView || window;
	  var selection = win.getSelection && win.getSelection();

	  if (!selection || selection.rangeCount === 0) {
	    return null;
	  }

	  var anchorNode = selection.anchorNode,
	      anchorOffset = selection.anchorOffset,
	      focusNode = selection.focusNode,
	      focusOffset = selection.focusOffset;

	  // In Firefox, anchorNode and focusNode can be "anonymous divs", e.g. the
	  // up/down buttons on an <input type="number">. Anonymous divs do not seem to
	  // expose properties, triggering a "Permission denied error" if any of its
	  // properties are accessed. The only seemingly possible way to avoid erroring
	  // is to access a property that typically works for non-anonymous divs and
	  // catch any error that may otherwise arise. See
	  // https://bugzilla.mozilla.org/show_bug.cgi?id=208427

	  try {
	    /* eslint-disable no-unused-expressions */
	    anchorNode.nodeType;
	    focusNode.nodeType;
	    /* eslint-enable no-unused-expressions */
	  } catch (e) {
	    return null;
	  }

	  return getModernOffsetsFromPoints(outerNode, anchorNode, anchorOffset, focusNode, focusOffset);
	}

	/**
	 * Returns {start, end} where `start` is the character/codepoint index of
	 * (anchorNode, anchorOffset) within the textContent of `outerNode`, and
	 * `end` is the index of (focusNode, focusOffset).
	 *
	 * Returns null if you pass in garbage input but we should probably just crash.
	 *
	 * Exported only for testing.
	 */
	function getModernOffsetsFromPoints(outerNode, anchorNode, anchorOffset, focusNode, focusOffset) {
	  var length = 0;
	  var start = -1;
	  var end = -1;
	  var indexWithinAnchor = 0;
	  var indexWithinFocus = 0;
	  var node = outerNode;
	  var parentNode = null;

	  outer: while (true) {
	    var next = null;

	    while (true) {
	      if (node === anchorNode && (anchorOffset === 0 || node.nodeType === TEXT_NODE)) {
	        start = length + anchorOffset;
	      }
	      if (node === focusNode && (focusOffset === 0 || node.nodeType === TEXT_NODE)) {
	        end = length + focusOffset;
	      }

	      if (node.nodeType === TEXT_NODE) {
	        length += node.nodeValue.length;
	      }

	      if ((next = node.firstChild) === null) {
	        break;
	      }
	      // Moving from `node` to its first child `next`.
	      parentNode = node;
	      node = next;
	    }

	    while (true) {
	      if (node === outerNode) {
	        // If `outerNode` has children, this is always the second time visiting
	        // it. If it has no children, this is still the first loop, and the only
	        // valid selection is anchorNode and focusNode both equal to this node
	        // and both offsets 0, in which case we will have handled above.
	        break outer;
	      }
	      if (parentNode === anchorNode && ++indexWithinAnchor === anchorOffset) {
	        start = length;
	      }
	      if (parentNode === focusNode && ++indexWithinFocus === focusOffset) {
	        end = length;
	      }
	      if ((next = node.nextSibling) !== null) {
	        break;
	      }
	      node = parentNode;
	      parentNode = node.parentNode;
	    }

	    // Moving from `node` to its next sibling `next`.
	    node = next;
	  }

	  if (start === -1 || end === -1) {
	    // This should never happen. (Would happen if the anchor/focus nodes aren't
	    // actually inside the passed-in node.)
	    return null;
	  }

	  return {
	    start: start,
	    end: end
	  };
	}

	/**
	 * In modern non-IE browsers, we can support both forward and backward
	 * selections.
	 *
	 * Note: IE10+ supports the Selection object, but it does not support
	 * the `extend` method, which means that even in modern IE, it's not possible
	 * to programmatically create a backward selection. Thus, for all IE
	 * versions, we use the old IE API to create our selections.
	 *
	 * @param {DOMElement|DOMTextNode} node
	 * @param {object} offsets
	 */
	function setOffsets(node, offsets) {
	  var doc = node.ownerDocument || document;
	  var win = doc && doc.defaultView || window;

	  // Edge fails with "Object expected" in some scenarios.
	  // (For instance: TinyMCE editor used in a list component that supports pasting to add more,
	  // fails when pasting 100+ items)
	  if (!win.getSelection) {
	    return;
	  }

	  var selection = win.getSelection();
	  var length = node.textContent.length;
	  var start = Math.min(offsets.start, length);
	  var end = offsets.end === undefined ? start : Math.min(offsets.end, length);

	  // IE 11 uses modern selection, but doesn't support the extend method.
	  // Flip backward selections, so we can set with a single range.
	  if (!selection.extend && start > end) {
	    var temp = end;
	    end = start;
	    start = temp;
	  }

	  var startMarker = getNodeForCharacterOffset(node, start);
	  var endMarker = getNodeForCharacterOffset(node, end);

	  if (startMarker && endMarker) {
	    if (selection.rangeCount === 1 && selection.anchorNode === startMarker.node && selection.anchorOffset === startMarker.offset && selection.focusNode === endMarker.node && selection.focusOffset === endMarker.offset) {
	      return;
	    }
	    var range = doc.createRange();
	    range.setStart(startMarker.node, startMarker.offset);
	    selection.removeAllRanges();

	    if (start > end) {
	      selection.addRange(range);
	      selection.extend(endMarker.node, endMarker.offset);
	    } else {
	      range.setEnd(endMarker.node, endMarker.offset);
	      selection.addRange(range);
	    }
	  }
	}

	function isTextNode(node) {
	  return node && node.nodeType === TEXT_NODE;
	}

	function containsNode(outerNode, innerNode) {
	  if (!outerNode || !innerNode) {
	    return false;
	  } else if (outerNode === innerNode) {
	    return true;
	  } else if (isTextNode(outerNode)) {
	    return false;
	  } else if (isTextNode(innerNode)) {
	    return containsNode(outerNode, innerNode.parentNode);
	  } else if ('contains' in outerNode) {
	    return outerNode.contains(innerNode);
	  } else if (outerNode.compareDocumentPosition) {
	    return !!(outerNode.compareDocumentPosition(innerNode) & 16);
	  } else {
	    return false;
	  }
	}

	function isInDocument(node) {
	  return node && node.ownerDocument && containsNode(node.ownerDocument.documentElement, node);
	}

	function isSameOriginFrame(iframe) {
	  try {
	    // Accessing the contentDocument of a HTMLIframeElement can cause the browser
	    // to throw, e.g. if it has a cross-origin src attribute.
	    // Safari will show an error in the console when the access results in "Blocked a frame with origin". e.g:
	    // iframe.contentDocument.defaultView;
	    // A safety way is to access one of the cross origin properties: Window or Location
	    // Which might result in "SecurityError" DOM Exception and it is compatible to Safari.
	    // https://html.spec.whatwg.org/multipage/browsers.html#integration-with-idl

	    return typeof iframe.contentWindow.location.href === 'string';
	  } catch (err) {
	    return false;
	  }
	}

	function getActiveElementDeep() {
	  var win = window;
	  var element = getActiveElement();
	  while (element instanceof win.HTMLIFrameElement) {
	    if (isSameOriginFrame(element)) {
	      win = element.contentWindow;
	    } else {
	      return element;
	    }
	    element = getActiveElement(win.document);
	  }
	  return element;
	}

	/**
	 * @ReactInputSelection: React input selection module. Based on Selection.js,
	 * but modified to be suitable for react and has a couple of bug fixes (doesn't
	 * assume buttons have range selections allowed).
	 * Input selection module for React.
	 */

	/**
	 * @hasSelectionCapabilities: we get the element types that support selection
	 * from https://html.spec.whatwg.org/#do-not-apply, looking at `selectionStart`
	 * and `selectionEnd` rows.
	 */
	function hasSelectionCapabilities(elem) {
	  var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();
	  return nodeName && (nodeName === 'input' && (elem.type === 'text' || elem.type === 'search' || elem.type === 'tel' || elem.type === 'url' || elem.type === 'password') || nodeName === 'textarea' || elem.contentEditable === 'true');
	}

	function getSelectionInformation() {
	  var focusedElem = getActiveElementDeep();
	  return {
	    focusedElem: focusedElem,
	    selectionRange: hasSelectionCapabilities(focusedElem) ? getSelection$1(focusedElem) : null
	  };
	}

	/**
	 * @restoreSelection: If any selection information was potentially lost,
	 * restore it. This is useful when performing operations that could remove dom
	 * nodes and place them back in, resulting in focus being lost.
	 */
	function restoreSelection(priorSelectionInformation) {
	  var curFocusedElem = getActiveElementDeep();
	  var priorFocusedElem = priorSelectionInformation.focusedElem;
	  var priorSelectionRange = priorSelectionInformation.selectionRange;
	  if (curFocusedElem !== priorFocusedElem && isInDocument(priorFocusedElem)) {
	    if (priorSelectionRange !== null && hasSelectionCapabilities(priorFocusedElem)) {
	      setSelection(priorFocusedElem, priorSelectionRange);
	    }

	    // Focusing a node can change the scroll position, which is undesirable
	    var ancestors = [];
	    var ancestor = priorFocusedElem;
	    while (ancestor = ancestor.parentNode) {
	      if (ancestor.nodeType === ELEMENT_NODE) {
	        ancestors.push({
	          element: ancestor,
	          left: ancestor.scrollLeft,
	          top: ancestor.scrollTop
	        });
	      }
	    }

	    if (typeof priorFocusedElem.focus === 'function') {
	      priorFocusedElem.focus();
	    }

	    for (var i = 0; i < ancestors.length; i++) {
	      var info = ancestors[i];
	      info.element.scrollLeft = info.left;
	      info.element.scrollTop = info.top;
	    }
	  }
	}

	/**
	 * @getSelection: Gets the selection bounds of a focused textarea, input or
	 * contentEditable node.
	 * -@input: Look up selection bounds of this input
	 * -@return {start: selectionStart, end: selectionEnd}
	 */
	function getSelection$1(input) {
	  var selection = void 0;

	  if ('selectionStart' in input) {
	    // Modern browser with input or textarea.
	    selection = {
	      start: input.selectionStart,
	      end: input.selectionEnd
	    };
	  } else {
	    // Content editable or old IE textarea.
	    selection = getOffsets(input);
	  }

	  return selection || { start: 0, end: 0 };
	}

	/**
	 * @setSelection: Sets the selection bounds of a textarea or input and focuses
	 * the input.
	 * -@input     Set selection bounds of this input or textarea
	 * -@offsets   Object of same form that is returned from get*
	 */
	function setSelection(input, offsets) {
	  var start = offsets.start,
	      end = offsets.end;

	  if (end === undefined) {
	    end = start;
	  }

	  if ('selectionStart' in input) {
	    input.selectionStart = start;
	    input.selectionEnd = Math.min(end, input.value.length);
	  } else {
	    setOffsets(input, offsets);
	  }
	}

	var skipSelectionChangeEvent = canUseDOM && 'documentMode' in document && document.documentMode <= 11;

	var eventTypes$3 = {
	  select: {
	    phasedRegistrationNames: {
	      bubbled: 'onSelect',
	      captured: 'onSelectCapture'
	    },
	    dependencies: [TOP_BLUR, TOP_CONTEXT_MENU, TOP_DRAG_END, TOP_FOCUS, TOP_KEY_DOWN, TOP_KEY_UP, TOP_MOUSE_DOWN, TOP_MOUSE_UP, TOP_SELECTION_CHANGE]
	  }
	};

	var activeElement$1 = null;
	var activeElementInst$1 = null;
	var lastSelection = null;
	var mouseDown = false;

	/**
	 * Get an object which is a unique representation of the current selection.
	 *
	 * The return value will not be consistent across nodes or browsers, but
	 * two identical selections on the same node will return identical objects.
	 *
	 * @param {DOMElement} node
	 * @return {object}
	 */
	function getSelection(node) {
	  if ('selectionStart' in node && hasSelectionCapabilities(node)) {
	    return {
	      start: node.selectionStart,
	      end: node.selectionEnd
	    };
	  } else {
	    var win = node.ownerDocument && node.ownerDocument.defaultView || window;
	    var selection = win.getSelection();
	    return {
	      anchorNode: selection.anchorNode,
	      anchorOffset: selection.anchorOffset,
	      focusNode: selection.focusNode,
	      focusOffset: selection.focusOffset
	    };
	  }
	}

	/**
	 * Get document associated with the event target.
	 *
	 * @param {object} nativeEventTarget
	 * @return {Document}
	 */
	function getEventTargetDocument(eventTarget) {
	  return eventTarget.window === eventTarget ? eventTarget.document : eventTarget.nodeType === DOCUMENT_NODE ? eventTarget : eventTarget.ownerDocument;
	}

	/**
	 * Poll selection to see whether it's changed.
	 *
	 * @param {object} nativeEvent
	 * @param {object} nativeEventTarget
	 * @return {?SyntheticEvent}
	 */
	function constructSelectEvent(nativeEvent, nativeEventTarget) {
	  // Ensure we have the right element, and that the user is not dragging a
	  // selection (this matches native `select` event behavior). In HTML5, select
	  // fires only on input and textarea thus if there's no focused element we
	  // won't dispatch.
	  var doc = getEventTargetDocument(nativeEventTarget);

	  if (mouseDown || activeElement$1 == null || activeElement$1 !== getActiveElement(doc)) {
	    return null;
	  }

	  // Only fire when selection has actually changed.
	  var currentSelection = getSelection(activeElement$1);
	  if (!lastSelection || !shallowEqual(lastSelection, currentSelection)) {
	    lastSelection = currentSelection;

	    var syntheticEvent = SyntheticEvent.getPooled(eventTypes$3.select, activeElementInst$1, nativeEvent, nativeEventTarget);

	    syntheticEvent.type = 'select';
	    syntheticEvent.target = activeElement$1;

	    accumulateTwoPhaseDispatches(syntheticEvent);

	    return syntheticEvent;
	  }

	  return null;
	}

	/**
	 * This plugin creates an `onSelect` event that normalizes select events
	 * across form elements.
	 *
	 * Supported elements are:
	 * - input (see `isTextInputElement`)
	 * - textarea
	 * - contentEditable
	 *
	 * This differs from native browser implementations in the following ways:
	 * - Fires on contentEditable fields as well as inputs.
	 * - Fires for collapsed selection.
	 * - Fires after user input.
	 */
	var SelectEventPlugin = {
	  eventTypes: eventTypes$3,

	  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    var doc = getEventTargetDocument(nativeEventTarget);
	    // Track whether all listeners exists for this plugin. If none exist, we do
	    // not extract events. See #3639.
	    if (!doc || !isListeningToAllDependencies('onSelect', doc)) {
	      return null;
	    }

	    var targetNode = targetInst ? getNodeFromInstance$1(targetInst) : window;

	    switch (topLevelType) {
	      // Track the input node that has focus.
	      case TOP_FOCUS:
	        if (isTextInputElement(targetNode) || targetNode.contentEditable === 'true') {
	          activeElement$1 = targetNode;
	          activeElementInst$1 = targetInst;
	          lastSelection = null;
	        }
	        break;
	      case TOP_BLUR:
	        activeElement$1 = null;
	        activeElementInst$1 = null;
	        lastSelection = null;
	        break;
	      // Don't fire the event while the user is dragging. This matches the
	      // semantics of the native select event.
	      case TOP_MOUSE_DOWN:
	        mouseDown = true;
	        break;
	      case TOP_CONTEXT_MENU:
	      case TOP_MOUSE_UP:
	      case TOP_DRAG_END:
	        mouseDown = false;
	        return constructSelectEvent(nativeEvent, nativeEventTarget);
	      // Chrome and IE fire non-standard event when selection is changed (and
	      // sometimes when it hasn't). IE's event fires out of order with respect
	      // to key and input events on deletion, so we discard it.
	      //
	      // Firefox doesn't support selectionchange, so check selection status
	      // after each key entry. The selection changes after keydown and before
	      // keyup, but we check on keydown as well in the case of holding down a
	      // key, when multiple keydown events are fired but only one keyup is.
	      // This is also our approach for IE handling, for the reason above.
	      case TOP_SELECTION_CHANGE:
	        if (skipSelectionChangeEvent) {
	          break;
	        }
	      // falls through
	      case TOP_KEY_DOWN:
	      case TOP_KEY_UP:
	        return constructSelectEvent(nativeEvent, nativeEventTarget);
	    }

	    return null;
	  }
	};

	/**
	 * Inject modules for resolving DOM hierarchy and plugin ordering.
	 */
	injection.injectEventPluginOrder(DOMEventPluginOrder);
	setComponentTree(getFiberCurrentPropsFromNode$1, getInstanceFromNode$1, getNodeFromInstance$1);

	/**
	 * Some important event plugins included by default (without having to require
	 * them).
	 */
	injection.injectEventPluginsByName({
	  SimpleEventPlugin: SimpleEventPlugin,
	  EnterLeaveEventPlugin: EnterLeaveEventPlugin,
	  ChangeEventPlugin: ChangeEventPlugin,
	  SelectEventPlugin: SelectEventPlugin,
	  BeforeInputEventPlugin: BeforeInputEventPlugin
	});

	var didWarnSelectedSetOnOption = false;
	var didWarnInvalidChild = false;

	function flattenChildren(children) {
	  var content = '';

	  // Flatten children. We'll warn if they are invalid
	  // during validateProps() which runs for hydration too.
	  // Note that this would throw on non-element objects.
	  // Elements are stringified (which is normally irrelevant
	  // but matters for <fbt>).
	  React.Children.forEach(children, function (child) {
	    if (child == null) {
	      return;
	    }
	    content += child;
	    // Note: we don't warn about invalid children here.
	    // Instead, this is done separately below so that
	    // it happens during the hydration codepath too.
	  });

	  return content;
	}

	/**
	 * Implements an <option> host component that warns when `selected` is set.
	 */

	function validateProps(element, props) {
	  {
	    // This mirrors the codepath above, but runs for hydration too.
	    // Warn about invalid children here so that client and hydration are consistent.
	    // TODO: this seems like it could cause a DEV-only throw for hydration
	    // if children contains a non-element object. We should try to avoid that.
	    if (typeof props.children === 'object' && props.children !== null) {
	      React.Children.forEach(props.children, function (child) {
	        if (child == null) {
	          return;
	        }
	        if (typeof child === 'string' || typeof child === 'number') {
	          return;
	        }
	        if (typeof child.type !== 'string') {
	          return;
	        }
	        if (!didWarnInvalidChild) {
	          didWarnInvalidChild = true;
	          warning$1(false, 'Only strings and numbers are supported as <option> children.');
	        }
	      });
	    }

	    // TODO: Remove support for `selected` in <option>.
	    if (props.selected != null && !didWarnSelectedSetOnOption) {
	      warning$1(false, 'Use the `defaultValue` or `value` props on <select> instead of ' + 'setting `selected` on <option>.');
	      didWarnSelectedSetOnOption = true;
	    }
	  }
	}

	function postMountWrapper$1(element, props) {
	  // value="" should make a value attribute (#6219)
	  if (props.value != null) {
	    element.setAttribute('value', toString(getToStringValue(props.value)));
	  }
	}

	function getHostProps$1(element, props) {
	  var hostProps = _assign({ children: undefined }, props);
	  var content = flattenChildren(props.children);

	  if (content) {
	    hostProps.children = content;
	  }

	  return hostProps;
	}

	// TODO: direct imports like some-package/src/* are bad. Fix me.
	var didWarnValueDefaultValue$1 = void 0;

	{
	  didWarnValueDefaultValue$1 = false;
	}

	function getDeclarationErrorAddendum() {
	  var ownerName = getCurrentFiberOwnerNameInDevOrNull();
	  if (ownerName) {
	    return '\n\nCheck the render method of `' + ownerName + '`.';
	  }
	  return '';
	}

	var valuePropNames = ['value', 'defaultValue'];

	/**
	 * Validation function for `value` and `defaultValue`.
	 */
	function checkSelectPropTypes(props) {
	  ReactControlledValuePropTypes.checkPropTypes('select', props);

	  for (var i = 0; i < valuePropNames.length; i++) {
	    var propName = valuePropNames[i];
	    if (props[propName] == null) {
	      continue;
	    }
	    var isArray = Array.isArray(props[propName]);
	    if (props.multiple && !isArray) {
	      warning$1(false, 'The `%s` prop supplied to <select> must be an array if ' + '`multiple` is true.%s', propName, getDeclarationErrorAddendum());
	    } else if (!props.multiple && isArray) {
	      warning$1(false, 'The `%s` prop supplied to <select> must be a scalar ' + 'value if `multiple` is false.%s', propName, getDeclarationErrorAddendum());
	    }
	  }
	}

	function updateOptions(node, multiple, propValue, setDefaultSelected) {
	  var options = node.options;

	  if (multiple) {
	    var selectedValues = propValue;
	    var selectedValue = {};
	    for (var i = 0; i < selectedValues.length; i++) {
	      // Prefix to avoid chaos with special keys.
	      selectedValue['$' + selectedValues[i]] = true;
	    }
	    for (var _i = 0; _i < options.length; _i++) {
	      var selected = selectedValue.hasOwnProperty('$' + options[_i].value);
	      if (options[_i].selected !== selected) {
	        options[_i].selected = selected;
	      }
	      if (selected && setDefaultSelected) {
	        options[_i].defaultSelected = true;
	      }
	    }
	  } else {
	    // Do not set `select.value` as exact behavior isn't consistent across all
	    // browsers for all cases.
	    var _selectedValue = toString(getToStringValue(propValue));
	    var defaultSelected = null;
	    for (var _i2 = 0; _i2 < options.length; _i2++) {
	      if (options[_i2].value === _selectedValue) {
	        options[_i2].selected = true;
	        if (setDefaultSelected) {
	          options[_i2].defaultSelected = true;
	        }
	        return;
	      }
	      if (defaultSelected === null && !options[_i2].disabled) {
	        defaultSelected = options[_i2];
	      }
	    }
	    if (defaultSelected !== null) {
	      defaultSelected.selected = true;
	    }
	  }
	}

	/**
	 * Implements a <select> host component that allows optionally setting the
	 * props `value` and `defaultValue`. If `multiple` is false, the prop must be a
	 * stringable. If `multiple` is true, the prop must be an array of stringables.
	 *
	 * If `value` is not supplied (or null/undefined), user actions that change the
	 * selected option will trigger updates to the rendered options.
	 *
	 * If it is supplied (and not null/undefined), the rendered options will not
	 * update in response to user actions. Instead, the `value` prop must change in
	 * order for the rendered options to update.
	 *
	 * If `defaultValue` is provided, any options with the supplied values will be
	 * selected.
	 */

	function getHostProps$2(element, props) {
	  return _assign({}, props, {
	    value: undefined
	  });
	}

	function initWrapperState$1(element, props) {
	  var node = element;
	  {
	    checkSelectPropTypes(props);
	  }

	  node._wrapperState = {
	    wasMultiple: !!props.multiple
	  };

	  {
	    if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue$1) {
	      warning$1(false, 'Select elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled select ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components');
	      didWarnValueDefaultValue$1 = true;
	    }
	  }
	}

	function postMountWrapper$2(element, props) {
	  var node = element;
	  node.multiple = !!props.multiple;
	  var value = props.value;
	  if (value != null) {
	    updateOptions(node, !!props.multiple, value, false);
	  } else if (props.defaultValue != null) {
	    updateOptions(node, !!props.multiple, props.defaultValue, true);
	  }
	}

	function postUpdateWrapper(element, props) {
	  var node = element;
	  var wasMultiple = node._wrapperState.wasMultiple;
	  node._wrapperState.wasMultiple = !!props.multiple;

	  var value = props.value;
	  if (value != null) {
	    updateOptions(node, !!props.multiple, value, false);
	  } else if (wasMultiple !== !!props.multiple) {
	    // For simplicity, reapply `defaultValue` if `multiple` is toggled.
	    if (props.defaultValue != null) {
	      updateOptions(node, !!props.multiple, props.defaultValue, true);
	    } else {
	      // Revert the select back to its default unselected state.
	      updateOptions(node, !!props.multiple, props.multiple ? [] : '', false);
	    }
	  }
	}

	function restoreControlledState$2(element, props) {
	  var node = element;
	  var value = props.value;

	  if (value != null) {
	    updateOptions(node, !!props.multiple, value, false);
	  }
	}

	var didWarnValDefaultVal = false;

	/**
	 * Implements a <textarea> host component that allows setting `value`, and
	 * `defaultValue`. This differs from the traditional DOM API because value is
	 * usually set as PCDATA children.
	 *
	 * If `value` is not supplied (or null/undefined), user actions that affect the
	 * value will trigger updates to the element.
	 *
	 * If `value` is supplied (and not null/undefined), the rendered element will
	 * not trigger updates to the element. Instead, the `value` prop must change in
	 * order for the rendered element to be updated.
	 *
	 * The rendered element will be initialized with an empty value, the prop
	 * `defaultValue` if specified, or the children content (deprecated).
	 */

	function getHostProps$3(element, props) {
	  var node = element;
	  !(props.dangerouslySetInnerHTML == null) ? invariant(false, '`dangerouslySetInnerHTML` does not make sense on <textarea>.') : void 0;

	  // Always set children to the same thing. In IE9, the selection range will
	  // get reset if `textContent` is mutated.  We could add a check in setTextContent
	  // to only set the value if/when the value differs from the node value (which would
	  // completely solve this IE9 bug), but Sebastian+Sophie seemed to like this
	  // solution. The value can be a boolean or object so that's why it's forced
	  // to be a string.
	  var hostProps = _assign({}, props, {
	    value: undefined,
	    defaultValue: undefined,
	    children: toString(node._wrapperState.initialValue)
	  });

	  return hostProps;
	}

	function initWrapperState$2(element, props) {
	  var node = element;
	  {
	    ReactControlledValuePropTypes.checkPropTypes('textarea', props);
	    if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValDefaultVal) {
	      warning$1(false, '%s contains a textarea with both value and defaultValue props. ' + 'Textarea elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled textarea ' + 'and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components', getCurrentFiberOwnerNameInDevOrNull() || 'A component');
	      didWarnValDefaultVal = true;
	    }
	  }

	  var initialValue = props.value;

	  // Only bother fetching default value if we're going to use it
	  if (initialValue == null) {
	    var defaultValue = props.defaultValue;
	    // TODO (yungsters): Remove support for children content in <textarea>.
	    var children = props.children;
	    if (children != null) {
	      {
	        warning$1(false, 'Use the `defaultValue` or `value` props instead of setting ' + 'children on <textarea>.');
	      }
	      !(defaultValue == null) ? invariant(false, 'If you supply `defaultValue` on a <textarea>, do not pass children.') : void 0;
	      if (Array.isArray(children)) {
	        !(children.length <= 1) ? invariant(false, '<textarea> can only have at most one child.') : void 0;
	        children = children[0];
	      }

	      defaultValue = children;
	    }
	    if (defaultValue == null) {
	      defaultValue = '';
	    }
	    initialValue = defaultValue;
	  }

	  node._wrapperState = {
	    initialValue: getToStringValue(initialValue)
	  };
	}

	function updateWrapper$1(element, props) {
	  var node = element;
	  var value = getToStringValue(props.value);
	  var defaultValue = getToStringValue(props.defaultValue);
	  if (value != null) {
	    // Cast `value` to a string to ensure the value is set correctly. While
	    // browsers typically do this as necessary, jsdom doesn't.
	    var newValue = toString(value);
	    // To avoid side effects (such as losing text selection), only set value if changed
	    if (newValue !== node.value) {
	      node.value = newValue;
	    }
	    if (props.defaultValue == null && node.defaultValue !== newValue) {
	      node.defaultValue = newValue;
	    }
	  }
	  if (defaultValue != null) {
	    node.defaultValue = toString(defaultValue);
	  }
	}

	function postMountWrapper$3(element, props) {
	  var node = element;
	  // This is in postMount because we need access to the DOM node, which is not
	  // available until after the component has mounted.
	  var textContent = node.textContent;

	  // Only set node.value if textContent is equal to the expected
	  // initial value. In IE10/IE11 there is a bug where the placeholder attribute
	  // will populate textContent as well.
	  // https://developer.microsoft.com/microsoft-edge/platform/issues/101525/
	  if (textContent === node._wrapperState.initialValue) {
	    node.value = textContent;
	  }
	}

	function restoreControlledState$3(element, props) {
	  // DOM component is still mounted; update
	  updateWrapper$1(element, props);
	}

	var HTML_NAMESPACE$1 = 'http://www.w3.org/1999/xhtml';
	var MATH_NAMESPACE = 'http://www.w3.org/1998/Math/MathML';
	var SVG_NAMESPACE = 'http://www.w3.org/2000/svg';

	var Namespaces = {
	  html: HTML_NAMESPACE$1,
	  mathml: MATH_NAMESPACE,
	  svg: SVG_NAMESPACE
	};

	// Assumes there is no parent namespace.
	function getIntrinsicNamespace(type) {
	  switch (type) {
	    case 'svg':
	      return SVG_NAMESPACE;
	    case 'math':
	      return MATH_NAMESPACE;
	    default:
	      return HTML_NAMESPACE$1;
	  }
	}

	function getChildNamespace(parentNamespace, type) {
	  if (parentNamespace == null || parentNamespace === HTML_NAMESPACE$1) {
	    // No (or default) parent namespace: potential entry point.
	    return getIntrinsicNamespace(type);
	  }
	  if (parentNamespace === SVG_NAMESPACE && type === 'foreignObject') {
	    // We're leaving SVG.
	    return HTML_NAMESPACE$1;
	  }
	  // By default, pass namespace below.
	  return parentNamespace;
	}

	/* globals MSApp */

	/**
	 * Create a function which has 'unsafe' privileges (required by windows8 apps)
	 */
	var createMicrosoftUnsafeLocalFunction = function (func) {
	  if (typeof MSApp !== 'undefined' && MSApp.execUnsafeLocalFunction) {
	    return function (arg0, arg1, arg2, arg3) {
	      MSApp.execUnsafeLocalFunction(function () {
	        return func(arg0, arg1, arg2, arg3);
	      });
	    };
	  } else {
	    return func;
	  }
	};

	// SVG temp container for IE lacking innerHTML
	var reusableSVGContainer = void 0;

	/**
	 * Set the innerHTML property of a node
	 *
	 * @param {DOMElement} node
	 * @param {string} html
	 * @internal
	 */
	var setInnerHTML = createMicrosoftUnsafeLocalFunction(function (node, html) {
	  // IE does not have innerHTML for SVG nodes, so instead we inject the
	  // new markup in a temp node and then move the child nodes across into
	  // the target node

	  if (node.namespaceURI === Namespaces.svg && !('innerHTML' in node)) {
	    reusableSVGContainer = reusableSVGContainer || document.createElement('div');
	    reusableSVGContainer.innerHTML = '<svg>' + html + '</svg>';
	    var svgNode = reusableSVGContainer.firstChild;
	    while (node.firstChild) {
	      node.removeChild(node.firstChild);
	    }
	    while (svgNode.firstChild) {
	      node.appendChild(svgNode.firstChild);
	    }
	  } else {
	    node.innerHTML = html;
	  }
	});

	/**
	 * Set the textContent property of a node. For text updates, it's faster
	 * to set the `nodeValue` of the Text node directly instead of using
	 * `.textContent` which will remove the existing node and create a new one.
	 *
	 * @param {DOMElement} node
	 * @param {string} text
	 * @internal
	 */
	var setTextContent = function (node, text) {
	  if (text) {
	    var firstChild = node.firstChild;

	    if (firstChild && firstChild === node.lastChild && firstChild.nodeType === TEXT_NODE) {
	      firstChild.nodeValue = text;
	      return;
	    }
	  }
	  node.textContent = text;
	};

	// List derived from Gecko source code:
	// https://github.com/mozilla/gecko-dev/blob/4e638efc71/layout/style/test/property_database.js
	var shorthandToLonghand = {
	  animation: ['animationDelay', 'animationDirection', 'animationDuration', 'animationFillMode', 'animationIterationCount', 'animationName', 'animationPlayState', 'animationTimingFunction'],
	  background: ['backgroundAttachment', 'backgroundClip', 'backgroundColor', 'backgroundImage', 'backgroundOrigin', 'backgroundPositionX', 'backgroundPositionY', 'backgroundRepeat', 'backgroundSize'],
	  backgroundPosition: ['backgroundPositionX', 'backgroundPositionY'],
	  border: ['borderBottomColor', 'borderBottomStyle', 'borderBottomWidth', 'borderImageOutset', 'borderImageRepeat', 'borderImageSlice', 'borderImageSource', 'borderImageWidth', 'borderLeftColor', 'borderLeftStyle', 'borderLeftWidth', 'borderRightColor', 'borderRightStyle', 'borderRightWidth', 'borderTopColor', 'borderTopStyle', 'borderTopWidth'],
	  borderBlockEnd: ['borderBlockEndColor', 'borderBlockEndStyle', 'borderBlockEndWidth'],
	  borderBlockStart: ['borderBlockStartColor', 'borderBlockStartStyle', 'borderBlockStartWidth'],
	  borderBottom: ['borderBottomColor', 'borderBottomStyle', 'borderBottomWidth'],
	  borderColor: ['borderBottomColor', 'borderLeftColor', 'borderRightColor', 'borderTopColor'],
	  borderImage: ['borderImageOutset', 'borderImageRepeat', 'borderImageSlice', 'borderImageSource', 'borderImageWidth'],
	  borderInlineEnd: ['borderInlineEndColor', 'borderInlineEndStyle', 'borderInlineEndWidth'],
	  borderInlineStart: ['borderInlineStartColor', 'borderInlineStartStyle', 'borderInlineStartWidth'],
	  borderLeft: ['borderLeftColor', 'borderLeftStyle', 'borderLeftWidth'],
	  borderRadius: ['borderBottomLeftRadius', 'borderBottomRightRadius', 'borderTopLeftRadius', 'borderTopRightRadius'],
	  borderRight: ['borderRightColor', 'borderRightStyle', 'borderRightWidth'],
	  borderStyle: ['borderBottomStyle', 'borderLeftStyle', 'borderRightStyle', 'borderTopStyle'],
	  borderTop: ['borderTopColor', 'borderTopStyle', 'borderTopWidth'],
	  borderWidth: ['borderBottomWidth', 'borderLeftWidth', 'borderRightWidth', 'borderTopWidth'],
	  columnRule: ['columnRuleColor', 'columnRuleStyle', 'columnRuleWidth'],
	  columns: ['columnCount', 'columnWidth'],
	  flex: ['flexBasis', 'flexGrow', 'flexShrink'],
	  flexFlow: ['flexDirection', 'flexWrap'],
	  font: ['fontFamily', 'fontFeatureSettings', 'fontKerning', 'fontLanguageOverride', 'fontSize', 'fontSizeAdjust', 'fontStretch', 'fontStyle', 'fontVariant', 'fontVariantAlternates', 'fontVariantCaps', 'fontVariantEastAsian', 'fontVariantLigatures', 'fontVariantNumeric', 'fontVariantPosition', 'fontWeight', 'lineHeight'],
	  fontVariant: ['fontVariantAlternates', 'fontVariantCaps', 'fontVariantEastAsian', 'fontVariantLigatures', 'fontVariantNumeric', 'fontVariantPosition'],
	  gap: ['columnGap', 'rowGap'],
	  grid: ['gridAutoColumns', 'gridAutoFlow', 'gridAutoRows', 'gridTemplateAreas', 'gridTemplateColumns', 'gridTemplateRows'],
	  gridArea: ['gridColumnEnd', 'gridColumnStart', 'gridRowEnd', 'gridRowStart'],
	  gridColumn: ['gridColumnEnd', 'gridColumnStart'],
	  gridColumnGap: ['columnGap'],
	  gridGap: ['columnGap', 'rowGap'],
	  gridRow: ['gridRowEnd', 'gridRowStart'],
	  gridRowGap: ['rowGap'],
	  gridTemplate: ['gridTemplateAreas', 'gridTemplateColumns', 'gridTemplateRows'],
	  listStyle: ['listStyleImage', 'listStylePosition', 'listStyleType'],
	  margin: ['marginBottom', 'marginLeft', 'marginRight', 'marginTop'],
	  marker: ['markerEnd', 'markerMid', 'markerStart'],
	  mask: ['maskClip', 'maskComposite', 'maskImage', 'maskMode', 'maskOrigin', 'maskPositionX', 'maskPositionY', 'maskRepeat', 'maskSize'],
	  maskPosition: ['maskPositionX', 'maskPositionY'],
	  outline: ['outlineColor', 'outlineStyle', 'outlineWidth'],
	  overflow: ['overflowX', 'overflowY'],
	  padding: ['paddingBottom', 'paddingLeft', 'paddingRight', 'paddingTop'],
	  placeContent: ['alignContent', 'justifyContent'],
	  placeItems: ['alignItems', 'justifyItems'],
	  placeSelf: ['alignSelf', 'justifySelf'],
	  textDecoration: ['textDecorationColor', 'textDecorationLine', 'textDecorationStyle'],
	  textEmphasis: ['textEmphasisColor', 'textEmphasisStyle'],
	  transition: ['transitionDelay', 'transitionDuration', 'transitionProperty', 'transitionTimingFunction'],
	  wordWrap: ['overflowWrap']
	};

	/**
	 * CSS properties which accept numbers but are not in units of "px".
	 */
	var isUnitlessNumber = {
	  animationIterationCount: true,
	  borderImageOutset: true,
	  borderImageSlice: true,
	  borderImageWidth: true,
	  boxFlex: true,
	  boxFlexGroup: true,
	  boxOrdinalGroup: true,
	  columnCount: true,
	  columns: true,
	  flex: true,
	  flexGrow: true,
	  flexPositive: true,
	  flexShrink: true,
	  flexNegative: true,
	  flexOrder: true,
	  gridArea: true,
	  gridRow: true,
	  gridRowEnd: true,
	  gridRowSpan: true,
	  gridRowStart: true,
	  gridColumn: true,
	  gridColumnEnd: true,
	  gridColumnSpan: true,
	  gridColumnStart: true,
	  fontWeight: true,
	  lineClamp: true,
	  lineHeight: true,
	  opacity: true,
	  order: true,
	  orphans: true,
	  tabSize: true,
	  widows: true,
	  zIndex: true,
	  zoom: true,

	  // SVG-related properties
	  fillOpacity: true,
	  floodOpacity: true,
	  stopOpacity: true,
	  strokeDasharray: true,
	  strokeDashoffset: true,
	  strokeMiterlimit: true,
	  strokeOpacity: true,
	  strokeWidth: true
	};

	/**
	 * @param {string} prefix vendor-specific prefix, eg: Webkit
	 * @param {string} key style name, eg: transitionDuration
	 * @return {string} style name prefixed with `prefix`, properly camelCased, eg:
	 * WebkitTransitionDuration
	 */
	function prefixKey(prefix, key) {
	  return prefix + key.charAt(0).toUpperCase() + key.substring(1);
	}

	/**
	 * Support style names that may come passed in prefixed by adding permutations
	 * of vendor prefixes.
	 */
	var prefixes = ['Webkit', 'ms', 'Moz', 'O'];

	// Using Object.keys here, or else the vanilla for-in loop makes IE8 go into an
	// infinite loop, because it iterates over the newly added props too.
	Object.keys(isUnitlessNumber).forEach(function (prop) {
	  prefixes.forEach(function (prefix) {
	    isUnitlessNumber[prefixKey(prefix, prop)] = isUnitlessNumber[prop];
	  });
	});

	/**
	 * Convert a value into the proper css writable value. The style name `name`
	 * should be logical (no hyphens), as specified
	 * in `CSSProperty.isUnitlessNumber`.
	 *
	 * @param {string} name CSS property name such as `topMargin`.
	 * @param {*} value CSS property value such as `10px`.
	 * @return {string} Normalized style value with dimensions applied.
	 */
	function dangerousStyleValue(name, value, isCustomProperty) {
	  // Note that we've removed escapeTextForBrowser() calls here since the
	  // whole string will be escaped when the attribute is injected into
	  // the markup. If you provide unsafe user data here they can inject
	  // arbitrary CSS which may be problematic (I couldn't repro this):
	  // https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet
	  // http://www.thespanner.co.uk/2007/11/26/ultimate-xss-css-injection/
	  // This is not an XSS hole but instead a potential CSS injection issue
	  // which has lead to a greater discussion about how we're going to
	  // trust URLs moving forward. See #2115901

	  var isEmpty = value == null || typeof value === 'boolean' || value === '';
	  if (isEmpty) {
	    return '';
	  }

	  if (!isCustomProperty && typeof value === 'number' && value !== 0 && !(isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name])) {
	    return value + 'px'; // Presumes implicit 'px' suffix for unitless numbers
	  }

	  return ('' + value).trim();
	}

	var uppercasePattern = /([A-Z])/g;
	var msPattern = /^ms-/;

	/**
	 * Hyphenates a camelcased CSS property name, for example:
	 *
	 *   > hyphenateStyleName('backgroundColor')
	 *   < "background-color"
	 *   > hyphenateStyleName('MozTransition')
	 *   < "-moz-transition"
	 *   > hyphenateStyleName('msTransition')
	 *   < "-ms-transition"
	 *
	 * As Modernizr suggests (http://modernizr.com/docs/#prefixed), an `ms` prefix
	 * is converted to `-ms-`.
	 */
	function hyphenateStyleName(name) {
	  return name.replace(uppercasePattern, '-$1').toLowerCase().replace(msPattern, '-ms-');
	}

	var warnValidStyle = function () {};

	{
	  // 'msTransform' is correct, but the other prefixes should be capitalized
	  var badVendoredStyleNamePattern = /^(?:webkit|moz|o)[A-Z]/;
	  var msPattern$1 = /^-ms-/;
	  var hyphenPattern = /-(.)/g;

	  // style values shouldn't contain a semicolon
	  var badStyleValueWithSemicolonPattern = /;\s*$/;

	  var warnedStyleNames = {};
	  var warnedStyleValues = {};
	  var warnedForNaNValue = false;
	  var warnedForInfinityValue = false;

	  var camelize = function (string) {
	    return string.replace(hyphenPattern, function (_, character) {
	      return character.toUpperCase();
	    });
	  };

	  var warnHyphenatedStyleName = function (name) {
	    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
	      return;
	    }

	    warnedStyleNames[name] = true;
	    warning$1(false, 'Unsupported style property %s. Did you mean %s?', name,
	    // As Andi Smith suggests
	    // (http://www.andismith.com/blog/2012/02/modernizr-prefixed/), an `-ms` prefix
	    // is converted to lowercase `ms`.
	    camelize(name.replace(msPattern$1, 'ms-')));
	  };

	  var warnBadVendoredStyleName = function (name) {
	    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
	      return;
	    }

	    warnedStyleNames[name] = true;
	    warning$1(false, 'Unsupported vendor-prefixed style property %s. Did you mean %s?', name, name.charAt(0).toUpperCase() + name.slice(1));
	  };

	  var warnStyleValueWithSemicolon = function (name, value) {
	    if (warnedStyleValues.hasOwnProperty(value) && warnedStyleValues[value]) {
	      return;
	    }

	    warnedStyleValues[value] = true;
	    warning$1(false, "Style property values shouldn't contain a semicolon. " + 'Try "%s: %s" instead.', name, value.replace(badStyleValueWithSemicolonPattern, ''));
	  };

	  var warnStyleValueIsNaN = function (name, value) {
	    if (warnedForNaNValue) {
	      return;
	    }

	    warnedForNaNValue = true;
	    warning$1(false, '`NaN` is an invalid value for the `%s` css style property.', name);
	  };

	  var warnStyleValueIsInfinity = function (name, value) {
	    if (warnedForInfinityValue) {
	      return;
	    }

	    warnedForInfinityValue = true;
	    warning$1(false, '`Infinity` is an invalid value for the `%s` css style property.', name);
	  };

	  warnValidStyle = function (name, value) {
	    if (name.indexOf('-') > -1) {
	      warnHyphenatedStyleName(name);
	    } else if (badVendoredStyleNamePattern.test(name)) {
	      warnBadVendoredStyleName(name);
	    } else if (badStyleValueWithSemicolonPattern.test(value)) {
	      warnStyleValueWithSemicolon(name, value);
	    }

	    if (typeof value === 'number') {
	      if (isNaN(value)) {
	        warnStyleValueIsNaN(name, value);
	      } else if (!isFinite(value)) {
	        warnStyleValueIsInfinity(name, value);
	      }
	    }
	  };
	}

	var warnValidStyle$1 = warnValidStyle;

	/**
	 * Operations for dealing with CSS properties.
	 */

	/**
	 * This creates a string that is expected to be equivalent to the style
	 * attribute generated by server-side rendering. It by-passes warnings and
	 * security checks so it's not safe to use this value for anything other than
	 * comparison. It is only used in DEV for SSR validation.
	 */
	function createDangerousStringForStyles(styles) {
	  {
	    var serialized = '';
	    var delimiter = '';
	    for (var styleName in styles) {
	      if (!styles.hasOwnProperty(styleName)) {
	        continue;
	      }
	      var styleValue = styles[styleName];
	      if (styleValue != null) {
	        var isCustomProperty = styleName.indexOf('--') === 0;
	        serialized += delimiter + hyphenateStyleName(styleName) + ':';
	        serialized += dangerousStyleValue(styleName, styleValue, isCustomProperty);

	        delimiter = ';';
	      }
	    }
	    return serialized || null;
	  }
	}

	/**
	 * Sets the value for multiple styles on a node.  If a value is specified as
	 * '' (empty string), the corresponding style property will be unset.
	 *
	 * @param {DOMElement} node
	 * @param {object} styles
	 */
	function setValueForStyles(node, styles) {
	  var style = node.style;
	  for (var styleName in styles) {
	    if (!styles.hasOwnProperty(styleName)) {
	      continue;
	    }
	    var isCustomProperty = styleName.indexOf('--') === 0;
	    {
	      if (!isCustomProperty) {
	        warnValidStyle$1(styleName, styles[styleName]);
	      }
	    }
	    var styleValue = dangerousStyleValue(styleName, styles[styleName], isCustomProperty);
	    if (styleName === 'float') {
	      styleName = 'cssFloat';
	    }
	    if (isCustomProperty) {
	      style.setProperty(styleName, styleValue);
	    } else {
	      style[styleName] = styleValue;
	    }
	  }
	}

	function isValueEmpty(value) {
	  return value == null || typeof value === 'boolean' || value === '';
	}

	/**
	 * Given {color: 'red', overflow: 'hidden'} returns {
	 *   color: 'color',
	 *   overflowX: 'overflow',
	 *   overflowY: 'overflow',
	 * }. This can be read as "the overflowY property was set by the overflow
	 * shorthand". That is, the values are the property that each was derived from.
	 */
	function expandShorthandMap(styles) {
	  var expanded = {};
	  for (var key in styles) {
	    var longhands = shorthandToLonghand[key] || [key];
	    for (var i = 0; i < longhands.length; i++) {
	      expanded[longhands[i]] = key;
	    }
	  }
	  return expanded;
	}

	/**
	 * When mixing shorthand and longhand property names, we warn during updates if
	 * we expect an incorrect result to occur. In particular, we warn for:
	 *
	 * Updating a shorthand property (longhand gets overwritten):
	 *   {font: 'foo', fontVariant: 'bar'} -> {font: 'baz', fontVariant: 'bar'}
	 *   becomes .style.font = 'baz'
	 * Removing a shorthand property (longhand gets lost too):
	 *   {font: 'foo', fontVariant: 'bar'} -> {fontVariant: 'bar'}
	 *   becomes .style.font = ''
	 * Removing a longhand property (should revert to shorthand; doesn't):
	 *   {font: 'foo', fontVariant: 'bar'} -> {font: 'foo'}
	 *   becomes .style.fontVariant = ''
	 */
	function validateShorthandPropertyCollisionInDev(styleUpdates, nextStyles) {
	  if (!warnAboutShorthandPropertyCollision) {
	    return;
	  }

	  if (!nextStyles) {
	    return;
	  }

	  var expandedUpdates = expandShorthandMap(styleUpdates);
	  var expandedStyles = expandShorthandMap(nextStyles);
	  var warnedAbout = {};
	  for (var key in expandedUpdates) {
	    var originalKey = expandedUpdates[key];
	    var correctOriginalKey = expandedStyles[key];
	    if (correctOriginalKey && originalKey !== correctOriginalKey) {
	      var warningKey = originalKey + ',' + correctOriginalKey;
	      if (warnedAbout[warningKey]) {
	        continue;
	      }
	      warnedAbout[warningKey] = true;
	      warning$1(false, '%s a style property during rerender (%s) when a ' + 'conflicting property is set (%s) can lead to styling bugs. To ' + "avoid this, don't mix shorthand and non-shorthand properties " + 'for the same value; instead, replace the shorthand with ' + 'separate values.', isValueEmpty(styleUpdates[originalKey]) ? 'Removing' : 'Updating', originalKey, correctOriginalKey);
	    }
	  }
	}

	// For HTML, certain tags should omit their close tag. We keep a whitelist for
	// those special-case tags.

	var omittedCloseTags = {
	  area: true,
	  base: true,
	  br: true,
	  col: true,
	  embed: true,
	  hr: true,
	  img: true,
	  input: true,
	  keygen: true,
	  link: true,
	  meta: true,
	  param: true,
	  source: true,
	  track: true,
	  wbr: true
	  // NOTE: menuitem's close tag should be omitted, but that causes problems.
	};

	// For HTML, certain tags cannot have children. This has the same purpose as
	// `omittedCloseTags` except that `menuitem` should still have its closing tag.

	var voidElementTags = _assign({
	  menuitem: true
	}, omittedCloseTags);

	// TODO: We can remove this if we add invariantWithStack()
	// or add stack by default to invariants where possible.
	var HTML$1 = '__html';

	var ReactDebugCurrentFrame$2 = null;
	{
	  ReactDebugCurrentFrame$2 = ReactSharedInternals.ReactDebugCurrentFrame;
	}

	function assertValidProps(tag, props) {
	  if (!props) {
	    return;
	  }
	  // Note the use of `==` which checks for null or undefined.
	  if (voidElementTags[tag]) {
	    !(props.children == null && props.dangerouslySetInnerHTML == null) ? invariant(false, '%s is a void element tag and must neither have `children` nor use `dangerouslySetInnerHTML`.%s', tag, ReactDebugCurrentFrame$2.getStackAddendum()) : void 0;
	  }
	  if (props.dangerouslySetInnerHTML != null) {
	    !(props.children == null) ? invariant(false, 'Can only set one of `children` or `props.dangerouslySetInnerHTML`.') : void 0;
	    !(typeof props.dangerouslySetInnerHTML === 'object' && HTML$1 in props.dangerouslySetInnerHTML) ? invariant(false, '`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://fb.me/react-invariant-dangerously-set-inner-html for more information.') : void 0;
	  }
	  {
	    !(props.suppressContentEditableWarning || !props.contentEditable || props.children == null) ? warning$1(false, 'A component is `contentEditable` and contains `children` managed by ' + 'React. It is now your responsibility to guarantee that none of ' + 'those nodes are unexpectedly modified or duplicated. This is ' + 'probably not intentional.') : void 0;
	  }
	  !(props.style == null || typeof props.style === 'object') ? invariant(false, 'The `style` prop expects a mapping from style properties to values, not a string. For example, style={{marginRight: spacing + \'em\'}} when using JSX.%s', ReactDebugCurrentFrame$2.getStackAddendum()) : void 0;
	}

	function isCustomComponent(tagName, props) {
	  if (tagName.indexOf('-') === -1) {
	    return typeof props.is === 'string';
	  }
	  switch (tagName) {
	    // These are reserved SVG and MathML elements.
	    // We don't mind this whitelist too much because we expect it to never grow.
	    // The alternative is to track the namespace in a few places which is convoluted.
	    // https://w3c.github.io/webcomponents/spec/custom/#custom-elements-core-concepts
	    case 'annotation-xml':
	    case 'color-profile':
	    case 'font-face':
	    case 'font-face-src':
	    case 'font-face-uri':
	    case 'font-face-format':
	    case 'font-face-name':
	    case 'missing-glyph':
	      return false;
	    default:
	      return true;
	  }
	}

	// When adding attributes to the HTML or SVG whitelist, be sure to
	// also add them to this module to ensure casing and incorrect name
	// warnings.
	var possibleStandardNames = {
	  // HTML
	  accept: 'accept',
	  acceptcharset: 'acceptCharset',
	  'accept-charset': 'acceptCharset',
	  accesskey: 'accessKey',
	  action: 'action',
	  allowfullscreen: 'allowFullScreen',
	  alt: 'alt',
	  as: 'as',
	  async: 'async',
	  autocapitalize: 'autoCapitalize',
	  autocomplete: 'autoComplete',
	  autocorrect: 'autoCorrect',
	  autofocus: 'autoFocus',
	  autoplay: 'autoPlay',
	  autosave: 'autoSave',
	  capture: 'capture',
	  cellpadding: 'cellPadding',
	  cellspacing: 'cellSpacing',
	  challenge: 'challenge',
	  charset: 'charSet',
	  checked: 'checked',
	  children: 'children',
	  cite: 'cite',
	  class: 'className',
	  classid: 'classID',
	  classname: 'className',
	  cols: 'cols',
	  colspan: 'colSpan',
	  content: 'content',
	  contenteditable: 'contentEditable',
	  contextmenu: 'contextMenu',
	  controls: 'controls',
	  controlslist: 'controlsList',
	  coords: 'coords',
	  crossorigin: 'crossOrigin',
	  dangerouslysetinnerhtml: 'dangerouslySetInnerHTML',
	  data: 'data',
	  datetime: 'dateTime',
	  default: 'default',
	  defaultchecked: 'defaultChecked',
	  defaultvalue: 'defaultValue',
	  defer: 'defer',
	  dir: 'dir',
	  disabled: 'disabled',
	  download: 'download',
	  draggable: 'draggable',
	  enctype: 'encType',
	  for: 'htmlFor',
	  form: 'form',
	  formmethod: 'formMethod',
	  formaction: 'formAction',
	  formenctype: 'formEncType',
	  formnovalidate: 'formNoValidate',
	  formtarget: 'formTarget',
	  frameborder: 'frameBorder',
	  headers: 'headers',
	  height: 'height',
	  hidden: 'hidden',
	  high: 'high',
	  href: 'href',
	  hreflang: 'hrefLang',
	  htmlfor: 'htmlFor',
	  httpequiv: 'httpEquiv',
	  'http-equiv': 'httpEquiv',
	  icon: 'icon',
	  id: 'id',
	  innerhtml: 'innerHTML',
	  inputmode: 'inputMode',
	  integrity: 'integrity',
	  is: 'is',
	  itemid: 'itemID',
	  itemprop: 'itemProp',
	  itemref: 'itemRef',
	  itemscope: 'itemScope',
	  itemtype: 'itemType',
	  keyparams: 'keyParams',
	  keytype: 'keyType',
	  kind: 'kind',
	  label: 'label',
	  lang: 'lang',
	  list: 'list',
	  loop: 'loop',
	  low: 'low',
	  manifest: 'manifest',
	  marginwidth: 'marginWidth',
	  marginheight: 'marginHeight',
	  max: 'max',
	  maxlength: 'maxLength',
	  media: 'media',
	  mediagroup: 'mediaGroup',
	  method: 'method',
	  min: 'min',
	  minlength: 'minLength',
	  multiple: 'multiple',
	  muted: 'muted',
	  name: 'name',
	  nomodule: 'noModule',
	  nonce: 'nonce',
	  novalidate: 'noValidate',
	  open: 'open',
	  optimum: 'optimum',
	  pattern: 'pattern',
	  placeholder: 'placeholder',
	  playsinline: 'playsInline',
	  poster: 'poster',
	  preload: 'preload',
	  profile: 'profile',
	  radiogroup: 'radioGroup',
	  readonly: 'readOnly',
	  referrerpolicy: 'referrerPolicy',
	  rel: 'rel',
	  required: 'required',
	  reversed: 'reversed',
	  role: 'role',
	  rows: 'rows',
	  rowspan: 'rowSpan',
	  sandbox: 'sandbox',
	  scope: 'scope',
	  scoped: 'scoped',
	  scrolling: 'scrolling',
	  seamless: 'seamless',
	  selected: 'selected',
	  shape: 'shape',
	  size: 'size',
	  sizes: 'sizes',
	  span: 'span',
	  spellcheck: 'spellCheck',
	  src: 'src',
	  srcdoc: 'srcDoc',
	  srclang: 'srcLang',
	  srcset: 'srcSet',
	  start: 'start',
	  step: 'step',
	  style: 'style',
	  summary: 'summary',
	  tabindex: 'tabIndex',
	  target: 'target',
	  title: 'title',
	  type: 'type',
	  usemap: 'useMap',
	  value: 'value',
	  width: 'width',
	  wmode: 'wmode',
	  wrap: 'wrap',

	  // SVG
	  about: 'about',
	  accentheight: 'accentHeight',
	  'accent-height': 'accentHeight',
	  accumulate: 'accumulate',
	  additive: 'additive',
	  alignmentbaseline: 'alignmentBaseline',
	  'alignment-baseline': 'alignmentBaseline',
	  allowreorder: 'allowReorder',
	  alphabetic: 'alphabetic',
	  amplitude: 'amplitude',
	  arabicform: 'arabicForm',
	  'arabic-form': 'arabicForm',
	  ascent: 'ascent',
	  attributename: 'attributeName',
	  attributetype: 'attributeType',
	  autoreverse: 'autoReverse',
	  azimuth: 'azimuth',
	  basefrequency: 'baseFrequency',
	  baselineshift: 'baselineShift',
	  'baseline-shift': 'baselineShift',
	  baseprofile: 'baseProfile',
	  bbox: 'bbox',
	  begin: 'begin',
	  bias: 'bias',
	  by: 'by',
	  calcmode: 'calcMode',
	  capheight: 'capHeight',
	  'cap-height': 'capHeight',
	  clip: 'clip',
	  clippath: 'clipPath',
	  'clip-path': 'clipPath',
	  clippathunits: 'clipPathUnits',
	  cliprule: 'clipRule',
	  'clip-rule': 'clipRule',
	  color: 'color',
	  colorinterpolation: 'colorInterpolation',
	  'color-interpolation': 'colorInterpolation',
	  colorinterpolationfilters: 'colorInterpolationFilters',
	  'color-interpolation-filters': 'colorInterpolationFilters',
	  colorprofile: 'colorProfile',
	  'color-profile': 'colorProfile',
	  colorrendering: 'colorRendering',
	  'color-rendering': 'colorRendering',
	  contentscripttype: 'contentScriptType',
	  contentstyletype: 'contentStyleType',
	  cursor: 'cursor',
	  cx: 'cx',
	  cy: 'cy',
	  d: 'd',
	  datatype: 'datatype',
	  decelerate: 'decelerate',
	  descent: 'descent',
	  diffuseconstant: 'diffuseConstant',
	  direction: 'direction',
	  display: 'display',
	  divisor: 'divisor',
	  dominantbaseline: 'dominantBaseline',
	  'dominant-baseline': 'dominantBaseline',
	  dur: 'dur',
	  dx: 'dx',
	  dy: 'dy',
	  edgemode: 'edgeMode',
	  elevation: 'elevation',
	  enablebackground: 'enableBackground',
	  'enable-background': 'enableBackground',
	  end: 'end',
	  exponent: 'exponent',
	  externalresourcesrequired: 'externalResourcesRequired',
	  fill: 'fill',
	  fillopacity: 'fillOpacity',
	  'fill-opacity': 'fillOpacity',
	  fillrule: 'fillRule',
	  'fill-rule': 'fillRule',
	  filter: 'filter',
	  filterres: 'filterRes',
	  filterunits: 'filterUnits',
	  floodopacity: 'floodOpacity',
	  'flood-opacity': 'floodOpacity',
	  floodcolor: 'floodColor',
	  'flood-color': 'floodColor',
	  focusable: 'focusable',
	  fontfamily: 'fontFamily',
	  'font-family': 'fontFamily',
	  fontsize: 'fontSize',
	  'font-size': 'fontSize',
	  fontsizeadjust: 'fontSizeAdjust',
	  'font-size-adjust': 'fontSizeAdjust',
	  fontstretch: 'fontStretch',
	  'font-stretch': 'fontStretch',
	  fontstyle: 'fontStyle',
	  'font-style': 'fontStyle',
	  fontvariant: 'fontVariant',
	  'font-variant': 'fontVariant',
	  fontweight: 'fontWeight',
	  'font-weight': 'fontWeight',
	  format: 'format',
	  from: 'from',
	  fx: 'fx',
	  fy: 'fy',
	  g1: 'g1',
	  g2: 'g2',
	  glyphname: 'glyphName',
	  'glyph-name': 'glyphName',
	  glyphorientationhorizontal: 'glyphOrientationHorizontal',
	  'glyph-orientation-horizontal': 'glyphOrientationHorizontal',
	  glyphorientationvertical: 'glyphOrientationVertical',
	  'glyph-orientation-vertical': 'glyphOrientationVertical',
	  glyphref: 'glyphRef',
	  gradienttransform: 'gradientTransform',
	  gradientunits: 'gradientUnits',
	  hanging: 'hanging',
	  horizadvx: 'horizAdvX',
	  'horiz-adv-x': 'horizAdvX',
	  horizoriginx: 'horizOriginX',
	  'horiz-origin-x': 'horizOriginX',
	  ideographic: 'ideographic',
	  imagerendering: 'imageRendering',
	  'image-rendering': 'imageRendering',
	  in2: 'in2',
	  in: 'in',
	  inlist: 'inlist',
	  intercept: 'intercept',
	  k1: 'k1',
	  k2: 'k2',
	  k3: 'k3',
	  k4: 'k4',
	  k: 'k',
	  kernelmatrix: 'kernelMatrix',
	  kernelunitlength: 'kernelUnitLength',
	  kerning: 'kerning',
	  keypoints: 'keyPoints',
	  keysplines: 'keySplines',
	  keytimes: 'keyTimes',
	  lengthadjust: 'lengthAdjust',
	  letterspacing: 'letterSpacing',
	  'letter-spacing': 'letterSpacing',
	  lightingcolor: 'lightingColor',
	  'lighting-color': 'lightingColor',
	  limitingconeangle: 'limitingConeAngle',
	  local: 'local',
	  markerend: 'markerEnd',
	  'marker-end': 'markerEnd',
	  markerheight: 'markerHeight',
	  markermid: 'markerMid',
	  'marker-mid': 'markerMid',
	  markerstart: 'markerStart',
	  'marker-start': 'markerStart',
	  markerunits: 'markerUnits',
	  markerwidth: 'markerWidth',
	  mask: 'mask',
	  maskcontentunits: 'maskContentUnits',
	  maskunits: 'maskUnits',
	  mathematical: 'mathematical',
	  mode: 'mode',
	  numoctaves: 'numOctaves',
	  offset: 'offset',
	  opacity: 'opacity',
	  operator: 'operator',
	  order: 'order',
	  orient: 'orient',
	  orientation: 'orientation',
	  origin: 'origin',
	  overflow: 'overflow',
	  overlineposition: 'overlinePosition',
	  'overline-position': 'overlinePosition',
	  overlinethickness: 'overlineThickness',
	  'overline-thickness': 'overlineThickness',
	  paintorder: 'paintOrder',
	  'paint-order': 'paintOrder',
	  panose1: 'panose1',
	  'panose-1': 'panose1',
	  pathlength: 'pathLength',
	  patterncontentunits: 'patternContentUnits',
	  patterntransform: 'patternTransform',
	  patternunits: 'patternUnits',
	  pointerevents: 'pointerEvents',
	  'pointer-events': 'pointerEvents',
	  points: 'points',
	  pointsatx: 'pointsAtX',
	  pointsaty: 'pointsAtY',
	  pointsatz: 'pointsAtZ',
	  prefix: 'prefix',
	  preservealpha: 'preserveAlpha',
	  preserveaspectratio: 'preserveAspectRatio',
	  primitiveunits: 'primitiveUnits',
	  property: 'property',
	  r: 'r',
	  radius: 'radius',
	  refx: 'refX',
	  refy: 'refY',
	  renderingintent: 'renderingIntent',
	  'rendering-intent': 'renderingIntent',
	  repeatcount: 'repeatCount',
	  repeatdur: 'repeatDur',
	  requiredextensions: 'requiredExtensions',
	  requiredfeatures: 'requiredFeatures',
	  resource: 'resource',
	  restart: 'restart',
	  result: 'result',
	  results: 'results',
	  rotate: 'rotate',
	  rx: 'rx',
	  ry: 'ry',
	  scale: 'scale',
	  security: 'security',
	  seed: 'seed',
	  shaperendering: 'shapeRendering',
	  'shape-rendering': 'shapeRendering',
	  slope: 'slope',
	  spacing: 'spacing',
	  specularconstant: 'specularConstant',
	  specularexponent: 'specularExponent',
	  speed: 'speed',
	  spreadmethod: 'spreadMethod',
	  startoffset: 'startOffset',
	  stddeviation: 'stdDeviation',
	  stemh: 'stemh',
	  stemv: 'stemv',
	  stitchtiles: 'stitchTiles',
	  stopcolor: 'stopColor',
	  'stop-color': 'stopColor',
	  stopopacity: 'stopOpacity',
	  'stop-opacity': 'stopOpacity',
	  strikethroughposition: 'strikethroughPosition',
	  'strikethrough-position': 'strikethroughPosition',
	  strikethroughthickness: 'strikethroughThickness',
	  'strikethrough-thickness': 'strikethroughThickness',
	  string: 'string',
	  stroke: 'stroke',
	  strokedasharray: 'strokeDasharray',
	  'stroke-dasharray': 'strokeDasharray',
	  strokedashoffset: 'strokeDashoffset',
	  'stroke-dashoffset': 'strokeDashoffset',
	  strokelinecap: 'strokeLinecap',
	  'stroke-linecap': 'strokeLinecap',
	  strokelinejoin: 'strokeLinejoin',
	  'stroke-linejoin': 'strokeLinejoin',
	  strokemiterlimit: 'strokeMiterlimit',
	  'stroke-miterlimit': 'strokeMiterlimit',
	  strokewidth: 'strokeWidth',
	  'stroke-width': 'strokeWidth',
	  strokeopacity: 'strokeOpacity',
	  'stroke-opacity': 'strokeOpacity',
	  suppresscontenteditablewarning: 'suppressContentEditableWarning',
	  suppresshydrationwarning: 'suppressHydrationWarning',
	  surfacescale: 'surfaceScale',
	  systemlanguage: 'systemLanguage',
	  tablevalues: 'tableValues',
	  targetx: 'targetX',
	  targety: 'targetY',
	  textanchor: 'textAnchor',
	  'text-anchor': 'textAnchor',
	  textdecoration: 'textDecoration',
	  'text-decoration': 'textDecoration',
	  textlength: 'textLength',
	  textrendering: 'textRendering',
	  'text-rendering': 'textRendering',
	  to: 'to',
	  transform: 'transform',
	  typeof: 'typeof',
	  u1: 'u1',
	  u2: 'u2',
	  underlineposition: 'underlinePosition',
	  'underline-position': 'underlinePosition',
	  underlinethickness: 'underlineThickness',
	  'underline-thickness': 'underlineThickness',
	  unicode: 'unicode',
	  unicodebidi: 'unicodeBidi',
	  'unicode-bidi': 'unicodeBidi',
	  unicoderange: 'unicodeRange',
	  'unicode-range': 'unicodeRange',
	  unitsperem: 'unitsPerEm',
	  'units-per-em': 'unitsPerEm',
	  unselectable: 'unselectable',
	  valphabetic: 'vAlphabetic',
	  'v-alphabetic': 'vAlphabetic',
	  values: 'values',
	  vectoreffect: 'vectorEffect',
	  'vector-effect': 'vectorEffect',
	  version: 'version',
	  vertadvy: 'vertAdvY',
	  'vert-adv-y': 'vertAdvY',
	  vertoriginx: 'vertOriginX',
	  'vert-origin-x': 'vertOriginX',
	  vertoriginy: 'vertOriginY',
	  'vert-origin-y': 'vertOriginY',
	  vhanging: 'vHanging',
	  'v-hanging': 'vHanging',
	  videographic: 'vIdeographic',
	  'v-ideographic': 'vIdeographic',
	  viewbox: 'viewBox',
	  viewtarget: 'viewTarget',
	  visibility: 'visibility',
	  vmathematical: 'vMathematical',
	  'v-mathematical': 'vMathematical',
	  vocab: 'vocab',
	  widths: 'widths',
	  wordspacing: 'wordSpacing',
	  'word-spacing': 'wordSpacing',
	  writingmode: 'writingMode',
	  'writing-mode': 'writingMode',
	  x1: 'x1',
	  x2: 'x2',
	  x: 'x',
	  xchannelselector: 'xChannelSelector',
	  xheight: 'xHeight',
	  'x-height': 'xHeight',
	  xlinkactuate: 'xlinkActuate',
	  'xlink:actuate': 'xlinkActuate',
	  xlinkarcrole: 'xlinkArcrole',
	  'xlink:arcrole': 'xlinkArcrole',
	  xlinkhref: 'xlinkHref',
	  'xlink:href': 'xlinkHref',
	  xlinkrole: 'xlinkRole',
	  'xlink:role': 'xlinkRole',
	  xlinkshow: 'xlinkShow',
	  'xlink:show': 'xlinkShow',
	  xlinktitle: 'xlinkTitle',
	  'xlink:title': 'xlinkTitle',
	  xlinktype: 'xlinkType',
	  'xlink:type': 'xlinkType',
	  xmlbase: 'xmlBase',
	  'xml:base': 'xmlBase',
	  xmllang: 'xmlLang',
	  'xml:lang': 'xmlLang',
	  xmlns: 'xmlns',
	  'xml:space': 'xmlSpace',
	  xmlnsxlink: 'xmlnsXlink',
	  'xmlns:xlink': 'xmlnsXlink',
	  xmlspace: 'xmlSpace',
	  y1: 'y1',
	  y2: 'y2',
	  y: 'y',
	  ychannelselector: 'yChannelSelector',
	  z: 'z',
	  zoomandpan: 'zoomAndPan'
	};

	var ariaProperties = {
	  'aria-current': 0, // state
	  'aria-details': 0,
	  'aria-disabled': 0, // state
	  'aria-hidden': 0, // state
	  'aria-invalid': 0, // state
	  'aria-keyshortcuts': 0,
	  'aria-label': 0,
	  'aria-roledescription': 0,
	  // Widget Attributes
	  'aria-autocomplete': 0,
	  'aria-checked': 0,
	  'aria-expanded': 0,
	  'aria-haspopup': 0,
	  'aria-level': 0,
	  'aria-modal': 0,
	  'aria-multiline': 0,
	  'aria-multiselectable': 0,
	  'aria-orientation': 0,
	  'aria-placeholder': 0,
	  'aria-pressed': 0,
	  'aria-readonly': 0,
	  'aria-required': 0,
	  'aria-selected': 0,
	  'aria-sort': 0,
	  'aria-valuemax': 0,
	  'aria-valuemin': 0,
	  'aria-valuenow': 0,
	  'aria-valuetext': 0,
	  // Live Region Attributes
	  'aria-atomic': 0,
	  'aria-busy': 0,
	  'aria-live': 0,
	  'aria-relevant': 0,
	  // Drag-and-Drop Attributes
	  'aria-dropeffect': 0,
	  'aria-grabbed': 0,
	  // Relationship Attributes
	  'aria-activedescendant': 0,
	  'aria-colcount': 0,
	  'aria-colindex': 0,
	  'aria-colspan': 0,
	  'aria-controls': 0,
	  'aria-describedby': 0,
	  'aria-errormessage': 0,
	  'aria-flowto': 0,
	  'aria-labelledby': 0,
	  'aria-owns': 0,
	  'aria-posinset': 0,
	  'aria-rowcount': 0,
	  'aria-rowindex': 0,
	  'aria-rowspan': 0,
	  'aria-setsize': 0
	};

	var warnedProperties = {};
	var rARIA = new RegExp('^(aria)-[' + ATTRIBUTE_NAME_CHAR + ']*$');
	var rARIACamel = new RegExp('^(aria)[A-Z][' + ATTRIBUTE_NAME_CHAR + ']*$');

	var hasOwnProperty$2 = Object.prototype.hasOwnProperty;

	function validateProperty(tagName, name) {
	  if (hasOwnProperty$2.call(warnedProperties, name) && warnedProperties[name]) {
	    return true;
	  }

	  if (rARIACamel.test(name)) {
	    var ariaName = 'aria-' + name.slice(4).toLowerCase();
	    var correctName = ariaProperties.hasOwnProperty(ariaName) ? ariaName : null;

	    // If this is an aria-* attribute, but is not listed in the known DOM
	    // DOM properties, then it is an invalid aria-* attribute.
	    if (correctName == null) {
	      warning$1(false, 'Invalid ARIA attribute `%s`. ARIA attributes follow the pattern aria-* and must be lowercase.', name);
	      warnedProperties[name] = true;
	      return true;
	    }
	    // aria-* attributes should be lowercase; suggest the lowercase version.
	    if (name !== correctName) {
	      warning$1(false, 'Invalid ARIA attribute `%s`. Did you mean `%s`?', name, correctName);
	      warnedProperties[name] = true;
	      return true;
	    }
	  }

	  if (rARIA.test(name)) {
	    var lowerCasedName = name.toLowerCase();
	    var standardName = ariaProperties.hasOwnProperty(lowerCasedName) ? lowerCasedName : null;

	    // If this is an aria-* attribute, but is not listed in the known DOM
	    // DOM properties, then it is an invalid aria-* attribute.
	    if (standardName == null) {
	      warnedProperties[name] = true;
	      return false;
	    }
	    // aria-* attributes should be lowercase; suggest the lowercase version.
	    if (name !== standardName) {
	      warning$1(false, 'Unknown ARIA attribute `%s`. Did you mean `%s`?', name, standardName);
	      warnedProperties[name] = true;
	      return true;
	    }
	  }

	  return true;
	}

	function warnInvalidARIAProps(type, props) {
	  var invalidProps = [];

	  for (var key in props) {
	    var isValid = validateProperty(type, key);
	    if (!isValid) {
	      invalidProps.push(key);
	    }
	  }

	  var unknownPropString = invalidProps.map(function (prop) {
	    return '`' + prop + '`';
	  }).join(', ');

	  if (invalidProps.length === 1) {
	    warning$1(false, 'Invalid aria prop %s on <%s> tag. ' + 'For details, see https://fb.me/invalid-aria-prop', unknownPropString, type);
	  } else if (invalidProps.length > 1) {
	    warning$1(false, 'Invalid aria props %s on <%s> tag. ' + 'For details, see https://fb.me/invalid-aria-prop', unknownPropString, type);
	  }
	}

	function validateProperties(type, props) {
	  if (isCustomComponent(type, props)) {
	    return;
	  }
	  warnInvalidARIAProps(type, props);
	}

	var didWarnValueNull = false;

	function validateProperties$1(type, props) {
	  if (type !== 'input' && type !== 'textarea' && type !== 'select') {
	    return;
	  }

	  if (props != null && props.value === null && !didWarnValueNull) {
	    didWarnValueNull = true;
	    if (type === 'select' && props.multiple) {
	      warning$1(false, '`value` prop on `%s` should not be null. ' + 'Consider using an empty array when `multiple` is set to `true` ' + 'to clear the component or `undefined` for uncontrolled components.', type);
	    } else {
	      warning$1(false, '`value` prop on `%s` should not be null. ' + 'Consider using an empty string to clear the component or `undefined` ' + 'for uncontrolled components.', type);
	    }
	  }
	}

	var validateProperty$1 = function () {};

	{
	  var warnedProperties$1 = {};
	  var _hasOwnProperty = Object.prototype.hasOwnProperty;
	  var EVENT_NAME_REGEX = /^on./;
	  var INVALID_EVENT_NAME_REGEX = /^on[^A-Z]/;
	  var rARIA$1 = new RegExp('^(aria)-[' + ATTRIBUTE_NAME_CHAR + ']*$');
	  var rARIACamel$1 = new RegExp('^(aria)[A-Z][' + ATTRIBUTE_NAME_CHAR + ']*$');

	  validateProperty$1 = function (tagName, name, value, canUseEventSystem) {
	    if (_hasOwnProperty.call(warnedProperties$1, name) && warnedProperties$1[name]) {
	      return true;
	    }

	    var lowerCasedName = name.toLowerCase();
	    if (lowerCasedName === 'onfocusin' || lowerCasedName === 'onfocusout') {
	      warning$1(false, 'React uses onFocus and onBlur instead of onFocusIn and onFocusOut. ' + 'All React events are normalized to bubble, so onFocusIn and onFocusOut ' + 'are not needed/supported by React.');
	      warnedProperties$1[name] = true;
	      return true;
	    }

	    // We can't rely on the event system being injected on the server.
	    if (canUseEventSystem) {
	      if (registrationNameModules.hasOwnProperty(name)) {
	        return true;
	      }
	      var registrationName = possibleRegistrationNames.hasOwnProperty(lowerCasedName) ? possibleRegistrationNames[lowerCasedName] : null;
	      if (registrationName != null) {
	        warning$1(false, 'Invalid event handler property `%s`. Did you mean `%s`?', name, registrationName);
	        warnedProperties$1[name] = true;
	        return true;
	      }
	      if (EVENT_NAME_REGEX.test(name)) {
	        warning$1(false, 'Unknown event handler property `%s`. It will be ignored.', name);
	        warnedProperties$1[name] = true;
	        return true;
	      }
	    } else if (EVENT_NAME_REGEX.test(name)) {
	      // If no event plugins have been injected, we are in a server environment.
	      // So we can't tell if the event name is correct for sure, but we can filter
	      // out known bad ones like `onclick`. We can't suggest a specific replacement though.
	      if (INVALID_EVENT_NAME_REGEX.test(name)) {
	        warning$1(false, 'Invalid event handler property `%s`. ' + 'React events use the camelCase naming convention, for example `onClick`.', name);
	      }
	      warnedProperties$1[name] = true;
	      return true;
	    }

	    // Let the ARIA attribute hook validate ARIA attributes
	    if (rARIA$1.test(name) || rARIACamel$1.test(name)) {
	      return true;
	    }

	    if (lowerCasedName === 'innerhtml') {
	      warning$1(false, 'Directly setting property `innerHTML` is not permitted. ' + 'For more information, lookup documentation on `dangerouslySetInnerHTML`.');
	      warnedProperties$1[name] = true;
	      return true;
	    }

	    if (lowerCasedName === 'aria') {
	      warning$1(false, 'The `aria` attribute is reserved for future use in React. ' + 'Pass individual `aria-` attributes instead.');
	      warnedProperties$1[name] = true;
	      return true;
	    }

	    if (lowerCasedName === 'is' && value !== null && value !== undefined && typeof value !== 'string') {
	      warning$1(false, 'Received a `%s` for a string attribute `is`. If this is expected, cast ' + 'the value to a string.', typeof value);
	      warnedProperties$1[name] = true;
	      return true;
	    }

	    if (typeof value === 'number' && isNaN(value)) {
	      warning$1(false, 'Received NaN for the `%s` attribute. If this is expected, cast ' + 'the value to a string.', name);
	      warnedProperties$1[name] = true;
	      return true;
	    }

	    var propertyInfo = getPropertyInfo(name);
	    var isReserved = propertyInfo !== null && propertyInfo.type === RESERVED;

	    // Known attributes should match the casing specified in the property config.
	    if (possibleStandardNames.hasOwnProperty(lowerCasedName)) {
	      var standardName = possibleStandardNames[lowerCasedName];
	      if (standardName !== name) {
	        warning$1(false, 'Invalid DOM property `%s`. Did you mean `%s`?', name, standardName);
	        warnedProperties$1[name] = true;
	        return true;
	      }
	    } else if (!isReserved && name !== lowerCasedName) {
	      // Unknown attributes should have lowercase casing since that's how they
	      // will be cased anyway with server rendering.
	      warning$1(false, 'React does not recognize the `%s` prop on a DOM element. If you ' + 'intentionally want it to appear in the DOM as a custom ' + 'attribute, spell it as lowercase `%s` instead. ' + 'If you accidentally passed it from a parent component, remove ' + 'it from the DOM element.', name, lowerCasedName);
	      warnedProperties$1[name] = true;
	      return true;
	    }

	    if (typeof value === 'boolean' && shouldRemoveAttributeWithWarning(name, value, propertyInfo, false)) {
	      if (value) {
	        warning$1(false, 'Received `%s` for a non-boolean attribute `%s`.\n\n' + 'If you want to write it to the DOM, pass a string instead: ' + '%s="%s" or %s={value.toString()}.', value, name, name, value, name);
	      } else {
	        warning$1(false, 'Received `%s` for a non-boolean attribute `%s`.\n\n' + 'If you want to write it to the DOM, pass a string instead: ' + '%s="%s" or %s={value.toString()}.\n\n' + 'If you used to conditionally omit it with %s={condition && value}, ' + 'pass %s={condition ? value : undefined} instead.', value, name, name, value, name, name, name);
	      }
	      warnedProperties$1[name] = true;
	      return true;
	    }

	    // Now that we've validated casing, do not validate
	    // data types for reserved props
	    if (isReserved) {
	      return true;
	    }

	    // Warn when a known attribute is a bad type
	    if (shouldRemoveAttributeWithWarning(name, value, propertyInfo, false)) {
	      warnedProperties$1[name] = true;
	      return false;
	    }

	    // Warn when passing the strings 'false' or 'true' into a boolean prop
	    if ((value === 'false' || value === 'true') && propertyInfo !== null && propertyInfo.type === BOOLEAN) {
	      warning$1(false, 'Received the string `%s` for the boolean attribute `%s`. ' + '%s ' + 'Did you mean %s={%s}?', value, name, value === 'false' ? 'The browser will interpret it as a truthy value.' : 'Although this works, it will not work as expected if you pass the string "false".', name, value);
	      warnedProperties$1[name] = true;
	      return true;
	    }

	    return true;
	  };
	}

	var warnUnknownProperties = function (type, props, canUseEventSystem) {
	  var unknownProps = [];
	  for (var key in props) {
	    var isValid = validateProperty$1(type, key, props[key], canUseEventSystem);
	    if (!isValid) {
	      unknownProps.push(key);
	    }
	  }

	  var unknownPropString = unknownProps.map(function (prop) {
	    return '`' + prop + '`';
	  }).join(', ');
	  if (unknownProps.length === 1) {
	    warning$1(false, 'Invalid value for prop %s on <%s> tag. Either remove it from the element, ' + 'or pass a string or number value to keep it in the DOM. ' + 'For details, see https://fb.me/react-attribute-behavior', unknownPropString, type);
	  } else if (unknownProps.length > 1) {
	    warning$1(false, 'Invalid values for props %s on <%s> tag. Either remove them from the element, ' + 'or pass a string or number value to keep them in the DOM. ' + 'For details, see https://fb.me/react-attribute-behavior', unknownPropString, type);
	  }
	};

	function validateProperties$2(type, props, canUseEventSystem) {
	  if (isCustomComponent(type, props)) {
	    return;
	  }
	  warnUnknownProperties(type, props, canUseEventSystem);
	}

	// TODO: direct imports like some-package/src/* are bad. Fix me.
	var didWarnInvalidHydration = false;
	var didWarnShadyDOM = false;

	var DANGEROUSLY_SET_INNER_HTML = 'dangerouslySetInnerHTML';
	var SUPPRESS_CONTENT_EDITABLE_WARNING = 'suppressContentEditableWarning';
	var SUPPRESS_HYDRATION_WARNING$1 = 'suppressHydrationWarning';
	var AUTOFOCUS = 'autoFocus';
	var CHILDREN = 'children';
	var STYLE$1 = 'style';
	var HTML = '__html';

	var HTML_NAMESPACE = Namespaces.html;


	var warnedUnknownTags = void 0;
	var suppressHydrationWarning = void 0;

	var validatePropertiesInDevelopment = void 0;
	var warnForTextDifference = void 0;
	var warnForPropDifference = void 0;
	var warnForExtraAttributes = void 0;
	var warnForInvalidEventListener = void 0;
	var canDiffStyleForHydrationWarning = void 0;

	var normalizeMarkupForTextOrAttribute = void 0;
	var normalizeHTML = void 0;

	{
	  warnedUnknownTags = {
	    // Chrome is the only major browser not shipping <time>. But as of July
	    // 2017 it intends to ship it due to widespread usage. We intentionally
	    // *don't* warn for <time> even if it's unrecognized by Chrome because
	    // it soon will be, and many apps have been using it anyway.
	    time: true,
	    // There are working polyfills for <dialog>. Let people use it.
	    dialog: true,
	    // Electron ships a custom <webview> tag to display external web content in
	    // an isolated frame and process.
	    // This tag is not present in non Electron environments such as JSDom which
	    // is often used for testing purposes.
	    // @see https://electronjs.org/docs/api/webview-tag
	    webview: true
	  };

	  validatePropertiesInDevelopment = function (type, props) {
	    validateProperties(type, props);
	    validateProperties$1(type, props);
	    validateProperties$2(type, props, /* canUseEventSystem */true);
	  };

	  // IE 11 parses & normalizes the style attribute as opposed to other
	  // browsers. It adds spaces and sorts the properties in some
	  // non-alphabetical order. Handling that would require sorting CSS
	  // properties in the client & server versions or applying
	  // `expectedStyle` to a temporary DOM node to read its `style` attribute
	  // normalized. Since it only affects IE, we're skipping style warnings
	  // in that browser completely in favor of doing all that work.
	  // See https://github.com/facebook/react/issues/11807
	  canDiffStyleForHydrationWarning = canUseDOM && !document.documentMode;

	  // HTML parsing normalizes CR and CRLF to LF.
	  // It also can turn \u0000 into \uFFFD inside attributes.
	  // https://www.w3.org/TR/html5/single-page.html#preprocessing-the-input-stream
	  // If we have a mismatch, it might be caused by that.
	  // We will still patch up in this case but not fire the warning.
	  var NORMALIZE_NEWLINES_REGEX = /\r\n?/g;
	  var NORMALIZE_NULL_AND_REPLACEMENT_REGEX = /\u0000|\uFFFD/g;

	  normalizeMarkupForTextOrAttribute = function (markup) {
	    var markupString = typeof markup === 'string' ? markup : '' + markup;
	    return markupString.replace(NORMALIZE_NEWLINES_REGEX, '\n').replace(NORMALIZE_NULL_AND_REPLACEMENT_REGEX, '');
	  };

	  warnForTextDifference = function (serverText, clientText) {
	    if (didWarnInvalidHydration) {
	      return;
	    }
	    var normalizedClientText = normalizeMarkupForTextOrAttribute(clientText);
	    var normalizedServerText = normalizeMarkupForTextOrAttribute(serverText);
	    if (normalizedServerText === normalizedClientText) {
	      return;
	    }
	    didWarnInvalidHydration = true;
	    warningWithoutStack$1(false, 'Text content did not match. Server: "%s" Client: "%s"', normalizedServerText, normalizedClientText);
	  };

	  warnForPropDifference = function (propName, serverValue, clientValue) {
	    if (didWarnInvalidHydration) {
	      return;
	    }
	    var normalizedClientValue = normalizeMarkupForTextOrAttribute(clientValue);
	    var normalizedServerValue = normalizeMarkupForTextOrAttribute(serverValue);
	    if (normalizedServerValue === normalizedClientValue) {
	      return;
	    }
	    didWarnInvalidHydration = true;
	    warningWithoutStack$1(false, 'Prop `%s` did not match. Server: %s Client: %s', propName, JSON.stringify(normalizedServerValue), JSON.stringify(normalizedClientValue));
	  };

	  warnForExtraAttributes = function (attributeNames) {
	    if (didWarnInvalidHydration) {
	      return;
	    }
	    didWarnInvalidHydration = true;
	    var names = [];
	    attributeNames.forEach(function (name) {
	      names.push(name);
	    });
	    warningWithoutStack$1(false, 'Extra attributes from the server: %s', names);
	  };

	  warnForInvalidEventListener = function (registrationName, listener) {
	    if (listener === false) {
	      warning$1(false, 'Expected `%s` listener to be a function, instead got `false`.\n\n' + 'If you used to conditionally omit it with %s={condition && value}, ' + 'pass %s={condition ? value : undefined} instead.', registrationName, registrationName, registrationName);
	    } else {
	      warning$1(false, 'Expected `%s` listener to be a function, instead got a value of `%s` type.', registrationName, typeof listener);
	    }
	  };

	  // Parse the HTML and read it back to normalize the HTML string so that it
	  // can be used for comparison.
	  normalizeHTML = function (parent, html) {
	    // We could have created a separate document here to avoid
	    // re-initializing custom elements if they exist. But this breaks
	    // how <noscript> is being handled. So we use the same document.
	    // See the discussion in https://github.com/facebook/react/pull/11157.
	    var testElement = parent.namespaceURI === HTML_NAMESPACE ? parent.ownerDocument.createElement(parent.tagName) : parent.ownerDocument.createElementNS(parent.namespaceURI, parent.tagName);
	    testElement.innerHTML = html;
	    return testElement.innerHTML;
	  };
	}

	function ensureListeningTo(rootContainerElement, registrationName) {
	  var isDocumentOrFragment = rootContainerElement.nodeType === DOCUMENT_NODE || rootContainerElement.nodeType === DOCUMENT_FRAGMENT_NODE;
	  var doc = isDocumentOrFragment ? rootContainerElement : rootContainerElement.ownerDocument;
	  listenTo(registrationName, doc);
	}

	function getOwnerDocumentFromRootContainer(rootContainerElement) {
	  return rootContainerElement.nodeType === DOCUMENT_NODE ? rootContainerElement : rootContainerElement.ownerDocument;
	}

	function noop() {}

	function trapClickOnNonInteractiveElement(node) {
	  // Mobile Safari does not fire properly bubble click events on
	  // non-interactive elements, which means delegated click listeners do not
	  // fire. The workaround for this bug involves attaching an empty click
	  // listener on the target node.
	  // http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html
	  // Just set it using the onclick property so that we don't have to manage any
	  // bookkeeping for it. Not sure if we need to clear it when the listener is
	  // removed.
	  // TODO: Only do this for the relevant Safaris maybe?
	  node.onclick = noop;
	}

	function setInitialDOMProperties(tag, domElement, rootContainerElement, nextProps, isCustomComponentTag) {
	  for (var propKey in nextProps) {
	    if (!nextProps.hasOwnProperty(propKey)) {
	      continue;
	    }
	    var nextProp = nextProps[propKey];
	    if (propKey === STYLE$1) {
	      {
	        if (nextProp) {
	          // Freeze the next style object so that we can assume it won't be
	          // mutated. We have already warned for this in the past.
	          Object.freeze(nextProp);
	        }
	      }
	      // Relies on `updateStylesByID` not mutating `styleUpdates`.
	      setValueForStyles(domElement, nextProp);
	    } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {
	      var nextHtml = nextProp ? nextProp[HTML] : undefined;
	      if (nextHtml != null) {
	        setInnerHTML(domElement, nextHtml);
	      }
	    } else if (propKey === CHILDREN) {
	      if (typeof nextProp === 'string') {
	        // Avoid setting initial textContent when the text is empty. In IE11 setting
	        // textContent on a <textarea> will cause the placeholder to not
	        // show within the <textarea> until it has been focused and blurred again.
	        // https://github.com/facebook/react/issues/6731#issuecomment-254874553
	        var canSetTextContent = tag !== 'textarea' || nextProp !== '';
	        if (canSetTextContent) {
	          setTextContent(domElement, nextProp);
	        }
	      } else if (typeof nextProp === 'number') {
	        setTextContent(domElement, '' + nextProp);
	      }
	    } else if (propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING$1) {
	      // Noop
	    } else if (propKey === AUTOFOCUS) {
	      // We polyfill it separately on the client during commit.
	      // We could have excluded it in the property list instead of
	      // adding a special case here, but then it wouldn't be emitted
	      // on server rendering (but we *do* want to emit it in SSR).
	    } else if (registrationNameModules.hasOwnProperty(propKey)) {
	      if (nextProp != null) {
	        if (true && typeof nextProp !== 'function') {
	          warnForInvalidEventListener(propKey, nextProp);
	        }
	        ensureListeningTo(rootContainerElement, propKey);
	      }
	    } else if (nextProp != null) {
	      setValueForProperty(domElement, propKey, nextProp, isCustomComponentTag);
	    }
	  }
	}

	function updateDOMProperties(domElement, updatePayload, wasCustomComponentTag, isCustomComponentTag) {
	  // TODO: Handle wasCustomComponentTag
	  for (var i = 0; i < updatePayload.length; i += 2) {
	    var propKey = updatePayload[i];
	    var propValue = updatePayload[i + 1];
	    if (propKey === STYLE$1) {
	      setValueForStyles(domElement, propValue);
	    } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {
	      setInnerHTML(domElement, propValue);
	    } else if (propKey === CHILDREN) {
	      setTextContent(domElement, propValue);
	    } else {
	      setValueForProperty(domElement, propKey, propValue, isCustomComponentTag);
	    }
	  }
	}

	function createElement(type, props, rootContainerElement, parentNamespace) {
	  var isCustomComponentTag = void 0;

	  // We create tags in the namespace of their parent container, except HTML
	  // tags get no namespace.
	  var ownerDocument = getOwnerDocumentFromRootContainer(rootContainerElement);
	  var domElement = void 0;
	  var namespaceURI = parentNamespace;
	  if (namespaceURI === HTML_NAMESPACE) {
	    namespaceURI = getIntrinsicNamespace(type);
	  }
	  if (namespaceURI === HTML_NAMESPACE) {
	    {
	      isCustomComponentTag = isCustomComponent(type, props);
	      // Should this check be gated by parent namespace? Not sure we want to
	      // allow <SVG> or <mATH>.
	      !(isCustomComponentTag || type === type.toLowerCase()) ? warning$1(false, '<%s /> is using incorrect casing. ' + 'Use PascalCase for React components, ' + 'or lowercase for HTML elements.', type) : void 0;
	    }

	    if (type === 'script') {
	      // Create the script via .innerHTML so its "parser-inserted" flag is
	      // set to true and it does not execute
	      var div = ownerDocument.createElement('div');
	      div.innerHTML = '<script><' + '/script>'; // eslint-disable-line
	      // This is guaranteed to yield a script element.
	      var firstChild = div.firstChild;
	      domElement = div.removeChild(firstChild);
	    } else if (typeof props.is === 'string') {
	      // $FlowIssue `createElement` should be updated for Web Components
	      domElement = ownerDocument.createElement(type, { is: props.is });
	    } else {
	      // Separate else branch instead of using `props.is || undefined` above because of a Firefox bug.
	      // See discussion in https://github.com/facebook/react/pull/6896
	      // and discussion in https://bugzilla.mozilla.org/show_bug.cgi?id=1276240
	      domElement = ownerDocument.createElement(type);
	      // Normally attributes are assigned in `setInitialDOMProperties`, however the `multiple` and `size`
	      // attributes on `select`s needs to be added before `option`s are inserted.
	      // This prevents:
	      // - a bug where the `select` does not scroll to the correct option because singular
	      //  `select` elements automatically pick the first item #13222
	      // - a bug where the `select` set the first item as selected despite the `size` attribute #14239
	      // See https://github.com/facebook/react/issues/13222
	      // and https://github.com/facebook/react/issues/14239
	      if (type === 'select') {
	        var node = domElement;
	        if (props.multiple) {
	          node.multiple = true;
	        } else if (props.size) {
	          // Setting a size greater than 1 causes a select to behave like `multiple=true`, where
	          // it is possible that no option is selected.
	          //
	          // This is only necessary when a select in "single selection mode".
	          node.size = props.size;
	        }
	      }
	    }
	  } else {
	    domElement = ownerDocument.createElementNS(namespaceURI, type);
	  }

	  {
	    if (namespaceURI === HTML_NAMESPACE) {
	      if (!isCustomComponentTag && Object.prototype.toString.call(domElement) === '[object HTMLUnknownElement]' && !Object.prototype.hasOwnProperty.call(warnedUnknownTags, type)) {
	        warnedUnknownTags[type] = true;
	        warning$1(false, 'The tag <%s> is unrecognized in this browser. ' + 'If you meant to render a React component, start its name with ' + 'an uppercase letter.', type);
	      }
	    }
	  }

	  return domElement;
	}

	function createTextNode(text, rootContainerElement) {
	  return getOwnerDocumentFromRootContainer(rootContainerElement).createTextNode(text);
	}

	function setInitialProperties(domElement, tag, rawProps, rootContainerElement) {
	  var isCustomComponentTag = isCustomComponent(tag, rawProps);
	  {
	    validatePropertiesInDevelopment(tag, rawProps);
	    if (isCustomComponentTag && !didWarnShadyDOM && domElement.shadyRoot) {
	      warning$1(false, '%s is using shady DOM. Using shady DOM with React can ' + 'cause things to break subtly.', getCurrentFiberOwnerNameInDevOrNull() || 'A component');
	      didWarnShadyDOM = true;
	    }
	  }

	  // TODO: Make sure that we check isMounted before firing any of these events.
	  var props = void 0;
	  switch (tag) {
	    case 'iframe':
	    case 'object':
	      trapBubbledEvent(TOP_LOAD, domElement);
	      props = rawProps;
	      break;
	    case 'video':
	    case 'audio':
	      // Create listener for each media event
	      for (var i = 0; i < mediaEventTypes.length; i++) {
	        trapBubbledEvent(mediaEventTypes[i], domElement);
	      }
	      props = rawProps;
	      break;
	    case 'source':
	      trapBubbledEvent(TOP_ERROR, domElement);
	      props = rawProps;
	      break;
	    case 'img':
	    case 'image':
	    case 'link':
	      trapBubbledEvent(TOP_ERROR, domElement);
	      trapBubbledEvent(TOP_LOAD, domElement);
	      props = rawProps;
	      break;
	    case 'form':
	      trapBubbledEvent(TOP_RESET, domElement);
	      trapBubbledEvent(TOP_SUBMIT, domElement);
	      props = rawProps;
	      break;
	    case 'details':
	      trapBubbledEvent(TOP_TOGGLE, domElement);
	      props = rawProps;
	      break;
	    case 'input':
	      initWrapperState(domElement, rawProps);
	      props = getHostProps(domElement, rawProps);
	      trapBubbledEvent(TOP_INVALID, domElement);
	      // For controlled components we always need to ensure we're listening
	      // to onChange. Even if there is no listener.
	      ensureListeningTo(rootContainerElement, 'onChange');
	      break;
	    case 'option':
	      validateProps(domElement, rawProps);
	      props = getHostProps$1(domElement, rawProps);
	      break;
	    case 'select':
	      initWrapperState$1(domElement, rawProps);
	      props = getHostProps$2(domElement, rawProps);
	      trapBubbledEvent(TOP_INVALID, domElement);
	      // For controlled components we always need to ensure we're listening
	      // to onChange. Even if there is no listener.
	      ensureListeningTo(rootContainerElement, 'onChange');
	      break;
	    case 'textarea':
	      initWrapperState$2(domElement, rawProps);
	      props = getHostProps$3(domElement, rawProps);
	      trapBubbledEvent(TOP_INVALID, domElement);
	      // For controlled components we always need to ensure we're listening
	      // to onChange. Even if there is no listener.
	      ensureListeningTo(rootContainerElement, 'onChange');
	      break;
	    default:
	      props = rawProps;
	  }

	  assertValidProps(tag, props);

	  setInitialDOMProperties(tag, domElement, rootContainerElement, props, isCustomComponentTag);

	  switch (tag) {
	    case 'input':
	      // TODO: Make sure we check if this is still unmounted or do any clean
	      // up necessary since we never stop tracking anymore.
	      track(domElement);
	      postMountWrapper(domElement, rawProps, false);
	      break;
	    case 'textarea':
	      // TODO: Make sure we check if this is still unmounted or do any clean
	      // up necessary since we never stop tracking anymore.
	      track(domElement);
	      postMountWrapper$3(domElement, rawProps);
	      break;
	    case 'option':
	      postMountWrapper$1(domElement, rawProps);
	      break;
	    case 'select':
	      postMountWrapper$2(domElement, rawProps);
	      break;
	    default:
	      if (typeof props.onClick === 'function') {
	        // TODO: This cast may not be sound for SVG, MathML or custom elements.
	        trapClickOnNonInteractiveElement(domElement);
	      }
	      break;
	  }
	}

	// Calculate the diff between the two objects.
	function diffProperties(domElement, tag, lastRawProps, nextRawProps, rootContainerElement) {
	  {
	    validatePropertiesInDevelopment(tag, nextRawProps);
	  }

	  var updatePayload = null;

	  var lastProps = void 0;
	  var nextProps = void 0;
	  switch (tag) {
	    case 'input':
	      lastProps = getHostProps(domElement, lastRawProps);
	      nextProps = getHostProps(domElement, nextRawProps);
	      updatePayload = [];
	      break;
	    case 'option':
	      lastProps = getHostProps$1(domElement, lastRawProps);
	      nextProps = getHostProps$1(domElement, nextRawProps);
	      updatePayload = [];
	      break;
	    case 'select':
	      lastProps = getHostProps$2(domElement, lastRawProps);
	      nextProps = getHostProps$2(domElement, nextRawProps);
	      updatePayload = [];
	      break;
	    case 'textarea':
	      lastProps = getHostProps$3(domElement, lastRawProps);
	      nextProps = getHostProps$3(domElement, nextRawProps);
	      updatePayload = [];
	      break;
	    default:
	      lastProps = lastRawProps;
	      nextProps = nextRawProps;
	      if (typeof lastProps.onClick !== 'function' && typeof nextProps.onClick === 'function') {
	        // TODO: This cast may not be sound for SVG, MathML or custom elements.
	        trapClickOnNonInteractiveElement(domElement);
	      }
	      break;
	  }

	  assertValidProps(tag, nextProps);

	  var propKey = void 0;
	  var styleName = void 0;
	  var styleUpdates = null;
	  for (propKey in lastProps) {
	    if (nextProps.hasOwnProperty(propKey) || !lastProps.hasOwnProperty(propKey) || lastProps[propKey] == null) {
	      continue;
	    }
	    if (propKey === STYLE$1) {
	      var lastStyle = lastProps[propKey];
	      for (styleName in lastStyle) {
	        if (lastStyle.hasOwnProperty(styleName)) {
	          if (!styleUpdates) {
	            styleUpdates = {};
	          }
	          styleUpdates[styleName] = '';
	        }
	      }
	    } else if (propKey === DANGEROUSLY_SET_INNER_HTML || propKey === CHILDREN) {
	      // Noop. This is handled by the clear text mechanism.
	    } else if (propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING$1) {
	      // Noop
	    } else if (propKey === AUTOFOCUS) {
	      // Noop. It doesn't work on updates anyway.
	    } else if (registrationNameModules.hasOwnProperty(propKey)) {
	      // This is a special case. If any listener updates we need to ensure
	      // that the "current" fiber pointer gets updated so we need a commit
	      // to update this element.
	      if (!updatePayload) {
	        updatePayload = [];
	      }
	    } else {
	      // For all other deleted properties we add it to the queue. We use
	      // the whitelist in the commit phase instead.
	      (updatePayload = updatePayload || []).push(propKey, null);
	    }
	  }
	  for (propKey in nextProps) {
	    var nextProp = nextProps[propKey];
	    var lastProp = lastProps != null ? lastProps[propKey] : undefined;
	    if (!nextProps.hasOwnProperty(propKey) || nextProp === lastProp || nextProp == null && lastProp == null) {
	      continue;
	    }
	    if (propKey === STYLE$1) {
	      {
	        if (nextProp) {
	          // Freeze the next style object so that we can assume it won't be
	          // mutated. We have already warned for this in the past.
	          Object.freeze(nextProp);
	        }
	      }
	      if (lastProp) {
	        // Unset styles on `lastProp` but not on `nextProp`.
	        for (styleName in lastProp) {
	          if (lastProp.hasOwnProperty(styleName) && (!nextProp || !nextProp.hasOwnProperty(styleName))) {
	            if (!styleUpdates) {
	              styleUpdates = {};
	            }
	            styleUpdates[styleName] = '';
	          }
	        }
	        // Update styles that changed since `lastProp`.
	        for (styleName in nextProp) {
	          if (nextProp.hasOwnProperty(styleName) && lastProp[styleName] !== nextProp[styleName]) {
	            if (!styleUpdates) {
	              styleUpdates = {};
	            }
	            styleUpdates[styleName] = nextProp[styleName];
	          }
	        }
	      } else {
	        // Relies on `updateStylesByID` not mutating `styleUpdates`.
	        if (!styleUpdates) {
	          if (!updatePayload) {
	            updatePayload = [];
	          }
	          updatePayload.push(propKey, styleUpdates);
	        }
	        styleUpdates = nextProp;
	      }
	    } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {
	      var nextHtml = nextProp ? nextProp[HTML] : undefined;
	      var lastHtml = lastProp ? lastProp[HTML] : undefined;
	      if (nextHtml != null) {
	        if (lastHtml !== nextHtml) {
	          (updatePayload = updatePayload || []).push(propKey, '' + nextHtml);
	        }
	      } else {
	        // TODO: It might be too late to clear this if we have children
	        // inserted already.
	      }
	    } else if (propKey === CHILDREN) {
	      if (lastProp !== nextProp && (typeof nextProp === 'string' || typeof nextProp === 'number')) {
	        (updatePayload = updatePayload || []).push(propKey, '' + nextProp);
	      }
	    } else if (propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING$1) {
	      // Noop
	    } else if (registrationNameModules.hasOwnProperty(propKey)) {
	      if (nextProp != null) {
	        // We eagerly listen to this even though we haven't committed yet.
	        if (true && typeof nextProp !== 'function') {
	          warnForInvalidEventListener(propKey, nextProp);
	        }
	        ensureListeningTo(rootContainerElement, propKey);
	      }
	      if (!updatePayload && lastProp !== nextProp) {
	        // This is a special case. If any listener updates we need to ensure
	        // that the "current" props pointer gets updated so we need a commit
	        // to update this element.
	        updatePayload = [];
	      }
	    } else {
	      // For any other property we always add it to the queue and then we
	      // filter it out using the whitelist during the commit.
	      (updatePayload = updatePayload || []).push(propKey, nextProp);
	    }
	  }
	  if (styleUpdates) {
	    {
	      validateShorthandPropertyCollisionInDev(styleUpdates, nextProps[STYLE$1]);
	    }
	    (updatePayload = updatePayload || []).push(STYLE$1, styleUpdates);
	  }
	  return updatePayload;
	}

	// Apply the diff.
	function updateProperties(domElement, updatePayload, tag, lastRawProps, nextRawProps) {
	  // Update checked *before* name.
	  // In the middle of an update, it is possible to have multiple checked.
	  // When a checked radio tries to change name, browser makes another radio's checked false.
	  if (tag === 'input' && nextRawProps.type === 'radio' && nextRawProps.name != null) {
	    updateChecked(domElement, nextRawProps);
	  }

	  var wasCustomComponentTag = isCustomComponent(tag, lastRawProps);
	  var isCustomComponentTag = isCustomComponent(tag, nextRawProps);
	  // Apply the diff.
	  updateDOMProperties(domElement, updatePayload, wasCustomComponentTag, isCustomComponentTag);

	  // TODO: Ensure that an update gets scheduled if any of the special props
	  // changed.
	  switch (tag) {
	    case 'input':
	      // Update the wrapper around inputs *after* updating props. This has to
	      // happen after `updateDOMProperties`. Otherwise HTML5 input validations
	      // raise warnings and prevent the new value from being assigned.
	      updateWrapper(domElement, nextRawProps);
	      break;
	    case 'textarea':
	      updateWrapper$1(domElement, nextRawProps);
	      break;
	    case 'select':
	      // <select> value update needs to occur after <option> children
	      // reconciliation
	      postUpdateWrapper(domElement, nextRawProps);
	      break;
	  }
	}

	function getPossibleStandardName(propName) {
	  {
	    var lowerCasedName = propName.toLowerCase();
	    if (!possibleStandardNames.hasOwnProperty(lowerCasedName)) {
	      return null;
	    }
	    return possibleStandardNames[lowerCasedName] || null;
	  }
	  return null;
	}

	function diffHydratedProperties(domElement, tag, rawProps, parentNamespace, rootContainerElement) {
	  var isCustomComponentTag = void 0;
	  var extraAttributeNames = void 0;

	  {
	    suppressHydrationWarning = rawProps[SUPPRESS_HYDRATION_WARNING$1] === true;
	    isCustomComponentTag = isCustomComponent(tag, rawProps);
	    validatePropertiesInDevelopment(tag, rawProps);
	    if (isCustomComponentTag && !didWarnShadyDOM && domElement.shadyRoot) {
	      warning$1(false, '%s is using shady DOM. Using shady DOM with React can ' + 'cause things to break subtly.', getCurrentFiberOwnerNameInDevOrNull() || 'A component');
	      didWarnShadyDOM = true;
	    }
	  }

	  // TODO: Make sure that we check isMounted before firing any of these events.
	  switch (tag) {
	    case 'iframe':
	    case 'object':
	      trapBubbledEvent(TOP_LOAD, domElement);
	      break;
	    case 'video':
	    case 'audio':
	      // Create listener for each media event
	      for (var i = 0; i < mediaEventTypes.length; i++) {
	        trapBubbledEvent(mediaEventTypes[i], domElement);
	      }
	      break;
	    case 'source':
	      trapBubbledEvent(TOP_ERROR, domElement);
	      break;
	    case 'img':
	    case 'image':
	    case 'link':
	      trapBubbledEvent(TOP_ERROR, domElement);
	      trapBubbledEvent(TOP_LOAD, domElement);
	      break;
	    case 'form':
	      trapBubbledEvent(TOP_RESET, domElement);
	      trapBubbledEvent(TOP_SUBMIT, domElement);
	      break;
	    case 'details':
	      trapBubbledEvent(TOP_TOGGLE, domElement);
	      break;
	    case 'input':
	      initWrapperState(domElement, rawProps);
	      trapBubbledEvent(TOP_INVALID, domElement);
	      // For controlled components we always need to ensure we're listening
	      // to onChange. Even if there is no listener.
	      ensureListeningTo(rootContainerElement, 'onChange');
	      break;
	    case 'option':
	      validateProps(domElement, rawProps);
	      break;
	    case 'select':
	      initWrapperState$1(domElement, rawProps);
	      trapBubbledEvent(TOP_INVALID, domElement);
	      // For controlled components we always need to ensure we're listening
	      // to onChange. Even if there is no listener.
	      ensureListeningTo(rootContainerElement, 'onChange');
	      break;
	    case 'textarea':
	      initWrapperState$2(domElement, rawProps);
	      trapBubbledEvent(TOP_INVALID, domElement);
	      // For controlled components we always need to ensure we're listening
	      // to onChange. Even if there is no listener.
	      ensureListeningTo(rootContainerElement, 'onChange');
	      break;
	  }

	  assertValidProps(tag, rawProps);

	  {
	    extraAttributeNames = new Set();
	    var attributes = domElement.attributes;
	    for (var _i = 0; _i < attributes.length; _i++) {
	      var name = attributes[_i].name.toLowerCase();
	      switch (name) {
	        // Built-in SSR attribute is whitelisted
	        case 'data-reactroot':
	          break;
	        // Controlled attributes are not validated
	        // TODO: Only ignore them on controlled tags.
	        case 'value':
	          break;
	        case 'checked':
	          break;
	        case 'selected':
	          break;
	        default:
	          // Intentionally use the original name.
	          // See discussion in https://github.com/facebook/react/pull/10676.
	          extraAttributeNames.add(attributes[_i].name);
	      }
	    }
	  }

	  var updatePayload = null;
	  for (var propKey in rawProps) {
	    if (!rawProps.hasOwnProperty(propKey)) {
	      continue;
	    }
	    var nextProp = rawProps[propKey];
	    if (propKey === CHILDREN) {
	      // For text content children we compare against textContent. This
	      // might match additional HTML that is hidden when we read it using
	      // textContent. E.g. "foo" will match "f<span>oo</span>" but that still
	      // satisfies our requirement. Our requirement is not to produce perfect
	      // HTML and attributes. Ideally we should preserve structure but it's
	      // ok not to if the visible content is still enough to indicate what
	      // even listeners these nodes might be wired up to.
	      // TODO: Warn if there is more than a single textNode as a child.
	      // TODO: Should we use domElement.firstChild.nodeValue to compare?
	      if (typeof nextProp === 'string') {
	        if (domElement.textContent !== nextProp) {
	          if (true && !suppressHydrationWarning) {
	            warnForTextDifference(domElement.textContent, nextProp);
	          }
	          updatePayload = [CHILDREN, nextProp];
	        }
	      } else if (typeof nextProp === 'number') {
	        if (domElement.textContent !== '' + nextProp) {
	          if (true && !suppressHydrationWarning) {
	            warnForTextDifference(domElement.textContent, nextProp);
	          }
	          updatePayload = [CHILDREN, '' + nextProp];
	        }
	      }
	    } else if (registrationNameModules.hasOwnProperty(propKey)) {
	      if (nextProp != null) {
	        if (true && typeof nextProp !== 'function') {
	          warnForInvalidEventListener(propKey, nextProp);
	        }
	        ensureListeningTo(rootContainerElement, propKey);
	      }
	    } else if (true &&
	    // Convince Flow we've calculated it (it's DEV-only in this method.)
	    typeof isCustomComponentTag === 'boolean') {
	      // Validate that the properties correspond to their expected values.
	      var serverValue = void 0;
	      var propertyInfo = getPropertyInfo(propKey);
	      if (suppressHydrationWarning) {
	        // Don't bother comparing. We're ignoring all these warnings.
	      } else if (propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING$1 ||
	      // Controlled attributes are not validated
	      // TODO: Only ignore them on controlled tags.
	      propKey === 'value' || propKey === 'checked' || propKey === 'selected') {
	        // Noop
	      } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {
	        var serverHTML = domElement.innerHTML;
	        var nextHtml = nextProp ? nextProp[HTML] : undefined;
	        var expectedHTML = normalizeHTML(domElement, nextHtml != null ? nextHtml : '');
	        if (expectedHTML !== serverHTML) {
	          warnForPropDifference(propKey, serverHTML, expectedHTML);
	        }
	      } else if (propKey === STYLE$1) {
	        // $FlowFixMe - Should be inferred as not undefined.
	        extraAttributeNames.delete(propKey);

	        if (canDiffStyleForHydrationWarning) {
	          var expectedStyle = createDangerousStringForStyles(nextProp);
	          serverValue = domElement.getAttribute('style');
	          if (expectedStyle !== serverValue) {
	            warnForPropDifference(propKey, serverValue, expectedStyle);
	          }
	        }
	      } else if (isCustomComponentTag) {
	        // $FlowFixMe - Should be inferred as not undefined.
	        extraAttributeNames.delete(propKey.toLowerCase());
	        serverValue = getValueForAttribute(domElement, propKey, nextProp);

	        if (nextProp !== serverValue) {
	          warnForPropDifference(propKey, serverValue, nextProp);
	        }
	      } else if (!shouldIgnoreAttribute(propKey, propertyInfo, isCustomComponentTag) && !shouldRemoveAttribute(propKey, nextProp, propertyInfo, isCustomComponentTag)) {
	        var isMismatchDueToBadCasing = false;
	        if (propertyInfo !== null) {
	          // $FlowFixMe - Should be inferred as not undefined.
	          extraAttributeNames.delete(propertyInfo.attributeName);
	          serverValue = getValueForProperty(domElement, propKey, nextProp, propertyInfo);
	        } else {
	          var ownNamespace = parentNamespace;
	          if (ownNamespace === HTML_NAMESPACE) {
	            ownNamespace = getIntrinsicNamespace(tag);
	          }
	          if (ownNamespace === HTML_NAMESPACE) {
	            // $FlowFixMe - Should be inferred as not undefined.
	            extraAttributeNames.delete(propKey.toLowerCase());
	          } else {
	            var standardName = getPossibleStandardName(propKey);
	            if (standardName !== null && standardName !== propKey) {
	              // If an SVG prop is supplied with bad casing, it will
	              // be successfully parsed from HTML, but will produce a mismatch
	              // (and would be incorrectly rendered on the client).
	              // However, we already warn about bad casing elsewhere.
	              // So we'll skip the misleading extra mismatch warning in this case.
	              isMismatchDueToBadCasing = true;
	              // $FlowFixMe - Should be inferred as not undefined.
	              extraAttributeNames.delete(standardName);
	            }
	            // $FlowFixMe - Should be inferred as not undefined.
	            extraAttributeNames.delete(propKey);
	          }
	          serverValue = getValueForAttribute(domElement, propKey, nextProp);
	        }

	        if (nextProp !== serverValue && !isMismatchDueToBadCasing) {
	          warnForPropDifference(propKey, serverValue, nextProp);
	        }
	      }
	    }
	  }

	  {
	    // $FlowFixMe - Should be inferred as not undefined.
	    if (extraAttributeNames.size > 0 && !suppressHydrationWarning) {
	      // $FlowFixMe - Should be inferred as not undefined.
	      warnForExtraAttributes(extraAttributeNames);
	    }
	  }

	  switch (tag) {
	    case 'input':
	      // TODO: Make sure we check if this is still unmounted or do any clean
	      // up necessary since we never stop tracking anymore.
	      track(domElement);
	      postMountWrapper(domElement, rawProps, true);
	      break;
	    case 'textarea':
	      // TODO: Make sure we check if this is still unmounted or do any clean
	      // up necessary since we never stop tracking anymore.
	      track(domElement);
	      postMountWrapper$3(domElement, rawProps);
	      break;
	    case 'select':
	    case 'option':
	      // For input and textarea we current always set the value property at
	      // post mount to force it to diverge from attributes. However, for
	      // option and select we don't quite do the same thing and select
	      // is not resilient to the DOM state changing so we don't do that here.
	      // TODO: Consider not doing this for input and textarea.
	      break;
	    default:
	      if (typeof rawProps.onClick === 'function') {
	        // TODO: This cast may not be sound for SVG, MathML or custom elements.
	        trapClickOnNonInteractiveElement(domElement);
	      }
	      break;
	  }

	  return updatePayload;
	}

	function diffHydratedText(textNode, text) {
	  var isDifferent = textNode.nodeValue !== text;
	  return isDifferent;
	}

	function warnForUnmatchedText(textNode, text) {
	  {
	    warnForTextDifference(textNode.nodeValue, text);
	  }
	}

	function warnForDeletedHydratableElement(parentNode, child) {
	  {
	    if (didWarnInvalidHydration) {
	      return;
	    }
	    didWarnInvalidHydration = true;
	    warningWithoutStack$1(false, 'Did not expect server HTML to contain a <%s> in <%s>.', child.nodeName.toLowerCase(), parentNode.nodeName.toLowerCase());
	  }
	}

	function warnForDeletedHydratableText(parentNode, child) {
	  {
	    if (didWarnInvalidHydration) {
	      return;
	    }
	    didWarnInvalidHydration = true;
	    warningWithoutStack$1(false, 'Did not expect server HTML to contain the text node "%s" in <%s>.', child.nodeValue, parentNode.nodeName.toLowerCase());
	  }
	}

	function warnForInsertedHydratedElement(parentNode, tag, props) {
	  {
	    if (didWarnInvalidHydration) {
	      return;
	    }
	    didWarnInvalidHydration = true;
	    warningWithoutStack$1(false, 'Expected server HTML to contain a matching <%s> in <%s>.', tag, parentNode.nodeName.toLowerCase());
	  }
	}

	function warnForInsertedHydratedText(parentNode, text) {
	  {
	    if (text === '') {
	      // We expect to insert empty text nodes since they're not represented in
	      // the HTML.
	      // TODO: Remove this special case if we can just avoid inserting empty
	      // text nodes.
	      return;
	    }
	    if (didWarnInvalidHydration) {
	      return;
	    }
	    didWarnInvalidHydration = true;
	    warningWithoutStack$1(false, 'Expected server HTML to contain a matching text node for "%s" in <%s>.', text, parentNode.nodeName.toLowerCase());
	  }
	}

	function restoreControlledState$1(domElement, tag, props) {
	  switch (tag) {
	    case 'input':
	      restoreControlledState(domElement, props);
	      return;
	    case 'textarea':
	      restoreControlledState$3(domElement, props);
	      return;
	    case 'select':
	      restoreControlledState$2(domElement, props);
	      return;
	  }
	}

	// TODO: direct imports like some-package/src/* are bad. Fix me.
	var validateDOMNesting = function () {};
	var updatedAncestorInfo = function () {};

	{
	  // This validation code was written based on the HTML5 parsing spec:
	  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope
	  //
	  // Note: this does not catch all invalid nesting, nor does it try to (as it's
	  // not clear what practical benefit doing so provides); instead, we warn only
	  // for cases where the parser will give a parse tree differing from what React
	  // intended. For example, <b><div></div></b> is invalid but we don't warn
	  // because it still parses correctly; we do warn for other cases like nested
	  // <p> tags where the beginning of the second element implicitly closes the
	  // first, causing a confusing mess.

	  // https://html.spec.whatwg.org/multipage/syntax.html#special
	  var specialTags = ['address', 'applet', 'area', 'article', 'aside', 'base', 'basefont', 'bgsound', 'blockquote', 'body', 'br', 'button', 'caption', 'center', 'col', 'colgroup', 'dd', 'details', 'dir', 'div', 'dl', 'dt', 'embed', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'frame', 'frameset', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'iframe', 'img', 'input', 'isindex', 'li', 'link', 'listing', 'main', 'marquee', 'menu', 'menuitem', 'meta', 'nav', 'noembed', 'noframes', 'noscript', 'object', 'ol', 'p', 'param', 'plaintext', 'pre', 'script', 'section', 'select', 'source', 'style', 'summary', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'title', 'tr', 'track', 'ul', 'wbr', 'xmp'];

	  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope
	  var inScopeTags = ['applet', 'caption', 'html', 'table', 'td', 'th', 'marquee', 'object', 'template',

	  // https://html.spec.whatwg.org/multipage/syntax.html#html-integration-point
	  // TODO: Distinguish by namespace here -- for <title>, including it here
	  // errs on the side of fewer warnings
	  'foreignObject', 'desc', 'title'];

	  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-button-scope
	  var buttonScopeTags = inScopeTags.concat(['button']);

	  // https://html.spec.whatwg.org/multipage/syntax.html#generate-implied-end-tags
	  var impliedEndTags = ['dd', 'dt', 'li', 'option', 'optgroup', 'p', 'rp', 'rt'];

	  var emptyAncestorInfo = {
	    current: null,

	    formTag: null,
	    aTagInScope: null,
	    buttonTagInScope: null,
	    nobrTagInScope: null,
	    pTagInButtonScope: null,

	    listItemTagAutoclosing: null,
	    dlItemTagAutoclosing: null
	  };

	  updatedAncestorInfo = function (oldInfo, tag) {
	    var ancestorInfo = _assign({}, oldInfo || emptyAncestorInfo);
	    var info = { tag: tag };

	    if (inScopeTags.indexOf(tag) !== -1) {
	      ancestorInfo.aTagInScope = null;
	      ancestorInfo.buttonTagInScope = null;
	      ancestorInfo.nobrTagInScope = null;
	    }
	    if (buttonScopeTags.indexOf(tag) !== -1) {
	      ancestorInfo.pTagInButtonScope = null;
	    }

	    // See rules for 'li', 'dd', 'dt' start tags in
	    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody
	    if (specialTags.indexOf(tag) !== -1 && tag !== 'address' && tag !== 'div' && tag !== 'p') {
	      ancestorInfo.listItemTagAutoclosing = null;
	      ancestorInfo.dlItemTagAutoclosing = null;
	    }

	    ancestorInfo.current = info;

	    if (tag === 'form') {
	      ancestorInfo.formTag = info;
	    }
	    if (tag === 'a') {
	      ancestorInfo.aTagInScope = info;
	    }
	    if (tag === 'button') {
	      ancestorInfo.buttonTagInScope = info;
	    }
	    if (tag === 'nobr') {
	      ancestorInfo.nobrTagInScope = info;
	    }
	    if (tag === 'p') {
	      ancestorInfo.pTagInButtonScope = info;
	    }
	    if (tag === 'li') {
	      ancestorInfo.listItemTagAutoclosing = info;
	    }
	    if (tag === 'dd' || tag === 'dt') {
	      ancestorInfo.dlItemTagAutoclosing = info;
	    }

	    return ancestorInfo;
	  };

	  /**
	   * Returns whether
	   */
	  var isTagValidWithParent = function (tag, parentTag) {
	    // First, let's check if we're in an unusual parsing mode...
	    switch (parentTag) {
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inselect
	      case 'select':
	        return tag === 'option' || tag === 'optgroup' || tag === '#text';
	      case 'optgroup':
	        return tag === 'option' || tag === '#text';
	      // Strictly speaking, seeing an <option> doesn't mean we're in a <select>
	      // but
	      case 'option':
	        return tag === '#text';
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intd
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incaption
	      // No special behavior since these rules fall back to "in body" mode for
	      // all except special table nodes which cause bad parsing behavior anyway.

	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intr
	      case 'tr':
	        return tag === 'th' || tag === 'td' || tag === 'style' || tag === 'script' || tag === 'template';
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intbody
	      case 'tbody':
	      case 'thead':
	      case 'tfoot':
	        return tag === 'tr' || tag === 'style' || tag === 'script' || tag === 'template';
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incolgroup
	      case 'colgroup':
	        return tag === 'col' || tag === 'template';
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intable
	      case 'table':
	        return tag === 'caption' || tag === 'colgroup' || tag === 'tbody' || tag === 'tfoot' || tag === 'thead' || tag === 'style' || tag === 'script' || tag === 'template';
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inhead
	      case 'head':
	        return tag === 'base' || tag === 'basefont' || tag === 'bgsound' || tag === 'link' || tag === 'meta' || tag === 'title' || tag === 'noscript' || tag === 'noframes' || tag === 'style' || tag === 'script' || tag === 'template';
	      // https://html.spec.whatwg.org/multipage/semantics.html#the-html-element
	      case 'html':
	        return tag === 'head' || tag === 'body';
	      case '#document':
	        return tag === 'html';
	    }

	    // Probably in the "in body" parsing mode, so we outlaw only tag combos
	    // where the parsing rules cause implicit opens or closes to be added.
	    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody
	    switch (tag) {
	      case 'h1':
	      case 'h2':
	      case 'h3':
	      case 'h4':
	      case 'h5':
	      case 'h6':
	        return parentTag !== 'h1' && parentTag !== 'h2' && parentTag !== 'h3' && parentTag !== 'h4' && parentTag !== 'h5' && parentTag !== 'h6';

	      case 'rp':
	      case 'rt':
	        return impliedEndTags.indexOf(parentTag) === -1;

	      case 'body':
	      case 'caption':
	      case 'col':
	      case 'colgroup':
	      case 'frame':
	      case 'head':
	      case 'html':
	      case 'tbody':
	      case 'td':
	      case 'tfoot':
	      case 'th':
	      case 'thead':
	      case 'tr':
	        // These tags are only valid with a few parents that have special child
	        // parsing rules -- if we're down here, then none of those matched and
	        // so we allow it only if we don't know what the parent is, as all other
	        // cases are invalid.
	        return parentTag == null;
	    }

	    return true;
	  };

	  /**
	   * Returns whether
	   */
	  var findInvalidAncestorForTag = function (tag, ancestorInfo) {
	    switch (tag) {
	      case 'address':
	      case 'article':
	      case 'aside':
	      case 'blockquote':
	      case 'center':
	      case 'details':
	      case 'dialog':
	      case 'dir':
	      case 'div':
	      case 'dl':
	      case 'fieldset':
	      case 'figcaption':
	      case 'figure':
	      case 'footer':
	      case 'header':
	      case 'hgroup':
	      case 'main':
	      case 'menu':
	      case 'nav':
	      case 'ol':
	      case 'p':
	      case 'section':
	      case 'summary':
	      case 'ul':
	      case 'pre':
	      case 'listing':
	      case 'table':
	      case 'hr':
	      case 'xmp':
	      case 'h1':
	      case 'h2':
	      case 'h3':
	      case 'h4':
	      case 'h5':
	      case 'h6':
	        return ancestorInfo.pTagInButtonScope;

	      case 'form':
	        return ancestorInfo.formTag || ancestorInfo.pTagInButtonScope;

	      case 'li':
	        return ancestorInfo.listItemTagAutoclosing;

	      case 'dd':
	      case 'dt':
	        return ancestorInfo.dlItemTagAutoclosing;

	      case 'button':
	        return ancestorInfo.buttonTagInScope;

	      case 'a':
	        // Spec says something about storing a list of markers, but it sounds
	        // equivalent to this check.
	        return ancestorInfo.aTagInScope;

	      case 'nobr':
	        return ancestorInfo.nobrTagInScope;
	    }

	    return null;
	  };

	  var didWarn = {};

	  validateDOMNesting = function (childTag, childText, ancestorInfo) {
	    ancestorInfo = ancestorInfo || emptyAncestorInfo;
	    var parentInfo = ancestorInfo.current;
	    var parentTag = parentInfo && parentInfo.tag;

	    if (childText != null) {
	      !(childTag == null) ? warningWithoutStack$1(false, 'validateDOMNesting: when childText is passed, childTag should be null') : void 0;
	      childTag = '#text';
	    }

	    var invalidParent = isTagValidWithParent(childTag, parentTag) ? null : parentInfo;
	    var invalidAncestor = invalidParent ? null : findInvalidAncestorForTag(childTag, ancestorInfo);
	    var invalidParentOrAncestor = invalidParent || invalidAncestor;
	    if (!invalidParentOrAncestor) {
	      return;
	    }

	    var ancestorTag = invalidParentOrAncestor.tag;
	    var addendum = getCurrentFiberStackInDev();

	    var warnKey = !!invalidParent + '|' + childTag + '|' + ancestorTag + '|' + addendum;
	    if (didWarn[warnKey]) {
	      return;
	    }
	    didWarn[warnKey] = true;

	    var tagDisplayName = childTag;
	    var whitespaceInfo = '';
	    if (childTag === '#text') {
	      if (/\S/.test(childText)) {
	        tagDisplayName = 'Text nodes';
	      } else {
	        tagDisplayName = 'Whitespace text nodes';
	        whitespaceInfo = " Make sure you don't have any extra whitespace between tags on " + 'each line of your source code.';
	      }
	    } else {
	      tagDisplayName = '<' + childTag + '>';
	    }

	    if (invalidParent) {
	      var info = '';
	      if (ancestorTag === 'table' && childTag === 'tr') {
	        info += ' Add a <tbody> to your code to match the DOM tree generated by ' + 'the browser.';
	      }
	      warningWithoutStack$1(false, 'validateDOMNesting(...): %s cannot appear as a child of <%s>.%s%s%s', tagDisplayName, ancestorTag, whitespaceInfo, info, addendum);
	    } else {
	      warningWithoutStack$1(false, 'validateDOMNesting(...): %s cannot appear as a descendant of ' + '<%s>.%s', tagDisplayName, ancestorTag, addendum);
	    }
	  };
	}

	// Renderers that don't support persistence
	// can re-export everything from this module.

	function shim() {
	  invariant(false, 'The current renderer does not support persistence. This error is likely caused by a bug in React. Please file an issue.');
	}

	// Persistence (when unsupported)
	var supportsPersistence = false;
	var cloneInstance = shim;
	var createContainerChildSet = shim;
	var appendChildToContainerChildSet = shim;
	var finalizeContainerChildren = shim;
	var replaceContainerChildren = shim;
	var cloneHiddenInstance = shim;
	var cloneUnhiddenInstance = shim;
	var createHiddenTextInstance = shim;

	var SUPPRESS_HYDRATION_WARNING = void 0;
	{
	  SUPPRESS_HYDRATION_WARNING = 'suppressHydrationWarning';
	}

	var SUSPENSE_START_DATA = '$';
	var SUSPENSE_END_DATA = '/$';

	var STYLE = 'style';

	var eventsEnabled = null;
	var selectionInformation = null;

	function shouldAutoFocusHostComponent(type, props) {
	  switch (type) {
	    case 'button':
	    case 'input':
	    case 'select':
	    case 'textarea':
	      return !!props.autoFocus;
	  }
	  return false;
	}

	function getRootHostContext(rootContainerInstance) {
	  var type = void 0;
	  var namespace = void 0;
	  var nodeType = rootContainerInstance.nodeType;
	  switch (nodeType) {
	    case DOCUMENT_NODE:
	    case DOCUMENT_FRAGMENT_NODE:
	      {
	        type = nodeType === DOCUMENT_NODE ? '#document' : '#fragment';
	        var root = rootContainerInstance.documentElement;
	        namespace = root ? root.namespaceURI : getChildNamespace(null, '');
	        break;
	      }
	    default:
	      {
	        var container = nodeType === COMMENT_NODE ? rootContainerInstance.parentNode : rootContainerInstance;
	        var ownNamespace = container.namespaceURI || null;
	        type = container.tagName;
	        namespace = getChildNamespace(ownNamespace, type);
	        break;
	      }
	  }
	  {
	    var validatedTag = type.toLowerCase();
	    var _ancestorInfo = updatedAncestorInfo(null, validatedTag);
	    return { namespace: namespace, ancestorInfo: _ancestorInfo };
	  }
	  return namespace;
	}

	function getChildHostContext(parentHostContext, type, rootContainerInstance) {
	  {
	    var parentHostContextDev = parentHostContext;
	    var _namespace = getChildNamespace(parentHostContextDev.namespace, type);
	    var _ancestorInfo2 = updatedAncestorInfo(parentHostContextDev.ancestorInfo, type);
	    return { namespace: _namespace, ancestorInfo: _ancestorInfo2 };
	  }
	  var parentNamespace = parentHostContext;
	  return getChildNamespace(parentNamespace, type);
	}

	function getPublicInstance(instance) {
	  return instance;
	}

	function prepareForCommit(containerInfo) {
	  eventsEnabled = isEnabled();
	  selectionInformation = getSelectionInformation();
	  setEnabled(false);
	}

	function resetAfterCommit(containerInfo) {
	  restoreSelection(selectionInformation);
	  selectionInformation = null;
	  setEnabled(eventsEnabled);
	  eventsEnabled = null;
	}

	function createInstance(type, props, rootContainerInstance, hostContext, internalInstanceHandle) {
	  var parentNamespace = void 0;
	  {
	    // TODO: take namespace into account when validating.
	    var hostContextDev = hostContext;
	    validateDOMNesting(type, null, hostContextDev.ancestorInfo);
	    if (typeof props.children === 'string' || typeof props.children === 'number') {
	      var string = '' + props.children;
	      var ownAncestorInfo = updatedAncestorInfo(hostContextDev.ancestorInfo, type);
	      validateDOMNesting(null, string, ownAncestorInfo);
	    }
	    parentNamespace = hostContextDev.namespace;
	  }
	  var domElement = createElement(type, props, rootContainerInstance, parentNamespace);
	  precacheFiberNode(internalInstanceHandle, domElement);
	  updateFiberProps(domElement, props);
	  return domElement;
	}

	function appendInitialChild(parentInstance, child) {
	  parentInstance.appendChild(child);
	}

	function finalizeInitialChildren(domElement, type, props, rootContainerInstance, hostContext) {
	  setInitialProperties(domElement, type, props, rootContainerInstance);
	  return shouldAutoFocusHostComponent(type, props);
	}

	function prepareUpdate(domElement, type, oldProps, newProps, rootContainerInstance, hostContext) {
	  {
	    var hostContextDev = hostContext;
	    if (typeof newProps.children !== typeof oldProps.children && (typeof newProps.children === 'string' || typeof newProps.children === 'number')) {
	      var string = '' + newProps.children;
	      var ownAncestorInfo = updatedAncestorInfo(hostContextDev.ancestorInfo, type);
	      validateDOMNesting(null, string, ownAncestorInfo);
	    }
	  }
	  return diffProperties(domElement, type, oldProps, newProps, rootContainerInstance);
	}

	function shouldSetTextContent(type, props) {
	  return type === 'textarea' || type === 'option' || type === 'noscript' || typeof props.children === 'string' || typeof props.children === 'number' || typeof props.dangerouslySetInnerHTML === 'object' && props.dangerouslySetInnerHTML !== null && props.dangerouslySetInnerHTML.__html != null;
	}

	function shouldDeprioritizeSubtree(type, props) {
	  return !!props.hidden;
	}

	function createTextInstance(text, rootContainerInstance, hostContext, internalInstanceHandle) {
	  {
	    var hostContextDev = hostContext;
	    validateDOMNesting(null, text, hostContextDev.ancestorInfo);
	  }
	  var textNode = createTextNode(text, rootContainerInstance);
	  precacheFiberNode(internalInstanceHandle, textNode);
	  return textNode;
	}

	var isPrimaryRenderer = true;
	// This initialization code may run even on server environments
	// if a component just imports ReactDOM (e.g. for findDOMNode).
	// Some environments might not have setTimeout or clearTimeout.
	var scheduleTimeout = typeof setTimeout === 'function' ? setTimeout : undefined;
	var cancelTimeout = typeof clearTimeout === 'function' ? clearTimeout : undefined;
	var noTimeout = -1;
	var schedulePassiveEffects = scheduler.unstable_scheduleCallback;
	var cancelPassiveEffects = scheduler.unstable_cancelCallback;

	// -------------------
	//     Mutation
	// -------------------

	var supportsMutation = true;

	function commitMount(domElement, type, newProps, internalInstanceHandle) {
	  // Despite the naming that might imply otherwise, this method only
	  // fires if there is an `Update` effect scheduled during mounting.
	  // This happens if `finalizeInitialChildren` returns `true` (which it
	  // does to implement the `autoFocus` attribute on the client). But
	  // there are also other cases when this might happen (such as patching
	  // up text content during hydration mismatch). So we'll check this again.
	  if (shouldAutoFocusHostComponent(type, newProps)) {
	    domElement.focus();
	  }
	}

	function commitUpdate(domElement, updatePayload, type, oldProps, newProps, internalInstanceHandle) {
	  // Update the props handle so that we know which props are the ones with
	  // with current event handlers.
	  updateFiberProps(domElement, newProps);
	  // Apply the diff to the DOM node.
	  updateProperties(domElement, updatePayload, type, oldProps, newProps);
	}

	function resetTextContent(domElement) {
	  setTextContent(domElement, '');
	}

	function commitTextUpdate(textInstance, oldText, newText) {
	  textInstance.nodeValue = newText;
	}

	function appendChild(parentInstance, child) {
	  parentInstance.appendChild(child);
	}

	function appendChildToContainer(container, child) {
	  var parentNode = void 0;
	  if (container.nodeType === COMMENT_NODE) {
	    parentNode = container.parentNode;
	    parentNode.insertBefore(child, container);
	  } else {
	    parentNode = container;
	    parentNode.appendChild(child);
	  }
	  // This container might be used for a portal.
	  // If something inside a portal is clicked, that click should bubble
	  // through the React tree. However, on Mobile Safari the click would
	  // never bubble through the *DOM* tree unless an ancestor with onclick
	  // event exists. So we wouldn't see it and dispatch it.
	  // This is why we ensure that non React root containers have inline onclick
	  // defined.
	  // https://github.com/facebook/react/issues/11918
	  var reactRootContainer = container._reactRootContainer;
	  if ((reactRootContainer === null || reactRootContainer === undefined) && parentNode.onclick === null) {
	    // TODO: This cast may not be sound for SVG, MathML or custom elements.
	    trapClickOnNonInteractiveElement(parentNode);
	  }
	}

	function insertBefore(parentInstance, child, beforeChild) {
	  parentInstance.insertBefore(child, beforeChild);
	}

	function insertInContainerBefore(container, child, beforeChild) {
	  if (container.nodeType === COMMENT_NODE) {
	    container.parentNode.insertBefore(child, beforeChild);
	  } else {
	    container.insertBefore(child, beforeChild);
	  }
	}

	function removeChild(parentInstance, child) {
	  parentInstance.removeChild(child);
	}

	function removeChildFromContainer(container, child) {
	  if (container.nodeType === COMMENT_NODE) {
	    container.parentNode.removeChild(child);
	  } else {
	    container.removeChild(child);
	  }
	}

	function clearSuspenseBoundary(parentInstance, suspenseInstance) {
	  var node = suspenseInstance;
	  // Delete all nodes within this suspense boundary.
	  // There might be nested nodes so we need to keep track of how
	  // deep we are and only break out when we're back on top.
	  var depth = 0;
	  do {
	    var nextNode = node.nextSibling;
	    parentInstance.removeChild(node);
	    if (nextNode && nextNode.nodeType === COMMENT_NODE) {
	      var data = nextNode.data;
	      if (data === SUSPENSE_END_DATA) {
	        if (depth === 0) {
	          parentInstance.removeChild(nextNode);
	          return;
	        } else {
	          depth--;
	        }
	      } else if (data === SUSPENSE_START_DATA) {
	        depth++;
	      }
	    }
	    node = nextNode;
	  } while (node);
	  // TODO: Warn, we didn't find the end comment boundary.
	}

	function clearSuspenseBoundaryFromContainer(container, suspenseInstance) {
	  if (container.nodeType === COMMENT_NODE) {
	    clearSuspenseBoundary(container.parentNode, suspenseInstance);
	  } else if (container.nodeType === ELEMENT_NODE) {
	    clearSuspenseBoundary(container, suspenseInstance);
	  } else {
	    // Document nodes should never contain suspense boundaries.
	  }
	}

	function hideInstance(instance) {
	  // TODO: Does this work for all element types? What about MathML? Should we
	  // pass host context to this method?
	  instance = instance;
	  instance.style.display = 'none';
	}

	function hideTextInstance(textInstance) {
	  textInstance.nodeValue = '';
	}

	function unhideInstance(instance, props) {
	  instance = instance;
	  var styleProp = props[STYLE];
	  var display = styleProp !== undefined && styleProp !== null && styleProp.hasOwnProperty('display') ? styleProp.display : null;
	  instance.style.display = dangerousStyleValue('display', display);
	}

	function unhideTextInstance(textInstance, text) {
	  textInstance.nodeValue = text;
	}

	// -------------------
	//     Hydration
	// -------------------

	var supportsHydration = true;

	function canHydrateInstance(instance, type, props) {
	  if (instance.nodeType !== ELEMENT_NODE || type.toLowerCase() !== instance.nodeName.toLowerCase()) {
	    return null;
	  }
	  // This has now been refined to an element node.
	  return instance;
	}

	function canHydrateTextInstance(instance, text) {
	  if (text === '' || instance.nodeType !== TEXT_NODE) {
	    // Empty strings are not parsed by HTML so there won't be a correct match here.
	    return null;
	  }
	  // This has now been refined to a text node.
	  return instance;
	}

	function canHydrateSuspenseInstance(instance) {
	  if (instance.nodeType !== COMMENT_NODE) {
	    // Empty strings are not parsed by HTML so there won't be a correct match here.
	    return null;
	  }
	  // This has now been refined to a suspense node.
	  return instance;
	}

	function getNextHydratableSibling(instance) {
	  var node = instance.nextSibling;
	  // Skip non-hydratable nodes.
	  while (node && node.nodeType !== ELEMENT_NODE && node.nodeType !== TEXT_NODE && (!enableSuspenseServerRenderer || node.nodeType !== COMMENT_NODE || node.data !== SUSPENSE_START_DATA)) {
	    node = node.nextSibling;
	  }
	  return node;
	}

	function getFirstHydratableChild(parentInstance) {
	  var next = parentInstance.firstChild;
	  // Skip non-hydratable nodes.
	  while (next && next.nodeType !== ELEMENT_NODE && next.nodeType !== TEXT_NODE && (!enableSuspenseServerRenderer || next.nodeType !== COMMENT_NODE || next.data !== SUSPENSE_START_DATA)) {
	    next = next.nextSibling;
	  }
	  return next;
	}

	function hydrateInstance(instance, type, props, rootContainerInstance, hostContext, internalInstanceHandle) {
	  precacheFiberNode(internalInstanceHandle, instance);
	  // TODO: Possibly defer this until the commit phase where all the events
	  // get attached.
	  updateFiberProps(instance, props);
	  var parentNamespace = void 0;
	  {
	    var hostContextDev = hostContext;
	    parentNamespace = hostContextDev.namespace;
	  }
	  return diffHydratedProperties(instance, type, props, parentNamespace, rootContainerInstance);
	}

	function hydrateTextInstance(textInstance, text, internalInstanceHandle) {
	  precacheFiberNode(internalInstanceHandle, textInstance);
	  return diffHydratedText(textInstance, text);
	}

	function getNextHydratableInstanceAfterSuspenseInstance(suspenseInstance) {
	  var node = suspenseInstance.nextSibling;
	  // Skip past all nodes within this suspense boundary.
	  // There might be nested nodes so we need to keep track of how
	  // deep we are and only break out when we're back on top.
	  var depth = 0;
	  while (node) {
	    if (node.nodeType === COMMENT_NODE) {
	      var data = node.data;
	      if (data === SUSPENSE_END_DATA) {
	        if (depth === 0) {
	          return getNextHydratableSibling(node);
	        } else {
	          depth--;
	        }
	      } else if (data === SUSPENSE_START_DATA) {
	        depth++;
	      }
	    }
	    node = node.nextSibling;
	  }
	  // TODO: Warn, we didn't find the end comment boundary.
	  return null;
	}

	function didNotMatchHydratedContainerTextInstance(parentContainer, textInstance, text) {
	  {
	    warnForUnmatchedText(textInstance, text);
	  }
	}

	function didNotMatchHydratedTextInstance(parentType, parentProps, parentInstance, textInstance, text) {
	  if (true && parentProps[SUPPRESS_HYDRATION_WARNING] !== true) {
	    warnForUnmatchedText(textInstance, text);
	  }
	}

	function didNotHydrateContainerInstance(parentContainer, instance) {
	  {
	    if (instance.nodeType === ELEMENT_NODE) {
	      warnForDeletedHydratableElement(parentContainer, instance);
	    } else if (instance.nodeType === COMMENT_NODE) {
	      // TODO: warnForDeletedHydratableSuspenseBoundary
	    } else {
	      warnForDeletedHydratableText(parentContainer, instance);
	    }
	  }
	}

	function didNotHydrateInstance(parentType, parentProps, parentInstance, instance) {
	  if (true && parentProps[SUPPRESS_HYDRATION_WARNING] !== true) {
	    if (instance.nodeType === ELEMENT_NODE) {
	      warnForDeletedHydratableElement(parentInstance, instance);
	    } else if (instance.nodeType === COMMENT_NODE) {
	      // TODO: warnForDeletedHydratableSuspenseBoundary
	    } else {
	      warnForDeletedHydratableText(parentInstance, instance);
	    }
	  }
	}

	function didNotFindHydratableContainerInstance(parentContainer, type, props) {
	  {
	    warnForInsertedHydratedElement(parentContainer, type, props);
	  }
	}

	function didNotFindHydratableContainerTextInstance(parentContainer, text) {
	  {
	    warnForInsertedHydratedText(parentContainer, text);
	  }
	}



	function didNotFindHydratableInstance(parentType, parentProps, parentInstance, type, props) {
	  if (true && parentProps[SUPPRESS_HYDRATION_WARNING] !== true) {
	    warnForInsertedHydratedElement(parentInstance, type, props);
	  }
	}

	function didNotFindHydratableTextInstance(parentType, parentProps, parentInstance, text) {
	  if (true && parentProps[SUPPRESS_HYDRATION_WARNING] !== true) {
	    warnForInsertedHydratedText(parentInstance, text);
	  }
	}

	function didNotFindHydratableSuspenseInstance(parentType, parentProps, parentInstance) {
	  if (true && parentProps[SUPPRESS_HYDRATION_WARNING] !== true) {
	    // TODO: warnForInsertedHydratedSuspense(parentInstance);
	  }
	}

	// Prefix measurements so that it's possible to filter them.
	// Longer prefixes are hard to read in DevTools.
	var reactEmoji = '\u269B';
	var warningEmoji = '\u26D4';
	var supportsUserTiming = typeof performance !== 'undefined' && typeof performance.mark === 'function' && typeof performance.clearMarks === 'function' && typeof performance.measure === 'function' && typeof performance.clearMeasures === 'function';

	// Keep track of current fiber so that we know the path to unwind on pause.
	// TODO: this looks the same as nextUnitOfWork in scheduler. Can we unify them?
	var currentFiber = null;
	// If we're in the middle of user code, which fiber and method is it?
	// Reusing `currentFiber` would be confusing for this because user code fiber
	// can change during commit phase too, but we don't need to unwind it (since
	// lifecycles in the commit phase don't resemble a tree).
	var currentPhase = null;
	var currentPhaseFiber = null;
	// Did lifecycle hook schedule an update? This is often a performance problem,
	// so we will keep track of it, and include it in the report.
	// Track commits caused by cascading updates.
	var isCommitting = false;
	var hasScheduledUpdateInCurrentCommit = false;
	var hasScheduledUpdateInCurrentPhase = false;
	var commitCountInCurrentWorkLoop = 0;
	var effectCountInCurrentCommit = 0;
	var isWaitingForCallback = false;
	// During commits, we only show a measurement once per method name
	// to avoid stretch the commit phase with measurement overhead.
	var labelsInCurrentCommit = new Set();

	var formatMarkName = function (markName) {
	  return reactEmoji + ' ' + markName;
	};

	var formatLabel = function (label, warning) {
	  var prefix = warning ? warningEmoji + ' ' : reactEmoji + ' ';
	  var suffix = warning ? ' Warning: ' + warning : '';
	  return '' + prefix + label + suffix;
	};

	var beginMark = function (markName) {
	  performance.mark(formatMarkName(markName));
	};

	var clearMark = function (markName) {
	  performance.clearMarks(formatMarkName(markName));
	};

	var endMark = function (label, markName, warning) {
	  var formattedMarkName = formatMarkName(markName);
	  var formattedLabel = formatLabel(label, warning);
	  try {
	    performance.measure(formattedLabel, formattedMarkName);
	  } catch (err) {}
	  // If previous mark was missing for some reason, this will throw.
	  // This could only happen if React crashed in an unexpected place earlier.
	  // Don't pile on with more errors.

	  // Clear marks immediately to avoid growing buffer.
	  performance.clearMarks(formattedMarkName);
	  performance.clearMeasures(formattedLabel);
	};

	var getFiberMarkName = function (label, debugID) {
	  return label + ' (#' + debugID + ')';
	};

	var getFiberLabel = function (componentName, isMounted, phase) {
	  if (phase === null) {
	    // These are composite component total time measurements.
	    return componentName + ' [' + (isMounted ? 'update' : 'mount') + ']';
	  } else {
	    // Composite component methods.
	    return componentName + '.' + phase;
	  }
	};

	var beginFiberMark = function (fiber, phase) {
	  var componentName = getComponentName(fiber.type) || 'Unknown';
	  var debugID = fiber._debugID;
	  var isMounted = fiber.alternate !== null;
	  var label = getFiberLabel(componentName, isMounted, phase);

	  if (isCommitting && labelsInCurrentCommit.has(label)) {
	    // During the commit phase, we don't show duplicate labels because
	    // there is a fixed overhead for every measurement, and we don't
	    // want to stretch the commit phase beyond necessary.
	    return false;
	  }
	  labelsInCurrentCommit.add(label);

	  var markName = getFiberMarkName(label, debugID);
	  beginMark(markName);
	  return true;
	};

	var clearFiberMark = function (fiber, phase) {
	  var componentName = getComponentName(fiber.type) || 'Unknown';
	  var debugID = fiber._debugID;
	  var isMounted = fiber.alternate !== null;
	  var label = getFiberLabel(componentName, isMounted, phase);
	  var markName = getFiberMarkName(label, debugID);
	  clearMark(markName);
	};

	var endFiberMark = function (fiber, phase, warning) {
	  var componentName = getComponentName(fiber.type) || 'Unknown';
	  var debugID = fiber._debugID;
	  var isMounted = fiber.alternate !== null;
	  var label = getFiberLabel(componentName, isMounted, phase);
	  var markName = getFiberMarkName(label, debugID);
	  endMark(label, markName, warning);
	};

	var shouldIgnoreFiber = function (fiber) {
	  // Host components should be skipped in the timeline.
	  // We could check typeof fiber.type, but does this work with RN?
	  switch (fiber.tag) {
	    case HostRoot:
	    case HostComponent:
	    case HostText:
	    case HostPortal:
	    case Fragment:
	    case ContextProvider:
	    case ContextConsumer:
	    case Mode:
	      return true;
	    default:
	      return false;
	  }
	};

	var clearPendingPhaseMeasurement = function () {
	  if (currentPhase !== null && currentPhaseFiber !== null) {
	    clearFiberMark(currentPhaseFiber, currentPhase);
	  }
	  currentPhaseFiber = null;
	  currentPhase = null;
	  hasScheduledUpdateInCurrentPhase = false;
	};

	var pauseTimers = function () {
	  // Stops all currently active measurements so that they can be resumed
	  // if we continue in a later deferred loop from the same unit of work.
	  var fiber = currentFiber;
	  while (fiber) {
	    if (fiber._debugIsCurrentlyTiming) {
	      endFiberMark(fiber, null, null);
	    }
	    fiber = fiber.return;
	  }
	};

	var resumeTimersRecursively = function (fiber) {
	  if (fiber.return !== null) {
	    resumeTimersRecursively(fiber.return);
	  }
	  if (fiber._debugIsCurrentlyTiming) {
	    beginFiberMark(fiber, null);
	  }
	};

	var resumeTimers = function () {
	  // Resumes all measurements that were active during the last deferred loop.
	  if (currentFiber !== null) {
	    resumeTimersRecursively(currentFiber);
	  }
	};

	function recordEffect() {
	  if (enableUserTimingAPI) {
	    effectCountInCurrentCommit++;
	  }
	}

	function recordScheduleUpdate() {
	  if (enableUserTimingAPI) {
	    if (isCommitting) {
	      hasScheduledUpdateInCurrentCommit = true;
	    }
	    if (currentPhase !== null && currentPhase !== 'componentWillMount' && currentPhase !== 'componentWillReceiveProps') {
	      hasScheduledUpdateInCurrentPhase = true;
	    }
	  }
	}

	function startRequestCallbackTimer() {
	  if (enableUserTimingAPI) {
	    if (supportsUserTiming && !isWaitingForCallback) {
	      isWaitingForCallback = true;
	      beginMark('(Waiting for async callback...)');
	    }
	  }
	}

	function stopRequestCallbackTimer(didExpire, expirationTime) {
	  if (enableUserTimingAPI) {
	    if (supportsUserTiming) {
	      isWaitingForCallback = false;
	      var warning = didExpire ? 'React was blocked by main thread' : null;
	      endMark('(Waiting for async callback... will force flush in ' + expirationTime + ' ms)', '(Waiting for async callback...)', warning);
	    }
	  }
	}

	function startWorkTimer(fiber) {
	  if (enableUserTimingAPI) {
	    if (!supportsUserTiming || shouldIgnoreFiber(fiber)) {
	      return;
	    }
	    // If we pause, this is the fiber to unwind from.
	    currentFiber = fiber;
	    if (!beginFiberMark(fiber, null)) {
	      return;
	    }
	    fiber._debugIsCurrentlyTiming = true;
	  }
	}

	function cancelWorkTimer(fiber) {
	  if (enableUserTimingAPI) {
	    if (!supportsUserTiming || shouldIgnoreFiber(fiber)) {
	      return;
	    }
	    // Remember we shouldn't complete measurement for this fiber.
	    // Otherwise flamechart will be deep even for small updates.
	    fiber._debugIsCurrentlyTiming = false;
	    clearFiberMark(fiber, null);
	  }
	}

	function stopWorkTimer(fiber) {
	  if (enableUserTimingAPI) {
	    if (!supportsUserTiming || shouldIgnoreFiber(fiber)) {
	      return;
	    }
	    // If we pause, its parent is the fiber to unwind from.
	    currentFiber = fiber.return;
	    if (!fiber._debugIsCurrentlyTiming) {
	      return;
	    }
	    fiber._debugIsCurrentlyTiming = false;
	    endFiberMark(fiber, null, null);
	  }
	}

	function stopFailedWorkTimer(fiber) {
	  if (enableUserTimingAPI) {
	    if (!supportsUserTiming || shouldIgnoreFiber(fiber)) {
	      return;
	    }
	    // If we pause, its parent is the fiber to unwind from.
	    currentFiber = fiber.return;
	    if (!fiber._debugIsCurrentlyTiming) {
	      return;
	    }
	    fiber._debugIsCurrentlyTiming = false;
	    var warning = fiber.tag === SuspenseComponent || fiber.tag === DehydratedSuspenseComponent ? 'Rendering was suspended' : 'An error was thrown inside this error boundary';
	    endFiberMark(fiber, null, warning);
	  }
	}

	function startPhaseTimer(fiber, phase) {
	  if (enableUserTimingAPI) {
	    if (!supportsUserTiming) {
	      return;
	    }
	    clearPendingPhaseMeasurement();
	    if (!beginFiberMark(fiber, phase)) {
	      return;
	    }
	    currentPhaseFiber = fiber;
	    currentPhase = phase;
	  }
	}

	function stopPhaseTimer() {
	  if (enableUserTimingAPI) {
	    if (!supportsUserTiming) {
	      return;
	    }
	    if (currentPhase !== null && currentPhaseFiber !== null) {
	      var warning = hasScheduledUpdateInCurrentPhase ? 'Scheduled a cascading update' : null;
	      endFiberMark(currentPhaseFiber, currentPhase, warning);
	    }
	    currentPhase = null;
	    currentPhaseFiber = null;
	  }
	}

	function startWorkLoopTimer(nextUnitOfWork) {
	  if (enableUserTimingAPI) {
	    currentFiber = nextUnitOfWork;
	    if (!supportsUserTiming) {
	      return;
	    }
	    commitCountInCurrentWorkLoop = 0;
	    // This is top level call.
	    // Any other measurements are performed within.
	    beginMark('(React Tree Reconciliation)');
	    // Resume any measurements that were in progress during the last loop.
	    resumeTimers();
	  }
	}

	function stopWorkLoopTimer(interruptedBy, didCompleteRoot) {
	  if (enableUserTimingAPI) {
	    if (!supportsUserTiming) {
	      return;
	    }
	    var warning = null;
	    if (interruptedBy !== null) {
	      if (interruptedBy.tag === HostRoot) {
	        warning = 'A top-level update interrupted the previous render';
	      } else {
	        var componentName = getComponentName(interruptedBy.type) || 'Unknown';
	        warning = 'An update to ' + componentName + ' interrupted the previous render';
	      }
	    } else if (commitCountInCurrentWorkLoop > 1) {
	      warning = 'There were cascading updates';
	    }
	    commitCountInCurrentWorkLoop = 0;
	    var label = didCompleteRoot ? '(React Tree Reconciliation: Completed Root)' : '(React Tree Reconciliation: Yielded)';
	    // Pause any measurements until the next loop.
	    pauseTimers();
	    endMark(label, '(React Tree Reconciliation)', warning);
	  }
	}

	function startCommitTimer() {
	  if (enableUserTimingAPI) {
	    if (!supportsUserTiming) {
	      return;
	    }
	    isCommitting = true;
	    hasScheduledUpdateInCurrentCommit = false;
	    labelsInCurrentCommit.clear();
	    beginMark('(Committing Changes)');
	  }
	}

	function stopCommitTimer() {
	  if (enableUserTimingAPI) {
	    if (!supportsUserTiming) {
	      return;
	    }

	    var warning = null;
	    if (hasScheduledUpdateInCurrentCommit) {
	      warning = 'Lifecycle hook scheduled a cascading update';
	    } else if (commitCountInCurrentWorkLoop > 0) {
	      warning = 'Caused by a cascading update in earlier commit';
	    }
	    hasScheduledUpdateInCurrentCommit = false;
	    commitCountInCurrentWorkLoop++;
	    isCommitting = false;
	    labelsInCurrentCommit.clear();

	    endMark('(Committing Changes)', '(Committing Changes)', warning);
	  }
	}

	function startCommitSnapshotEffectsTimer() {
	  if (enableUserTimingAPI) {
	    if (!supportsUserTiming) {
	      return;
	    }
	    effectCountInCurrentCommit = 0;
	    beginMark('(Committing Snapshot Effects)');
	  }
	}

	function stopCommitSnapshotEffectsTimer() {
	  if (enableUserTimingAPI) {
	    if (!supportsUserTiming) {
	      return;
	    }
	    var count = effectCountInCurrentCommit;
	    effectCountInCurrentCommit = 0;
	    endMark('(Committing Snapshot Effects: ' + count + ' Total)', '(Committing Snapshot Effects)', null);
	  }
	}

	function startCommitHostEffectsTimer() {
	  if (enableUserTimingAPI) {
	    if (!supportsUserTiming) {
	      return;
	    }
	    effectCountInCurrentCommit = 0;
	    beginMark('(Committing Host Effects)');
	  }
	}

	function stopCommitHostEffectsTimer() {
	  if (enableUserTimingAPI) {
	    if (!supportsUserTiming) {
	      return;
	    }
	    var count = effectCountInCurrentCommit;
	    effectCountInCurrentCommit = 0;
	    endMark('(Committing Host Effects: ' + count + ' Total)', '(Committing Host Effects)', null);
	  }
	}

	function startCommitLifeCyclesTimer() {
	  if (enableUserTimingAPI) {
	    if (!supportsUserTiming) {
	      return;
	    }
	    effectCountInCurrentCommit = 0;
	    beginMark('(Calling Lifecycle Methods)');
	  }
	}

	function stopCommitLifeCyclesTimer() {
	  if (enableUserTimingAPI) {
	    if (!supportsUserTiming) {
	      return;
	    }
	    var count = effectCountInCurrentCommit;
	    effectCountInCurrentCommit = 0;
	    endMark('(Calling Lifecycle Methods: ' + count + ' Total)', '(Calling Lifecycle Methods)', null);
	  }
	}

	var valueStack = [];

	var fiberStack = void 0;

	{
	  fiberStack = [];
	}

	var index = -1;

	function createCursor(defaultValue) {
	  return {
	    current: defaultValue
	  };
	}

	function pop(cursor, fiber) {
	  if (index < 0) {
	    {
	      warningWithoutStack$1(false, 'Unexpected pop.');
	    }
	    return;
	  }

	  {
	    if (fiber !== fiberStack[index]) {
	      warningWithoutStack$1(false, 'Unexpected Fiber popped.');
	    }
	  }

	  cursor.current = valueStack[index];

	  valueStack[index] = null;

	  {
	    fiberStack[index] = null;
	  }

	  index--;
	}

	function push(cursor, value, fiber) {
	  index++;

	  valueStack[index] = cursor.current;

	  {
	    fiberStack[index] = fiber;
	  }

	  cursor.current = value;
	}

	function checkThatStackIsEmpty() {
	  {
	    if (index !== -1) {
	      warningWithoutStack$1(false, 'Expected an empty stack. Something was not reset properly.');
	    }
	  }
	}

	function resetStackAfterFatalErrorInDev() {
	  {
	    index = -1;
	    valueStack.length = 0;
	    fiberStack.length = 0;
	  }
	}

	var warnedAboutMissingGetChildContext = void 0;

	{
	  warnedAboutMissingGetChildContext = {};
	}

	var emptyContextObject = {};
	{
	  Object.freeze(emptyContextObject);
	}

	// A cursor to the current merged context object on the stack.
	var contextStackCursor = createCursor(emptyContextObject);
	// A cursor to a boolean indicating whether the context has changed.
	var didPerformWorkStackCursor = createCursor(false);
	// Keep track of the previous context object that was on the stack.
	// We use this to get access to the parent context after we have already
	// pushed the next context provider, and now need to merge their contexts.
	var previousContext = emptyContextObject;

	function getUnmaskedContext(workInProgress, Component, didPushOwnContextIfProvider) {
	  if (didPushOwnContextIfProvider && isContextProvider(Component)) {
	    // If the fiber is a context provider itself, when we read its context
	    // we may have already pushed its own child context on the stack. A context
	    // provider should not "see" its own child context. Therefore we read the
	    // previous (parent) context instead for a context provider.
	    return previousContext;
	  }
	  return contextStackCursor.current;
	}

	function cacheContext(workInProgress, unmaskedContext, maskedContext) {
	  var instance = workInProgress.stateNode;
	  instance.__reactInternalMemoizedUnmaskedChildContext = unmaskedContext;
	  instance.__reactInternalMemoizedMaskedChildContext = maskedContext;
	}

	function getMaskedContext(workInProgress, unmaskedContext) {
	  var type = workInProgress.type;
	  var contextTypes = type.contextTypes;
	  if (!contextTypes) {
	    return emptyContextObject;
	  }

	  // Avoid recreating masked context unless unmasked context has changed.
	  // Failing to do this will result in unnecessary calls to componentWillReceiveProps.
	  // This may trigger infinite loops if componentWillReceiveProps calls setState.
	  var instance = workInProgress.stateNode;
	  if (instance && instance.__reactInternalMemoizedUnmaskedChildContext === unmaskedContext) {
	    return instance.__reactInternalMemoizedMaskedChildContext;
	  }

	  var context = {};
	  for (var key in contextTypes) {
	    context[key] = unmaskedContext[key];
	  }

	  {
	    var name = getComponentName(type) || 'Unknown';
	    checkPropTypes(contextTypes, context, 'context', name, getCurrentFiberStackInDev);
	  }

	  // Cache unmasked context so we can avoid recreating masked context unless necessary.
	  // Context is created before the class component is instantiated so check for instance.
	  if (instance) {
	    cacheContext(workInProgress, unmaskedContext, context);
	  }

	  return context;
	}

	function hasContextChanged() {
	  return didPerformWorkStackCursor.current;
	}

	function isContextProvider(type) {
	  var childContextTypes = type.childContextTypes;
	  return childContextTypes !== null && childContextTypes !== undefined;
	}

	function popContext(fiber) {
	  pop(didPerformWorkStackCursor, fiber);
	  pop(contextStackCursor, fiber);
	}

	function popTopLevelContextObject(fiber) {
	  pop(didPerformWorkStackCursor, fiber);
	  pop(contextStackCursor, fiber);
	}

	function pushTopLevelContextObject(fiber, context, didChange) {
	  !(contextStackCursor.current === emptyContextObject) ? invariant(false, 'Unexpected context found on stack. This error is likely caused by a bug in React. Please file an issue.') : void 0;

	  push(contextStackCursor, context, fiber);
	  push(didPerformWorkStackCursor, didChange, fiber);
	}

	function processChildContext(fiber, type, parentContext) {
	  var instance = fiber.stateNode;
	  var childContextTypes = type.childContextTypes;

	  // TODO (bvaughn) Replace this behavior with an invariant() in the future.
	  // It has only been added in Fiber to match the (unintentional) behavior in Stack.
	  if (typeof instance.getChildContext !== 'function') {
	    {
	      var componentName = getComponentName(type) || 'Unknown';

	      if (!warnedAboutMissingGetChildContext[componentName]) {
	        warnedAboutMissingGetChildContext[componentName] = true;
	        warningWithoutStack$1(false, '%s.childContextTypes is specified but there is no getChildContext() method ' + 'on the instance. You can either define getChildContext() on %s or remove ' + 'childContextTypes from it.', componentName, componentName);
	      }
	    }
	    return parentContext;
	  }

	  var childContext = void 0;
	  {
	    setCurrentPhase('getChildContext');
	  }
	  startPhaseTimer(fiber, 'getChildContext');
	  childContext = instance.getChildContext();
	  stopPhaseTimer();
	  {
	    setCurrentPhase(null);
	  }
	  for (var contextKey in childContext) {
	    !(contextKey in childContextTypes) ? invariant(false, '%s.getChildContext(): key "%s" is not defined in childContextTypes.', getComponentName(type) || 'Unknown', contextKey) : void 0;
	  }
	  {
	    var name = getComponentName(type) || 'Unknown';
	    checkPropTypes(childContextTypes, childContext, 'child context', name,
	    // In practice, there is one case in which we won't get a stack. It's when
	    // somebody calls unstable_renderSubtreeIntoContainer() and we process
	    // context from the parent component instance. The stack will be missing
	    // because it's outside of the reconciliation, and so the pointer has not
	    // been set. This is rare and doesn't matter. We'll also remove that API.
	    getCurrentFiberStackInDev);
	  }

	  return _assign({}, parentContext, childContext);
	}

	function pushContextProvider(workInProgress) {
	  var instance = workInProgress.stateNode;
	  // We push the context as early as possible to ensure stack integrity.
	  // If the instance does not exist yet, we will push null at first,
	  // and replace it on the stack later when invalidating the context.
	  var memoizedMergedChildContext = instance && instance.__reactInternalMemoizedMergedChildContext || emptyContextObject;

	  // Remember the parent context so we can merge with it later.
	  // Inherit the parent's did-perform-work value to avoid inadvertently blocking updates.
	  previousContext = contextStackCursor.current;
	  push(contextStackCursor, memoizedMergedChildContext, workInProgress);
	  push(didPerformWorkStackCursor, didPerformWorkStackCursor.current, workInProgress);

	  return true;
	}

	function invalidateContextProvider(workInProgress, type, didChange) {
	  var instance = workInProgress.stateNode;
	  !instance ? invariant(false, 'Expected to have an instance by this point. This error is likely caused by a bug in React. Please file an issue.') : void 0;

	  if (didChange) {
	    // Merge parent and own context.
	    // Skip this if we're not updating due to sCU.
	    // This avoids unnecessarily recomputing memoized values.
	    var mergedContext = processChildContext(workInProgress, type, previousContext);
	    instance.__reactInternalMemoizedMergedChildContext = mergedContext;

	    // Replace the old (or empty) context with the new one.
	    // It is important to unwind the context in the reverse order.
	    pop(didPerformWorkStackCursor, workInProgress);
	    pop(contextStackCursor, workInProgress);
	    // Now push the new context and mark that it has changed.
	    push(contextStackCursor, mergedContext, workInProgress);
	    push(didPerformWorkStackCursor, didChange, workInProgress);
	  } else {
	    pop(didPerformWorkStackCursor, workInProgress);
	    push(didPerformWorkStackCursor, didChange, workInProgress);
	  }
	}

	function findCurrentUnmaskedContext(fiber) {
	  // Currently this is only used with renderSubtreeIntoContainer; not sure if it
	  // makes sense elsewhere
	  !(isFiberMounted(fiber) && fiber.tag === ClassComponent) ? invariant(false, 'Expected subtree parent to be a mounted class component. This error is likely caused by a bug in React. Please file an issue.') : void 0;

	  var node = fiber;
	  do {
	    switch (node.tag) {
	      case HostRoot:
	        return node.stateNode.context;
	      case ClassComponent:
	        {
	          var Component = node.type;
	          if (isContextProvider(Component)) {
	            return node.stateNode.__reactInternalMemoizedMergedChildContext;
	          }
	          break;
	        }
	    }
	    node = node.return;
	  } while (node !== null);
	  invariant(false, 'Found unexpected detached subtree parent. This error is likely caused by a bug in React. Please file an issue.');
	}

	var onCommitFiberRoot = null;
	var onCommitFiberUnmount = null;
	var hasLoggedError = false;

	function catchErrors(fn) {
	  return function (arg) {
	    try {
	      return fn(arg);
	    } catch (err) {
	      if (true && !hasLoggedError) {
	        hasLoggedError = true;
	        warningWithoutStack$1(false, 'React DevTools encountered an error: %s', err);
	      }
	    }
	  };
	}

	var isDevToolsPresent = typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined';

	function injectInternals(internals) {
	  if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined') {
	    // No DevTools
	    return false;
	  }
	  var hook = __REACT_DEVTOOLS_GLOBAL_HOOK__;
	  if (hook.isDisabled) {
	    // This isn't a real property on the hook, but it can be set to opt out
	    // of DevTools integration and associated warnings and logs.
	    // https://github.com/facebook/react/issues/3877
	    return true;
	  }
	  if (!hook.supportsFiber) {
	    {
	      warningWithoutStack$1(false, 'The installed version of React DevTools is too old and will not work ' + 'with the current version of React. Please update React DevTools. ' + 'https://fb.me/react-devtools');
	    }
	    // DevTools exists, even though it doesn't support Fiber.
	    return true;
	  }
	  try {
	    var rendererID = hook.inject(internals);
	    // We have successfully injected, so now it is safe to set up hooks.
	    onCommitFiberRoot = catchErrors(function (root) {
	      return hook.onCommitFiberRoot(rendererID, root);
	    });
	    onCommitFiberUnmount = catchErrors(function (fiber) {
	      return hook.onCommitFiberUnmount(rendererID, fiber);
	    });
	  } catch (err) {
	    // Catch all errors because it is unsafe to throw during initialization.
	    {
	      warningWithoutStack$1(false, 'React DevTools encountered an error: %s.', err);
	    }
	  }
	  // DevTools exists
	  return true;
	}

	function onCommitRoot(root) {
	  if (typeof onCommitFiberRoot === 'function') {
	    onCommitFiberRoot(root);
	  }
	}

	function onCommitUnmount(fiber) {
	  if (typeof onCommitFiberUnmount === 'function') {
	    onCommitFiberUnmount(fiber);
	  }
	}

	// Max 31 bit integer. The max integer size in V8 for 32-bit systems.
	// Math.pow(2, 30) - 1
	// 0b111111111111111111111111111111
	var maxSigned31BitInt = 1073741823;

	var NoWork = 0;
	var Never = 1;
	var Sync = maxSigned31BitInt;

	var UNIT_SIZE = 10;
	var MAGIC_NUMBER_OFFSET = maxSigned31BitInt - 1;

	// 1 unit of expiration time represents 10ms.
	function msToExpirationTime(ms) {
	  // Always add an offset so that we don't clash with the magic number for NoWork.
	  return MAGIC_NUMBER_OFFSET - (ms / UNIT_SIZE | 0);
	}

	function expirationTimeToMs(expirationTime) {
	  return (MAGIC_NUMBER_OFFSET - expirationTime) * UNIT_SIZE;
	}

	function ceiling(num, precision) {
	  return ((num / precision | 0) + 1) * precision;
	}

	function computeExpirationBucket(currentTime, expirationInMs, bucketSizeMs) {
	  return MAGIC_NUMBER_OFFSET - ceiling(MAGIC_NUMBER_OFFSET - currentTime + expirationInMs / UNIT_SIZE, bucketSizeMs / UNIT_SIZE);
	}

	var LOW_PRIORITY_EXPIRATION = 5000;
	var LOW_PRIORITY_BATCH_SIZE = 250;

	function computeAsyncExpiration(currentTime) {
	  return computeExpirationBucket(currentTime, LOW_PRIORITY_EXPIRATION, LOW_PRIORITY_BATCH_SIZE);
	}

	// We intentionally set a higher expiration time for interactive updates in
	// dev than in production.
	//
	// If the main thread is being blocked so long that you hit the expiration,
	// it's a problem that could be solved with better scheduling.
	//
	// People will be more likely to notice this and fix it with the long
	// expiration time in development.
	//
	// In production we opt for better UX at the risk of masking scheduling
	// problems, by expiring fast.
	var HIGH_PRIORITY_EXPIRATION = 500;
	var HIGH_PRIORITY_BATCH_SIZE = 100;

	function computeInteractiveExpiration(currentTime) {
	  return computeExpirationBucket(currentTime, HIGH_PRIORITY_EXPIRATION, HIGH_PRIORITY_BATCH_SIZE);
	}

	var NoContext = 0;
	var ConcurrentMode = 1;
	var StrictMode = 2;
	var ProfileMode = 4;

	var hasBadMapPolyfill = void 0;

	{
	  hasBadMapPolyfill = false;
	  try {
	    var nonExtensibleObject = Object.preventExtensions({});
	    var testMap = new Map([[nonExtensibleObject, null]]);
	    var testSet = new Set([nonExtensibleObject]);
	    // This is necessary for Rollup to not consider these unused.
	    // https://github.com/rollup/rollup/issues/1771
	    // TODO: we can remove these if Rollup fixes the bug.
	    testMap.set(0, 0);
	    testSet.add(0);
	  } catch (e) {
	    // TODO: Consider warning about bad polyfills
	    hasBadMapPolyfill = true;
	  }
	}

	// A Fiber is work on a Component that needs to be done or was done. There can
	// be more than one per component.


	var debugCounter = void 0;

	{
	  debugCounter = 1;
	}

	function FiberNode(tag, pendingProps, key, mode) {
	  // Instance
	  this.tag = tag;
	  this.key = key;
	  this.elementType = null;
	  this.type = null;
	  this.stateNode = null;

	  // Fiber
	  this.return = null;
	  this.child = null;
	  this.sibling = null;
	  this.index = 0;

	  this.ref = null;

	  this.pendingProps = pendingProps;
	  this.memoizedProps = null;
	  this.updateQueue = null;
	  this.memoizedState = null;
	  this.contextDependencies = null;

	  this.mode = mode;

	  // Effects
	  this.effectTag = NoEffect;
	  this.nextEffect = null;

	  this.firstEffect = null;
	  this.lastEffect = null;

	  this.expirationTime = NoWork;
	  this.childExpirationTime = NoWork;

	  this.alternate = null;

	  if (enableProfilerTimer) {
	    // Note: The following is done to avoid a v8 performance cliff.
	    //
	    // Initializing the fields below to smis and later updating them with
	    // double values will cause Fibers to end up having separate shapes.
	    // This behavior/bug has something to do with Object.preventExtension().
	    // Fortunately this only impacts DEV builds.
	    // Unfortunately it makes React unusably slow for some applications.
	    // To work around this, initialize the fields below with doubles.
	    //
	    // Learn more about this here:
	    // https://github.com/facebook/react/issues/14365
	    // https://bugs.chromium.org/p/v8/issues/detail?id=8538
	    this.actualDuration = Number.NaN;
	    this.actualStartTime = Number.NaN;
	    this.selfBaseDuration = Number.NaN;
	    this.treeBaseDuration = Number.NaN;

	    // It's okay to replace the initial doubles with smis after initialization.
	    // This won't trigger the performance cliff mentioned above,
	    // and it simplifies other profiler code (including DevTools).
	    this.actualDuration = 0;
	    this.actualStartTime = -1;
	    this.selfBaseDuration = 0;
	    this.treeBaseDuration = 0;
	  }

	  {
	    this._debugID = debugCounter++;
	    this._debugSource = null;
	    this._debugOwner = null;
	    this._debugIsCurrentlyTiming = false;
	    this._debugHookTypes = null;
	    if (!hasBadMapPolyfill && typeof Object.preventExtensions === 'function') {
	      Object.preventExtensions(this);
	    }
	  }
	}

	// This is a constructor function, rather than a POJO constructor, still
	// please ensure we do the following:
	// 1) Nobody should add any instance methods on this. Instance methods can be
	//    more difficult to predict when they get optimized and they are almost
	//    never inlined properly in static compilers.
	// 2) Nobody should rely on `instanceof Fiber` for type testing. We should
	//    always know when it is a fiber.
	// 3) We might want to experiment with using numeric keys since they are easier
	//    to optimize in a non-JIT environment.
	// 4) We can easily go from a constructor to a createFiber object literal if that
	//    is faster.
	// 5) It should be easy to port this to a C struct and keep a C implementation
	//    compatible.
	var createFiber = function (tag, pendingProps, key, mode) {
	  // $FlowFixMe: the shapes are exact here but Flow doesn't like constructors
	  return new FiberNode(tag, pendingProps, key, mode);
	};

	function shouldConstruct(Component) {
	  var prototype = Component.prototype;
	  return !!(prototype && prototype.isReactComponent);
	}

	function isSimpleFunctionComponent(type) {
	  return typeof type === 'function' && !shouldConstruct(type) && type.defaultProps === undefined;
	}

	function resolveLazyComponentTag(Component) {
	  if (typeof Component === 'function') {
	    return shouldConstruct(Component) ? ClassComponent : FunctionComponent;
	  } else if (Component !== undefined && Component !== null) {
	    var $$typeof = Component.$$typeof;
	    if ($$typeof === REACT_FORWARD_REF_TYPE) {
	      return ForwardRef;
	    }
	    if ($$typeof === REACT_MEMO_TYPE) {
	      return MemoComponent;
	    }
	  }
	  return IndeterminateComponent;
	}

	// This is used to create an alternate fiber to do work on.
	function createWorkInProgress(current, pendingProps, expirationTime) {
	  var workInProgress = current.alternate;
	  if (workInProgress === null) {
	    // We use a double buffering pooling technique because we know that we'll
	    // only ever need at most two versions of a tree. We pool the "other" unused
	    // node that we're free to reuse. This is lazily created to avoid allocating
	    // extra objects for things that are never updated. It also allow us to
	    // reclaim the extra memory if needed.
	    workInProgress = createFiber(current.tag, pendingProps, current.key, current.mode);
	    workInProgress.elementType = current.elementType;
	    workInProgress.type = current.type;
	    workInProgress.stateNode = current.stateNode;

	    {
	      // DEV-only fields
	      workInProgress._debugID = current._debugID;
	      workInProgress._debugSource = current._debugSource;
	      workInProgress._debugOwner = current._debugOwner;
	      workInProgress._debugHookTypes = current._debugHookTypes;
	    }

	    workInProgress.alternate = current;
	    current.alternate = workInProgress;
	  } else {
	    workInProgress.pendingProps = pendingProps;

	    // We already have an alternate.
	    // Reset the effect tag.
	    workInProgress.effectTag = NoEffect;

	    // The effect list is no longer valid.
	    workInProgress.nextEffect = null;
	    workInProgress.firstEffect = null;
	    workInProgress.lastEffect = null;

	    if (enableProfilerTimer) {
	      // We intentionally reset, rather than copy, actualDuration & actualStartTime.
	      // This prevents time from endlessly accumulating in new commits.
	      // This has the downside of resetting values for different priority renders,
	      // But works for yielding (the common case) and should support resuming.
	      workInProgress.actualDuration = 0;
	      workInProgress.actualStartTime = -1;
	    }
	  }

	  workInProgress.childExpirationTime = current.childExpirationTime;
	  workInProgress.expirationTime = current.expirationTime;

	  workInProgress.child = current.child;
	  workInProgress.memoizedProps = current.memoizedProps;
	  workInProgress.memoizedState = current.memoizedState;
	  workInProgress.updateQueue = current.updateQueue;
	  workInProgress.contextDependencies = current.contextDependencies;

	  // These will be overridden during the parent's reconciliation
	  workInProgress.sibling = current.sibling;
	  workInProgress.index = current.index;
	  workInProgress.ref = current.ref;

	  if (enableProfilerTimer) {
	    workInProgress.selfBaseDuration = current.selfBaseDuration;
	    workInProgress.treeBaseDuration = current.treeBaseDuration;
	  }

	  return workInProgress;
	}

	function createHostRootFiber(isConcurrent) {
	  var mode = isConcurrent ? ConcurrentMode | StrictMode : NoContext;

	  if (enableProfilerTimer && isDevToolsPresent) {
	    // Always collect profile timings when DevTools are present.
	    // This enables DevTools to start capturing timing at any point–
	    // Without some nodes in the tree having empty base times.
	    mode |= ProfileMode;
	  }

	  return createFiber(HostRoot, null, null, mode);
	}

	function createFiberFromTypeAndProps(type, // React$ElementType
	key, pendingProps, owner, mode, expirationTime) {
	  var fiber = void 0;

	  var fiberTag = IndeterminateComponent;
	  // The resolved type is set if we know what the final type will be. I.e. it's not lazy.
	  var resolvedType = type;
	  if (typeof type === 'function') {
	    if (shouldConstruct(type)) {
	      fiberTag = ClassComponent;
	    }
	  } else if (typeof type === 'string') {
	    fiberTag = HostComponent;
	  } else {
	    getTag: switch (type) {
	      case REACT_FRAGMENT_TYPE:
	        return createFiberFromFragment(pendingProps.children, mode, expirationTime, key);
	      case REACT_CONCURRENT_MODE_TYPE:
	        return createFiberFromMode(pendingProps, mode | ConcurrentMode | StrictMode, expirationTime, key);
	      case REACT_STRICT_MODE_TYPE:
	        return createFiberFromMode(pendingProps, mode | StrictMode, expirationTime, key);
	      case REACT_PROFILER_TYPE:
	        return createFiberFromProfiler(pendingProps, mode, expirationTime, key);
	      case REACT_SUSPENSE_TYPE:
	        return createFiberFromSuspense(pendingProps, mode, expirationTime, key);
	      default:
	        {
	          if (typeof type === 'object' && type !== null) {
	            switch (type.$$typeof) {
	              case REACT_PROVIDER_TYPE:
	                fiberTag = ContextProvider;
	                break getTag;
	              case REACT_CONTEXT_TYPE:
	                // This is a consumer
	                fiberTag = ContextConsumer;
	                break getTag;
	              case REACT_FORWARD_REF_TYPE:
	                fiberTag = ForwardRef;
	                break getTag;
	              case REACT_MEMO_TYPE:
	                fiberTag = MemoComponent;
	                break getTag;
	              case REACT_LAZY_TYPE:
	                fiberTag = LazyComponent;
	                resolvedType = null;
	                break getTag;
	            }
	          }
	          var info = '';
	          {
	            if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {
	              info += ' You likely forgot to export your component from the file ' + "it's defined in, or you might have mixed up default and " + 'named imports.';
	            }
	            var ownerName = owner ? getComponentName(owner.type) : null;
	            if (ownerName) {
	              info += '\n\nCheck the render method of `' + ownerName + '`.';
	            }
	          }
	          invariant(false, 'Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s', type == null ? type : typeof type, info);
	        }
	    }
	  }

	  fiber = createFiber(fiberTag, pendingProps, key, mode);
	  fiber.elementType = type;
	  fiber.type = resolvedType;
	  fiber.expirationTime = expirationTime;

	  return fiber;
	}

	function createFiberFromElement(element, mode, expirationTime) {
	  var owner = null;
	  {
	    owner = element._owner;
	  }
	  var type = element.type;
	  var key = element.key;
	  var pendingProps = element.props;
	  var fiber = createFiberFromTypeAndProps(type, key, pendingProps, owner, mode, expirationTime);
	  {
	    fiber._debugSource = element._source;
	    fiber._debugOwner = element._owner;
	  }
	  return fiber;
	}

	function createFiberFromFragment(elements, mode, expirationTime, key) {
	  var fiber = createFiber(Fragment, elements, key, mode);
	  fiber.expirationTime = expirationTime;
	  return fiber;
	}

	function createFiberFromProfiler(pendingProps, mode, expirationTime, key) {
	  {
	    if (typeof pendingProps.id !== 'string' || typeof pendingProps.onRender !== 'function') {
	      warningWithoutStack$1(false, 'Profiler must specify an "id" string and "onRender" function as props');
	    }
	  }

	  var fiber = createFiber(Profiler, pendingProps, key, mode | ProfileMode);
	  // TODO: The Profiler fiber shouldn't have a type. It has a tag.
	  fiber.elementType = REACT_PROFILER_TYPE;
	  fiber.type = REACT_PROFILER_TYPE;
	  fiber.expirationTime = expirationTime;

	  return fiber;
	}

	function createFiberFromMode(pendingProps, mode, expirationTime, key) {
	  var fiber = createFiber(Mode, pendingProps, key, mode);

	  // TODO: The Mode fiber shouldn't have a type. It has a tag.
	  var type = (mode & ConcurrentMode) === NoContext ? REACT_STRICT_MODE_TYPE : REACT_CONCURRENT_MODE_TYPE;
	  fiber.elementType = type;
	  fiber.type = type;

	  fiber.expirationTime = expirationTime;
	  return fiber;
	}

	function createFiberFromSuspense(pendingProps, mode, expirationTime, key) {
	  var fiber = createFiber(SuspenseComponent, pendingProps, key, mode);

	  // TODO: The SuspenseComponent fiber shouldn't have a type. It has a tag.
	  var type = REACT_SUSPENSE_TYPE;
	  fiber.elementType = type;
	  fiber.type = type;

	  fiber.expirationTime = expirationTime;
	  return fiber;
	}

	function createFiberFromText(content, mode, expirationTime) {
	  var fiber = createFiber(HostText, content, null, mode);
	  fiber.expirationTime = expirationTime;
	  return fiber;
	}

	function createFiberFromHostInstanceForDeletion() {
	  var fiber = createFiber(HostComponent, null, null, NoContext);
	  // TODO: These should not need a type.
	  fiber.elementType = 'DELETED';
	  fiber.type = 'DELETED';
	  return fiber;
	}

	function createFiberFromPortal(portal, mode, expirationTime) {
	  var pendingProps = portal.children !== null ? portal.children : [];
	  var fiber = createFiber(HostPortal, pendingProps, portal.key, mode);
	  fiber.expirationTime = expirationTime;
	  fiber.stateNode = {
	    containerInfo: portal.containerInfo,
	    pendingChildren: null, // Used by persistent updates
	    implementation: portal.implementation
	  };
	  return fiber;
	}

	// Used for stashing WIP properties to replay failed work in DEV.
	function assignFiberPropertiesInDEV(target, source) {
	  if (target === null) {
	    // This Fiber's initial properties will always be overwritten.
	    // We only use a Fiber to ensure the same hidden class so DEV isn't slow.
	    target = createFiber(IndeterminateComponent, null, null, NoContext);
	  }

	  // This is intentionally written as a list of all properties.
	  // We tried to use Object.assign() instead but this is called in
	  // the hottest path, and Object.assign() was too slow:
	  // https://github.com/facebook/react/issues/12502
	  // This code is DEV-only so size is not a concern.

	  target.tag = source.tag;
	  target.key = source.key;
	  target.elementType = source.elementType;
	  target.type = source.type;
	  target.stateNode = source.stateNode;
	  target.return = source.return;
	  target.child = source.child;
	  target.sibling = source.sibling;
	  target.index = source.index;
	  target.ref = source.ref;
	  target.pendingProps = source.pendingProps;
	  target.memoizedProps = source.memoizedProps;
	  target.updateQueue = source.updateQueue;
	  target.memoizedState = source.memoizedState;
	  target.contextDependencies = source.contextDependencies;
	  target.mode = source.mode;
	  target.effectTag = source.effectTag;
	  target.nextEffect = source.nextEffect;
	  target.firstEffect = source.firstEffect;
	  target.lastEffect = source.lastEffect;
	  target.expirationTime = source.expirationTime;
	  target.childExpirationTime = source.childExpirationTime;
	  target.alternate = source.alternate;
	  if (enableProfilerTimer) {
	    target.actualDuration = source.actualDuration;
	    target.actualStartTime = source.actualStartTime;
	    target.selfBaseDuration = source.selfBaseDuration;
	    target.treeBaseDuration = source.treeBaseDuration;
	  }
	  target._debugID = source._debugID;
	  target._debugSource = source._debugSource;
	  target._debugOwner = source._debugOwner;
	  target._debugIsCurrentlyTiming = source._debugIsCurrentlyTiming;
	  target._debugHookTypes = source._debugHookTypes;
	  return target;
	}

	// TODO: This should be lifted into the renderer.


	// The following attributes are only used by interaction tracing builds.
	// They enable interactions to be associated with their async work,
	// And expose interaction metadata to the React DevTools Profiler plugin.
	// Note that these attributes are only defined when the enableSchedulerTracing flag is enabled.


	// Exported FiberRoot type includes all properties,
	// To avoid requiring potentially error-prone :any casts throughout the project.
	// Profiling properties are only safe to access in profiling builds (when enableSchedulerTracing is true).
	// The types are defined separately within this file to ensure they stay in sync.
	// (We don't have to use an inline :any cast when enableSchedulerTracing is disabled.)


	function createFiberRoot(containerInfo, isConcurrent, hydrate) {
	  // Cyclic construction. This cheats the type system right now because
	  // stateNode is any.
	  var uninitializedFiber = createHostRootFiber(isConcurrent);

	  var root = void 0;
	  if (enableSchedulerTracing) {
	    root = {
	      current: uninitializedFiber,
	      containerInfo: containerInfo,
	      pendingChildren: null,

	      earliestPendingTime: NoWork,
	      latestPendingTime: NoWork,
	      earliestSuspendedTime: NoWork,
	      latestSuspendedTime: NoWork,
	      latestPingedTime: NoWork,

	      pingCache: null,

	      didError: false,

	      pendingCommitExpirationTime: NoWork,
	      finishedWork: null,
	      timeoutHandle: noTimeout,
	      context: null,
	      pendingContext: null,
	      hydrate: hydrate,
	      nextExpirationTimeToWorkOn: NoWork,
	      expirationTime: NoWork,
	      firstBatch: null,
	      nextScheduledRoot: null,

	      interactionThreadID: tracing.unstable_getThreadID(),
	      memoizedInteractions: new Set(),
	      pendingInteractionMap: new Map()
	    };
	  } else {
	    root = {
	      current: uninitializedFiber,
	      containerInfo: containerInfo,
	      pendingChildren: null,

	      pingCache: null,

	      earliestPendingTime: NoWork,
	      latestPendingTime: NoWork,
	      earliestSuspendedTime: NoWork,
	      latestSuspendedTime: NoWork,
	      latestPingedTime: NoWork,

	      didError: false,

	      pendingCommitExpirationTime: NoWork,
	      finishedWork: null,
	      timeoutHandle: noTimeout,
	      context: null,
	      pendingContext: null,
	      hydrate: hydrate,
	      nextExpirationTimeToWorkOn: NoWork,
	      expirationTime: NoWork,
	      firstBatch: null,
	      nextScheduledRoot: null
	    };
	  }

	  uninitializedFiber.stateNode = root;

	  // The reason for the way the Flow types are structured in this file,
	  // Is to avoid needing :any casts everywhere interaction tracing fields are used.
	  // Unfortunately that requires an :any cast for non-interaction tracing capable builds.
	  // $FlowFixMe Remove this :any cast and replace it with something better.
	  return root;
	}

	/**
	 * Forked from fbjs/warning:
	 * https://github.com/facebook/fbjs/blob/e66ba20ad5be433eb54423f2b097d829324d9de6/packages/fbjs/src/__forks__/warning.js
	 *
	 * Only change is we use console.warn instead of console.error,
	 * and do nothing when 'console' is not supported.
	 * This really simplifies the code.
	 * ---
	 * Similar to invariant but only logs a warning if the condition is not met.
	 * This can be used to log issues in development environments in critical
	 * paths. Removing the logging code for production environments will keep the
	 * same logic and follow the same code paths.
	 */

	var lowPriorityWarning = function () {};

	{
	  var printWarning = function (format) {
	    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
	      args[_key - 1] = arguments[_key];
	    }

	    var argIndex = 0;
	    var message = 'Warning: ' + format.replace(/%s/g, function () {
	      return args[argIndex++];
	    });
	    if (typeof console !== 'undefined') {
	      console.warn(message);
	    }
	    try {
	      // --- Welcome to debugging React ---
	      // This error was thrown as a convenience so that you can use this stack
	      // to find the callsite that caused this warning to fire.
	      throw new Error(message);
	    } catch (x) {}
	  };

	  lowPriorityWarning = function (condition, format) {
	    if (format === undefined) {
	      throw new Error('`lowPriorityWarning(condition, format, ...args)` requires a warning ' + 'message argument');
	    }
	    if (!condition) {
	      for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
	        args[_key2 - 2] = arguments[_key2];
	      }

	      printWarning.apply(undefined, [format].concat(args));
	    }
	  };
	}

	var lowPriorityWarning$1 = lowPriorityWarning;

	var ReactStrictModeWarnings = {
	  discardPendingWarnings: function () {},
	  flushPendingDeprecationWarnings: function () {},
	  flushPendingUnsafeLifecycleWarnings: function () {},
	  recordDeprecationWarnings: function (fiber, instance) {},
	  recordUnsafeLifecycleWarnings: function (fiber, instance) {},
	  recordLegacyContextWarning: function (fiber, instance) {},
	  flushLegacyContextWarning: function () {}
	};

	{
	  var LIFECYCLE_SUGGESTIONS = {
	    UNSAFE_componentWillMount: 'componentDidMount',
	    UNSAFE_componentWillReceiveProps: 'static getDerivedStateFromProps',
	    UNSAFE_componentWillUpdate: 'componentDidUpdate'
	  };

	  var pendingComponentWillMountWarnings = [];
	  var pendingComponentWillReceivePropsWarnings = [];
	  var pendingComponentWillUpdateWarnings = [];
	  var pendingUnsafeLifecycleWarnings = new Map();
	  var pendingLegacyContextWarning = new Map();

	  // Tracks components we have already warned about.
	  var didWarnAboutDeprecatedLifecycles = new Set();
	  var didWarnAboutUnsafeLifecycles = new Set();
	  var didWarnAboutLegacyContext = new Set();

	  var setToSortedString = function (set) {
	    var array = [];
	    set.forEach(function (value) {
	      array.push(value);
	    });
	    return array.sort().join(', ');
	  };

	  ReactStrictModeWarnings.discardPendingWarnings = function () {
	    pendingComponentWillMountWarnings = [];
	    pendingComponentWillReceivePropsWarnings = [];
	    pendingComponentWillUpdateWarnings = [];
	    pendingUnsafeLifecycleWarnings = new Map();
	    pendingLegacyContextWarning = new Map();
	  };

	  ReactStrictModeWarnings.flushPendingUnsafeLifecycleWarnings = function () {
	    pendingUnsafeLifecycleWarnings.forEach(function (lifecycleWarningsMap, strictRoot) {
	      var lifecyclesWarningMessages = [];

	      Object.keys(lifecycleWarningsMap).forEach(function (lifecycle) {
	        var lifecycleWarnings = lifecycleWarningsMap[lifecycle];
	        if (lifecycleWarnings.length > 0) {
	          var componentNames = new Set();
	          lifecycleWarnings.forEach(function (fiber) {
	            componentNames.add(getComponentName(fiber.type) || 'Component');
	            didWarnAboutUnsafeLifecycles.add(fiber.type);
	          });

	          var formatted = lifecycle.replace('UNSAFE_', '');
	          var suggestion = LIFECYCLE_SUGGESTIONS[lifecycle];
	          var sortedComponentNames = setToSortedString(componentNames);

	          lifecyclesWarningMessages.push(formatted + ': Please update the following components to use ' + (suggestion + ' instead: ' + sortedComponentNames));
	        }
	      });

	      if (lifecyclesWarningMessages.length > 0) {
	        var strictRootComponentStack = getStackByFiberInDevAndProd(strictRoot);

	        warningWithoutStack$1(false, 'Unsafe lifecycle methods were found within a strict-mode tree:%s' + '\n\n%s' + '\n\nLearn more about this warning here:' + '\nhttps://fb.me/react-strict-mode-warnings', strictRootComponentStack, lifecyclesWarningMessages.join('\n\n'));
	      }
	    });

	    pendingUnsafeLifecycleWarnings = new Map();
	  };

	  var findStrictRoot = function (fiber) {
	    var maybeStrictRoot = null;

	    var node = fiber;
	    while (node !== null) {
	      if (node.mode & StrictMode) {
	        maybeStrictRoot = node;
	      }
	      node = node.return;
	    }

	    return maybeStrictRoot;
	  };

	  ReactStrictModeWarnings.flushPendingDeprecationWarnings = function () {
	    if (pendingComponentWillMountWarnings.length > 0) {
	      var uniqueNames = new Set();
	      pendingComponentWillMountWarnings.forEach(function (fiber) {
	        uniqueNames.add(getComponentName(fiber.type) || 'Component');
	        didWarnAboutDeprecatedLifecycles.add(fiber.type);
	      });

	      var sortedNames = setToSortedString(uniqueNames);

	      lowPriorityWarning$1(false, 'componentWillMount is deprecated and will be removed in the next major version. ' + 'Use componentDidMount instead. As a temporary workaround, ' + 'you can rename to UNSAFE_componentWillMount.' + '\n\nPlease update the following components: %s' + '\n\nLearn more about this warning here:' + '\nhttps://fb.me/react-async-component-lifecycle-hooks', sortedNames);

	      pendingComponentWillMountWarnings = [];
	    }

	    if (pendingComponentWillReceivePropsWarnings.length > 0) {
	      var _uniqueNames = new Set();
	      pendingComponentWillReceivePropsWarnings.forEach(function (fiber) {
	        _uniqueNames.add(getComponentName(fiber.type) || 'Component');
	        didWarnAboutDeprecatedLifecycles.add(fiber.type);
	      });

	      var _sortedNames = setToSortedString(_uniqueNames);

	      lowPriorityWarning$1(false, 'componentWillReceiveProps is deprecated and will be removed in the next major version. ' + 'Use static getDerivedStateFromProps instead.' + '\n\nPlease update the following components: %s' + '\n\nLearn more about this warning here:' + '\nhttps://fb.me/react-async-component-lifecycle-hooks', _sortedNames);

	      pendingComponentWillReceivePropsWarnings = [];
	    }

	    if (pendingComponentWillUpdateWarnings.length > 0) {
	      var _uniqueNames2 = new Set();
	      pendingComponentWillUpdateWarnings.forEach(function (fiber) {
	        _uniqueNames2.add(getComponentName(fiber.type) || 'Component');
	        didWarnAboutDeprecatedLifecycles.add(fiber.type);
	      });

	      var _sortedNames2 = setToSortedString(_uniqueNames2);

	      lowPriorityWarning$1(false, 'componentWillUpdate is deprecated and will be removed in the next major version. ' + 'Use componentDidUpdate instead. As a temporary workaround, ' + 'you can rename to UNSAFE_componentWillUpdate.' + '\n\nPlease update the following components: %s' + '\n\nLearn more about this warning here:' + '\nhttps://fb.me/react-async-component-lifecycle-hooks', _sortedNames2);

	      pendingComponentWillUpdateWarnings = [];
	    }
	  };

	  ReactStrictModeWarnings.recordDeprecationWarnings = function (fiber, instance) {
	    // Dedup strategy: Warn once per component.
	    if (didWarnAboutDeprecatedLifecycles.has(fiber.type)) {
	      return;
	    }

	    // Don't warn about react-lifecycles-compat polyfilled components.
	    if (typeof instance.componentWillMount === 'function' && instance.componentWillMount.__suppressDeprecationWarning !== true) {
	      pendingComponentWillMountWarnings.push(fiber);
	    }
	    if (typeof instance.componentWillReceiveProps === 'function' && instance.componentWillReceiveProps.__suppressDeprecationWarning !== true) {
	      pendingComponentWillReceivePropsWarnings.push(fiber);
	    }
	    if (typeof instance.componentWillUpdate === 'function' && instance.componentWillUpdate.__suppressDeprecationWarning !== true) {
	      pendingComponentWillUpdateWarnings.push(fiber);
	    }
	  };

	  ReactStrictModeWarnings.recordUnsafeLifecycleWarnings = function (fiber, instance) {
	    var strictRoot = findStrictRoot(fiber);
	    if (strictRoot === null) {
	      warningWithoutStack$1(false, 'Expected to find a StrictMode component in a strict mode tree. ' + 'This error is likely caused by a bug in React. Please file an issue.');
	      return;
	    }

	    // Dedup strategy: Warn once per component.
	    // This is difficult to track any other way since component names
	    // are often vague and are likely to collide between 3rd party libraries.
	    // An expand property is probably okay to use here since it's DEV-only,
	    // and will only be set in the event of serious warnings.
	    if (didWarnAboutUnsafeLifecycles.has(fiber.type)) {
	      return;
	    }

	    var warningsForRoot = void 0;
	    if (!pendingUnsafeLifecycleWarnings.has(strictRoot)) {
	      warningsForRoot = {
	        UNSAFE_componentWillMount: [],
	        UNSAFE_componentWillReceiveProps: [],
	        UNSAFE_componentWillUpdate: []
	      };

	      pendingUnsafeLifecycleWarnings.set(strictRoot, warningsForRoot);
	    } else {
	      warningsForRoot = pendingUnsafeLifecycleWarnings.get(strictRoot);
	    }

	    var unsafeLifecycles = [];
	    if (typeof instance.componentWillMount === 'function' && instance.componentWillMount.__suppressDeprecationWarning !== true || typeof instance.UNSAFE_componentWillMount === 'function') {
	      unsafeLifecycles.push('UNSAFE_componentWillMount');
	    }
	    if (typeof instance.componentWillReceiveProps === 'function' && instance.componentWillReceiveProps.__suppressDeprecationWarning !== true || typeof instance.UNSAFE_componentWillReceiveProps === 'function') {
	      unsafeLifecycles.push('UNSAFE_componentWillReceiveProps');
	    }
	    if (typeof instance.componentWillUpdate === 'function' && instance.componentWillUpdate.__suppressDeprecationWarning !== true || typeof instance.UNSAFE_componentWillUpdate === 'function') {
	      unsafeLifecycles.push('UNSAFE_componentWillUpdate');
	    }

	    if (unsafeLifecycles.length > 0) {
	      unsafeLifecycles.forEach(function (lifecycle) {
	        warningsForRoot[lifecycle].push(fiber);
	      });
	    }
	  };

	  ReactStrictModeWarnings.recordLegacyContextWarning = function (fiber, instance) {
	    var strictRoot = findStrictRoot(fiber);
	    if (strictRoot === null) {
	      warningWithoutStack$1(false, 'Expected to find a StrictMode component in a strict mode tree. ' + 'This error is likely caused by a bug in React. Please file an issue.');
	      return;
	    }

	    // Dedup strategy: Warn once per component.
	    if (didWarnAboutLegacyContext.has(fiber.type)) {
	      return;
	    }

	    var warningsForRoot = pendingLegacyContextWarning.get(strictRoot);

	    if (fiber.type.contextTypes != null || fiber.type.childContextTypes != null || instance !== null && typeof instance.getChildContext === 'function') {
	      if (warningsForRoot === undefined) {
	        warningsForRoot = [];
	        pendingLegacyContextWarning.set(strictRoot, warningsForRoot);
	      }
	      warningsForRoot.push(fiber);
	    }
	  };

	  ReactStrictModeWarnings.flushLegacyContextWarning = function () {
	    pendingLegacyContextWarning.forEach(function (fiberArray, strictRoot) {
	      var uniqueNames = new Set();
	      fiberArray.forEach(function (fiber) {
	        uniqueNames.add(getComponentName(fiber.type) || 'Component');
	        didWarnAboutLegacyContext.add(fiber.type);
	      });

	      var sortedNames = setToSortedString(uniqueNames);
	      var strictRootComponentStack = getStackByFiberInDevAndProd(strictRoot);

	      warningWithoutStack$1(false, 'Legacy context API has been detected within a strict-mode tree: %s' + '\n\nPlease update the following components: %s' + '\n\nLearn more about this warning here:' + '\nhttps://fb.me/react-strict-mode-warnings', strictRootComponentStack, sortedNames);
	    });
	  };
	}

	// This lets us hook into Fiber to debug what it's doing.
	// See https://github.com/facebook/react/pull/8033.
	// This is not part of the public API, not even for React DevTools.
	// You may only inject a debugTool if you work on React Fiber itself.
	var ReactFiberInstrumentation = {
	  debugTool: null
	};

	var ReactFiberInstrumentation_1 = ReactFiberInstrumentation;

	// TODO: Offscreen updates should never suspend. However, a promise that
	// suspended inside an offscreen subtree should be able to ping at the priority
	// of the outer render.

	function markPendingPriorityLevel(root, expirationTime) {
	  // If there's a gap between completing a failed root and retrying it,
	  // additional updates may be scheduled. Clear `didError`, in case the update
	  // is sufficient to fix the error.
	  root.didError = false;

	  // Update the latest and earliest pending times
	  var earliestPendingTime = root.earliestPendingTime;
	  if (earliestPendingTime === NoWork) {
	    // No other pending updates.
	    root.earliestPendingTime = root.latestPendingTime = expirationTime;
	  } else {
	    if (earliestPendingTime < expirationTime) {
	      // This is the earliest pending update.
	      root.earliestPendingTime = expirationTime;
	    } else {
	      var latestPendingTime = root.latestPendingTime;
	      if (latestPendingTime > expirationTime) {
	        // This is the latest pending update
	        root.latestPendingTime = expirationTime;
	      }
	    }
	  }
	  findNextExpirationTimeToWorkOn(expirationTime, root);
	}

	function markCommittedPriorityLevels(root, earliestRemainingTime) {
	  root.didError = false;

	  if (earliestRemainingTime === NoWork) {
	    // Fast path. There's no remaining work. Clear everything.
	    root.earliestPendingTime = NoWork;
	    root.latestPendingTime = NoWork;
	    root.earliestSuspendedTime = NoWork;
	    root.latestSuspendedTime = NoWork;
	    root.latestPingedTime = NoWork;
	    findNextExpirationTimeToWorkOn(NoWork, root);
	    return;
	  }

	  if (earliestRemainingTime < root.latestPingedTime) {
	    root.latestPingedTime = NoWork;
	  }

	  // Let's see if the previous latest known pending level was just flushed.
	  var latestPendingTime = root.latestPendingTime;
	  if (latestPendingTime !== NoWork) {
	    if (latestPendingTime > earliestRemainingTime) {
	      // We've flushed all the known pending levels.
	      root.earliestPendingTime = root.latestPendingTime = NoWork;
	    } else {
	      var earliestPendingTime = root.earliestPendingTime;
	      if (earliestPendingTime > earliestRemainingTime) {
	        // We've flushed the earliest known pending level. Set this to the
	        // latest pending time.
	        root.earliestPendingTime = root.latestPendingTime;
	      }
	    }
	  }

	  // Now let's handle the earliest remaining level in the whole tree. We need to
	  // decide whether to treat it as a pending level or as suspended. Check
	  // it falls within the range of known suspended levels.

	  var earliestSuspendedTime = root.earliestSuspendedTime;
	  if (earliestSuspendedTime === NoWork) {
	    // There's no suspended work. Treat the earliest remaining level as a
	    // pending level.
	    markPendingPriorityLevel(root, earliestRemainingTime);
	    findNextExpirationTimeToWorkOn(NoWork, root);
	    return;
	  }

	  var latestSuspendedTime = root.latestSuspendedTime;
	  if (earliestRemainingTime < latestSuspendedTime) {
	    // The earliest remaining level is later than all the suspended work. That
	    // means we've flushed all the suspended work.
	    root.earliestSuspendedTime = NoWork;
	    root.latestSuspendedTime = NoWork;
	    root.latestPingedTime = NoWork;

	    // There's no suspended work. Treat the earliest remaining level as a
	    // pending level.
	    markPendingPriorityLevel(root, earliestRemainingTime);
	    findNextExpirationTimeToWorkOn(NoWork, root);
	    return;
	  }

	  if (earliestRemainingTime > earliestSuspendedTime) {
	    // The earliest remaining time is earlier than all the suspended work.
	    // Treat it as a pending update.
	    markPendingPriorityLevel(root, earliestRemainingTime);
	    findNextExpirationTimeToWorkOn(NoWork, root);
	    return;
	  }

	  // The earliest remaining time falls within the range of known suspended
	  // levels. We should treat this as suspended work.
	  findNextExpirationTimeToWorkOn(NoWork, root);
	}

	function hasLowerPriorityWork(root, erroredExpirationTime) {
	  var latestPendingTime = root.latestPendingTime;
	  var latestSuspendedTime = root.latestSuspendedTime;
	  var latestPingedTime = root.latestPingedTime;
	  return latestPendingTime !== NoWork && latestPendingTime < erroredExpirationTime || latestSuspendedTime !== NoWork && latestSuspendedTime < erroredExpirationTime || latestPingedTime !== NoWork && latestPingedTime < erroredExpirationTime;
	}

	function isPriorityLevelSuspended(root, expirationTime) {
	  var earliestSuspendedTime = root.earliestSuspendedTime;
	  var latestSuspendedTime = root.latestSuspendedTime;
	  return earliestSuspendedTime !== NoWork && expirationTime <= earliestSuspendedTime && expirationTime >= latestSuspendedTime;
	}

	function markSuspendedPriorityLevel(root, suspendedTime) {
	  root.didError = false;
	  clearPing(root, suspendedTime);

	  // First, check the known pending levels and update them if needed.
	  var earliestPendingTime = root.earliestPendingTime;
	  var latestPendingTime = root.latestPendingTime;
	  if (earliestPendingTime === suspendedTime) {
	    if (latestPendingTime === suspendedTime) {
	      // Both known pending levels were suspended. Clear them.
	      root.earliestPendingTime = root.latestPendingTime = NoWork;
	    } else {
	      // The earliest pending level was suspended. Clear by setting it to the
	      // latest pending level.
	      root.earliestPendingTime = latestPendingTime;
	    }
	  } else if (latestPendingTime === suspendedTime) {
	    // The latest pending level was suspended. Clear by setting it to the
	    // latest pending level.
	    root.latestPendingTime = earliestPendingTime;
	  }

	  // Finally, update the known suspended levels.
	  var earliestSuspendedTime = root.earliestSuspendedTime;
	  var latestSuspendedTime = root.latestSuspendedTime;
	  if (earliestSuspendedTime === NoWork) {
	    // No other suspended levels.
	    root.earliestSuspendedTime = root.latestSuspendedTime = suspendedTime;
	  } else {
	    if (earliestSuspendedTime < suspendedTime) {
	      // This is the earliest suspended level.
	      root.earliestSuspendedTime = suspendedTime;
	    } else if (latestSuspendedTime > suspendedTime) {
	      // This is the latest suspended level
	      root.latestSuspendedTime = suspendedTime;
	    }
	  }

	  findNextExpirationTimeToWorkOn(suspendedTime, root);
	}

	function markPingedPriorityLevel(root, pingedTime) {
	  root.didError = false;

	  // TODO: When we add back resuming, we need to ensure the progressed work
	  // is thrown out and not reused during the restarted render. One way to
	  // invalidate the progressed work is to restart at expirationTime + 1.
	  var latestPingedTime = root.latestPingedTime;
	  if (latestPingedTime === NoWork || latestPingedTime > pingedTime) {
	    root.latestPingedTime = pingedTime;
	  }
	  findNextExpirationTimeToWorkOn(pingedTime, root);
	}

	function clearPing(root, completedTime) {
	  var latestPingedTime = root.latestPingedTime;
	  if (latestPingedTime >= completedTime) {
	    root.latestPingedTime = NoWork;
	  }
	}

	function findEarliestOutstandingPriorityLevel(root, renderExpirationTime) {
	  var earliestExpirationTime = renderExpirationTime;

	  var earliestPendingTime = root.earliestPendingTime;
	  var earliestSuspendedTime = root.earliestSuspendedTime;
	  if (earliestPendingTime > earliestExpirationTime) {
	    earliestExpirationTime = earliestPendingTime;
	  }
	  if (earliestSuspendedTime > earliestExpirationTime) {
	    earliestExpirationTime = earliestSuspendedTime;
	  }
	  return earliestExpirationTime;
	}

	function didExpireAtExpirationTime(root, currentTime) {
	  var expirationTime = root.expirationTime;
	  if (expirationTime !== NoWork && currentTime <= expirationTime) {
	    // The root has expired. Flush all work up to the current time.
	    root.nextExpirationTimeToWorkOn = currentTime;
	  }
	}

	function findNextExpirationTimeToWorkOn(completedExpirationTime, root) {
	  var earliestSuspendedTime = root.earliestSuspendedTime;
	  var latestSuspendedTime = root.latestSuspendedTime;
	  var earliestPendingTime = root.earliestPendingTime;
	  var latestPingedTime = root.latestPingedTime;

	  // Work on the earliest pending time. Failing that, work on the latest
	  // pinged time.
	  var nextExpirationTimeToWorkOn = earliestPendingTime !== NoWork ? earliestPendingTime : latestPingedTime;

	  // If there is no pending or pinged work, check if there's suspended work
	  // that's lower priority than what we just completed.
	  if (nextExpirationTimeToWorkOn === NoWork && (completedExpirationTime === NoWork || latestSuspendedTime < completedExpirationTime)) {
	    // The lowest priority suspended work is the work most likely to be
	    // committed next. Let's start rendering it again, so that if it times out,
	    // it's ready to commit.
	    nextExpirationTimeToWorkOn = latestSuspendedTime;
	  }

	  var expirationTime = nextExpirationTimeToWorkOn;
	  if (expirationTime !== NoWork && earliestSuspendedTime > expirationTime) {
	    // Expire using the earliest known expiration time.
	    expirationTime = earliestSuspendedTime;
	  }

	  root.nextExpirationTimeToWorkOn = nextExpirationTimeToWorkOn;
	  root.expirationTime = expirationTime;
	}

	function resolveDefaultProps(Component, baseProps) {
	  if (Component && Component.defaultProps) {
	    // Resolve default props. Taken from ReactElement
	    var props = _assign({}, baseProps);
	    var defaultProps = Component.defaultProps;
	    for (var propName in defaultProps) {
	      if (props[propName] === undefined) {
	        props[propName] = defaultProps[propName];
	      }
	    }
	    return props;
	  }
	  return baseProps;
	}

	function readLazyComponentType(lazyComponent) {
	  var status = lazyComponent._status;
	  var result = lazyComponent._result;
	  switch (status) {
	    case Resolved:
	      {
	        var Component = result;
	        return Component;
	      }
	    case Rejected:
	      {
	        var error = result;
	        throw error;
	      }
	    case Pending:
	      {
	        var thenable = result;
	        throw thenable;
	      }
	    default:
	      {
	        lazyComponent._status = Pending;
	        var ctor = lazyComponent._ctor;
	        var _thenable = ctor();
	        _thenable.then(function (moduleObject) {
	          if (lazyComponent._status === Pending) {
	            var defaultExport = moduleObject.default;
	            {
	              if (defaultExport === undefined) {
	                warning$1(false, 'lazy: Expected the result of a dynamic import() call. ' + 'Instead received: %s\n\nYour code should look like: \n  ' + "const MyComponent = lazy(() => import('./MyComponent'))", moduleObject);
	              }
	            }
	            lazyComponent._status = Resolved;
	            lazyComponent._result = defaultExport;
	          }
	        }, function (error) {
	          if (lazyComponent._status === Pending) {
	            lazyComponent._status = Rejected;
	            lazyComponent._result = error;
	          }
	        });
	        // Handle synchronous thenables.
	        switch (lazyComponent._status) {
	          case Resolved:
	            return lazyComponent._result;
	          case Rejected:
	            throw lazyComponent._result;
	        }
	        lazyComponent._result = _thenable;
	        throw _thenable;
	      }
	  }
	}

	var fakeInternalInstance = {};
	var isArray$1 = Array.isArray;

	// React.Component uses a shared frozen object by default.
	// We'll use it to determine whether we need to initialize legacy refs.
	var emptyRefsObject = new React.Component().refs;

	var didWarnAboutStateAssignmentForComponent = void 0;
	var didWarnAboutUninitializedState = void 0;
	var didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate = void 0;
	var didWarnAboutLegacyLifecyclesAndDerivedState = void 0;
	var didWarnAboutUndefinedDerivedState = void 0;
	var warnOnUndefinedDerivedState = void 0;
	var warnOnInvalidCallback$1 = void 0;
	var didWarnAboutDirectlyAssigningPropsToState = void 0;
	var didWarnAboutContextTypeAndContextTypes = void 0;
	var didWarnAboutInvalidateContextType = void 0;

	{
	  didWarnAboutStateAssignmentForComponent = new Set();
	  didWarnAboutUninitializedState = new Set();
	  didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate = new Set();
	  didWarnAboutLegacyLifecyclesAndDerivedState = new Set();
	  didWarnAboutDirectlyAssigningPropsToState = new Set();
	  didWarnAboutUndefinedDerivedState = new Set();
	  didWarnAboutContextTypeAndContextTypes = new Set();
	  didWarnAboutInvalidateContextType = new Set();

	  var didWarnOnInvalidCallback = new Set();

	  warnOnInvalidCallback$1 = function (callback, callerName) {
	    if (callback === null || typeof callback === 'function') {
	      return;
	    }
	    var key = callerName + '_' + callback;
	    if (!didWarnOnInvalidCallback.has(key)) {
	      didWarnOnInvalidCallback.add(key);
	      warningWithoutStack$1(false, '%s(...): Expected the last optional `callback` argument to be a ' + 'function. Instead received: %s.', callerName, callback);
	    }
	  };

	  warnOnUndefinedDerivedState = function (type, partialState) {
	    if (partialState === undefined) {
	      var componentName = getComponentName(type) || 'Component';
	      if (!didWarnAboutUndefinedDerivedState.has(componentName)) {
	        didWarnAboutUndefinedDerivedState.add(componentName);
	        warningWithoutStack$1(false, '%s.getDerivedStateFromProps(): A valid state object (or null) must be returned. ' + 'You have returned undefined.', componentName);
	      }
	    }
	  };

	  // This is so gross but it's at least non-critical and can be removed if
	  // it causes problems. This is meant to give a nicer error message for
	  // ReactDOM15.unstable_renderSubtreeIntoContainer(reactDOM16Component,
	  // ...)) which otherwise throws a "_processChildContext is not a function"
	  // exception.
	  Object.defineProperty(fakeInternalInstance, '_processChildContext', {
	    enumerable: false,
	    value: function () {
	      invariant(false, '_processChildContext is not available in React 16+. This likely means you have multiple copies of React and are attempting to nest a React 15 tree inside a React 16 tree using unstable_renderSubtreeIntoContainer, which isn\'t supported. Try to make sure you have only one copy of React (and ideally, switch to ReactDOM.createPortal).');
	    }
	  });
	  Object.freeze(fakeInternalInstance);
	}

	function applyDerivedStateFromProps(workInProgress, ctor, getDerivedStateFromProps, nextProps) {
	  var prevState = workInProgress.memoizedState;

	  {
	    if (debugRenderPhaseSideEffects || debugRenderPhaseSideEffectsForStrictMode && workInProgress.mode & StrictMode) {
	      // Invoke the function an extra time to help detect side-effects.
	      getDerivedStateFromProps(nextProps, prevState);
	    }
	  }

	  var partialState = getDerivedStateFromProps(nextProps, prevState);

	  {
	    warnOnUndefinedDerivedState(ctor, partialState);
	  }
	  // Merge the partial state and the previous state.
	  var memoizedState = partialState === null || partialState === undefined ? prevState : _assign({}, prevState, partialState);
	  workInProgress.memoizedState = memoizedState;

	  // Once the update queue is empty, persist the derived state onto the
	  // base state.
	  var updateQueue = workInProgress.updateQueue;
	  if (updateQueue !== null && workInProgress.expirationTime === NoWork) {
	    updateQueue.baseState = memoizedState;
	  }
	}

	var classComponentUpdater = {
	  isMounted: isMounted,
	  enqueueSetState: function (inst, payload, callback) {
	    var fiber = get(inst);
	    var currentTime = requestCurrentTime();
	    var expirationTime = computeExpirationForFiber(currentTime, fiber);

	    var update = createUpdate(expirationTime);
	    update.payload = payload;
	    if (callback !== undefined && callback !== null) {
	      {
	        warnOnInvalidCallback$1(callback, 'setState');
	      }
	      update.callback = callback;
	    }

	    flushPassiveEffects();
	    enqueueUpdate(fiber, update);
	    scheduleWork(fiber, expirationTime);
	  },
	  enqueueReplaceState: function (inst, payload, callback) {
	    var fiber = get(inst);
	    var currentTime = requestCurrentTime();
	    var expirationTime = computeExpirationForFiber(currentTime, fiber);

	    var update = createUpdate(expirationTime);
	    update.tag = ReplaceState;
	    update.payload = payload;

	    if (callback !== undefined && callback !== null) {
	      {
	        warnOnInvalidCallback$1(callback, 'replaceState');
	      }
	      update.callback = callback;
	    }

	    flushPassiveEffects();
	    enqueueUpdate(fiber, update);
	    scheduleWork(fiber, expirationTime);
	  },
	  enqueueForceUpdate: function (inst, callback) {
	    var fiber = get(inst);
	    var currentTime = requestCurrentTime();
	    var expirationTime = computeExpirationForFiber(currentTime, fiber);

	    var update = createUpdate(expirationTime);
	    update.tag = ForceUpdate;

	    if (callback !== undefined && callback !== null) {
	      {
	        warnOnInvalidCallback$1(callback, 'forceUpdate');
	      }
	      update.callback = callback;
	    }

	    flushPassiveEffects();
	    enqueueUpdate(fiber, update);
	    scheduleWork(fiber, expirationTime);
	  }
	};

	function checkShouldComponentUpdate(workInProgress, ctor, oldProps, newProps, oldState, newState, nextContext) {
	  var instance = workInProgress.stateNode;
	  if (typeof instance.shouldComponentUpdate === 'function') {
	    startPhaseTimer(workInProgress, 'shouldComponentUpdate');
	    var shouldUpdate = instance.shouldComponentUpdate(newProps, newState, nextContext);
	    stopPhaseTimer();

	    {
	      !(shouldUpdate !== undefined) ? warningWithoutStack$1(false, '%s.shouldComponentUpdate(): Returned undefined instead of a ' + 'boolean value. Make sure to return true or false.', getComponentName(ctor) || 'Component') : void 0;
	    }

	    return shouldUpdate;
	  }

	  if (ctor.prototype && ctor.prototype.isPureReactComponent) {
	    return !shallowEqual(oldProps, newProps) || !shallowEqual(oldState, newState);
	  }

	  return true;
	}

	function checkClassInstance(workInProgress, ctor, newProps) {
	  var instance = workInProgress.stateNode;
	  {
	    var name = getComponentName(ctor) || 'Component';
	    var renderPresent = instance.render;

	    if (!renderPresent) {
	      if (ctor.prototype && typeof ctor.prototype.render === 'function') {
	        warningWithoutStack$1(false, '%s(...): No `render` method found on the returned component ' + 'instance: did you accidentally return an object from the constructor?', name);
	      } else {
	        warningWithoutStack$1(false, '%s(...): No `render` method found on the returned component ' + 'instance: you may have forgotten to define `render`.', name);
	      }
	    }

	    var noGetInitialStateOnES6 = !instance.getInitialState || instance.getInitialState.isReactClassApproved || instance.state;
	    !noGetInitialStateOnES6 ? warningWithoutStack$1(false, 'getInitialState was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Did you mean to define a state property instead?', name) : void 0;
	    var noGetDefaultPropsOnES6 = !instance.getDefaultProps || instance.getDefaultProps.isReactClassApproved;
	    !noGetDefaultPropsOnES6 ? warningWithoutStack$1(false, 'getDefaultProps was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Use a static property to define defaultProps instead.', name) : void 0;
	    var noInstancePropTypes = !instance.propTypes;
	    !noInstancePropTypes ? warningWithoutStack$1(false, 'propTypes was defined as an instance property on %s. Use a static ' + 'property to define propTypes instead.', name) : void 0;
	    var noInstanceContextType = !instance.contextType;
	    !noInstanceContextType ? warningWithoutStack$1(false, 'contextType was defined as an instance property on %s. Use a static ' + 'property to define contextType instead.', name) : void 0;
	    var noInstanceContextTypes = !instance.contextTypes;
	    !noInstanceContextTypes ? warningWithoutStack$1(false, 'contextTypes was defined as an instance property on %s. Use a static ' + 'property to define contextTypes instead.', name) : void 0;

	    if (ctor.contextType && ctor.contextTypes && !didWarnAboutContextTypeAndContextTypes.has(ctor)) {
	      didWarnAboutContextTypeAndContextTypes.add(ctor);
	      warningWithoutStack$1(false, '%s declares both contextTypes and contextType static properties. ' + 'The legacy contextTypes property will be ignored.', name);
	    }

	    var noComponentShouldUpdate = typeof instance.componentShouldUpdate !== 'function';
	    !noComponentShouldUpdate ? warningWithoutStack$1(false, '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', name) : void 0;
	    if (ctor.prototype && ctor.prototype.isPureReactComponent && typeof instance.shouldComponentUpdate !== 'undefined') {
	      warningWithoutStack$1(false, '%s has a method called shouldComponentUpdate(). ' + 'shouldComponentUpdate should not be used when extending React.PureComponent. ' + 'Please extend React.Component if shouldComponentUpdate is used.', getComponentName(ctor) || 'A pure component');
	    }
	    var noComponentDidUnmount = typeof instance.componentDidUnmount !== 'function';
	    !noComponentDidUnmount ? warningWithoutStack$1(false, '%s has a method called ' + 'componentDidUnmount(). But there is no such lifecycle method. ' + 'Did you mean componentWillUnmount()?', name) : void 0;
	    var noComponentDidReceiveProps = typeof instance.componentDidReceiveProps !== 'function';
	    !noComponentDidReceiveProps ? warningWithoutStack$1(false, '%s has a method called ' + 'componentDidReceiveProps(). But there is no such lifecycle method. ' + 'If you meant to update the state in response to changing props, ' + 'use componentWillReceiveProps(). If you meant to fetch data or ' + 'run side-effects or mutations after React has updated the UI, use componentDidUpdate().', name) : void 0;
	    var noComponentWillRecieveProps = typeof instance.componentWillRecieveProps !== 'function';
	    !noComponentWillRecieveProps ? warningWithoutStack$1(false, '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', name) : void 0;
	    var noUnsafeComponentWillRecieveProps = typeof instance.UNSAFE_componentWillRecieveProps !== 'function';
	    !noUnsafeComponentWillRecieveProps ? warningWithoutStack$1(false, '%s has a method called ' + 'UNSAFE_componentWillRecieveProps(). Did you mean UNSAFE_componentWillReceiveProps()?', name) : void 0;
	    var hasMutatedProps = instance.props !== newProps;
	    !(instance.props === undefined || !hasMutatedProps) ? warningWithoutStack$1(false, '%s(...): When calling super() in `%s`, make sure to pass ' + "up the same props that your component's constructor was passed.", name, name) : void 0;
	    var noInstanceDefaultProps = !instance.defaultProps;
	    !noInstanceDefaultProps ? warningWithoutStack$1(false, 'Setting defaultProps as an instance property on %s is not supported and will be ignored.' + ' Instead, define defaultProps as a static property on %s.', name, name) : void 0;

	    if (typeof instance.getSnapshotBeforeUpdate === 'function' && typeof instance.componentDidUpdate !== 'function' && !didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.has(ctor)) {
	      didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.add(ctor);
	      warningWithoutStack$1(false, '%s: getSnapshotBeforeUpdate() should be used with componentDidUpdate(). ' + 'This component defines getSnapshotBeforeUpdate() only.', getComponentName(ctor));
	    }

	    var noInstanceGetDerivedStateFromProps = typeof instance.getDerivedStateFromProps !== 'function';
	    !noInstanceGetDerivedStateFromProps ? warningWithoutStack$1(false, '%s: getDerivedStateFromProps() is defined as an instance method ' + 'and will be ignored. Instead, declare it as a static method.', name) : void 0;
	    var noInstanceGetDerivedStateFromCatch = typeof instance.getDerivedStateFromError !== 'function';
	    !noInstanceGetDerivedStateFromCatch ? warningWithoutStack$1(false, '%s: getDerivedStateFromError() is defined as an instance method ' + 'and will be ignored. Instead, declare it as a static method.', name) : void 0;
	    var noStaticGetSnapshotBeforeUpdate = typeof ctor.getSnapshotBeforeUpdate !== 'function';
	    !noStaticGetSnapshotBeforeUpdate ? warningWithoutStack$1(false, '%s: getSnapshotBeforeUpdate() is defined as a static method ' + 'and will be ignored. Instead, declare it as an instance method.', name) : void 0;
	    var _state = instance.state;
	    if (_state && (typeof _state !== 'object' || isArray$1(_state))) {
	      warningWithoutStack$1(false, '%s.state: must be set to an object or null', name);
	    }
	    if (typeof instance.getChildContext === 'function') {
	      !(typeof ctor.childContextTypes === 'object') ? warningWithoutStack$1(false, '%s.getChildContext(): childContextTypes must be defined in order to ' + 'use getChildContext().', name) : void 0;
	    }
	  }
	}

	function adoptClassInstance(workInProgress, instance) {
	  instance.updater = classComponentUpdater;
	  workInProgress.stateNode = instance;
	  // The instance needs access to the fiber so that it can schedule updates
	  set(instance, workInProgress);
	  {
	    instance._reactInternalInstance = fakeInternalInstance;
	  }
	}

	function constructClassInstance(workInProgress, ctor, props, renderExpirationTime) {
	  var isLegacyContextConsumer = false;
	  var unmaskedContext = emptyContextObject;
	  var context = null;
	  var contextType = ctor.contextType;

	  {
	    if ('contextType' in ctor) {
	      var isValid =
	      // Allow null for conditional declaration
	      contextType === null || contextType !== undefined && contextType.$$typeof === REACT_CONTEXT_TYPE && contextType._context === undefined; // Not a <Context.Consumer>

	      if (!isValid && !didWarnAboutInvalidateContextType.has(ctor)) {
	        didWarnAboutInvalidateContextType.add(ctor);

	        var addendum = '';
	        if (contextType === undefined) {
	          addendum = ' However, it is set to undefined. ' + 'This can be caused by a typo or by mixing up named and default imports. ' + 'This can also happen due to a circular dependency, so ' + 'try moving the createContext() call to a separate file.';
	        } else if (typeof contextType !== 'object') {
	          addendum = ' However, it is set to a ' + typeof contextType + '.';
	        } else if (contextType.$$typeof === REACT_PROVIDER_TYPE) {
	          addendum = ' Did you accidentally pass the Context.Provider instead?';
	        } else if (contextType._context !== undefined) {
	          // <Context.Consumer>
	          addendum = ' Did you accidentally pass the Context.Consumer instead?';
	        } else {
	          addendum = ' However, it is set to an object with keys {' + Object.keys(contextType).join(', ') + '}.';
	        }
	        warningWithoutStack$1(false, '%s defines an invalid contextType. ' + 'contextType should point to the Context object returned by React.createContext().%s', getComponentName(ctor) || 'Component', addendum);
	      }
	    }
	  }

	  if (typeof contextType === 'object' && contextType !== null) {
	    context = readContext(contextType);
	  } else {
	    unmaskedContext = getUnmaskedContext(workInProgress, ctor, true);
	    var contextTypes = ctor.contextTypes;
	    isLegacyContextConsumer = contextTypes !== null && contextTypes !== undefined;
	    context = isLegacyContextConsumer ? getMaskedContext(workInProgress, unmaskedContext) : emptyContextObject;
	  }

	  // Instantiate twice to help detect side-effects.
	  {
	    if (debugRenderPhaseSideEffects || debugRenderPhaseSideEffectsForStrictMode && workInProgress.mode & StrictMode) {
	      new ctor(props, context); // eslint-disable-line no-new
	    }
	  }

	  var instance = new ctor(props, context);
	  var state = workInProgress.memoizedState = instance.state !== null && instance.state !== undefined ? instance.state : null;
	  adoptClassInstance(workInProgress, instance);

	  {
	    if (typeof ctor.getDerivedStateFromProps === 'function' && state === null) {
	      var componentName = getComponentName(ctor) || 'Component';
	      if (!didWarnAboutUninitializedState.has(componentName)) {
	        didWarnAboutUninitializedState.add(componentName);
	        warningWithoutStack$1(false, '`%s` uses `getDerivedStateFromProps` but its initial state is ' + '%s. This is not recommended. Instead, define the initial state by ' + 'assigning an object to `this.state` in the constructor of `%s`. ' + 'This ensures that `getDerivedStateFromProps` arguments have a consistent shape.', componentName, instance.state === null ? 'null' : 'undefined', componentName);
	      }
	    }

	    // If new component APIs are defined, "unsafe" lifecycles won't be called.
	    // Warn about these lifecycles if they are present.
	    // Don't warn about react-lifecycles-compat polyfilled methods though.
	    if (typeof ctor.getDerivedStateFromProps === 'function' || typeof instance.getSnapshotBeforeUpdate === 'function') {
	      var foundWillMountName = null;
	      var foundWillReceivePropsName = null;
	      var foundWillUpdateName = null;
	      if (typeof instance.componentWillMount === 'function' && instance.componentWillMount.__suppressDeprecationWarning !== true) {
	        foundWillMountName = 'componentWillMount';
	      } else if (typeof instance.UNSAFE_componentWillMount === 'function') {
	        foundWillMountName = 'UNSAFE_componentWillMount';
	      }
	      if (typeof instance.componentWillReceiveProps === 'function' && instance.componentWillReceiveProps.__suppressDeprecationWarning !== true) {
	        foundWillReceivePropsName = 'componentWillReceiveProps';
	      } else if (typeof instance.UNSAFE_componentWillReceiveProps === 'function') {
	        foundWillReceivePropsName = 'UNSAFE_componentWillReceiveProps';
	      }
	      if (typeof instance.componentWillUpdate === 'function' && instance.componentWillUpdate.__suppressDeprecationWarning !== true) {
	        foundWillUpdateName = 'componentWillUpdate';
	      } else if (typeof instance.UNSAFE_componentWillUpdate === 'function') {
	        foundWillUpdateName = 'UNSAFE_componentWillUpdate';
	      }
	      if (foundWillMountName !== null || foundWillReceivePropsName !== null || foundWillUpdateName !== null) {
	        var _componentName = getComponentName(ctor) || 'Component';
	        var newApiName = typeof ctor.getDerivedStateFromProps === 'function' ? 'getDerivedStateFromProps()' : 'getSnapshotBeforeUpdate()';
	        if (!didWarnAboutLegacyLifecyclesAndDerivedState.has(_componentName)) {
	          didWarnAboutLegacyLifecyclesAndDerivedState.add(_componentName);
	          warningWithoutStack$1(false, 'Unsafe legacy lifecycles will not be called for components using new component APIs.\n\n' + '%s uses %s but also contains the following legacy lifecycles:%s%s%s\n\n' + 'The above lifecycles should be removed. Learn more about this warning here:\n' + 'https://fb.me/react-async-component-lifecycle-hooks', _componentName, newApiName, foundWillMountName !== null ? '\n  ' + foundWillMountName : '', foundWillReceivePropsName !== null ? '\n  ' + foundWillReceivePropsName : '', foundWillUpdateName !== null ? '\n  ' + foundWillUpdateName : '');
	        }
	      }
	    }
	  }

	  // Cache unmasked context so we can avoid recreating masked context unless necessary.
	  // ReactFiberContext usually updates this cache but can't for newly-created instances.
	  if (isLegacyContextConsumer) {
	    cacheContext(workInProgress, unmaskedContext, context);
	  }

	  return instance;
	}

	function callComponentWillMount(workInProgress, instance) {
	  startPhaseTimer(workInProgress, 'componentWillMount');
	  var oldState = instance.state;

	  if (typeof instance.componentWillMount === 'function') {
	    instance.componentWillMount();
	  }
	  if (typeof instance.UNSAFE_componentWillMount === 'function') {
	    instance.UNSAFE_componentWillMount();
	  }

	  stopPhaseTimer();

	  if (oldState !== instance.state) {
	    {
	      warningWithoutStack$1(false, '%s.componentWillMount(): Assigning directly to this.state is ' + "deprecated (except inside a component's " + 'constructor). Use setState instead.', getComponentName(workInProgress.type) || 'Component');
	    }
	    classComponentUpdater.enqueueReplaceState(instance, instance.state, null);
	  }
	}

	function callComponentWillReceiveProps(workInProgress, instance, newProps, nextContext) {
	  var oldState = instance.state;
	  startPhaseTimer(workInProgress, 'componentWillReceiveProps');
	  if (typeof instance.componentWillReceiveProps === 'function') {
	    instance.componentWillReceiveProps(newProps, nextContext);
	  }
	  if (typeof instance.UNSAFE_componentWillReceiveProps === 'function') {
	    instance.UNSAFE_componentWillReceiveProps(newProps, nextContext);
	  }
	  stopPhaseTimer();

	  if (instance.state !== oldState) {
	    {
	      var componentName = getComponentName(workInProgress.type) || 'Component';
	      if (!didWarnAboutStateAssignmentForComponent.has(componentName)) {
	        didWarnAboutStateAssignmentForComponent.add(componentName);
	        warningWithoutStack$1(false, '%s.componentWillReceiveProps(): Assigning directly to ' + "this.state is deprecated (except inside a component's " + 'constructor). Use setState instead.', componentName);
	      }
	    }
	    classComponentUpdater.enqueueReplaceState(instance, instance.state, null);
	  }
	}

	// Invokes the mount life-cycles on a previously never rendered instance.
	function mountClassInstance(workInProgress, ctor, newProps, renderExpirationTime) {
	  {
	    checkClassInstance(workInProgress, ctor, newProps);
	  }

	  var instance = workInProgress.stateNode;
	  instance.props = newProps;
	  instance.state = workInProgress.memoizedState;
	  instance.refs = emptyRefsObject;

	  var contextType = ctor.contextType;
	  if (typeof contextType === 'object' && contextType !== null) {
	    instance.context = readContext(contextType);
	  } else {
	    var unmaskedContext = getUnmaskedContext(workInProgress, ctor, true);
	    instance.context = getMaskedContext(workInProgress, unmaskedContext);
	  }

	  {
	    if (instance.state === newProps) {
	      var componentName = getComponentName(ctor) || 'Component';
	      if (!didWarnAboutDirectlyAssigningPropsToState.has(componentName)) {
	        didWarnAboutDirectlyAssigningPropsToState.add(componentName);
	        warningWithoutStack$1(false, '%s: It is not recommended to assign props directly to state ' + "because updates to props won't be reflected in state. " + 'In most cases, it is better to use props directly.', componentName);
	      }
	    }

	    if (workInProgress.mode & StrictMode) {
	      ReactStrictModeWarnings.recordUnsafeLifecycleWarnings(workInProgress, instance);

	      ReactStrictModeWarnings.recordLegacyContextWarning(workInProgress, instance);
	    }

	    if (warnAboutDeprecatedLifecycles) {
	      ReactStrictModeWarnings.recordDeprecationWarnings(workInProgress, instance);
	    }
	  }

	  var updateQueue = workInProgress.updateQueue;
	  if (updateQueue !== null) {
	    processUpdateQueue(workInProgress, updateQueue, newProps, instance, renderExpirationTime);
	    instance.state = workInProgress.memoizedState;
	  }

	  var getDerivedStateFromProps = ctor.getDerivedStateFromProps;
	  if (typeof getDerivedStateFromProps === 'function') {
	    applyDerivedStateFromProps(workInProgress, ctor, getDerivedStateFromProps, newProps);
	    instance.state = workInProgress.memoizedState;
	  }

	  // In order to support react-lifecycles-compat polyfilled components,
	  // Unsafe lifecycles should not be invoked for components using the new APIs.
	  if (typeof ctor.getDerivedStateFromProps !== 'function' && typeof instance.getSnapshotBeforeUpdate !== 'function' && (typeof instance.UNSAFE_componentWillMount === 'function' || typeof instance.componentWillMount === 'function')) {
	    callComponentWillMount(workInProgress, instance);
	    // If we had additional state updates during this life-cycle, let's
	    // process them now.
	    updateQueue = workInProgress.updateQueue;
	    if (updateQueue !== null) {
	      processUpdateQueue(workInProgress, updateQueue, newProps, instance, renderExpirationTime);
	      instance.state = workInProgress.memoizedState;
	    }
	  }

	  if (typeof instance.componentDidMount === 'function') {
	    workInProgress.effectTag |= Update;
	  }
	}

	function resumeMountClassInstance(workInProgress, ctor, newProps, renderExpirationTime) {
	  var instance = workInProgress.stateNode;

	  var oldProps = workInProgress.memoizedProps;
	  instance.props = oldProps;

	  var oldContext = instance.context;
	  var contextType = ctor.contextType;
	  var nextContext = void 0;
	  if (typeof contextType === 'object' && contextType !== null) {
	    nextContext = readContext(contextType);
	  } else {
	    var nextLegacyUnmaskedContext = getUnmaskedContext(workInProgress, ctor, true);
	    nextContext = getMaskedContext(workInProgress, nextLegacyUnmaskedContext);
	  }

	  var getDerivedStateFromProps = ctor.getDerivedStateFromProps;
	  var hasNewLifecycles = typeof getDerivedStateFromProps === 'function' || typeof instance.getSnapshotBeforeUpdate === 'function';

	  // Note: During these life-cycles, instance.props/instance.state are what
	  // ever the previously attempted to render - not the "current". However,
	  // during componentDidUpdate we pass the "current" props.

	  // In order to support react-lifecycles-compat polyfilled components,
	  // Unsafe lifecycles should not be invoked for components using the new APIs.
	  if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillReceiveProps === 'function' || typeof instance.componentWillReceiveProps === 'function')) {
	    if (oldProps !== newProps || oldContext !== nextContext) {
	      callComponentWillReceiveProps(workInProgress, instance, newProps, nextContext);
	    }
	  }

	  resetHasForceUpdateBeforeProcessing();

	  var oldState = workInProgress.memoizedState;
	  var newState = instance.state = oldState;
	  var updateQueue = workInProgress.updateQueue;
	  if (updateQueue !== null) {
	    processUpdateQueue(workInProgress, updateQueue, newProps, instance, renderExpirationTime);
	    newState = workInProgress.memoizedState;
	  }
	  if (oldProps === newProps && oldState === newState && !hasContextChanged() && !checkHasForceUpdateAfterProcessing()) {
	    // If an update was already in progress, we should schedule an Update
	    // effect even though we're bailing out, so that cWU/cDU are called.
	    if (typeof instance.componentDidMount === 'function') {
	      workInProgress.effectTag |= Update;
	    }
	    return false;
	  }

	  if (typeof getDerivedStateFromProps === 'function') {
	    applyDerivedStateFromProps(workInProgress, ctor, getDerivedStateFromProps, newProps);
	    newState = workInProgress.memoizedState;
	  }

	  var shouldUpdate = checkHasForceUpdateAfterProcessing() || checkShouldComponentUpdate(workInProgress, ctor, oldProps, newProps, oldState, newState, nextContext);

	  if (shouldUpdate) {
	    // In order to support react-lifecycles-compat polyfilled components,
	    // Unsafe lifecycles should not be invoked for components using the new APIs.
	    if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillMount === 'function' || typeof instance.componentWillMount === 'function')) {
	      startPhaseTimer(workInProgress, 'componentWillMount');
	      if (typeof instance.componentWillMount === 'function') {
	        instance.componentWillMount();
	      }
	      if (typeof instance.UNSAFE_componentWillMount === 'function') {
	        instance.UNSAFE_componentWillMount();
	      }
	      stopPhaseTimer();
	    }
	    if (typeof instance.componentDidMount === 'function') {
	      workInProgress.effectTag |= Update;
	    }
	  } else {
	    // If an update was already in progress, we should schedule an Update
	    // effect even though we're bailing out, so that cWU/cDU are called.
	    if (typeof instance.componentDidMount === 'function') {
	      workInProgress.effectTag |= Update;
	    }

	    // If shouldComponentUpdate returned false, we should still update the
	    // memoized state to indicate that this work can be reused.
	    workInProgress.memoizedProps = newProps;
	    workInProgress.memoizedState = newState;
	  }

	  // Update the existing instance's state, props, and context pointers even
	  // if shouldComponentUpdate returns false.
	  instance.props = newProps;
	  instance.state = newState;
	  instance.context = nextContext;

	  return shouldUpdate;
	}

	// Invokes the update life-cycles and returns false if it shouldn't rerender.
	function updateClassInstance(current, workInProgress, ctor, newProps, renderExpirationTime) {
	  var instance = workInProgress.stateNode;

	  var oldProps = workInProgress.memoizedProps;
	  instance.props = workInProgress.type === workInProgress.elementType ? oldProps : resolveDefaultProps(workInProgress.type, oldProps);

	  var oldContext = instance.context;
	  var contextType = ctor.contextType;
	  var nextContext = void 0;
	  if (typeof contextType === 'object' && contextType !== null) {
	    nextContext = readContext(contextType);
	  } else {
	    var nextUnmaskedContext = getUnmaskedContext(workInProgress, ctor, true);
	    nextContext = getMaskedContext(workInProgress, nextUnmaskedContext);
	  }

	  var getDerivedStateFromProps = ctor.getDerivedStateFromProps;
	  var hasNewLifecycles = typeof getDerivedStateFromProps === 'function' || typeof instance.getSnapshotBeforeUpdate === 'function';

	  // Note: During these life-cycles, instance.props/instance.state are what
	  // ever the previously attempted to render - not the "current". However,
	  // during componentDidUpdate we pass the "current" props.

	  // In order to support react-lifecycles-compat polyfilled components,
	  // Unsafe lifecycles should not be invoked for components using the new APIs.
	  if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillReceiveProps === 'function' || typeof instance.componentWillReceiveProps === 'function')) {
	    if (oldProps !== newProps || oldContext !== nextContext) {
	      callComponentWillReceiveProps(workInProgress, instance, newProps, nextContext);
	    }
	  }

	  resetHasForceUpdateBeforeProcessing();

	  var oldState = workInProgress.memoizedState;
	  var newState = instance.state = oldState;
	  var updateQueue = workInProgress.updateQueue;
	  if (updateQueue !== null) {
	    processUpdateQueue(workInProgress, updateQueue, newProps, instance, renderExpirationTime);
	    newState = workInProgress.memoizedState;
	  }

	  if (oldProps === newProps && oldState === newState && !hasContextChanged() && !checkHasForceUpdateAfterProcessing()) {
	    // If an update was already in progress, we should schedule an Update
	    // effect even though we're bailing out, so that cWU/cDU are called.
	    if (typeof instance.componentDidUpdate === 'function') {
	      if (oldProps !== current.memoizedProps || oldState !== current.memoizedState) {
	        workInProgress.effectTag |= Update;
	      }
	    }
	    if (typeof instance.getSnapshotBeforeUpdate === 'function') {
	      if (oldProps !== current.memoizedProps || oldState !== current.memoizedState) {
	        workInProgress.effectTag |= Snapshot;
	      }
	    }
	    return false;
	  }

	  if (typeof getDerivedStateFromProps === 'function') {
	    applyDerivedStateFromProps(workInProgress, ctor, getDerivedStateFromProps, newProps);
	    newState = workInProgress.memoizedState;
	  }

	  var shouldUpdate = checkHasForceUpdateAfterProcessing() || checkShouldComponentUpdate(workInProgress, ctor, oldProps, newProps, oldState, newState, nextContext);

	  if (shouldUpdate) {
	    // In order to support react-lifecycles-compat polyfilled components,
	    // Unsafe lifecycles should not be invoked for components using the new APIs.
	    if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillUpdate === 'function' || typeof instance.componentWillUpdate === 'function')) {
	      startPhaseTimer(workInProgress, 'componentWillUpdate');
	      if (typeof instance.componentWillUpdate === 'function') {
	        instance.componentWillUpdate(newProps, newState, nextContext);
	      }
	      if (typeof instance.UNSAFE_componentWillUpdate === 'function') {
	        instance.UNSAFE_componentWillUpdate(newProps, newState, nextContext);
	      }
	      stopPhaseTimer();
	    }
	    if (typeof instance.componentDidUpdate === 'function') {
	      workInProgress.effectTag |= Update;
	    }
	    if (typeof instance.getSnapshotBeforeUpdate === 'function') {
	      workInProgress.effectTag |= Snapshot;
	    }
	  } else {
	    // If an update was already in progress, we should schedule an Update
	    // effect even though we're bailing out, so that cWU/cDU are called.
	    if (typeof instance.componentDidUpdate === 'function') {
	      if (oldProps !== current.memoizedProps || oldState !== current.memoizedState) {
	        workInProgress.effectTag |= Update;
	      }
	    }
	    if (typeof instance.getSnapshotBeforeUpdate === 'function') {
	      if (oldProps !== current.memoizedProps || oldState !== current.memoizedState) {
	        workInProgress.effectTag |= Snapshot;
	      }
	    }

	    // If shouldComponentUpdate returned false, we should still update the
	    // memoized props/state to indicate that this work can be reused.
	    workInProgress.memoizedProps = newProps;
	    workInProgress.memoizedState = newState;
	  }

	  // Update the existing instance's state, props, and context pointers even
	  // if shouldComponentUpdate returns false.
	  instance.props = newProps;
	  instance.state = newState;
	  instance.context = nextContext;

	  return shouldUpdate;
	}

	var didWarnAboutMaps = void 0;
	var didWarnAboutGenerators = void 0;
	var didWarnAboutStringRefInStrictMode = void 0;
	var ownerHasKeyUseWarning = void 0;
	var ownerHasFunctionTypeWarning = void 0;
	var warnForMissingKey = function (child) {};

	{
	  didWarnAboutMaps = false;
	  didWarnAboutGenerators = false;
	  didWarnAboutStringRefInStrictMode = {};

	  /**
	   * Warn if there's no key explicitly set on dynamic arrays of children or
	   * object keys are not valid. This allows us to keep track of children between
	   * updates.
	   */
	  ownerHasKeyUseWarning = {};
	  ownerHasFunctionTypeWarning = {};

	  warnForMissingKey = function (child) {
	    if (child === null || typeof child !== 'object') {
	      return;
	    }
	    if (!child._store || child._store.validated || child.key != null) {
	      return;
	    }
	    !(typeof child._store === 'object') ? invariant(false, 'React Component in warnForMissingKey should have a _store. This error is likely caused by a bug in React. Please file an issue.') : void 0;
	    child._store.validated = true;

	    var currentComponentErrorInfo = 'Each child in a list should have a unique ' + '"key" prop. See https://fb.me/react-warning-keys for ' + 'more information.' + getCurrentFiberStackInDev();
	    if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {
	      return;
	    }
	    ownerHasKeyUseWarning[currentComponentErrorInfo] = true;

	    warning$1(false, 'Each child in a list should have a unique ' + '"key" prop. See https://fb.me/react-warning-keys for ' + 'more information.');
	  };
	}

	var isArray = Array.isArray;

	function coerceRef(returnFiber, current$$1, element) {
	  var mixedRef = element.ref;
	  if (mixedRef !== null && typeof mixedRef !== 'function' && typeof mixedRef !== 'object') {
	    {
	      if (returnFiber.mode & StrictMode) {
	        var componentName = getComponentName(returnFiber.type) || 'Component';
	        if (!didWarnAboutStringRefInStrictMode[componentName]) {
	          warningWithoutStack$1(false, 'A string ref, "%s", has been found within a strict mode tree. ' + 'String refs are a source of potential bugs and should be avoided. ' + 'We recommend using createRef() instead.' + '\n%s' + '\n\nLearn more about using refs safely here:' + '\nhttps://fb.me/react-strict-mode-string-ref', mixedRef, getStackByFiberInDevAndProd(returnFiber));
	          didWarnAboutStringRefInStrictMode[componentName] = true;
	        }
	      }
	    }

	    if (element._owner) {
	      var owner = element._owner;
	      var inst = void 0;
	      if (owner) {
	        var ownerFiber = owner;
	        !(ownerFiber.tag === ClassComponent) ? invariant(false, 'Function components cannot have refs. Did you mean to use React.forwardRef()?') : void 0;
	        inst = ownerFiber.stateNode;
	      }
	      !inst ? invariant(false, 'Missing owner for string ref %s. This error is likely caused by a bug in React. Please file an issue.', mixedRef) : void 0;
	      var stringRef = '' + mixedRef;
	      // Check if previous string ref matches new string ref
	      if (current$$1 !== null && current$$1.ref !== null && typeof current$$1.ref === 'function' && current$$1.ref._stringRef === stringRef) {
	        return current$$1.ref;
	      }
	      var ref = function (value) {
	        var refs = inst.refs;
	        if (refs === emptyRefsObject) {
	          // This is a lazy pooled frozen object, so we need to initialize.
	          refs = inst.refs = {};
	        }
	        if (value === null) {
	          delete refs[stringRef];
	        } else {
	          refs[stringRef] = value;
	        }
	      };
	      ref._stringRef = stringRef;
	      return ref;
	    } else {
	      !(typeof mixedRef === 'string') ? invariant(false, 'Expected ref to be a function, a string, an object returned by React.createRef(), or null.') : void 0;
	      !element._owner ? invariant(false, 'Element ref was specified as a string (%s) but no owner was set. This could happen for one of the following reasons:\n1. You may be adding a ref to a function component\n2. You may be adding a ref to a component that was not created inside a component\'s render method\n3. You have multiple copies of React loaded\nSee https://fb.me/react-refs-must-have-owner for more information.', mixedRef) : void 0;
	    }
	  }
	  return mixedRef;
	}

	function throwOnInvalidObjectType(returnFiber, newChild) {
	  if (returnFiber.type !== 'textarea') {
	    var addendum = '';
	    {
	      addendum = ' If you meant to render a collection of children, use an array ' + 'instead.' + getCurrentFiberStackInDev();
	    }
	    invariant(false, 'Objects are not valid as a React child (found: %s).%s', Object.prototype.toString.call(newChild) === '[object Object]' ? 'object with keys {' + Object.keys(newChild).join(', ') + '}' : newChild, addendum);
	  }
	}

	function warnOnFunctionType() {
	  var currentComponentErrorInfo = 'Functions are not valid as a React child. This may happen if ' + 'you return a Component instead of <Component /> from render. ' + 'Or maybe you meant to call this function rather than return it.' + getCurrentFiberStackInDev();

	  if (ownerHasFunctionTypeWarning[currentComponentErrorInfo]) {
	    return;
	  }
	  ownerHasFunctionTypeWarning[currentComponentErrorInfo] = true;

	  warning$1(false, 'Functions are not valid as a React child. This may happen if ' + 'you return a Component instead of <Component /> from render. ' + 'Or maybe you meant to call this function rather than return it.');
	}

	// This wrapper function exists because I expect to clone the code in each path
	// to be able to optimize each path individually by branching early. This needs
	// a compiler or we can do it manually. Helpers that don't need this branching
	// live outside of this function.
	function ChildReconciler(shouldTrackSideEffects) {
	  function deleteChild(returnFiber, childToDelete) {
	    if (!shouldTrackSideEffects) {
	      // Noop.
	      return;
	    }
	    // Deletions are added in reversed order so we add it to the front.
	    // At this point, the return fiber's effect list is empty except for
	    // deletions, so we can just append the deletion to the list. The remaining
	    // effects aren't added until the complete phase. Once we implement
	    // resuming, this may not be true.
	    var last = returnFiber.lastEffect;
	    if (last !== null) {
	      last.nextEffect = childToDelete;
	      returnFiber.lastEffect = childToDelete;
	    } else {
	      returnFiber.firstEffect = returnFiber.lastEffect = childToDelete;
	    }
	    childToDelete.nextEffect = null;
	    childToDelete.effectTag = Deletion;
	  }

	  function deleteRemainingChildren(returnFiber, currentFirstChild) {
	    if (!shouldTrackSideEffects) {
	      // Noop.
	      return null;
	    }

	    // TODO: For the shouldClone case, this could be micro-optimized a bit by
	    // assuming that after the first child we've already added everything.
	    var childToDelete = currentFirstChild;
	    while (childToDelete !== null) {
	      deleteChild(returnFiber, childToDelete);
	      childToDelete = childToDelete.sibling;
	    }
	    return null;
	  }

	  function mapRemainingChildren(returnFiber, currentFirstChild) {
	    // Add the remaining children to a temporary map so that we can find them by
	    // keys quickly. Implicit (null) keys get added to this set with their index
	    var existingChildren = new Map();

	    var existingChild = currentFirstChild;
	    while (existingChild !== null) {
	      if (existingChild.key !== null) {
	        existingChildren.set(existingChild.key, existingChild);
	      } else {
	        existingChildren.set(existingChild.index, existingChild);
	      }
	      existingChild = existingChild.sibling;
	    }
	    return existingChildren;
	  }

	  function useFiber(fiber, pendingProps, expirationTime) {
	    // We currently set sibling to null and index to 0 here because it is easy
	    // to forget to do before returning it. E.g. for the single child case.
	    var clone = createWorkInProgress(fiber, pendingProps, expirationTime);
	    clone.index = 0;
	    clone.sibling = null;
	    return clone;
	  }

	  function placeChild(newFiber, lastPlacedIndex, newIndex) {
	    newFiber.index = newIndex;
	    if (!shouldTrackSideEffects) {
	      // Noop.
	      return lastPlacedIndex;
	    }
	    var current$$1 = newFiber.alternate;
	    if (current$$1 !== null) {
	      var oldIndex = current$$1.index;
	      if (oldIndex < lastPlacedIndex) {
	        // This is a move.
	        newFiber.effectTag = Placement;
	        return lastPlacedIndex;
	      } else {
	        // This item can stay in place.
	        return oldIndex;
	      }
	    } else {
	      // This is an insertion.
	      newFiber.effectTag = Placement;
	      return lastPlacedIndex;
	    }
	  }

	  function placeSingleChild(newFiber) {
	    // This is simpler for the single child case. We only need to do a
	    // placement for inserting new children.
	    if (shouldTrackSideEffects && newFiber.alternate === null) {
	      newFiber.effectTag = Placement;
	    }
	    return newFiber;
	  }

	  function updateTextNode(returnFiber, current$$1, textContent, expirationTime) {
	    if (current$$1 === null || current$$1.tag !== HostText) {
	      // Insert
	      var created = createFiberFromText(textContent, returnFiber.mode, expirationTime);
	      created.return = returnFiber;
	      return created;
	    } else {
	      // Update
	      var existing = useFiber(current$$1, textContent, expirationTime);
	      existing.return = returnFiber;
	      return existing;
	    }
	  }

	  function updateElement(returnFiber, current$$1, element, expirationTime) {
	    if (current$$1 !== null && current$$1.elementType === element.type) {
	      // Move based on index
	      var existing = useFiber(current$$1, element.props, expirationTime);
	      existing.ref = coerceRef(returnFiber, current$$1, element);
	      existing.return = returnFiber;
	      {
	        existing._debugSource = element._source;
	        existing._debugOwner = element._owner;
	      }
	      return existing;
	    } else {
	      // Insert
	      var created = createFiberFromElement(element, returnFiber.mode, expirationTime);
	      created.ref = coerceRef(returnFiber, current$$1, element);
	      created.return = returnFiber;
	      return created;
	    }
	  }

	  function updatePortal(returnFiber, current$$1, portal, expirationTime) {
	    if (current$$1 === null || current$$1.tag !== HostPortal || current$$1.stateNode.containerInfo !== portal.containerInfo || current$$1.stateNode.implementation !== portal.implementation) {
	      // Insert
	      var created = createFiberFromPortal(portal, returnFiber.mode, expirationTime);
	      created.return = returnFiber;
	      return created;
	    } else {
	      // Update
	      var existing = useFiber(current$$1, portal.children || [], expirationTime);
	      existing.return = returnFiber;
	      return existing;
	    }
	  }

	  function updateFragment(returnFiber, current$$1, fragment, expirationTime, key) {
	    if (current$$1 === null || current$$1.tag !== Fragment) {
	      // Insert
	      var created = createFiberFromFragment(fragment, returnFiber.mode, expirationTime, key);
	      created.return = returnFiber;
	      return created;
	    } else {
	      // Update
	      var existing = useFiber(current$$1, fragment, expirationTime);
	      existing.return = returnFiber;
	      return existing;
	    }
	  }

	  function createChild(returnFiber, newChild, expirationTime) {
	    if (typeof newChild === 'string' || typeof newChild === 'number') {
	      // Text nodes don't have keys. If the previous node is implicitly keyed
	      // we can continue to replace it without aborting even if it is not a text
	      // node.
	      var created = createFiberFromText('' + newChild, returnFiber.mode, expirationTime);
	      created.return = returnFiber;
	      return created;
	    }

	    if (typeof newChild === 'object' && newChild !== null) {
	      switch (newChild.$$typeof) {
	        case REACT_ELEMENT_TYPE:
	          {
	            var _created = createFiberFromElement(newChild, returnFiber.mode, expirationTime);
	            _created.ref = coerceRef(returnFiber, null, newChild);
	            _created.return = returnFiber;
	            return _created;
	          }
	        case REACT_PORTAL_TYPE:
	          {
	            var _created2 = createFiberFromPortal(newChild, returnFiber.mode, expirationTime);
	            _created2.return = returnFiber;
	            return _created2;
	          }
	      }

	      if (isArray(newChild) || getIteratorFn(newChild)) {
	        var _created3 = createFiberFromFragment(newChild, returnFiber.mode, expirationTime, null);
	        _created3.return = returnFiber;
	        return _created3;
	      }

	      throwOnInvalidObjectType(returnFiber, newChild);
	    }

	    {
	      if (typeof newChild === 'function') {
	        warnOnFunctionType();
	      }
	    }

	    return null;
	  }

	  function updateSlot(returnFiber, oldFiber, newChild, expirationTime) {
	    // Update the fiber if the keys match, otherwise return null.

	    var key = oldFiber !== null ? oldFiber.key : null;

	    if (typeof newChild === 'string' || typeof newChild === 'number') {
	      // Text nodes don't have keys. If the previous node is implicitly keyed
	      // we can continue to replace it without aborting even if it is not a text
	      // node.
	      if (key !== null) {
	        return null;
	      }
	      return updateTextNode(returnFiber, oldFiber, '' + newChild, expirationTime);
	    }

	    if (typeof newChild === 'object' && newChild !== null) {
	      switch (newChild.$$typeof) {
	        case REACT_ELEMENT_TYPE:
	          {
	            if (newChild.key === key) {
	              if (newChild.type === REACT_FRAGMENT_TYPE) {
	                return updateFragment(returnFiber, oldFiber, newChild.props.children, expirationTime, key);
	              }
	              return updateElement(returnFiber, oldFiber, newChild, expirationTime);
	            } else {
	              return null;
	            }
	          }
	        case REACT_PORTAL_TYPE:
	          {
	            if (newChild.key === key) {
	              return updatePortal(returnFiber, oldFiber, newChild, expirationTime);
	            } else {
	              return null;
	            }
	          }
	      }

	      if (isArray(newChild) || getIteratorFn(newChild)) {
	        if (key !== null) {
	          return null;
	        }

	        return updateFragment(returnFiber, oldFiber, newChild, expirationTime, null);
	      }

	      throwOnInvalidObjectType(returnFiber, newChild);
	    }

	    {
	      if (typeof newChild === 'function') {
	        warnOnFunctionType();
	      }
	    }

	    return null;
	  }

	  function updateFromMap(existingChildren, returnFiber, newIdx, newChild, expirationTime) {
	    if (typeof newChild === 'string' || typeof newChild === 'number') {
	      // Text nodes don't have keys, so we neither have to check the old nor
	      // new node for the key. If both are text nodes, they match.
	      var matchedFiber = existingChildren.get(newIdx) || null;
	      return updateTextNode(returnFiber, matchedFiber, '' + newChild, expirationTime);
	    }

	    if (typeof newChild === 'object' && newChild !== null) {
	      switch (newChild.$$typeof) {
	        case REACT_ELEMENT_TYPE:
	          {
	            var _matchedFiber = existingChildren.get(newChild.key === null ? newIdx : newChild.key) || null;
	            if (newChild.type === REACT_FRAGMENT_TYPE) {
	              return updateFragment(returnFiber, _matchedFiber, newChild.props.children, expirationTime, newChild.key);
	            }
	            return updateElement(returnFiber, _matchedFiber, newChild, expirationTime);
	          }
	        case REACT_PORTAL_TYPE:
	          {
	            var _matchedFiber2 = existingChildren.get(newChild.key === null ? newIdx : newChild.key) || null;
	            return updatePortal(returnFiber, _matchedFiber2, newChild, expirationTime);
	          }
	      }

	      if (isArray(newChild) || getIteratorFn(newChild)) {
	        var _matchedFiber3 = existingChildren.get(newIdx) || null;
	        return updateFragment(returnFiber, _matchedFiber3, newChild, expirationTime, null);
	      }

	      throwOnInvalidObjectType(returnFiber, newChild);
	    }

	    {
	      if (typeof newChild === 'function') {
	        warnOnFunctionType();
	      }
	    }

	    return null;
	  }

	  /**
	   * Warns if there is a duplicate or missing key
	   */
	  function warnOnInvalidKey(child, knownKeys) {
	    {
	      if (typeof child !== 'object' || child === null) {
	        return knownKeys;
	      }
	      switch (child.$$typeof) {
	        case REACT_ELEMENT_TYPE:
	        case REACT_PORTAL_TYPE:
	          warnForMissingKey(child);
	          var key = child.key;
	          if (typeof key !== 'string') {
	            break;
	          }
	          if (knownKeys === null) {
	            knownKeys = new Set();
	            knownKeys.add(key);
	            break;
	          }
	          if (!knownKeys.has(key)) {
	            knownKeys.add(key);
	            break;
	          }
	          warning$1(false, 'Encountered two children with the same key, `%s`. ' + 'Keys should be unique so that components maintain their identity ' + 'across updates. Non-unique keys may cause children to be ' + 'duplicated and/or omitted — the behavior is unsupported and ' + 'could change in a future version.', key);
	          break;
	        default:
	          break;
	      }
	    }
	    return knownKeys;
	  }

	  function reconcileChildrenArray(returnFiber, currentFirstChild, newChildren, expirationTime) {
	    // This algorithm can't optimize by searching from both ends since we
	    // don't have backpointers on fibers. I'm trying to see how far we can get
	    // with that model. If it ends up not being worth the tradeoffs, we can
	    // add it later.

	    // Even with a two ended optimization, we'd want to optimize for the case
	    // where there are few changes and brute force the comparison instead of
	    // going for the Map. It'd like to explore hitting that path first in
	    // forward-only mode and only go for the Map once we notice that we need
	    // lots of look ahead. This doesn't handle reversal as well as two ended
	    // search but that's unusual. Besides, for the two ended optimization to
	    // work on Iterables, we'd need to copy the whole set.

	    // In this first iteration, we'll just live with hitting the bad case
	    // (adding everything to a Map) in for every insert/move.

	    // If you change this code, also update reconcileChildrenIterator() which
	    // uses the same algorithm.

	    {
	      // First, validate keys.
	      var knownKeys = null;
	      for (var i = 0; i < newChildren.length; i++) {
	        var child = newChildren[i];
	        knownKeys = warnOnInvalidKey(child, knownKeys);
	      }
	    }

	    var resultingFirstChild = null;
	    var previousNewFiber = null;

	    var oldFiber = currentFirstChild;
	    var lastPlacedIndex = 0;
	    var newIdx = 0;
	    var nextOldFiber = null;
	    for (; oldFiber !== null && newIdx < newChildren.length; newIdx++) {
	      if (oldFiber.index > newIdx) {
	        nextOldFiber = oldFiber;
	        oldFiber = null;
	      } else {
	        nextOldFiber = oldFiber.sibling;
	      }
	      var newFiber = updateSlot(returnFiber, oldFiber, newChildren[newIdx], expirationTime);
	      if (newFiber === null) {
	        // TODO: This breaks on empty slots like null children. That's
	        // unfortunate because it triggers the slow path all the time. We need
	        // a better way to communicate whether this was a miss or null,
	        // boolean, undefined, etc.
	        if (oldFiber === null) {
	          oldFiber = nextOldFiber;
	        }
	        break;
	      }
	      if (shouldTrackSideEffects) {
	        if (oldFiber && newFiber.alternate === null) {
	          // We matched the slot, but we didn't reuse the existing fiber, so we
	          // need to delete the existing child.
	          deleteChild(returnFiber, oldFiber);
	        }
	      }
	      lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);
	      if (previousNewFiber === null) {
	        // TODO: Move out of the loop. This only happens for the first run.
	        resultingFirstChild = newFiber;
	      } else {
	        // TODO: Defer siblings if we're not at the right index for this slot.
	        // I.e. if we had null values before, then we want to defer this
	        // for each null value. However, we also don't want to call updateSlot
	        // with the previous one.
	        previousNewFiber.sibling = newFiber;
	      }
	      previousNewFiber = newFiber;
	      oldFiber = nextOldFiber;
	    }

	    if (newIdx === newChildren.length) {
	      // We've reached the end of the new children. We can delete the rest.
	      deleteRemainingChildren(returnFiber, oldFiber);
	      return resultingFirstChild;
	    }

	    if (oldFiber === null) {
	      // If we don't have any more existing children we can choose a fast path
	      // since the rest will all be insertions.
	      for (; newIdx < newChildren.length; newIdx++) {
	        var _newFiber = createChild(returnFiber, newChildren[newIdx], expirationTime);
	        if (!_newFiber) {
	          continue;
	        }
	        lastPlacedIndex = placeChild(_newFiber, lastPlacedIndex, newIdx);
	        if (previousNewFiber === null) {
	          // TODO: Move out of the loop. This only happens for the first run.
	          resultingFirstChild = _newFiber;
	        } else {
	          previousNewFiber.sibling = _newFiber;
	        }
	        previousNewFiber = _newFiber;
	      }
	      return resultingFirstChild;
	    }

	    // Add all children to a key map for quick lookups.
	    var existingChildren = mapRemainingChildren(returnFiber, oldFiber);

	    // Keep scanning and use the map to restore deleted items as moves.
	    for (; newIdx < newChildren.length; newIdx++) {
	      var _newFiber2 = updateFromMap(existingChildren, returnFiber, newIdx, newChildren[newIdx], expirationTime);
	      if (_newFiber2) {
	        if (shouldTrackSideEffects) {
	          if (_newFiber2.alternate !== null) {
	            // The new fiber is a work in progress, but if there exists a
	            // current, that means that we reused the fiber. We need to delete
	            // it from the child list so that we don't add it to the deletion
	            // list.
	            existingChildren.delete(_newFiber2.key === null ? newIdx : _newFiber2.key);
	          }
	        }
	        lastPlacedIndex = placeChild(_newFiber2, lastPlacedIndex, newIdx);
	        if (previousNewFiber === null) {
	          resultingFirstChild = _newFiber2;
	        } else {
	          previousNewFiber.sibling = _newFiber2;
	        }
	        previousNewFiber = _newFiber2;
	      }
	    }

	    if (shouldTrackSideEffects) {
	      // Any existing children that weren't consumed above were deleted. We need
	      // to add them to the deletion list.
	      existingChildren.forEach(function (child) {
	        return deleteChild(returnFiber, child);
	      });
	    }

	    return resultingFirstChild;
	  }

	  function reconcileChildrenIterator(returnFiber, currentFirstChild, newChildrenIterable, expirationTime) {
	    // This is the same implementation as reconcileChildrenArray(),
	    // but using the iterator instead.

	    var iteratorFn = getIteratorFn(newChildrenIterable);
	    !(typeof iteratorFn === 'function') ? invariant(false, 'An object is not an iterable. This error is likely caused by a bug in React. Please file an issue.') : void 0;

	    {
	      // We don't support rendering Generators because it's a mutation.
	      // See https://github.com/facebook/react/issues/12995
	      if (typeof Symbol === 'function' &&
	      // $FlowFixMe Flow doesn't know about toStringTag
	      newChildrenIterable[Symbol.toStringTag] === 'Generator') {
	        !didWarnAboutGenerators ? warning$1(false, 'Using Generators as children is unsupported and will likely yield ' + 'unexpected results because enumerating a generator mutates it. ' + 'You may convert it to an array with `Array.from()` or the ' + '`[...spread]` operator before rendering. Keep in mind ' + 'you might need to polyfill these features for older browsers.') : void 0;
	        didWarnAboutGenerators = true;
	      }

	      // Warn about using Maps as children
	      if (newChildrenIterable.entries === iteratorFn) {
	        !didWarnAboutMaps ? warning$1(false, 'Using Maps as children is unsupported and will likely yield ' + 'unexpected results. Convert it to a sequence/iterable of keyed ' + 'ReactElements instead.') : void 0;
	        didWarnAboutMaps = true;
	      }

	      // First, validate keys.
	      // We'll get a different iterator later for the main pass.
	      var _newChildren = iteratorFn.call(newChildrenIterable);
	      if (_newChildren) {
	        var knownKeys = null;
	        var _step = _newChildren.next();
	        for (; !_step.done; _step = _newChildren.next()) {
	          var child = _step.value;
	          knownKeys = warnOnInvalidKey(child, knownKeys);
	        }
	      }
	    }

	    var newChildren = iteratorFn.call(newChildrenIterable);
	    !(newChildren != null) ? invariant(false, 'An iterable object provided no iterator.') : void 0;

	    var resultingFirstChild = null;
	    var previousNewFiber = null;

	    var oldFiber = currentFirstChild;
	    var lastPlacedIndex = 0;
	    var newIdx = 0;
	    var nextOldFiber = null;

	    var step = newChildren.next();
	    for (; oldFiber !== null && !step.done; newIdx++, step = newChildren.next()) {
	      if (oldFiber.index > newIdx) {
	        nextOldFiber = oldFiber;
	        oldFiber = null;
	      } else {
	        nextOldFiber = oldFiber.sibling;
	      }
	      var newFiber = updateSlot(returnFiber, oldFiber, step.value, expirationTime);
	      if (newFiber === null) {
	        // TODO: This breaks on empty slots like null children. That's
	        // unfortunate because it triggers the slow path all the time. We need
	        // a better way to communicate whether this was a miss or null,
	        // boolean, undefined, etc.
	        if (!oldFiber) {
	          oldFiber = nextOldFiber;
	        }
	        break;
	      }
	      if (shouldTrackSideEffects) {
	        if (oldFiber && newFiber.alternate === null) {
	          // We matched the slot, but we didn't reuse the existing fiber, so we
	          // need to delete the existing child.
	          deleteChild(returnFiber, oldFiber);
	        }
	      }
	      lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);
	      if (previousNewFiber === null) {
	        // TODO: Move out of the loop. This only happens for the first run.
	        resultingFirstChild = newFiber;
	      } else {
	        // TODO: Defer siblings if we're not at the right index for this slot.
	        // I.e. if we had null values before, then we want to defer this
	        // for each null value. However, we also don't want to call updateSlot
	        // with the previous one.
	        previousNewFiber.sibling = newFiber;
	      }
	      previousNewFiber = newFiber;
	      oldFiber = nextOldFiber;
	    }

	    if (step.done) {
	      // We've reached the end of the new children. We can delete the rest.
	      deleteRemainingChildren(returnFiber, oldFiber);
	      return resultingFirstChild;
	    }

	    if (oldFiber === null) {
	      // If we don't have any more existing children we can choose a fast path
	      // since the rest will all be insertions.
	      for (; !step.done; newIdx++, step = newChildren.next()) {
	        var _newFiber3 = createChild(returnFiber, step.value, expirationTime);
	        if (_newFiber3 === null) {
	          continue;
	        }
	        lastPlacedIndex = placeChild(_newFiber3, lastPlacedIndex, newIdx);
	        if (previousNewFiber === null) {
	          // TODO: Move out of the loop. This only happens for the first run.
	          resultingFirstChild = _newFiber3;
	        } else {
	          previousNewFiber.sibling = _newFiber3;
	        }
	        previousNewFiber = _newFiber3;
	      }
	      return resultingFirstChild;
	    }

	    // Add all children to a key map for quick lookups.
	    var existingChildren = mapRemainingChildren(returnFiber, oldFiber);

	    // Keep scanning and use the map to restore deleted items as moves.
	    for (; !step.done; newIdx++, step = newChildren.next()) {
	      var _newFiber4 = updateFromMap(existingChildren, returnFiber, newIdx, step.value, expirationTime);
	      if (_newFiber4 !== null) {
	        if (shouldTrackSideEffects) {
	          if (_newFiber4.alternate !== null) {
	            // The new fiber is a work in progress, but if there exists a
	            // current, that means that we reused the fiber. We need to delete
	            // it from the child list so that we don't add it to the deletion
	            // list.
	            existingChildren.delete(_newFiber4.key === null ? newIdx : _newFiber4.key);
	          }
	        }
	        lastPlacedIndex = placeChild(_newFiber4, lastPlacedIndex, newIdx);
	        if (previousNewFiber === null) {
	          resultingFirstChild = _newFiber4;
	        } else {
	          previousNewFiber.sibling = _newFiber4;
	        }
	        previousNewFiber = _newFiber4;
	      }
	    }

	    if (shouldTrackSideEffects) {
	      // Any existing children that weren't consumed above were deleted. We need
	      // to add them to the deletion list.
	      existingChildren.forEach(function (child) {
	        return deleteChild(returnFiber, child);
	      });
	    }

	    return resultingFirstChild;
	  }

	  function reconcileSingleTextNode(returnFiber, currentFirstChild, textContent, expirationTime) {
	    // There's no need to check for keys on text nodes since we don't have a
	    // way to define them.
	    if (currentFirstChild !== null && currentFirstChild.tag === HostText) {
	      // We already have an existing node so let's just update it and delete
	      // the rest.
	      deleteRemainingChildren(returnFiber, currentFirstChild.sibling);
	      var existing = useFiber(currentFirstChild, textContent, expirationTime);
	      existing.return = returnFiber;
	      return existing;
	    }
	    // The existing first child is not a text node so we need to create one
	    // and delete the existing ones.
	    deleteRemainingChildren(returnFiber, currentFirstChild);
	    var created = createFiberFromText(textContent, returnFiber.mode, expirationTime);
	    created.return = returnFiber;
	    return created;
	  }

	  function reconcileSingleElement(returnFiber, currentFirstChild, element, expirationTime) {
	    var key = element.key;
	    var child = currentFirstChild;
	    while (child !== null) {
	      // TODO: If key === null and child.key === null, then this only applies to
	      // the first item in the list.
	      if (child.key === key) {
	        if (child.tag === Fragment ? element.type === REACT_FRAGMENT_TYPE : child.elementType === element.type) {
	          deleteRemainingChildren(returnFiber, child.sibling);
	          var existing = useFiber(child, element.type === REACT_FRAGMENT_TYPE ? element.props.children : element.props, expirationTime);
	          existing.ref = coerceRef(returnFiber, child, element);
	          existing.return = returnFiber;
	          {
	            existing._debugSource = element._source;
	            existing._debugOwner = element._owner;
	          }
	          return existing;
	        } else {
	          deleteRemainingChildren(returnFiber, child);
	          break;
	        }
	      } else {
	        deleteChild(returnFiber, child);
	      }
	      child = child.sibling;
	    }

	    if (element.type === REACT_FRAGMENT_TYPE) {
	      var created = createFiberFromFragment(element.props.children, returnFiber.mode, expirationTime, element.key);
	      created.return = returnFiber;
	      return created;
	    } else {
	      var _created4 = createFiberFromElement(element, returnFiber.mode, expirationTime);
	      _created4.ref = coerceRef(returnFiber, currentFirstChild, element);
	      _created4.return = returnFiber;
	      return _created4;
	    }
	  }

	  function reconcileSinglePortal(returnFiber, currentFirstChild, portal, expirationTime) {
	    var key = portal.key;
	    var child = currentFirstChild;
	    while (child !== null) {
	      // TODO: If key === null and child.key === null, then this only applies to
	      // the first item in the list.
	      if (child.key === key) {
	        if (child.tag === HostPortal && child.stateNode.containerInfo === portal.containerInfo && child.stateNode.implementation === portal.implementation) {
	          deleteRemainingChildren(returnFiber, child.sibling);
	          var existing = useFiber(child, portal.children || [], expirationTime);
	          existing.return = returnFiber;
	          return existing;
	        } else {
	          deleteRemainingChildren(returnFiber, child);
	          break;
	        }
	      } else {
	        deleteChild(returnFiber, child);
	      }
	      child = child.sibling;
	    }

	    var created = createFiberFromPortal(portal, returnFiber.mode, expirationTime);
	    created.return = returnFiber;
	    return created;
	  }

	  // This API will tag the children with the side-effect of the reconciliation
	  // itself. They will be added to the side-effect list as we pass through the
	  // children and the parent.
	  function reconcileChildFibers(returnFiber, currentFirstChild, newChild, expirationTime) {
	    // This function is not recursive.
	    // If the top level item is an array, we treat it as a set of children,
	    // not as a fragment. Nested arrays on the other hand will be treated as
	    // fragment nodes. Recursion happens at the normal flow.

	    // Handle top level unkeyed fragments as if they were arrays.
	    // This leads to an ambiguity between <>{[...]}</> and <>...</>.
	    // We treat the ambiguous cases above the same.
	    var isUnkeyedTopLevelFragment = typeof newChild === 'object' && newChild !== null && newChild.type === REACT_FRAGMENT_TYPE && newChild.key === null;
	    if (isUnkeyedTopLevelFragment) {
	      newChild = newChild.props.children;
	    }

	    // Handle object types
	    var isObject = typeof newChild === 'object' && newChild !== null;

	    if (isObject) {
	      switch (newChild.$$typeof) {
	        case REACT_ELEMENT_TYPE:
	          return placeSingleChild(reconcileSingleElement(returnFiber, currentFirstChild, newChild, expirationTime));
	        case REACT_PORTAL_TYPE:
	          return placeSingleChild(reconcileSinglePortal(returnFiber, currentFirstChild, newChild, expirationTime));
	      }
	    }

	    if (typeof newChild === 'string' || typeof newChild === 'number') {
	      return placeSingleChild(reconcileSingleTextNode(returnFiber, currentFirstChild, '' + newChild, expirationTime));
	    }

	    if (isArray(newChild)) {
	      return reconcileChildrenArray(returnFiber, currentFirstChild, newChild, expirationTime);
	    }

	    if (getIteratorFn(newChild)) {
	      return reconcileChildrenIterator(returnFiber, currentFirstChild, newChild, expirationTime);
	    }

	    if (isObject) {
	      throwOnInvalidObjectType(returnFiber, newChild);
	    }

	    {
	      if (typeof newChild === 'function') {
	        warnOnFunctionType();
	      }
	    }
	    if (typeof newChild === 'undefined' && !isUnkeyedTopLevelFragment) {
	      // If the new child is undefined, and the return fiber is a composite
	      // component, throw an error. If Fiber return types are disabled,
	      // we already threw above.
	      switch (returnFiber.tag) {
	        case ClassComponent:
	          {
	            {
	              var instance = returnFiber.stateNode;
	              if (instance.render._isMockFunction) {
	                // We allow auto-mocks to proceed as if they're returning null.
	                break;
	              }
	            }
	          }
	        // Intentionally fall through to the next case, which handles both
	        // functions and classes
	        // eslint-disable-next-lined no-fallthrough
	        case FunctionComponent:
	          {
	            var Component = returnFiber.type;
	            invariant(false, '%s(...): Nothing was returned from render. This usually means a return statement is missing. Or, to render nothing, return null.', Component.displayName || Component.name || 'Component');
	          }
	      }
	    }

	    // Remaining cases are all treated as empty.
	    return deleteRemainingChildren(returnFiber, currentFirstChild);
	  }

	  return reconcileChildFibers;
	}

	var reconcileChildFibers = ChildReconciler(true);
	var mountChildFibers = ChildReconciler(false);

	function cloneChildFibers(current$$1, workInProgress) {
	  !(current$$1 === null || workInProgress.child === current$$1.child) ? invariant(false, 'Resuming work not yet implemented.') : void 0;

	  if (workInProgress.child === null) {
	    return;
	  }

	  var currentChild = workInProgress.child;
	  var newChild = createWorkInProgress(currentChild, currentChild.pendingProps, currentChild.expirationTime);
	  workInProgress.child = newChild;

	  newChild.return = workInProgress;
	  while (currentChild.sibling !== null) {
	    currentChild = currentChild.sibling;
	    newChild = newChild.sibling = createWorkInProgress(currentChild, currentChild.pendingProps, currentChild.expirationTime);
	    newChild.return = workInProgress;
	  }
	  newChild.sibling = null;
	}

	var NO_CONTEXT = {};

	var contextStackCursor$1 = createCursor(NO_CONTEXT);
	var contextFiberStackCursor = createCursor(NO_CONTEXT);
	var rootInstanceStackCursor = createCursor(NO_CONTEXT);

	function requiredContext(c) {
	  !(c !== NO_CONTEXT) ? invariant(false, 'Expected host context to exist. This error is likely caused by a bug in React. Please file an issue.') : void 0;
	  return c;
	}

	function getRootHostContainer() {
	  var rootInstance = requiredContext(rootInstanceStackCursor.current);
	  return rootInstance;
	}

	function pushHostContainer(fiber, nextRootInstance) {
	  // Push current root instance onto the stack;
	  // This allows us to reset root when portals are popped.
	  push(rootInstanceStackCursor, nextRootInstance, fiber);
	  // Track the context and the Fiber that provided it.
	  // This enables us to pop only Fibers that provide unique contexts.
	  push(contextFiberStackCursor, fiber, fiber);

	  // Finally, we need to push the host context to the stack.
	  // However, we can't just call getRootHostContext() and push it because
	  // we'd have a different number of entries on the stack depending on
	  // whether getRootHostContext() throws somewhere in renderer code or not.
	  // So we push an empty value first. This lets us safely unwind on errors.
	  push(contextStackCursor$1, NO_CONTEXT, fiber);
	  var nextRootContext = getRootHostContext(nextRootInstance);
	  // Now that we know this function doesn't throw, replace it.
	  pop(contextStackCursor$1, fiber);
	  push(contextStackCursor$1, nextRootContext, fiber);
	}

	function popHostContainer(fiber) {
	  pop(contextStackCursor$1, fiber);
	  pop(contextFiberStackCursor, fiber);
	  pop(rootInstanceStackCursor, fiber);
	}

	function getHostContext() {
	  var context = requiredContext(contextStackCursor$1.current);
	  return context;
	}

	function pushHostContext(fiber) {
	  var rootInstance = requiredContext(rootInstanceStackCursor.current);
	  var context = requiredContext(contextStackCursor$1.current);
	  var nextContext = getChildHostContext(context, fiber.type, rootInstance);

	  // Don't push this Fiber's context unless it's unique.
	  if (context === nextContext) {
	    return;
	  }

	  // Track the context and the Fiber that provided it.
	  // This enables us to pop only Fibers that provide unique contexts.
	  push(contextFiberStackCursor, fiber, fiber);
	  push(contextStackCursor$1, nextContext, fiber);
	}

	function popHostContext(fiber) {
	  // Do not pop unless this Fiber provided the current context.
	  // pushHostContext() only pushes Fibers that provide unique contexts.
	  if (contextFiberStackCursor.current !== fiber) {
	    return;
	  }

	  pop(contextStackCursor$1, fiber);
	  pop(contextFiberStackCursor, fiber);
	}

	var NoEffect$1 = /*             */0;
	var UnmountSnapshot = /*      */2;
	var UnmountMutation = /*      */4;
	var MountMutation = /*        */8;
	var UnmountLayout = /*        */16;
	var MountLayout = /*          */32;
	var MountPassive = /*         */64;
	var UnmountPassive = /*       */128;

	var ReactCurrentDispatcher$1 = ReactSharedInternals.ReactCurrentDispatcher;


	var didWarnAboutMismatchedHooksForComponent = void 0;
	{
	  didWarnAboutMismatchedHooksForComponent = new Set();
	}

	// These are set right before calling the component.
	var renderExpirationTime = NoWork;
	// The work-in-progress fiber. I've named it differently to distinguish it from
	// the work-in-progress hook.
	var currentlyRenderingFiber$1 = null;

	// Hooks are stored as a linked list on the fiber's memoizedState field. The
	// current hook list is the list that belongs to the current fiber. The
	// work-in-progress hook list is a new list that will be added to the
	// work-in-progress fiber.
	var currentHook = null;
	var nextCurrentHook = null;
	var firstWorkInProgressHook = null;
	var workInProgressHook = null;
	var nextWorkInProgressHook = null;

	var remainingExpirationTime = NoWork;
	var componentUpdateQueue = null;
	var sideEffectTag = 0;

	// Updates scheduled during render will trigger an immediate re-render at the
	// end of the current pass. We can't store these updates on the normal queue,
	// because if the work is aborted, they should be discarded. Because this is
	// a relatively rare case, we also don't want to add an additional field to
	// either the hook or queue object types. So we store them in a lazily create
	// map of queue -> render-phase updates, which are discarded once the component
	// completes without re-rendering.

	// Whether an update was scheduled during the currently executing render pass.
	var didScheduleRenderPhaseUpdate = false;
	// Lazily created map of render-phase updates
	var renderPhaseUpdates = null;
	// Counter to prevent infinite loops.
	var numberOfReRenders = 0;
	var RE_RENDER_LIMIT = 25;

	// In DEV, this is the name of the currently executing primitive hook
	var currentHookNameInDev = null;

	// In DEV, this list ensures that hooks are called in the same order between renders.
	// The list stores the order of hooks used during the initial render (mount).
	// Subsequent renders (updates) reference this list.
	var hookTypesDev = null;
	var hookTypesUpdateIndexDev = -1;

	function mountHookTypesDev() {
	  {
	    var hookName = currentHookNameInDev;

	    if (hookTypesDev === null) {
	      hookTypesDev = [hookName];
	    } else {
	      hookTypesDev.push(hookName);
	    }
	  }
	}

	function updateHookTypesDev() {
	  {
	    var hookName = currentHookNameInDev;

	    if (hookTypesDev !== null) {
	      hookTypesUpdateIndexDev++;
	      if (hookTypesDev[hookTypesUpdateIndexDev] !== hookName) {
	        warnOnHookMismatchInDev(hookName);
	      }
	    }
	  }
	}

	function warnOnHookMismatchInDev(currentHookName) {
	  {
	    var componentName = getComponentName(currentlyRenderingFiber$1.type);
	    if (!didWarnAboutMismatchedHooksForComponent.has(componentName)) {
	      didWarnAboutMismatchedHooksForComponent.add(componentName);

	      if (hookTypesDev !== null) {
	        var table = '';

	        var secondColumnStart = 30;

	        for (var i = 0; i <= hookTypesUpdateIndexDev; i++) {
	          var oldHookName = hookTypesDev[i];
	          var newHookName = i === hookTypesUpdateIndexDev ? currentHookName : oldHookName;

	          var row = i + 1 + '. ' + oldHookName;

	          // Extra space so second column lines up
	          // lol @ IE not supporting String#repeat
	          while (row.length < secondColumnStart) {
	            row += ' ';
	          }

	          row += newHookName + '\n';

	          table += row;
	        }

	        warning$1(false, 'React has detected a change in the order of Hooks called by %s. ' + 'This will lead to bugs and errors if not fixed. ' + 'For more information, read the Rules of Hooks: https://fb.me/rules-of-hooks\n\n' + '   Previous render            Next render\n' + '   ------------------------------------------------------\n' + '%s' + '   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n', componentName, table);
	      }
	    }
	  }
	}

	function throwInvalidHookError() {
	  invariant(false, 'Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:\n1. You might have mismatching versions of React and the renderer (such as React DOM)\n2. You might be breaking the Rules of Hooks\n3. You might have more than one copy of React in the same app\nSee https://fb.me/react-invalid-hook-call for tips about how to debug and fix this problem.');
	}

	function areHookInputsEqual(nextDeps, prevDeps) {
	  if (prevDeps === null) {
	    {
	      warning$1(false, '%s received a final argument during this render, but not during ' + 'the previous render. Even though the final argument is optional, ' + 'its type cannot change between renders.', currentHookNameInDev);
	    }
	    return false;
	  }

	  {
	    // Don't bother comparing lengths in prod because these arrays should be
	    // passed inline.
	    if (nextDeps.length !== prevDeps.length) {
	      warning$1(false, 'The final argument passed to %s changed size between renders. The ' + 'order and size of this array must remain constant.\n\n' + 'Previous: %s\n' + 'Incoming: %s', currentHookNameInDev, '[' + nextDeps.join(', ') + ']', '[' + prevDeps.join(', ') + ']');
	    }
	  }
	  for (var i = 0; i < prevDeps.length && i < nextDeps.length; i++) {
	    if (is(nextDeps[i], prevDeps[i])) {
	      continue;
	    }
	    return false;
	  }
	  return true;
	}

	function renderWithHooks(current, workInProgress, Component, props, refOrContext, nextRenderExpirationTime) {
	  renderExpirationTime = nextRenderExpirationTime;
	  currentlyRenderingFiber$1 = workInProgress;
	  nextCurrentHook = current !== null ? current.memoizedState : null;

	  {
	    hookTypesDev = current !== null ? current._debugHookTypes : null;
	    hookTypesUpdateIndexDev = -1;
	  }

	  // The following should have already been reset
	  // currentHook = null;
	  // workInProgressHook = null;

	  // remainingExpirationTime = NoWork;
	  // componentUpdateQueue = null;

	  // didScheduleRenderPhaseUpdate = false;
	  // renderPhaseUpdates = null;
	  // numberOfReRenders = 0;
	  // sideEffectTag = 0;

	  // TODO Warn if no hooks are used at all during mount, then some are used during update.
	  // Currently we will identify the update render as a mount because nextCurrentHook === null.
	  // This is tricky because it's valid for certain types of components (e.g. React.lazy)

	  // Using nextCurrentHook to differentiate between mount/update only works if at least one stateful hook is used.
	  // Non-stateful hooks (e.g. context) don't get added to memoizedState,
	  // so nextCurrentHook would be null during updates and mounts.
	  {
	    if (nextCurrentHook !== null) {
	      ReactCurrentDispatcher$1.current = HooksDispatcherOnUpdateInDEV;
	    } else if (hookTypesDev !== null) {
	      // This dispatcher handles an edge case where a component is updating,
	      // but no stateful hooks have been used.
	      // We want to match the production code behavior (which will use HooksDispatcherOnMount),
	      // but with the extra DEV validation to ensure hooks ordering hasn't changed.
	      // This dispatcher does that.
	      ReactCurrentDispatcher$1.current = HooksDispatcherOnMountWithHookTypesInDEV;
	    } else {
	      ReactCurrentDispatcher$1.current = HooksDispatcherOnMountInDEV;
	    }
	  }

	  var children = Component(props, refOrContext);

	  if (didScheduleRenderPhaseUpdate) {
	    do {
	      didScheduleRenderPhaseUpdate = false;
	      numberOfReRenders += 1;

	      // Start over from the beginning of the list
	      nextCurrentHook = current !== null ? current.memoizedState : null;
	      nextWorkInProgressHook = firstWorkInProgressHook;

	      currentHook = null;
	      workInProgressHook = null;
	      componentUpdateQueue = null;

	      {
	        // Also validate hook order for cascading updates.
	        hookTypesUpdateIndexDev = -1;
	      }

	      ReactCurrentDispatcher$1.current = HooksDispatcherOnUpdateInDEV;

	      children = Component(props, refOrContext);
	    } while (didScheduleRenderPhaseUpdate);

	    renderPhaseUpdates = null;
	    numberOfReRenders = 0;
	  }

	  // We can assume the previous dispatcher is always this one, since we set it
	  // at the beginning of the render phase and there's no re-entrancy.
	  ReactCurrentDispatcher$1.current = ContextOnlyDispatcher;

	  var renderedWork = currentlyRenderingFiber$1;

	  renderedWork.memoizedState = firstWorkInProgressHook;
	  renderedWork.expirationTime = remainingExpirationTime;
	  renderedWork.updateQueue = componentUpdateQueue;
	  renderedWork.effectTag |= sideEffectTag;

	  {
	    renderedWork._debugHookTypes = hookTypesDev;
	  }

	  // This check uses currentHook so that it works the same in DEV and prod bundles.
	  // hookTypesDev could catch more cases (e.g. context) but only in DEV bundles.
	  var didRenderTooFewHooks = currentHook !== null && currentHook.next !== null;

	  renderExpirationTime = NoWork;
	  currentlyRenderingFiber$1 = null;

	  currentHook = null;
	  nextCurrentHook = null;
	  firstWorkInProgressHook = null;
	  workInProgressHook = null;
	  nextWorkInProgressHook = null;

	  {
	    currentHookNameInDev = null;
	    hookTypesDev = null;
	    hookTypesUpdateIndexDev = -1;
	  }

	  remainingExpirationTime = NoWork;
	  componentUpdateQueue = null;
	  sideEffectTag = 0;

	  // These were reset above
	  // didScheduleRenderPhaseUpdate = false;
	  // renderPhaseUpdates = null;
	  // numberOfReRenders = 0;

	  !!didRenderTooFewHooks ? invariant(false, 'Rendered fewer hooks than expected. This may be caused by an accidental early return statement.') : void 0;

	  return children;
	}

	function bailoutHooks(current, workInProgress, expirationTime) {
	  workInProgress.updateQueue = current.updateQueue;
	  workInProgress.effectTag &= ~(Passive | Update);
	  if (current.expirationTime <= expirationTime) {
	    current.expirationTime = NoWork;
	  }
	}

	function resetHooks() {
	  // We can assume the previous dispatcher is always this one, since we set it
	  // at the beginning of the render phase and there's no re-entrancy.
	  ReactCurrentDispatcher$1.current = ContextOnlyDispatcher;

	  // This is used to reset the state of this module when a component throws.
	  // It's also called inside mountIndeterminateComponent if we determine the
	  // component is a module-style component.
	  renderExpirationTime = NoWork;
	  currentlyRenderingFiber$1 = null;

	  currentHook = null;
	  nextCurrentHook = null;
	  firstWorkInProgressHook = null;
	  workInProgressHook = null;
	  nextWorkInProgressHook = null;

	  {
	    hookTypesDev = null;
	    hookTypesUpdateIndexDev = -1;

	    currentHookNameInDev = null;
	  }

	  remainingExpirationTime = NoWork;
	  componentUpdateQueue = null;
	  sideEffectTag = 0;

	  didScheduleRenderPhaseUpdate = false;
	  renderPhaseUpdates = null;
	  numberOfReRenders = 0;
	}

	function mountWorkInProgressHook() {
	  var hook = {
	    memoizedState: null,

	    baseState: null,
	    queue: null,
	    baseUpdate: null,

	    next: null
	  };

	  if (workInProgressHook === null) {
	    // This is the first hook in the list
	    firstWorkInProgressHook = workInProgressHook = hook;
	  } else {
	    // Append to the end of the list
	    workInProgressHook = workInProgressHook.next = hook;
	  }
	  return workInProgressHook;
	}

	function updateWorkInProgressHook() {
	  // This function is used both for updates and for re-renders triggered by a
	  // render phase update. It assumes there is either a current hook we can
	  // clone, or a work-in-progress hook from a previous render pass that we can
	  // use as a base. When we reach the end of the base list, we must switch to
	  // the dispatcher used for mounts.
	  if (nextWorkInProgressHook !== null) {
	    // There's already a work-in-progress. Reuse it.
	    workInProgressHook = nextWorkInProgressHook;
	    nextWorkInProgressHook = workInProgressHook.next;

	    currentHook = nextCurrentHook;
	    nextCurrentHook = currentHook !== null ? currentHook.next : null;
	  } else {
	    // Clone from the current hook.
	    !(nextCurrentHook !== null) ? invariant(false, 'Rendered more hooks than during the previous render.') : void 0;
	    currentHook = nextCurrentHook;

	    var newHook = {
	      memoizedState: currentHook.memoizedState,

	      baseState: currentHook.baseState,
	      queue: currentHook.queue,
	      baseUpdate: currentHook.baseUpdate,

	      next: null
	    };

	    if (workInProgressHook === null) {
	      // This is the first hook in the list.
	      workInProgressHook = firstWorkInProgressHook = newHook;
	    } else {
	      // Append to the end of the list.
	      workInProgressHook = workInProgressHook.next = newHook;
	    }
	    nextCurrentHook = currentHook.next;
	  }
	  return workInProgressHook;
	}

	function createFunctionComponentUpdateQueue() {
	  return {
	    lastEffect: null
	  };
	}

	function basicStateReducer(state, action) {
	  return typeof action === 'function' ? action(state) : action;
	}

	function mountReducer(reducer, initialArg, init) {
	  var hook = mountWorkInProgressHook();
	  var initialState = void 0;
	  if (init !== undefined) {
	    initialState = init(initialArg);
	  } else {
	    initialState = initialArg;
	  }
	  hook.memoizedState = hook.baseState = initialState;
	  var queue = hook.queue = {
	    last: null,
	    dispatch: null,
	    lastRenderedReducer: reducer,
	    lastRenderedState: initialState
	  };
	  var dispatch = queue.dispatch = dispatchAction.bind(null,
	  // Flow doesn't know this is non-null, but we do.
	  currentlyRenderingFiber$1, queue);
	  return [hook.memoizedState, dispatch];
	}

	function updateReducer(reducer, initialArg, init) {
	  var hook = updateWorkInProgressHook();
	  var queue = hook.queue;
	  !(queue !== null) ? invariant(false, 'Should have a queue. This is likely a bug in React. Please file an issue.') : void 0;

	  queue.lastRenderedReducer = reducer;

	  if (numberOfReRenders > 0) {
	    // This is a re-render. Apply the new render phase updates to the previous
	    var _dispatch = queue.dispatch;
	    if (renderPhaseUpdates !== null) {
	      // Render phase updates are stored in a map of queue -> linked list
	      var firstRenderPhaseUpdate = renderPhaseUpdates.get(queue);
	      if (firstRenderPhaseUpdate !== undefined) {
	        renderPhaseUpdates.delete(queue);
	        var newState = hook.memoizedState;
	        var update = firstRenderPhaseUpdate;
	        do {
	          // Process this render phase update. We don't have to check the
	          // priority because it will always be the same as the current
	          // render's.
	          var _action = update.action;
	          newState = reducer(newState, _action);
	          update = update.next;
	        } while (update !== null);

	        // Mark that the fiber performed work, but only if the new state is
	        // different from the current state.
	        if (!is(newState, hook.memoizedState)) {
	          markWorkInProgressReceivedUpdate();
	        }

	        hook.memoizedState = newState;
	        // Don't persist the state accumlated from the render phase updates to
	        // the base state unless the queue is empty.
	        // TODO: Not sure if this is the desired semantics, but it's what we
	        // do for gDSFP. I can't remember why.
	        if (hook.baseUpdate === queue.last) {
	          hook.baseState = newState;
	        }

	        queue.lastRenderedState = newState;

	        return [newState, _dispatch];
	      }
	    }
	    return [hook.memoizedState, _dispatch];
	  }

	  // The last update in the entire queue
	  var last = queue.last;
	  // The last update that is part of the base state.
	  var baseUpdate = hook.baseUpdate;
	  var baseState = hook.baseState;

	  // Find the first unprocessed update.
	  var first = void 0;
	  if (baseUpdate !== null) {
	    if (last !== null) {
	      // For the first update, the queue is a circular linked list where
	      // `queue.last.next = queue.first`. Once the first update commits, and
	      // the `baseUpdate` is no longer empty, we can unravel the list.
	      last.next = null;
	    }
	    first = baseUpdate.next;
	  } else {
	    first = last !== null ? last.next : null;
	  }
	  if (first !== null) {
	    var _newState = baseState;
	    var newBaseState = null;
	    var newBaseUpdate = null;
	    var prevUpdate = baseUpdate;
	    var _update = first;
	    var didSkip = false;
	    do {
	      var updateExpirationTime = _update.expirationTime;
	      if (updateExpirationTime < renderExpirationTime) {
	        // Priority is insufficient. Skip this update. If this is the first
	        // skipped update, the previous update/state is the new base
	        // update/state.
	        if (!didSkip) {
	          didSkip = true;
	          newBaseUpdate = prevUpdate;
	          newBaseState = _newState;
	        }
	        // Update the remaining priority in the queue.
	        if (updateExpirationTime > remainingExpirationTime) {
	          remainingExpirationTime = updateExpirationTime;
	        }
	      } else {
	        // Process this update.
	        if (_update.eagerReducer === reducer) {
	          // If this update was processed eagerly, and its reducer matches the
	          // current reducer, we can use the eagerly computed state.
	          _newState = _update.eagerState;
	        } else {
	          var _action2 = _update.action;
	          _newState = reducer(_newState, _action2);
	        }
	      }
	      prevUpdate = _update;
	      _update = _update.next;
	    } while (_update !== null && _update !== first);

	    if (!didSkip) {
	      newBaseUpdate = prevUpdate;
	      newBaseState = _newState;
	    }

	    // Mark that the fiber performed work, but only if the new state is
	    // different from the current state.
	    if (!is(_newState, hook.memoizedState)) {
	      markWorkInProgressReceivedUpdate();
	    }

	    hook.memoizedState = _newState;
	    hook.baseUpdate = newBaseUpdate;
	    hook.baseState = newBaseState;

	    queue.lastRenderedState = _newState;
	  }

	  var dispatch = queue.dispatch;
	  return [hook.memoizedState, dispatch];
	}

	function mountState(initialState) {
	  var hook = mountWorkInProgressHook();
	  if (typeof initialState === 'function') {
	    initialState = initialState();
	  }
	  hook.memoizedState = hook.baseState = initialState;
	  var queue = hook.queue = {
	    last: null,
	    dispatch: null,
	    lastRenderedReducer: basicStateReducer,
	    lastRenderedState: initialState
	  };
	  var dispatch = queue.dispatch = dispatchAction.bind(null,
	  // Flow doesn't know this is non-null, but we do.
	  currentlyRenderingFiber$1, queue);
	  return [hook.memoizedState, dispatch];
	}

	function updateState(initialState) {
	  return updateReducer(basicStateReducer, initialState);
	}

	function pushEffect(tag, create, destroy, deps) {
	  var effect = {
	    tag: tag,
	    create: create,
	    destroy: destroy,
	    deps: deps,
	    // Circular
	    next: null
	  };
	  if (componentUpdateQueue === null) {
	    componentUpdateQueue = createFunctionComponentUpdateQueue();
	    componentUpdateQueue.lastEffect = effect.next = effect;
	  } else {
	    var _lastEffect = componentUpdateQueue.lastEffect;
	    if (_lastEffect === null) {
	      componentUpdateQueue.lastEffect = effect.next = effect;
	    } else {
	      var firstEffect = _lastEffect.next;
	      _lastEffect.next = effect;
	      effect.next = firstEffect;
	      componentUpdateQueue.lastEffect = effect;
	    }
	  }
	  return effect;
	}

	function mountRef(initialValue) {
	  var hook = mountWorkInProgressHook();
	  var ref = { current: initialValue };
	  {
	    Object.seal(ref);
	  }
	  hook.memoizedState = ref;
	  return ref;
	}

	function updateRef(initialValue) {
	  var hook = updateWorkInProgressHook();
	  return hook.memoizedState;
	}

	function mountEffectImpl(fiberEffectTag, hookEffectTag, create, deps) {
	  var hook = mountWorkInProgressHook();
	  var nextDeps = deps === undefined ? null : deps;
	  sideEffectTag |= fiberEffectTag;
	  hook.memoizedState = pushEffect(hookEffectTag, create, undefined, nextDeps);
	}

	function updateEffectImpl(fiberEffectTag, hookEffectTag, create, deps) {
	  var hook = updateWorkInProgressHook();
	  var nextDeps = deps === undefined ? null : deps;
	  var destroy = undefined;

	  if (currentHook !== null) {
	    var prevEffect = currentHook.memoizedState;
	    destroy = prevEffect.destroy;
	    if (nextDeps !== null) {
	      var prevDeps = prevEffect.deps;
	      if (areHookInputsEqual(nextDeps, prevDeps)) {
	        pushEffect(NoEffect$1, create, destroy, nextDeps);
	        return;
	      }
	    }
	  }

	  sideEffectTag |= fiberEffectTag;
	  hook.memoizedState = pushEffect(hookEffectTag, create, destroy, nextDeps);
	}

	function mountEffect(create, deps) {
	  return mountEffectImpl(Update | Passive, UnmountPassive | MountPassive, create, deps);
	}

	function updateEffect(create, deps) {
	  return updateEffectImpl(Update | Passive, UnmountPassive | MountPassive, create, deps);
	}

	function mountLayoutEffect(create, deps) {
	  return mountEffectImpl(Update, UnmountMutation | MountLayout, create, deps);
	}

	function updateLayoutEffect(create, deps) {
	  return updateEffectImpl(Update, UnmountMutation | MountLayout, create, deps);
	}

	function imperativeHandleEffect(create, ref) {
	  if (typeof ref === 'function') {
	    var refCallback = ref;
	    var _inst = create();
	    refCallback(_inst);
	    return function () {
	      refCallback(null);
	    };
	  } else if (ref !== null && ref !== undefined) {
	    var refObject = ref;
	    {
	      !refObject.hasOwnProperty('current') ? warning$1(false, 'Expected useImperativeHandle() first argument to either be a ' + 'ref callback or React.createRef() object. Instead received: %s.', 'an object with keys {' + Object.keys(refObject).join(', ') + '}') : void 0;
	    }
	    var _inst2 = create();
	    refObject.current = _inst2;
	    return function () {
	      refObject.current = null;
	    };
	  }
	}

	function mountImperativeHandle(ref, create, deps) {
	  {
	    !(typeof create === 'function') ? warning$1(false, 'Expected useImperativeHandle() second argument to be a function ' + 'that creates a handle. Instead received: %s.', create !== null ? typeof create : 'null') : void 0;
	  }

	  // TODO: If deps are provided, should we skip comparing the ref itself?
	  var effectDeps = deps !== null && deps !== undefined ? deps.concat([ref]) : null;

	  return mountEffectImpl(Update, UnmountMutation | MountLayout, imperativeHandleEffect.bind(null, create, ref), effectDeps);
	}

	function updateImperativeHandle(ref, create, deps) {
	  {
	    !(typeof create === 'function') ? warning$1(false, 'Expected useImperativeHandle() second argument to be a function ' + 'that creates a handle. Instead received: %s.', create !== null ? typeof create : 'null') : void 0;
	  }

	  // TODO: If deps are provided, should we skip comparing the ref itself?
	  var effectDeps = deps !== null && deps !== undefined ? deps.concat([ref]) : null;

	  return updateEffectImpl(Update, UnmountMutation | MountLayout, imperativeHandleEffect.bind(null, create, ref), effectDeps);
	}

	function mountDebugValue(value, formatterFn) {
	  // This hook is normally a no-op.
	  // The react-debug-hooks package injects its own implementation
	  // so that e.g. DevTools can display custom hook values.
	}

	var updateDebugValue = mountDebugValue;

	function mountCallback(callback, deps) {
	  var hook = mountWorkInProgressHook();
	  var nextDeps = deps === undefined ? null : deps;
	  hook.memoizedState = [callback, nextDeps];
	  return callback;
	}

	function updateCallback(callback, deps) {
	  var hook = updateWorkInProgressHook();
	  var nextDeps = deps === undefined ? null : deps;
	  var prevState = hook.memoizedState;
	  if (prevState !== null) {
	    if (nextDeps !== null) {
	      var prevDeps = prevState[1];
	      if (areHookInputsEqual(nextDeps, prevDeps)) {
	        return prevState[0];
	      }
	    }
	  }
	  hook.memoizedState = [callback, nextDeps];
	  return callback;
	}

	function mountMemo(nextCreate, deps) {
	  var hook = mountWorkInProgressHook();
	  var nextDeps = deps === undefined ? null : deps;
	  var nextValue = nextCreate();
	  hook.memoizedState = [nextValue, nextDeps];
	  return nextValue;
	}

	function updateMemo(nextCreate, deps) {
	  var hook = updateWorkInProgressHook();
	  var nextDeps = deps === undefined ? null : deps;
	  var prevState = hook.memoizedState;
	  if (prevState !== null) {
	    // Assume these are defined. If they're not, areHookInputsEqual will warn.
	    if (nextDeps !== null) {
	      var prevDeps = prevState[1];
	      if (areHookInputsEqual(nextDeps, prevDeps)) {
	        return prevState[0];
	      }
	    }
	  }
	  var nextValue = nextCreate();
	  hook.memoizedState = [nextValue, nextDeps];
	  return nextValue;
	}

	// in a test-like environment, we want to warn if dispatchAction()
	// is called outside of a batchedUpdates/TestUtils.act(...) call.
	var shouldWarnForUnbatchedSetState = false;

	{
	  // jest isn't a 'global', it's just exposed to tests via a wrapped function
	  // further, this isn't a test file, so flow doesn't recognize the symbol. So...
	  // $FlowExpectedError - because requirements don't give a damn about your type sigs.
	  if ('undefined' !== typeof jest) {
	    shouldWarnForUnbatchedSetState = true;
	  }
	}

	function dispatchAction(fiber, queue, action) {
	  !(numberOfReRenders < RE_RENDER_LIMIT) ? invariant(false, 'Too many re-renders. React limits the number of renders to prevent an infinite loop.') : void 0;

	  {
	    !(arguments.length <= 3) ? warning$1(false, "State updates from the useState() and useReducer() Hooks don't support the " + 'second callback argument. To execute a side effect after ' + 'rendering, declare it in the component body with useEffect().') : void 0;
	  }

	  var alternate = fiber.alternate;
	  if (fiber === currentlyRenderingFiber$1 || alternate !== null && alternate === currentlyRenderingFiber$1) {
	    // This is a render phase update. Stash it in a lazily-created map of
	    // queue -> linked list of updates. After this render pass, we'll restart
	    // and apply the stashed updates on top of the work-in-progress hook.
	    didScheduleRenderPhaseUpdate = true;
	    var update = {
	      expirationTime: renderExpirationTime,
	      action: action,
	      eagerReducer: null,
	      eagerState: null,
	      next: null
	    };
	    if (renderPhaseUpdates === null) {
	      renderPhaseUpdates = new Map();
	    }
	    var firstRenderPhaseUpdate = renderPhaseUpdates.get(queue);
	    if (firstRenderPhaseUpdate === undefined) {
	      renderPhaseUpdates.set(queue, update);
	    } else {
	      // Append the update to the end of the list.
	      var lastRenderPhaseUpdate = firstRenderPhaseUpdate;
	      while (lastRenderPhaseUpdate.next !== null) {
	        lastRenderPhaseUpdate = lastRenderPhaseUpdate.next;
	      }
	      lastRenderPhaseUpdate.next = update;
	    }
	  } else {
	    flushPassiveEffects();

	    var currentTime = requestCurrentTime();
	    var _expirationTime = computeExpirationForFiber(currentTime, fiber);

	    var _update2 = {
	      expirationTime: _expirationTime,
	      action: action,
	      eagerReducer: null,
	      eagerState: null,
	      next: null
	    };

	    // Append the update to the end of the list.
	    var _last = queue.last;
	    if (_last === null) {
	      // This is the first update. Create a circular list.
	      _update2.next = _update2;
	    } else {
	      var first = _last.next;
	      if (first !== null) {
	        // Still circular.
	        _update2.next = first;
	      }
	      _last.next = _update2;
	    }
	    queue.last = _update2;

	    if (fiber.expirationTime === NoWork && (alternate === null || alternate.expirationTime === NoWork)) {
	      // The queue is currently empty, which means we can eagerly compute the
	      // next state before entering the render phase. If the new state is the
	      // same as the current state, we may be able to bail out entirely.
	      var _lastRenderedReducer = queue.lastRenderedReducer;
	      if (_lastRenderedReducer !== null) {
	        var prevDispatcher = void 0;
	        {
	          prevDispatcher = ReactCurrentDispatcher$1.current;
	          ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
	        }
	        try {
	          var currentState = queue.lastRenderedState;
	          var _eagerState = _lastRenderedReducer(currentState, action);
	          // Stash the eagerly computed state, and the reducer used to compute
	          // it, on the update object. If the reducer hasn't changed by the
	          // time we enter the render phase, then the eager state can be used
	          // without calling the reducer again.
	          _update2.eagerReducer = _lastRenderedReducer;
	          _update2.eagerState = _eagerState;
	          if (is(_eagerState, currentState)) {
	            // Fast path. We can bail out without scheduling React to re-render.
	            // It's still possible that we'll need to rebase this update later,
	            // if the component re-renders for a different reason and by that
	            // time the reducer has changed.
	            return;
	          }
	        } catch (error) {
	          // Suppress the error. It will throw again in the render phase.
	        } finally {
	          {
	            ReactCurrentDispatcher$1.current = prevDispatcher;
	          }
	        }
	      }
	    }
	    {
	      if (shouldWarnForUnbatchedSetState === true) {
	        warnIfNotCurrentlyBatchingInDev(fiber);
	      }
	    }
	    scheduleWork(fiber, _expirationTime);
	  }
	}

	var ContextOnlyDispatcher = {
	  readContext: readContext,

	  useCallback: throwInvalidHookError,
	  useContext: throwInvalidHookError,
	  useEffect: throwInvalidHookError,
	  useImperativeHandle: throwInvalidHookError,
	  useLayoutEffect: throwInvalidHookError,
	  useMemo: throwInvalidHookError,
	  useReducer: throwInvalidHookError,
	  useRef: throwInvalidHookError,
	  useState: throwInvalidHookError,
	  useDebugValue: throwInvalidHookError
	};

	var HooksDispatcherOnMountInDEV = null;
	var HooksDispatcherOnMountWithHookTypesInDEV = null;
	var HooksDispatcherOnUpdateInDEV = null;
	var InvalidNestedHooksDispatcherOnMountInDEV = null;
	var InvalidNestedHooksDispatcherOnUpdateInDEV = null;

	{
	  var warnInvalidContextAccess = function () {
	    warning$1(false, 'Context can only be read while React is rendering. ' + 'In classes, you can read it in the render method or getDerivedStateFromProps. ' + 'In function components, you can read it directly in the function body, but not ' + 'inside Hooks like useReducer() or useMemo().');
	  };

	  var warnInvalidHookAccess = function () {
	    warning$1(false, 'Do not call Hooks inside useEffect(...), useMemo(...), or other built-in Hooks. ' + 'You can only call Hooks at the top level of your React function. ' + 'For more information, see ' + 'https://fb.me/rules-of-hooks');
	  };

	  HooksDispatcherOnMountInDEV = {
	    readContext: function (context, observedBits) {
	      return readContext(context, observedBits);
	    },
	    useCallback: function (callback, deps) {
	      currentHookNameInDev = 'useCallback';
	      mountHookTypesDev();
	      return mountCallback(callback, deps);
	    },
	    useContext: function (context, observedBits) {
	      currentHookNameInDev = 'useContext';
	      mountHookTypesDev();
	      return readContext(context, observedBits);
	    },
	    useEffect: function (create, deps) {
	      currentHookNameInDev = 'useEffect';
	      mountHookTypesDev();
	      return mountEffect(create, deps);
	    },
	    useImperativeHandle: function (ref, create, deps) {
	      currentHookNameInDev = 'useImperativeHandle';
	      mountHookTypesDev();
	      return mountImperativeHandle(ref, create, deps);
	    },
	    useLayoutEffect: function (create, deps) {
	      currentHookNameInDev = 'useLayoutEffect';
	      mountHookTypesDev();
	      return mountLayoutEffect(create, deps);
	    },
	    useMemo: function (create, deps) {
	      currentHookNameInDev = 'useMemo';
	      mountHookTypesDev();
	      var prevDispatcher = ReactCurrentDispatcher$1.current;
	      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
	      try {
	        return mountMemo(create, deps);
	      } finally {
	        ReactCurrentDispatcher$1.current = prevDispatcher;
	      }
	    },
	    useReducer: function (reducer, initialArg, init) {
	      currentHookNameInDev = 'useReducer';
	      mountHookTypesDev();
	      var prevDispatcher = ReactCurrentDispatcher$1.current;
	      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
	      try {
	        return mountReducer(reducer, initialArg, init);
	      } finally {
	        ReactCurrentDispatcher$1.current = prevDispatcher;
	      }
	    },
	    useRef: function (initialValue) {
	      currentHookNameInDev = 'useRef';
	      mountHookTypesDev();
	      return mountRef(initialValue);
	    },
	    useState: function (initialState) {
	      currentHookNameInDev = 'useState';
	      mountHookTypesDev();
	      var prevDispatcher = ReactCurrentDispatcher$1.current;
	      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
	      try {
	        return mountState(initialState);
	      } finally {
	        ReactCurrentDispatcher$1.current = prevDispatcher;
	      }
	    },
	    useDebugValue: function (value, formatterFn) {
	      currentHookNameInDev = 'useDebugValue';
	      mountHookTypesDev();
	      return mountDebugValue(value, formatterFn);
	    }
	  };

	  HooksDispatcherOnMountWithHookTypesInDEV = {
	    readContext: function (context, observedBits) {
	      return readContext(context, observedBits);
	    },
	    useCallback: function (callback, deps) {
	      currentHookNameInDev = 'useCallback';
	      updateHookTypesDev();
	      return mountCallback(callback, deps);
	    },
	    useContext: function (context, observedBits) {
	      currentHookNameInDev = 'useContext';
	      updateHookTypesDev();
	      return readContext(context, observedBits);
	    },
	    useEffect: function (create, deps) {
	      currentHookNameInDev = 'useEffect';
	      updateHookTypesDev();
	      return mountEffect(create, deps);
	    },
	    useImperativeHandle: function (ref, create, deps) {
	      currentHookNameInDev = 'useImperativeHandle';
	      updateHookTypesDev();
	      return mountImperativeHandle(ref, create, deps);
	    },
	    useLayoutEffect: function (create, deps) {
	      currentHookNameInDev = 'useLayoutEffect';
	      updateHookTypesDev();
	      return mountLayoutEffect(create, deps);
	    },
	    useMemo: function (create, deps) {
	      currentHookNameInDev = 'useMemo';
	      updateHookTypesDev();
	      var prevDispatcher = ReactCurrentDispatcher$1.current;
	      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
	      try {
	        return mountMemo(create, deps);
	      } finally {
	        ReactCurrentDispatcher$1.current = prevDispatcher;
	      }
	    },
	    useReducer: function (reducer, initialArg, init) {
	      currentHookNameInDev = 'useReducer';
	      updateHookTypesDev();
	      var prevDispatcher = ReactCurrentDispatcher$1.current;
	      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
	      try {
	        return mountReducer(reducer, initialArg, init);
	      } finally {
	        ReactCurrentDispatcher$1.current = prevDispatcher;
	      }
	    },
	    useRef: function (initialValue) {
	      currentHookNameInDev = 'useRef';
	      updateHookTypesDev();
	      return mountRef(initialValue);
	    },
	    useState: function (initialState) {
	      currentHookNameInDev = 'useState';
	      updateHookTypesDev();
	      var prevDispatcher = ReactCurrentDispatcher$1.current;
	      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
	      try {
	        return mountState(initialState);
	      } finally {
	        ReactCurrentDispatcher$1.current = prevDispatcher;
	      }
	    },
	    useDebugValue: function (value, formatterFn) {
	      currentHookNameInDev = 'useDebugValue';
	      updateHookTypesDev();
	      return mountDebugValue(value, formatterFn);
	    }
	  };

	  HooksDispatcherOnUpdateInDEV = {
	    readContext: function (context, observedBits) {
	      return readContext(context, observedBits);
	    },
	    useCallback: function (callback, deps) {
	      currentHookNameInDev = 'useCallback';
	      updateHookTypesDev();
	      return updateCallback(callback, deps);
	    },
	    useContext: function (context, observedBits) {
	      currentHookNameInDev = 'useContext';
	      updateHookTypesDev();
	      return readContext(context, observedBits);
	    },
	    useEffect: function (create, deps) {
	      currentHookNameInDev = 'useEffect';
	      updateHookTypesDev();
	      return updateEffect(create, deps);
	    },
	    useImperativeHandle: function (ref, create, deps) {
	      currentHookNameInDev = 'useImperativeHandle';
	      updateHookTypesDev();
	      return updateImperativeHandle(ref, create, deps);
	    },
	    useLayoutEffect: function (create, deps) {
	      currentHookNameInDev = 'useLayoutEffect';
	      updateHookTypesDev();
	      return updateLayoutEffect(create, deps);
	    },
	    useMemo: function (create, deps) {
	      currentHookNameInDev = 'useMemo';
	      updateHookTypesDev();
	      var prevDispatcher = ReactCurrentDispatcher$1.current;
	      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
	      try {
	        return updateMemo(create, deps);
	      } finally {
	        ReactCurrentDispatcher$1.current = prevDispatcher;
	      }
	    },
	    useReducer: function (reducer, initialArg, init) {
	      currentHookNameInDev = 'useReducer';
	      updateHookTypesDev();
	      var prevDispatcher = ReactCurrentDispatcher$1.current;
	      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
	      try {
	        return updateReducer(reducer, initialArg, init);
	      } finally {
	        ReactCurrentDispatcher$1.current = prevDispatcher;
	      }
	    },
	    useRef: function (initialValue) {
	      currentHookNameInDev = 'useRef';
	      updateHookTypesDev();
	      return updateRef(initialValue);
	    },
	    useState: function (initialState) {
	      currentHookNameInDev = 'useState';
	      updateHookTypesDev();
	      var prevDispatcher = ReactCurrentDispatcher$1.current;
	      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
	      try {
	        return updateState(initialState);
	      } finally {
	        ReactCurrentDispatcher$1.current = prevDispatcher;
	      }
	    },
	    useDebugValue: function (value, formatterFn) {
	      currentHookNameInDev = 'useDebugValue';
	      updateHookTypesDev();
	      return updateDebugValue(value, formatterFn);
	    }
	  };

	  InvalidNestedHooksDispatcherOnMountInDEV = {
	    readContext: function (context, observedBits) {
	      warnInvalidContextAccess();
	      return readContext(context, observedBits);
	    },
	    useCallback: function (callback, deps) {
	      currentHookNameInDev = 'useCallback';
	      warnInvalidHookAccess();
	      mountHookTypesDev();
	      return mountCallback(callback, deps);
	    },
	    useContext: function (context, observedBits) {
	      currentHookNameInDev = 'useContext';
	      warnInvalidHookAccess();
	      mountHookTypesDev();
	      return readContext(context, observedBits);
	    },
	    useEffect: function (create, deps) {
	      currentHookNameInDev = 'useEffect';
	      warnInvalidHookAccess();
	      mountHookTypesDev();
	      return mountEffect(create, deps);
	    },
	    useImperativeHandle: function (ref, create, deps) {
	      currentHookNameInDev = 'useImperativeHandle';
	      warnInvalidHookAccess();
	      mountHookTypesDev();
	      return mountImperativeHandle(ref, create, deps);
	    },
	    useLayoutEffect: function (create, deps) {
	      currentHookNameInDev = 'useLayoutEffect';
	      warnInvalidHookAccess();
	      mountHookTypesDev();
	      return mountLayoutEffect(create, deps);
	    },
	    useMemo: function (create, deps) {
	      currentHookNameInDev = 'useMemo';
	      warnInvalidHookAccess();
	      mountHookTypesDev();
	      var prevDispatcher = ReactCurrentDispatcher$1.current;
	      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
	      try {
	        return mountMemo(create, deps);
	      } finally {
	        ReactCurrentDispatcher$1.current = prevDispatcher;
	      }
	    },
	    useReducer: function (reducer, initialArg, init) {
	      currentHookNameInDev = 'useReducer';
	      warnInvalidHookAccess();
	      mountHookTypesDev();
	      var prevDispatcher = ReactCurrentDispatcher$1.current;
	      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
	      try {
	        return mountReducer(reducer, initialArg, init);
	      } finally {
	        ReactCurrentDispatcher$1.current = prevDispatcher;
	      }
	    },
	    useRef: function (initialValue) {
	      currentHookNameInDev = 'useRef';
	      warnInvalidHookAccess();
	      mountHookTypesDev();
	      return mountRef(initialValue);
	    },
	    useState: function (initialState) {
	      currentHookNameInDev = 'useState';
	      warnInvalidHookAccess();
	      mountHookTypesDev();
	      var prevDispatcher = ReactCurrentDispatcher$1.current;
	      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
	      try {
	        return mountState(initialState);
	      } finally {
	        ReactCurrentDispatcher$1.current = prevDispatcher;
	      }
	    },
	    useDebugValue: function (value, formatterFn) {
	      currentHookNameInDev = 'useDebugValue';
	      warnInvalidHookAccess();
	      mountHookTypesDev();
	      return mountDebugValue(value, formatterFn);
	    }
	  };

	  InvalidNestedHooksDispatcherOnUpdateInDEV = {
	    readContext: function (context, observedBits) {
	      warnInvalidContextAccess();
	      return readContext(context, observedBits);
	    },
	    useCallback: function (callback, deps) {
	      currentHookNameInDev = 'useCallback';
	      warnInvalidHookAccess();
	      updateHookTypesDev();
	      return updateCallback(callback, deps);
	    },
	    useContext: function (context, observedBits) {
	      currentHookNameInDev = 'useContext';
	      warnInvalidHookAccess();
	      updateHookTypesDev();
	      return readContext(context, observedBits);
	    },
	    useEffect: function (create, deps) {
	      currentHookNameInDev = 'useEffect';
	      warnInvalidHookAccess();
	      updateHookTypesDev();
	      return updateEffect(create, deps);
	    },
	    useImperativeHandle: function (ref, create, deps) {
	      currentHookNameInDev = 'useImperativeHandle';
	      warnInvalidHookAccess();
	      updateHookTypesDev();
	      return updateImperativeHandle(ref, create, deps);
	    },
	    useLayoutEffect: function (create, deps) {
	      currentHookNameInDev = 'useLayoutEffect';
	      warnInvalidHookAccess();
	      updateHookTypesDev();
	      return updateLayoutEffect(create, deps);
	    },
	    useMemo: function (create, deps) {
	      currentHookNameInDev = 'useMemo';
	      warnInvalidHookAccess();
	      updateHookTypesDev();
	      var prevDispatcher = ReactCurrentDispatcher$1.current;
	      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
	      try {
	        return updateMemo(create, deps);
	      } finally {
	        ReactCurrentDispatcher$1.current = prevDispatcher;
	      }
	    },
	    useReducer: function (reducer, initialArg, init) {
	      currentHookNameInDev = 'useReducer';
	      warnInvalidHookAccess();
	      updateHookTypesDev();
	      var prevDispatcher = ReactCurrentDispatcher$1.current;
	      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
	      try {
	        return updateReducer(reducer, initialArg, init);
	      } finally {
	        ReactCurrentDispatcher$1.current = prevDispatcher;
	      }
	    },
	    useRef: function (initialValue) {
	      currentHookNameInDev = 'useRef';
	      warnInvalidHookAccess();
	      updateHookTypesDev();
	      return updateRef(initialValue);
	    },
	    useState: function (initialState) {
	      currentHookNameInDev = 'useState';
	      warnInvalidHookAccess();
	      updateHookTypesDev();
	      var prevDispatcher = ReactCurrentDispatcher$1.current;
	      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
	      try {
	        return updateState(initialState);
	      } finally {
	        ReactCurrentDispatcher$1.current = prevDispatcher;
	      }
	    },
	    useDebugValue: function (value, formatterFn) {
	      currentHookNameInDev = 'useDebugValue';
	      warnInvalidHookAccess();
	      updateHookTypesDev();
	      return updateDebugValue(value, formatterFn);
	    }
	  };
	}

	var commitTime = 0;
	var profilerStartTime = -1;

	function getCommitTime() {
	  return commitTime;
	}

	function recordCommitTime() {
	  if (!enableProfilerTimer) {
	    return;
	  }
	  commitTime = scheduler.unstable_now();
	}

	function startProfilerTimer(fiber) {
	  if (!enableProfilerTimer) {
	    return;
	  }

	  profilerStartTime = scheduler.unstable_now();

	  if (fiber.actualStartTime < 0) {
	    fiber.actualStartTime = scheduler.unstable_now();
	  }
	}

	function stopProfilerTimerIfRunning(fiber) {
	  if (!enableProfilerTimer) {
	    return;
	  }
	  profilerStartTime = -1;
	}

	function stopProfilerTimerIfRunningAndRecordDelta(fiber, overrideBaseTime) {
	  if (!enableProfilerTimer) {
	    return;
	  }

	  if (profilerStartTime >= 0) {
	    var elapsedTime = scheduler.unstable_now() - profilerStartTime;
	    fiber.actualDuration += elapsedTime;
	    if (overrideBaseTime) {
	      fiber.selfBaseDuration = elapsedTime;
	    }
	    profilerStartTime = -1;
	  }
	}

	// The deepest Fiber on the stack involved in a hydration context.
	// This may have been an insertion or a hydration.
	var hydrationParentFiber = null;
	var nextHydratableInstance = null;
	var isHydrating = false;

	function enterHydrationState(fiber) {
	  if (!supportsHydration) {
	    return false;
	  }

	  var parentInstance = fiber.stateNode.containerInfo;
	  nextHydratableInstance = getFirstHydratableChild(parentInstance);
	  hydrationParentFiber = fiber;
	  isHydrating = true;
	  return true;
	}

	function reenterHydrationStateFromDehydratedSuspenseInstance(fiber) {
	  if (!supportsHydration) {
	    return false;
	  }

	  var suspenseInstance = fiber.stateNode;
	  nextHydratableInstance = getNextHydratableSibling(suspenseInstance);
	  popToNextHostParent(fiber);
	  isHydrating = true;
	  return true;
	}

	function deleteHydratableInstance(returnFiber, instance) {
	  {
	    switch (returnFiber.tag) {
	      case HostRoot:
	        didNotHydrateContainerInstance(returnFiber.stateNode.containerInfo, instance);
	        break;
	      case HostComponent:
	        didNotHydrateInstance(returnFiber.type, returnFiber.memoizedProps, returnFiber.stateNode, instance);
	        break;
	    }
	  }

	  var childToDelete = createFiberFromHostInstanceForDeletion();
	  childToDelete.stateNode = instance;
	  childToDelete.return = returnFiber;
	  childToDelete.effectTag = Deletion;

	  // This might seem like it belongs on progressedFirstDeletion. However,
	  // these children are not part of the reconciliation list of children.
	  // Even if we abort and rereconcile the children, that will try to hydrate
	  // again and the nodes are still in the host tree so these will be
	  // recreated.
	  if (returnFiber.lastEffect !== null) {
	    returnFiber.lastEffect.nextEffect = childToDelete;
	    returnFiber.lastEffect = childToDelete;
	  } else {
	    returnFiber.firstEffect = returnFiber.lastEffect = childToDelete;
	  }
	}

	function insertNonHydratedInstance(returnFiber, fiber) {
	  fiber.effectTag |= Placement;
	  {
	    switch (returnFiber.tag) {
	      case HostRoot:
	        {
	          var parentContainer = returnFiber.stateNode.containerInfo;
	          switch (fiber.tag) {
	            case HostComponent:
	              var type = fiber.type;
	              var props = fiber.pendingProps;
	              didNotFindHydratableContainerInstance(parentContainer, type, props);
	              break;
	            case HostText:
	              var text = fiber.pendingProps;
	              didNotFindHydratableContainerTextInstance(parentContainer, text);
	              break;
	            case SuspenseComponent:
	              
	              break;
	          }
	          break;
	        }
	      case HostComponent:
	        {
	          var parentType = returnFiber.type;
	          var parentProps = returnFiber.memoizedProps;
	          var parentInstance = returnFiber.stateNode;
	          switch (fiber.tag) {
	            case HostComponent:
	              var _type = fiber.type;
	              var _props = fiber.pendingProps;
	              didNotFindHydratableInstance(parentType, parentProps, parentInstance, _type, _props);
	              break;
	            case HostText:
	              var _text = fiber.pendingProps;
	              didNotFindHydratableTextInstance(parentType, parentProps, parentInstance, _text);
	              break;
	            case SuspenseComponent:
	              didNotFindHydratableSuspenseInstance(parentType, parentProps, parentInstance);
	              break;
	          }
	          break;
	        }
	      default:
	        return;
	    }
	  }
	}

	function tryHydrate(fiber, nextInstance) {
	  switch (fiber.tag) {
	    case HostComponent:
	      {
	        var type = fiber.type;
	        var props = fiber.pendingProps;
	        var instance = canHydrateInstance(nextInstance, type, props);
	        if (instance !== null) {
	          fiber.stateNode = instance;
	          return true;
	        }
	        return false;
	      }
	    case HostText:
	      {
	        var text = fiber.pendingProps;
	        var textInstance = canHydrateTextInstance(nextInstance, text);
	        if (textInstance !== null) {
	          fiber.stateNode = textInstance;
	          return true;
	        }
	        return false;
	      }
	    case SuspenseComponent:
	      {
	        if (enableSuspenseServerRenderer) {
	          var suspenseInstance = canHydrateSuspenseInstance(nextInstance);
	          if (suspenseInstance !== null) {
	            // Downgrade the tag to a dehydrated component until we've hydrated it.
	            fiber.tag = DehydratedSuspenseComponent;
	            fiber.stateNode = suspenseInstance;
	            return true;
	          }
	        }
	        return false;
	      }
	    default:
	      return false;
	  }
	}

	function tryToClaimNextHydratableInstance(fiber) {
	  if (!isHydrating) {
	    return;
	  }
	  var nextInstance = nextHydratableInstance;
	  if (!nextInstance) {
	    // Nothing to hydrate. Make it an insertion.
	    insertNonHydratedInstance(hydrationParentFiber, fiber);
	    isHydrating = false;
	    hydrationParentFiber = fiber;
	    return;
	  }
	  var firstAttemptedInstance = nextInstance;
	  if (!tryHydrate(fiber, nextInstance)) {
	    // If we can't hydrate this instance let's try the next one.
	    // We use this as a heuristic. It's based on intuition and not data so it
	    // might be flawed or unnecessary.
	    nextInstance = getNextHydratableSibling(firstAttemptedInstance);
	    if (!nextInstance || !tryHydrate(fiber, nextInstance)) {
	      // Nothing to hydrate. Make it an insertion.
	      insertNonHydratedInstance(hydrationParentFiber, fiber);
	      isHydrating = false;
	      hydrationParentFiber = fiber;
	      return;
	    }
	    // We matched the next one, we'll now assume that the first one was
	    // superfluous and we'll delete it. Since we can't eagerly delete it
	    // we'll have to schedule a deletion. To do that, this node needs a dummy
	    // fiber associated with it.
	    deleteHydratableInstance(hydrationParentFiber, firstAttemptedInstance);
	  }
	  hydrationParentFiber = fiber;
	  nextHydratableInstance = getFirstHydratableChild(nextInstance);
	}

	function prepareToHydrateHostInstance(fiber, rootContainerInstance, hostContext) {
	  if (!supportsHydration) {
	    invariant(false, 'Expected prepareToHydrateHostInstance() to never be called. This error is likely caused by a bug in React. Please file an issue.');
	  }

	  var instance = fiber.stateNode;
	  var updatePayload = hydrateInstance(instance, fiber.type, fiber.memoizedProps, rootContainerInstance, hostContext, fiber);
	  // TODO: Type this specific to this type of component.
	  fiber.updateQueue = updatePayload;
	  // If the update payload indicates that there is a change or if there
	  // is a new ref we mark this as an update.
	  if (updatePayload !== null) {
	    return true;
	  }
	  return false;
	}

	function prepareToHydrateHostTextInstance(fiber) {
	  if (!supportsHydration) {
	    invariant(false, 'Expected prepareToHydrateHostTextInstance() to never be called. This error is likely caused by a bug in React. Please file an issue.');
	  }

	  var textInstance = fiber.stateNode;
	  var textContent = fiber.memoizedProps;
	  var shouldUpdate = hydrateTextInstance(textInstance, textContent, fiber);
	  {
	    if (shouldUpdate) {
	      // We assume that prepareToHydrateHostTextInstance is called in a context where the
	      // hydration parent is the parent host component of this host text.
	      var returnFiber = hydrationParentFiber;
	      if (returnFiber !== null) {
	        switch (returnFiber.tag) {
	          case HostRoot:
	            {
	              var parentContainer = returnFiber.stateNode.containerInfo;
	              didNotMatchHydratedContainerTextInstance(parentContainer, textInstance, textContent);
	              break;
	            }
	          case HostComponent:
	            {
	              var parentType = returnFiber.type;
	              var parentProps = returnFiber.memoizedProps;
	              var parentInstance = returnFiber.stateNode;
	              didNotMatchHydratedTextInstance(parentType, parentProps, parentInstance, textInstance, textContent);
	              break;
	            }
	        }
	      }
	    }
	  }
	  return shouldUpdate;
	}

	function skipPastDehydratedSuspenseInstance(fiber) {
	  if (!supportsHydration) {
	    invariant(false, 'Expected skipPastDehydratedSuspenseInstance() to never be called. This error is likely caused by a bug in React. Please file an issue.');
	  }
	  var suspenseInstance = fiber.stateNode;
	  !suspenseInstance ? invariant(false, 'Expected to have a hydrated suspense instance. This error is likely caused by a bug in React. Please file an issue.') : void 0;
	  nextHydratableInstance = getNextHydratableInstanceAfterSuspenseInstance(suspenseInstance);
	}

	function popToNextHostParent(fiber) {
	  var parent = fiber.return;
	  while (parent !== null && parent.tag !== HostComponent && parent.tag !== HostRoot && parent.tag !== DehydratedSuspenseComponent) {
	    parent = parent.return;
	  }
	  hydrationParentFiber = parent;
	}

	function popHydrationState(fiber) {
	  if (!supportsHydration) {
	    return false;
	  }
	  if (fiber !== hydrationParentFiber) {
	    // We're deeper than the current hydration context, inside an inserted
	    // tree.
	    return false;
	  }
	  if (!isHydrating) {
	    // If we're not currently hydrating but we're in a hydration context, then
	    // we were an insertion and now need to pop up reenter hydration of our
	    // siblings.
	    popToNextHostParent(fiber);
	    isHydrating = true;
	    return false;
	  }

	  var type = fiber.type;

	  // If we have any remaining hydratable nodes, we need to delete them now.
	  // We only do this deeper than head and body since they tend to have random
	  // other nodes in them. We also ignore components with pure text content in
	  // side of them.
	  // TODO: Better heuristic.
	  if (fiber.tag !== HostComponent || type !== 'head' && type !== 'body' && !shouldSetTextContent(type, fiber.memoizedProps)) {
	    var nextInstance = nextHydratableInstance;
	    while (nextInstance) {
	      deleteHydratableInstance(fiber, nextInstance);
	      nextInstance = getNextHydratableSibling(nextInstance);
	    }
	  }

	  popToNextHostParent(fiber);
	  nextHydratableInstance = hydrationParentFiber ? getNextHydratableSibling(fiber.stateNode) : null;
	  return true;
	}

	function resetHydrationState() {
	  if (!supportsHydration) {
	    return;
	  }

	  hydrationParentFiber = null;
	  nextHydratableInstance = null;
	  isHydrating = false;
	}

	var ReactCurrentOwner$3 = ReactSharedInternals.ReactCurrentOwner;

	var didReceiveUpdate = false;

	var didWarnAboutBadClass = void 0;
	var didWarnAboutContextTypeOnFunctionComponent = void 0;
	var didWarnAboutGetDerivedStateOnFunctionComponent = void 0;
	var didWarnAboutFunctionRefs = void 0;
	var didWarnAboutReassigningProps = void 0;

	{
	  didWarnAboutBadClass = {};
	  didWarnAboutContextTypeOnFunctionComponent = {};
	  didWarnAboutGetDerivedStateOnFunctionComponent = {};
	  didWarnAboutFunctionRefs = {};
	  didWarnAboutReassigningProps = false;
	}

	function reconcileChildren(current$$1, workInProgress, nextChildren, renderExpirationTime) {
	  if (current$$1 === null) {
	    // If this is a fresh new component that hasn't been rendered yet, we
	    // won't update its child set by applying minimal side-effects. Instead,
	    // we will add them all to the child before it gets rendered. That means
	    // we can optimize this reconciliation pass by not tracking side-effects.
	    workInProgress.child = mountChildFibers(workInProgress, null, nextChildren, renderExpirationTime);
	  } else {
	    // If the current child is the same as the work in progress, it means that
	    // we haven't yet started any work on these children. Therefore, we use
	    // the clone algorithm to create a copy of all the current children.

	    // If we had any progressed work already, that is invalid at this point so
	    // let's throw it out.
	    workInProgress.child = reconcileChildFibers(workInProgress, current$$1.child, nextChildren, renderExpirationTime);
	  }
	}

	function forceUnmountCurrentAndReconcile(current$$1, workInProgress, nextChildren, renderExpirationTime) {
	  // This function is fork of reconcileChildren. It's used in cases where we
	  // want to reconcile without matching against the existing set. This has the
	  // effect of all current children being unmounted; even if the type and key
	  // are the same, the old child is unmounted and a new child is created.
	  //
	  // To do this, we're going to go through the reconcile algorithm twice. In
	  // the first pass, we schedule a deletion for all the current children by
	  // passing null.
	  workInProgress.child = reconcileChildFibers(workInProgress, current$$1.child, null, renderExpirationTime);
	  // In the second pass, we mount the new children. The trick here is that we
	  // pass null in place of where we usually pass the current child set. This has
	  // the effect of remounting all children regardless of whether their their
	  // identity matches.
	  workInProgress.child = reconcileChildFibers(workInProgress, null, nextChildren, renderExpirationTime);
	}

	function updateForwardRef(current$$1, workInProgress, Component, nextProps, renderExpirationTime) {
	  // TODO: current can be non-null here even if the component
	  // hasn't yet mounted. This happens after the first render suspends.
	  // We'll need to figure out if this is fine or can cause issues.

	  {
	    if (workInProgress.type !== workInProgress.elementType) {
	      // Lazy component props can't be validated in createElement
	      // because they're only guaranteed to be resolved here.
	      var innerPropTypes = Component.propTypes;
	      if (innerPropTypes) {
	        checkPropTypes(innerPropTypes, nextProps, // Resolved props
	        'prop', getComponentName(Component), getCurrentFiberStackInDev);
	      }
	    }
	  }

	  var render = Component.render;
	  var ref = workInProgress.ref;

	  // The rest is a fork of updateFunctionComponent
	  var nextChildren = void 0;
	  prepareToReadContext(workInProgress, renderExpirationTime);
	  {
	    ReactCurrentOwner$3.current = workInProgress;
	    setCurrentPhase('render');
	    nextChildren = renderWithHooks(current$$1, workInProgress, render, nextProps, ref, renderExpirationTime);
	    if (debugRenderPhaseSideEffects || debugRenderPhaseSideEffectsForStrictMode && workInProgress.mode & StrictMode) {
	      // Only double-render components with Hooks
	      if (workInProgress.memoizedState !== null) {
	        nextChildren = renderWithHooks(current$$1, workInProgress, render, nextProps, ref, renderExpirationTime);
	      }
	    }
	    setCurrentPhase(null);
	  }

	  if (current$$1 !== null && !didReceiveUpdate) {
	    bailoutHooks(current$$1, workInProgress, renderExpirationTime);
	    return bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
	  }

	  // React DevTools reads this flag.
	  workInProgress.effectTag |= PerformedWork;
	  reconcileChildren(current$$1, workInProgress, nextChildren, renderExpirationTime);
	  return workInProgress.child;
	}

	function updateMemoComponent(current$$1, workInProgress, Component, nextProps, updateExpirationTime, renderExpirationTime) {
	  if (current$$1 === null) {
	    var type = Component.type;
	    if (isSimpleFunctionComponent(type) && Component.compare === null &&
	    // SimpleMemoComponent codepath doesn't resolve outer props either.
	    Component.defaultProps === undefined) {
	      // If this is a plain function component without default props,
	      // and with only the default shallow comparison, we upgrade it
	      // to a SimpleMemoComponent to allow fast path updates.
	      workInProgress.tag = SimpleMemoComponent;
	      workInProgress.type = type;
	      {
	        validateFunctionComponentInDev(workInProgress, type);
	      }
	      return updateSimpleMemoComponent(current$$1, workInProgress, type, nextProps, updateExpirationTime, renderExpirationTime);
	    }
	    {
	      var innerPropTypes = type.propTypes;
	      if (innerPropTypes) {
	        // Inner memo component props aren't currently validated in createElement.
	        // We could move it there, but we'd still need this for lazy code path.
	        checkPropTypes(innerPropTypes, nextProps, // Resolved props
	        'prop', getComponentName(type), getCurrentFiberStackInDev);
	      }
	    }
	    var child = createFiberFromTypeAndProps(Component.type, null, nextProps, null, workInProgress.mode, renderExpirationTime);
	    child.ref = workInProgress.ref;
	    child.return = workInProgress;
	    workInProgress.child = child;
	    return child;
	  }
	  {
	    var _type = Component.type;
	    var _innerPropTypes = _type.propTypes;
	    if (_innerPropTypes) {
	      // Inner memo component props aren't currently validated in createElement.
	      // We could move it there, but we'd still need this for lazy code path.
	      checkPropTypes(_innerPropTypes, nextProps, // Resolved props
	      'prop', getComponentName(_type), getCurrentFiberStackInDev);
	    }
	  }
	  var currentChild = current$$1.child; // This is always exactly one child
	  if (updateExpirationTime < renderExpirationTime) {
	    // This will be the props with resolved defaultProps,
	    // unlike current.memoizedProps which will be the unresolved ones.
	    var prevProps = currentChild.memoizedProps;
	    // Default to shallow comparison
	    var compare = Component.compare;
	    compare = compare !== null ? compare : shallowEqual;
	    if (compare(prevProps, nextProps) && current$$1.ref === workInProgress.ref) {
	      return bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
	    }
	  }
	  // React DevTools reads this flag.
	  workInProgress.effectTag |= PerformedWork;
	  var newChild = createWorkInProgress(currentChild, nextProps, renderExpirationTime);
	  newChild.ref = workInProgress.ref;
	  newChild.return = workInProgress;
	  workInProgress.child = newChild;
	  return newChild;
	}

	function updateSimpleMemoComponent(current$$1, workInProgress, Component, nextProps, updateExpirationTime, renderExpirationTime) {
	  // TODO: current can be non-null here even if the component
	  // hasn't yet mounted. This happens when the inner render suspends.
	  // We'll need to figure out if this is fine or can cause issues.

	  {
	    if (workInProgress.type !== workInProgress.elementType) {
	      // Lazy component props can't be validated in createElement
	      // because they're only guaranteed to be resolved here.
	      var outerMemoType = workInProgress.elementType;
	      if (outerMemoType.$$typeof === REACT_LAZY_TYPE) {
	        // We warn when you define propTypes on lazy()
	        // so let's just skip over it to find memo() outer wrapper.
	        // Inner props for memo are validated later.
	        outerMemoType = refineResolvedLazyComponent(outerMemoType);
	      }
	      var outerPropTypes = outerMemoType && outerMemoType.propTypes;
	      if (outerPropTypes) {
	        checkPropTypes(outerPropTypes, nextProps, // Resolved (SimpleMemoComponent has no defaultProps)
	        'prop', getComponentName(outerMemoType), getCurrentFiberStackInDev);
	      }
	      // Inner propTypes will be validated in the function component path.
	    }
	  }
	  if (current$$1 !== null) {
	    var prevProps = current$$1.memoizedProps;
	    if (shallowEqual(prevProps, nextProps) && current$$1.ref === workInProgress.ref) {
	      didReceiveUpdate = false;
	      if (updateExpirationTime < renderExpirationTime) {
	        return bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
	      }
	    }
	  }
	  return updateFunctionComponent(current$$1, workInProgress, Component, nextProps, renderExpirationTime);
	}

	function updateFragment(current$$1, workInProgress, renderExpirationTime) {
	  var nextChildren = workInProgress.pendingProps;
	  reconcileChildren(current$$1, workInProgress, nextChildren, renderExpirationTime);
	  return workInProgress.child;
	}

	function updateMode(current$$1, workInProgress, renderExpirationTime) {
	  var nextChildren = workInProgress.pendingProps.children;
	  reconcileChildren(current$$1, workInProgress, nextChildren, renderExpirationTime);
	  return workInProgress.child;
	}

	function updateProfiler(current$$1, workInProgress, renderExpirationTime) {
	  if (enableProfilerTimer) {
	    workInProgress.effectTag |= Update;
	  }
	  var nextProps = workInProgress.pendingProps;
	  var nextChildren = nextProps.children;
	  reconcileChildren(current$$1, workInProgress, nextChildren, renderExpirationTime);
	  return workInProgress.child;
	}

	function markRef(current$$1, workInProgress) {
	  var ref = workInProgress.ref;
	  if (current$$1 === null && ref !== null || current$$1 !== null && current$$1.ref !== ref) {
	    // Schedule a Ref effect
	    workInProgress.effectTag |= Ref;
	  }
	}

	function updateFunctionComponent(current$$1, workInProgress, Component, nextProps, renderExpirationTime) {
	  {
	    if (workInProgress.type !== workInProgress.elementType) {
	      // Lazy component props can't be validated in createElement
	      // because they're only guaranteed to be resolved here.
	      var innerPropTypes = Component.propTypes;
	      if (innerPropTypes) {
	        checkPropTypes(innerPropTypes, nextProps, // Resolved props
	        'prop', getComponentName(Component), getCurrentFiberStackInDev);
	      }
	    }
	  }

	  var unmaskedContext = getUnmaskedContext(workInProgress, Component, true);
	  var context = getMaskedContext(workInProgress, unmaskedContext);

	  var nextChildren = void 0;
	  prepareToReadContext(workInProgress, renderExpirationTime);
	  {
	    ReactCurrentOwner$3.current = workInProgress;
	    setCurrentPhase('render');
	    nextChildren = renderWithHooks(current$$1, workInProgress, Component, nextProps, context, renderExpirationTime);
	    if (debugRenderPhaseSideEffects || debugRenderPhaseSideEffectsForStrictMode && workInProgress.mode & StrictMode) {
	      // Only double-render components with Hooks
	      if (workInProgress.memoizedState !== null) {
	        nextChildren = renderWithHooks(current$$1, workInProgress, Component, nextProps, context, renderExpirationTime);
	      }
	    }
	    setCurrentPhase(null);
	  }

	  if (current$$1 !== null && !didReceiveUpdate) {
	    bailoutHooks(current$$1, workInProgress, renderExpirationTime);
	    return bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
	  }

	  // React DevTools reads this flag.
	  workInProgress.effectTag |= PerformedWork;
	  reconcileChildren(current$$1, workInProgress, nextChildren, renderExpirationTime);
	  return workInProgress.child;
	}

	function updateClassComponent(current$$1, workInProgress, Component, nextProps, renderExpirationTime) {
	  {
	    if (workInProgress.type !== workInProgress.elementType) {
	      // Lazy component props can't be validated in createElement
	      // because they're only guaranteed to be resolved here.
	      var innerPropTypes = Component.propTypes;
	      if (innerPropTypes) {
	        checkPropTypes(innerPropTypes, nextProps, // Resolved props
	        'prop', getComponentName(Component), getCurrentFiberStackInDev);
	      }
	    }
	  }

	  // Push context providers early to prevent context stack mismatches.
	  // During mounting we don't know the child context yet as the instance doesn't exist.
	  // We will invalidate the child context in finishClassComponent() right after rendering.
	  var hasContext = void 0;
	  if (isContextProvider(Component)) {
	    hasContext = true;
	    pushContextProvider(workInProgress);
	  } else {
	    hasContext = false;
	  }
	  prepareToReadContext(workInProgress, renderExpirationTime);

	  var instance = workInProgress.stateNode;
	  var shouldUpdate = void 0;
	  if (instance === null) {
	    if (current$$1 !== null) {
	      // An class component without an instance only mounts if it suspended
	      // inside a non- concurrent tree, in an inconsistent state. We want to
	      // tree it like a new mount, even though an empty version of it already
	      // committed. Disconnect the alternate pointers.
	      current$$1.alternate = null;
	      workInProgress.alternate = null;
	      // Since this is conceptually a new fiber, schedule a Placement effect
	      workInProgress.effectTag |= Placement;
	    }
	    // In the initial pass we might need to construct the instance.
	    constructClassInstance(workInProgress, Component, nextProps, renderExpirationTime);
	    mountClassInstance(workInProgress, Component, nextProps, renderExpirationTime);
	    shouldUpdate = true;
	  } else if (current$$1 === null) {
	    // In a resume, we'll already have an instance we can reuse.
	    shouldUpdate = resumeMountClassInstance(workInProgress, Component, nextProps, renderExpirationTime);
	  } else {
	    shouldUpdate = updateClassInstance(current$$1, workInProgress, Component, nextProps, renderExpirationTime);
	  }
	  var nextUnitOfWork = finishClassComponent(current$$1, workInProgress, Component, shouldUpdate, hasContext, renderExpirationTime);
	  {
	    var inst = workInProgress.stateNode;
	    if (inst.props !== nextProps) {
	      !didWarnAboutReassigningProps ? warning$1(false, 'It looks like %s is reassigning its own `this.props` while rendering. ' + 'This is not supported and can lead to confusing bugs.', getComponentName(workInProgress.type) || 'a component') : void 0;
	      didWarnAboutReassigningProps = true;
	    }
	  }
	  return nextUnitOfWork;
	}

	function finishClassComponent(current$$1, workInProgress, Component, shouldUpdate, hasContext, renderExpirationTime) {
	  // Refs should update even if shouldComponentUpdate returns false
	  markRef(current$$1, workInProgress);

	  var didCaptureError = (workInProgress.effectTag & DidCapture) !== NoEffect;

	  if (!shouldUpdate && !didCaptureError) {
	    // Context providers should defer to sCU for rendering
	    if (hasContext) {
	      invalidateContextProvider(workInProgress, Component, false);
	    }

	    return bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
	  }

	  var instance = workInProgress.stateNode;

	  // Rerender
	  ReactCurrentOwner$3.current = workInProgress;
	  var nextChildren = void 0;
	  if (didCaptureError && typeof Component.getDerivedStateFromError !== 'function') {
	    // If we captured an error, but getDerivedStateFrom catch is not defined,
	    // unmount all the children. componentDidCatch will schedule an update to
	    // re-render a fallback. This is temporary until we migrate everyone to
	    // the new API.
	    // TODO: Warn in a future release.
	    nextChildren = null;

	    if (enableProfilerTimer) {
	      stopProfilerTimerIfRunning(workInProgress);
	    }
	  } else {
	    {
	      setCurrentPhase('render');
	      nextChildren = instance.render();
	      if (debugRenderPhaseSideEffects || debugRenderPhaseSideEffectsForStrictMode && workInProgress.mode & StrictMode) {
	        instance.render();
	      }
	      setCurrentPhase(null);
	    }
	  }

	  // React DevTools reads this flag.
	  workInProgress.effectTag |= PerformedWork;
	  if (current$$1 !== null && didCaptureError) {
	    // If we're recovering from an error, reconcile without reusing any of
	    // the existing children. Conceptually, the normal children and the children
	    // that are shown on error are two different sets, so we shouldn't reuse
	    // normal children even if their identities match.
	    forceUnmountCurrentAndReconcile(current$$1, workInProgress, nextChildren, renderExpirationTime);
	  } else {
	    reconcileChildren(current$$1, workInProgress, nextChildren, renderExpirationTime);
	  }

	  // Memoize state using the values we just used to render.
	  // TODO: Restructure so we never read values from the instance.
	  workInProgress.memoizedState = instance.state;

	  // The context might have changed so we need to recalculate it.
	  if (hasContext) {
	    invalidateContextProvider(workInProgress, Component, true);
	  }

	  return workInProgress.child;
	}

	function pushHostRootContext(workInProgress) {
	  var root = workInProgress.stateNode;
	  if (root.pendingContext) {
	    pushTopLevelContextObject(workInProgress, root.pendingContext, root.pendingContext !== root.context);
	  } else if (root.context) {
	    // Should always be set
	    pushTopLevelContextObject(workInProgress, root.context, false);
	  }
	  pushHostContainer(workInProgress, root.containerInfo);
	}

	function updateHostRoot(current$$1, workInProgress, renderExpirationTime) {
	  pushHostRootContext(workInProgress);
	  var updateQueue = workInProgress.updateQueue;
	  !(updateQueue !== null) ? invariant(false, 'If the root does not have an updateQueue, we should have already bailed out. This error is likely caused by a bug in React. Please file an issue.') : void 0;
	  var nextProps = workInProgress.pendingProps;
	  var prevState = workInProgress.memoizedState;
	  var prevChildren = prevState !== null ? prevState.element : null;
	  processUpdateQueue(workInProgress, updateQueue, nextProps, null, renderExpirationTime);
	  var nextState = workInProgress.memoizedState;
	  // Caution: React DevTools currently depends on this property
	  // being called "element".
	  var nextChildren = nextState.element;
	  if (nextChildren === prevChildren) {
	    // If the state is the same as before, that's a bailout because we had
	    // no work that expires at this time.
	    resetHydrationState();
	    return bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
	  }
	  var root = workInProgress.stateNode;
	  if ((current$$1 === null || current$$1.child === null) && root.hydrate && enterHydrationState(workInProgress)) {
	    // If we don't have any current children this might be the first pass.
	    // We always try to hydrate. If this isn't a hydration pass there won't
	    // be any children to hydrate which is effectively the same thing as
	    // not hydrating.

	    // This is a bit of a hack. We track the host root as a placement to
	    // know that we're currently in a mounting state. That way isMounted
	    // works as expected. We must reset this before committing.
	    // TODO: Delete this when we delete isMounted and findDOMNode.
	    workInProgress.effectTag |= Placement;

	    // Ensure that children mount into this root without tracking
	    // side-effects. This ensures that we don't store Placement effects on
	    // nodes that will be hydrated.
	    workInProgress.child = mountChildFibers(workInProgress, null, nextChildren, renderExpirationTime);
	  } else {
	    // Otherwise reset hydration state in case we aborted and resumed another
	    // root.
	    reconcileChildren(current$$1, workInProgress, nextChildren, renderExpirationTime);
	    resetHydrationState();
	  }
	  return workInProgress.child;
	}

	function updateHostComponent(current$$1, workInProgress, renderExpirationTime) {
	  pushHostContext(workInProgress);

	  if (current$$1 === null) {
	    tryToClaimNextHydratableInstance(workInProgress);
	  }

	  var type = workInProgress.type;
	  var nextProps = workInProgress.pendingProps;
	  var prevProps = current$$1 !== null ? current$$1.memoizedProps : null;

	  var nextChildren = nextProps.children;
	  var isDirectTextChild = shouldSetTextContent(type, nextProps);

	  if (isDirectTextChild) {
	    // We special case a direct text child of a host node. This is a common
	    // case. We won't handle it as a reified child. We will instead handle
	    // this in the host environment that also have access to this prop. That
	    // avoids allocating another HostText fiber and traversing it.
	    nextChildren = null;
	  } else if (prevProps !== null && shouldSetTextContent(type, prevProps)) {
	    // If we're switching from a direct text child to a normal child, or to
	    // empty, we need to schedule the text content to be reset.
	    workInProgress.effectTag |= ContentReset;
	  }

	  markRef(current$$1, workInProgress);

	  // Check the host config to see if the children are offscreen/hidden.
	  if (renderExpirationTime !== Never && workInProgress.mode & ConcurrentMode && shouldDeprioritizeSubtree(type, nextProps)) {
	    // Schedule this fiber to re-render at offscreen priority. Then bailout.
	    workInProgress.expirationTime = workInProgress.childExpirationTime = Never;
	    return null;
	  }

	  reconcileChildren(current$$1, workInProgress, nextChildren, renderExpirationTime);
	  return workInProgress.child;
	}

	function updateHostText(current$$1, workInProgress) {
	  if (current$$1 === null) {
	    tryToClaimNextHydratableInstance(workInProgress);
	  }
	  // Nothing to do here. This is terminal. We'll do the completion step
	  // immediately after.
	  return null;
	}

	function mountLazyComponent(_current, workInProgress, elementType, updateExpirationTime, renderExpirationTime) {
	  if (_current !== null) {
	    // An lazy component only mounts if it suspended inside a non-
	    // concurrent tree, in an inconsistent state. We want to treat it like
	    // a new mount, even though an empty version of it already committed.
	    // Disconnect the alternate pointers.
	    _current.alternate = null;
	    workInProgress.alternate = null;
	    // Since this is conceptually a new fiber, schedule a Placement effect
	    workInProgress.effectTag |= Placement;
	  }

	  var props = workInProgress.pendingProps;
	  // We can't start a User Timing measurement with correct label yet.
	  // Cancel and resume right after we know the tag.
	  cancelWorkTimer(workInProgress);
	  var Component = readLazyComponentType(elementType);
	  // Store the unwrapped component in the type.
	  workInProgress.type = Component;
	  var resolvedTag = workInProgress.tag = resolveLazyComponentTag(Component);
	  startWorkTimer(workInProgress);
	  var resolvedProps = resolveDefaultProps(Component, props);
	  var child = void 0;
	  switch (resolvedTag) {
	    case FunctionComponent:
	      {
	        {
	          validateFunctionComponentInDev(workInProgress, Component);
	        }
	        child = updateFunctionComponent(null, workInProgress, Component, resolvedProps, renderExpirationTime);
	        break;
	      }
	    case ClassComponent:
	      {
	        child = updateClassComponent(null, workInProgress, Component, resolvedProps, renderExpirationTime);
	        break;
	      }
	    case ForwardRef:
	      {
	        child = updateForwardRef(null, workInProgress, Component, resolvedProps, renderExpirationTime);
	        break;
	      }
	    case MemoComponent:
	      {
	        {
	          if (workInProgress.type !== workInProgress.elementType) {
	            var outerPropTypes = Component.propTypes;
	            if (outerPropTypes) {
	              checkPropTypes(outerPropTypes, resolvedProps, // Resolved for outer only
	              'prop', getComponentName(Component), getCurrentFiberStackInDev);
	            }
	          }
	        }
	        child = updateMemoComponent(null, workInProgress, Component, resolveDefaultProps(Component.type, resolvedProps), // The inner type can have defaults too
	        updateExpirationTime, renderExpirationTime);
	        break;
	      }
	    default:
	      {
	        var hint = '';
	        {
	          if (Component !== null && typeof Component === 'object' && Component.$$typeof === REACT_LAZY_TYPE) {
	            hint = ' Did you wrap a component in React.lazy() more than once?';
	          }
	        }
	        // This message intentionally doesn't mention ForwardRef or MemoComponent
	        // because the fact that it's a separate type of work is an
	        // implementation detail.
	        invariant(false, 'Element type is invalid. Received a promise that resolves to: %s. Lazy element type must resolve to a class or function.%s', Component, hint);
	      }
	  }
	  return child;
	}

	function mountIncompleteClassComponent(_current, workInProgress, Component, nextProps, renderExpirationTime) {
	  if (_current !== null) {
	    // An incomplete component only mounts if it suspended inside a non-
	    // concurrent tree, in an inconsistent state. We want to treat it like
	    // a new mount, even though an empty version of it already committed.
	    // Disconnect the alternate pointers.
	    _current.alternate = null;
	    workInProgress.alternate = null;
	    // Since this is conceptually a new fiber, schedule a Placement effect
	    workInProgress.effectTag |= Placement;
	  }

	  // Promote the fiber to a class and try rendering again.
	  workInProgress.tag = ClassComponent;

	  // The rest of this function is a fork of `updateClassComponent`

	  // Push context providers early to prevent context stack mismatches.
	  // During mounting we don't know the child context yet as the instance doesn't exist.
	  // We will invalidate the child context in finishClassComponent() right after rendering.
	  var hasContext = void 0;
	  if (isContextProvider(Component)) {
	    hasContext = true;
	    pushContextProvider(workInProgress);
	  } else {
	    hasContext = false;
	  }
	  prepareToReadContext(workInProgress, renderExpirationTime);

	  constructClassInstance(workInProgress, Component, nextProps, renderExpirationTime);
	  mountClassInstance(workInProgress, Component, nextProps, renderExpirationTime);

	  return finishClassComponent(null, workInProgress, Component, true, hasContext, renderExpirationTime);
	}

	function mountIndeterminateComponent(_current, workInProgress, Component, renderExpirationTime) {
	  if (_current !== null) {
	    // An indeterminate component only mounts if it suspended inside a non-
	    // concurrent tree, in an inconsistent state. We want to treat it like
	    // a new mount, even though an empty version of it already committed.
	    // Disconnect the alternate pointers.
	    _current.alternate = null;
	    workInProgress.alternate = null;
	    // Since this is conceptually a new fiber, schedule a Placement effect
	    workInProgress.effectTag |= Placement;
	  }

	  var props = workInProgress.pendingProps;
	  var unmaskedContext = getUnmaskedContext(workInProgress, Component, false);
	  var context = getMaskedContext(workInProgress, unmaskedContext);

	  prepareToReadContext(workInProgress, renderExpirationTime);

	  var value = void 0;

	  {
	    if (Component.prototype && typeof Component.prototype.render === 'function') {
	      var componentName = getComponentName(Component) || 'Unknown';

	      if (!didWarnAboutBadClass[componentName]) {
	        warningWithoutStack$1(false, "The <%s /> component appears to have a render method, but doesn't extend React.Component. " + 'This is likely to cause errors. Change %s to extend React.Component instead.', componentName, componentName);
	        didWarnAboutBadClass[componentName] = true;
	      }
	    }

	    if (workInProgress.mode & StrictMode) {
	      ReactStrictModeWarnings.recordLegacyContextWarning(workInProgress, null);
	    }

	    ReactCurrentOwner$3.current = workInProgress;
	    value = renderWithHooks(null, workInProgress, Component, props, context, renderExpirationTime);
	  }
	  // React DevTools reads this flag.
	  workInProgress.effectTag |= PerformedWork;

	  if (typeof value === 'object' && value !== null && typeof value.render === 'function' && value.$$typeof === undefined) {
	    // Proceed under the assumption that this is a class instance
	    workInProgress.tag = ClassComponent;

	    // Throw out any hooks that were used.
	    resetHooks();

	    // Push context providers early to prevent context stack mismatches.
	    // During mounting we don't know the child context yet as the instance doesn't exist.
	    // We will invalidate the child context in finishClassComponent() right after rendering.
	    var hasContext = false;
	    if (isContextProvider(Component)) {
	      hasContext = true;
	      pushContextProvider(workInProgress);
	    } else {
	      hasContext = false;
	    }

	    workInProgress.memoizedState = value.state !== null && value.state !== undefined ? value.state : null;

	    var getDerivedStateFromProps = Component.getDerivedStateFromProps;
	    if (typeof getDerivedStateFromProps === 'function') {
	      applyDerivedStateFromProps(workInProgress, Component, getDerivedStateFromProps, props);
	    }

	    adoptClassInstance(workInProgress, value);
	    mountClassInstance(workInProgress, Component, props, renderExpirationTime);
	    return finishClassComponent(null, workInProgress, Component, true, hasContext, renderExpirationTime);
	  } else {
	    // Proceed under the assumption that this is a function component
	    workInProgress.tag = FunctionComponent;
	    {
	      if (debugRenderPhaseSideEffects || debugRenderPhaseSideEffectsForStrictMode && workInProgress.mode & StrictMode) {
	        // Only double-render components with Hooks
	        if (workInProgress.memoizedState !== null) {
	          value = renderWithHooks(null, workInProgress, Component, props, context, renderExpirationTime);
	        }
	      }
	    }
	    reconcileChildren(null, workInProgress, value, renderExpirationTime);
	    {
	      validateFunctionComponentInDev(workInProgress, Component);
	    }
	    return workInProgress.child;
	  }
	}

	function validateFunctionComponentInDev(workInProgress, Component) {
	  if (Component) {
	    !!Component.childContextTypes ? warningWithoutStack$1(false, '%s(...): childContextTypes cannot be defined on a function component.', Component.displayName || Component.name || 'Component') : void 0;
	  }
	  if (workInProgress.ref !== null) {
	    var info = '';
	    var ownerName = getCurrentFiberOwnerNameInDevOrNull();
	    if (ownerName) {
	      info += '\n\nCheck the render method of `' + ownerName + '`.';
	    }

	    var warningKey = ownerName || workInProgress._debugID || '';
	    var debugSource = workInProgress._debugSource;
	    if (debugSource) {
	      warningKey = debugSource.fileName + ':' + debugSource.lineNumber;
	    }
	    if (!didWarnAboutFunctionRefs[warningKey]) {
	      didWarnAboutFunctionRefs[warningKey] = true;
	      warning$1(false, 'Function components cannot be given refs. ' + 'Attempts to access this ref will fail. ' + 'Did you mean to use React.forwardRef()?%s', info);
	    }
	  }

	  if (typeof Component.getDerivedStateFromProps === 'function') {
	    var componentName = getComponentName(Component) || 'Unknown';

	    if (!didWarnAboutGetDerivedStateOnFunctionComponent[componentName]) {
	      warningWithoutStack$1(false, '%s: Function components do not support getDerivedStateFromProps.', componentName);
	      didWarnAboutGetDerivedStateOnFunctionComponent[componentName] = true;
	    }
	  }

	  if (typeof Component.contextType === 'object' && Component.contextType !== null) {
	    var _componentName = getComponentName(Component) || 'Unknown';

	    if (!didWarnAboutContextTypeOnFunctionComponent[_componentName]) {
	      warningWithoutStack$1(false, '%s: Function components do not support contextType.', _componentName);
	      didWarnAboutContextTypeOnFunctionComponent[_componentName] = true;
	    }
	  }
	}

	function updateSuspenseComponent(current$$1, workInProgress, renderExpirationTime) {
	  var mode = workInProgress.mode;
	  var nextProps = workInProgress.pendingProps;

	  // We should attempt to render the primary children unless this boundary
	  // already suspended during this render (`alreadyCaptured` is true).
	  var nextState = workInProgress.memoizedState;

	  var nextDidTimeout = void 0;
	  if ((workInProgress.effectTag & DidCapture) === NoEffect) {
	    // This is the first attempt.
	    nextState = null;
	    nextDidTimeout = false;
	  } else {
	    // Something in this boundary's subtree already suspended. Switch to
	    // rendering the fallback children.
	    nextState = {
	      timedOutAt: nextState !== null ? nextState.timedOutAt : NoWork
	    };
	    nextDidTimeout = true;
	    workInProgress.effectTag &= ~DidCapture;
	  }

	  // This next part is a bit confusing. If the children timeout, we switch to
	  // showing the fallback children in place of the "primary" children.
	  // However, we don't want to delete the primary children because then their
	  // state will be lost (both the React state and the host state, e.g.
	  // uncontrolled form inputs). Instead we keep them mounted and hide them.
	  // Both the fallback children AND the primary children are rendered at the
	  // same time. Once the primary children are un-suspended, we can delete
	  // the fallback children — don't need to preserve their state.
	  //
	  // The two sets of children are siblings in the host environment, but
	  // semantically, for purposes of reconciliation, they are two separate sets.
	  // So we store them using two fragment fibers.
	  //
	  // However, we want to avoid allocating extra fibers for every placeholder.
	  // They're only necessary when the children time out, because that's the
	  // only time when both sets are mounted.
	  //
	  // So, the extra fragment fibers are only used if the children time out.
	  // Otherwise, we render the primary children directly. This requires some
	  // custom reconciliation logic to preserve the state of the primary
	  // children. It's essentially a very basic form of re-parenting.

	  // `child` points to the child fiber. In the normal case, this is the first
	  // fiber of the primary children set. In the timed-out case, it's a
	  // a fragment fiber containing the primary children.
	  var child = void 0;
	  // `next` points to the next fiber React should render. In the normal case,
	  // it's the same as `child`: the first fiber of the primary children set.
	  // In the timed-out case, it's a fragment fiber containing the *fallback*
	  // children -- we skip over the primary children entirely.
	  var next = void 0;
	  if (current$$1 === null) {
	    if (enableSuspenseServerRenderer) {
	      // If we're currently hydrating, try to hydrate this boundary.
	      // But only if this has a fallback.
	      if (nextProps.fallback !== undefined) {
	        tryToClaimNextHydratableInstance(workInProgress);
	        // This could've changed the tag if this was a dehydrated suspense component.
	        if (workInProgress.tag === DehydratedSuspenseComponent) {
	          return updateDehydratedSuspenseComponent(null, workInProgress, renderExpirationTime);
	        }
	      }
	    }

	    // This is the initial mount. This branch is pretty simple because there's
	    // no previous state that needs to be preserved.
	    if (nextDidTimeout) {
	      // Mount separate fragments for primary and fallback children.
	      var nextFallbackChildren = nextProps.fallback;
	      var primaryChildFragment = createFiberFromFragment(null, mode, NoWork, null);

	      if ((workInProgress.mode & ConcurrentMode) === NoContext) {
	        // Outside of concurrent mode, we commit the effects from the
	        var progressedState = workInProgress.memoizedState;
	        var progressedPrimaryChild = progressedState !== null ? workInProgress.child.child : workInProgress.child;
	        primaryChildFragment.child = progressedPrimaryChild;
	      }

	      var fallbackChildFragment = createFiberFromFragment(nextFallbackChildren, mode, renderExpirationTime, null);
	      primaryChildFragment.sibling = fallbackChildFragment;
	      child = primaryChildFragment;
	      // Skip the primary children, and continue working on the
	      // fallback children.
	      next = fallbackChildFragment;
	      child.return = next.return = workInProgress;
	    } else {
	      // Mount the primary children without an intermediate fragment fiber.
	      var nextPrimaryChildren = nextProps.children;
	      child = next = mountChildFibers(workInProgress, null, nextPrimaryChildren, renderExpirationTime);
	    }
	  } else {
	    // This is an update. This branch is more complicated because we need to
	    // ensure the state of the primary children is preserved.
	    var prevState = current$$1.memoizedState;
	    var prevDidTimeout = prevState !== null;
	    if (prevDidTimeout) {
	      // The current tree already timed out. That means each child set is
	      var currentPrimaryChildFragment = current$$1.child;
	      var currentFallbackChildFragment = currentPrimaryChildFragment.sibling;
	      if (nextDidTimeout) {
	        // Still timed out. Reuse the current primary children by cloning
	        // its fragment. We're going to skip over these entirely.
	        var _nextFallbackChildren = nextProps.fallback;
	        var _primaryChildFragment = createWorkInProgress(currentPrimaryChildFragment, currentPrimaryChildFragment.pendingProps, NoWork);

	        if ((workInProgress.mode & ConcurrentMode) === NoContext) {
	          // Outside of concurrent mode, we commit the effects from the
	          var _progressedState = workInProgress.memoizedState;
	          var _progressedPrimaryChild = _progressedState !== null ? workInProgress.child.child : workInProgress.child;
	          if (_progressedPrimaryChild !== currentPrimaryChildFragment.child) {
	            _primaryChildFragment.child = _progressedPrimaryChild;
	          }
	        }

	        // Because primaryChildFragment is a new fiber that we're inserting as the
	        // parent of a new tree, we need to set its treeBaseDuration.
	        if (enableProfilerTimer && workInProgress.mode & ProfileMode) {
	          // treeBaseDuration is the sum of all the child tree base durations.
	          var treeBaseDuration = 0;
	          var hiddenChild = _primaryChildFragment.child;
	          while (hiddenChild !== null) {
	            treeBaseDuration += hiddenChild.treeBaseDuration;
	            hiddenChild = hiddenChild.sibling;
	          }
	          _primaryChildFragment.treeBaseDuration = treeBaseDuration;
	        }

	        // Clone the fallback child fragment, too. These we'll continue
	        // working on.
	        var _fallbackChildFragment = _primaryChildFragment.sibling = createWorkInProgress(currentFallbackChildFragment, _nextFallbackChildren, currentFallbackChildFragment.expirationTime);
	        child = _primaryChildFragment;
	        _primaryChildFragment.childExpirationTime = NoWork;
	        // Skip the primary children, and continue working on the
	        // fallback children.
	        next = _fallbackChildFragment;
	        child.return = next.return = workInProgress;
	      } else {
	        // No longer suspended. Switch back to showing the primary children,
	        // and remove the intermediate fragment fiber.
	        var _nextPrimaryChildren = nextProps.children;
	        var currentPrimaryChild = currentPrimaryChildFragment.child;
	        var primaryChild = reconcileChildFibers(workInProgress, currentPrimaryChild, _nextPrimaryChildren, renderExpirationTime);

	        // If this render doesn't suspend, we need to delete the fallback
	        // children. Wait until the complete phase, after we've confirmed the
	        // fallback is no longer needed.
	        // TODO: Would it be better to store the fallback fragment on
	        // the stateNode?

	        // Continue rendering the children, like we normally do.
	        child = next = primaryChild;
	      }
	    } else {
	      // The current tree has not already timed out. That means the primary
	      // children are not wrapped in a fragment fiber.
	      var _currentPrimaryChild = current$$1.child;
	      if (nextDidTimeout) {
	        // Timed out. Wrap the children in a fragment fiber to keep them
	        // separate from the fallback children.
	        var _nextFallbackChildren2 = nextProps.fallback;
	        var _primaryChildFragment2 = createFiberFromFragment(
	        // It shouldn't matter what the pending props are because we aren't
	        // going to render this fragment.
	        null, mode, NoWork, null);
	        _primaryChildFragment2.child = _currentPrimaryChild;

	        // Even though we're creating a new fiber, there are no new children,
	        // because we're reusing an already mounted tree. So we don't need to
	        // schedule a placement.
	        // primaryChildFragment.effectTag |= Placement;

	        if ((workInProgress.mode & ConcurrentMode) === NoContext) {
	          // Outside of concurrent mode, we commit the effects from the
	          var _progressedState2 = workInProgress.memoizedState;
	          var _progressedPrimaryChild2 = _progressedState2 !== null ? workInProgress.child.child : workInProgress.child;
	          _primaryChildFragment2.child = _progressedPrimaryChild2;
	        }

	        // Because primaryChildFragment is a new fiber that we're inserting as the
	        // parent of a new tree, we need to set its treeBaseDuration.
	        if (enableProfilerTimer && workInProgress.mode & ProfileMode) {
	          // treeBaseDuration is the sum of all the child tree base durations.
	          var _treeBaseDuration = 0;
	          var _hiddenChild = _primaryChildFragment2.child;
	          while (_hiddenChild !== null) {
	            _treeBaseDuration += _hiddenChild.treeBaseDuration;
	            _hiddenChild = _hiddenChild.sibling;
	          }
	          _primaryChildFragment2.treeBaseDuration = _treeBaseDuration;
	        }

	        // Create a fragment from the fallback children, too.
	        var _fallbackChildFragment2 = _primaryChildFragment2.sibling = createFiberFromFragment(_nextFallbackChildren2, mode, renderExpirationTime, null);
	        _fallbackChildFragment2.effectTag |= Placement;
	        child = _primaryChildFragment2;
	        _primaryChildFragment2.childExpirationTime = NoWork;
	        // Skip the primary children, and continue working on the
	        // fallback children.
	        next = _fallbackChildFragment2;
	        child.return = next.return = workInProgress;
	      } else {
	        // Still haven't timed out.  Continue rendering the children, like we
	        // normally do.
	        var _nextPrimaryChildren2 = nextProps.children;
	        next = child = reconcileChildFibers(workInProgress, _currentPrimaryChild, _nextPrimaryChildren2, renderExpirationTime);
	      }
	    }
	    workInProgress.stateNode = current$$1.stateNode;
	  }

	  workInProgress.memoizedState = nextState;
	  workInProgress.child = child;
	  return next;
	}

	function updateDehydratedSuspenseComponent(current$$1, workInProgress, renderExpirationTime) {
	  if (current$$1 === null) {
	    // During the first pass, we'll bail out and not drill into the children.
	    // Instead, we'll leave the content in place and try to hydrate it later.
	    workInProgress.expirationTime = Never;
	    return null;
	  }
	  // We use childExpirationTime to indicate that a child might depend on context, so if
	  // any context has changed, we need to treat is as if the input might have changed.
	  var hasContextChanged$$1 = current$$1.childExpirationTime >= renderExpirationTime;
	  if (didReceiveUpdate || hasContextChanged$$1) {
	    // This boundary has changed since the first render. This means that we are now unable to
	    // hydrate it. We might still be able to hydrate it using an earlier expiration time but
	    // during this render we can't. Instead, we're going to delete the whole subtree and
	    // instead inject a new real Suspense boundary to take its place, which may render content
	    // or fallback. The real Suspense boundary will suspend for a while so we have some time
	    // to ensure it can produce real content, but all state and pending events will be lost.

	    // Detach from the current dehydrated boundary.
	    current$$1.alternate = null;
	    workInProgress.alternate = null;

	    // Insert a deletion in the effect list.
	    var returnFiber = workInProgress.return;
	    !(returnFiber !== null) ? invariant(false, 'Suspense boundaries are never on the root. This is probably a bug in React.') : void 0;
	    var last = returnFiber.lastEffect;
	    if (last !== null) {
	      last.nextEffect = current$$1;
	      returnFiber.lastEffect = current$$1;
	    } else {
	      returnFiber.firstEffect = returnFiber.lastEffect = current$$1;
	    }
	    current$$1.nextEffect = null;
	    current$$1.effectTag = Deletion;

	    // Upgrade this work in progress to a real Suspense component.
	    workInProgress.tag = SuspenseComponent;
	    workInProgress.stateNode = null;
	    workInProgress.memoizedState = null;
	    // This is now an insertion.
	    workInProgress.effectTag |= Placement;
	    // Retry as a real Suspense component.
	    return updateSuspenseComponent(null, workInProgress, renderExpirationTime);
	  }
	  if ((workInProgress.effectTag & DidCapture) === NoEffect) {
	    // This is the first attempt.
	    reenterHydrationStateFromDehydratedSuspenseInstance(workInProgress);
	    var nextProps = workInProgress.pendingProps;
	    var nextChildren = nextProps.children;
	    workInProgress.child = mountChildFibers(workInProgress, null, nextChildren, renderExpirationTime);
	    return workInProgress.child;
	  } else {
	    // Something suspended. Leave the existing children in place.
	    // TODO: In non-concurrent mode, should we commit the nodes we have hydrated so far?
	    workInProgress.child = null;
	    return null;
	  }
	}

	function updatePortalComponent(current$$1, workInProgress, renderExpirationTime) {
	  pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo);
	  var nextChildren = workInProgress.pendingProps;
	  if (current$$1 === null) {
	    // Portals are special because we don't append the children during mount
	    // but at commit. Therefore we need to track insertions which the normal
	    // flow doesn't do during mount. This doesn't happen at the root because
	    // the root always starts with a "current" with a null child.
	    // TODO: Consider unifying this with how the root works.
	    workInProgress.child = reconcileChildFibers(workInProgress, null, nextChildren, renderExpirationTime);
	  } else {
	    reconcileChildren(current$$1, workInProgress, nextChildren, renderExpirationTime);
	  }
	  return workInProgress.child;
	}

	function updateContextProvider(current$$1, workInProgress, renderExpirationTime) {
	  var providerType = workInProgress.type;
	  var context = providerType._context;

	  var newProps = workInProgress.pendingProps;
	  var oldProps = workInProgress.memoizedProps;

	  var newValue = newProps.value;

	  {
	    var providerPropTypes = workInProgress.type.propTypes;

	    if (providerPropTypes) {
	      checkPropTypes(providerPropTypes, newProps, 'prop', 'Context.Provider', getCurrentFiberStackInDev);
	    }
	  }

	  pushProvider(workInProgress, newValue);

	  if (oldProps !== null) {
	    var oldValue = oldProps.value;
	    var changedBits = calculateChangedBits(context, newValue, oldValue);
	    if (changedBits === 0) {
	      // No change. Bailout early if children are the same.
	      if (oldProps.children === newProps.children && !hasContextChanged()) {
	        return bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
	      }
	    } else {
	      // The context value changed. Search for matching consumers and schedule
	      // them to update.
	      propagateContextChange(workInProgress, context, changedBits, renderExpirationTime);
	    }
	  }

	  var newChildren = newProps.children;
	  reconcileChildren(current$$1, workInProgress, newChildren, renderExpirationTime);
	  return workInProgress.child;
	}

	var hasWarnedAboutUsingContextAsConsumer = false;

	function updateContextConsumer(current$$1, workInProgress, renderExpirationTime) {
	  var context = workInProgress.type;
	  // The logic below for Context differs depending on PROD or DEV mode. In
	  // DEV mode, we create a separate object for Context.Consumer that acts
	  // like a proxy to Context. This proxy object adds unnecessary code in PROD
	  // so we use the old behaviour (Context.Consumer references Context) to
	  // reduce size and overhead. The separate object references context via
	  // a property called "_context", which also gives us the ability to check
	  // in DEV mode if this property exists or not and warn if it does not.
	  {
	    if (context._context === undefined) {
	      // This may be because it's a Context (rather than a Consumer).
	      // Or it may be because it's older React where they're the same thing.
	      // We only want to warn if we're sure it's a new React.
	      if (context !== context.Consumer) {
	        if (!hasWarnedAboutUsingContextAsConsumer) {
	          hasWarnedAboutUsingContextAsConsumer = true;
	          warning$1(false, 'Rendering <Context> directly is not supported and will be removed in ' + 'a future major release. Did you mean to render <Context.Consumer> instead?');
	        }
	      }
	    } else {
	      context = context._context;
	    }
	  }
	  var newProps = workInProgress.pendingProps;
	  var render = newProps.children;

	  {
	    !(typeof render === 'function') ? warningWithoutStack$1(false, 'A context consumer was rendered with multiple children, or a child ' + "that isn't a function. A context consumer expects a single child " + 'that is a function. If you did pass a function, make sure there ' + 'is no trailing or leading whitespace around it.') : void 0;
	  }

	  prepareToReadContext(workInProgress, renderExpirationTime);
	  var newValue = readContext(context, newProps.unstable_observedBits);
	  var newChildren = void 0;
	  {
	    ReactCurrentOwner$3.current = workInProgress;
	    setCurrentPhase('render');
	    newChildren = render(newValue);
	    setCurrentPhase(null);
	  }

	  // React DevTools reads this flag.
	  workInProgress.effectTag |= PerformedWork;
	  reconcileChildren(current$$1, workInProgress, newChildren, renderExpirationTime);
	  return workInProgress.child;
	}

	function markWorkInProgressReceivedUpdate() {
	  didReceiveUpdate = true;
	}

	function bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime) {
	  cancelWorkTimer(workInProgress);

	  if (current$$1 !== null) {
	    // Reuse previous context list
	    workInProgress.contextDependencies = current$$1.contextDependencies;
	  }

	  if (enableProfilerTimer) {
	    // Don't update "base" render times for bailouts.
	    stopProfilerTimerIfRunning(workInProgress);
	  }

	  // Check if the children have any pending work.
	  var childExpirationTime = workInProgress.childExpirationTime;
	  if (childExpirationTime < renderExpirationTime) {
	    // The children don't have any work either. We can skip them.
	    // TODO: Once we add back resuming, we should check if the children are
	    // a work-in-progress set. If so, we need to transfer their effects.
	    return null;
	  } else {
	    // This fiber doesn't have work, but its subtree does. Clone the child
	    // fibers and continue.
	    cloneChildFibers(current$$1, workInProgress);
	    return workInProgress.child;
	  }
	}

	function beginWork(current$$1, workInProgress, renderExpirationTime) {
	  var updateExpirationTime = workInProgress.expirationTime;

	  if (current$$1 !== null) {
	    var oldProps = current$$1.memoizedProps;
	    var newProps = workInProgress.pendingProps;

	    if (oldProps !== newProps || hasContextChanged()) {
	      // If props or context changed, mark the fiber as having performed work.
	      // This may be unset if the props are determined to be equal later (memo).
	      didReceiveUpdate = true;
	    } else if (updateExpirationTime < renderExpirationTime) {
	      didReceiveUpdate = false;
	      // This fiber does not have any pending work. Bailout without entering
	      // the begin phase. There's still some bookkeeping we that needs to be done
	      // in this optimized path, mostly pushing stuff onto the stack.
	      switch (workInProgress.tag) {
	        case HostRoot:
	          pushHostRootContext(workInProgress);
	          resetHydrationState();
	          break;
	        case HostComponent:
	          pushHostContext(workInProgress);
	          break;
	        case ClassComponent:
	          {
	            var Component = workInProgress.type;
	            if (isContextProvider(Component)) {
	              pushContextProvider(workInProgress);
	            }
	            break;
	          }
	        case HostPortal:
	          pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo);
	          break;
	        case ContextProvider:
	          {
	            var newValue = workInProgress.memoizedProps.value;
	            pushProvider(workInProgress, newValue);
	            break;
	          }
	        case Profiler:
	          if (enableProfilerTimer) {
	            workInProgress.effectTag |= Update;
	          }
	          break;
	        case SuspenseComponent:
	          {
	            var state = workInProgress.memoizedState;
	            var didTimeout = state !== null;
	            if (didTimeout) {
	              // If this boundary is currently timed out, we need to decide
	              // whether to retry the primary children, or to skip over it and
	              // go straight to the fallback. Check the priority of the primary
	              var primaryChildFragment = workInProgress.child;
	              var primaryChildExpirationTime = primaryChildFragment.childExpirationTime;
	              if (primaryChildExpirationTime !== NoWork && primaryChildExpirationTime >= renderExpirationTime) {
	                // The primary children have pending work. Use the normal path
	                // to attempt to render the primary children again.
	                return updateSuspenseComponent(current$$1, workInProgress, renderExpirationTime);
	              } else {
	                // The primary children do not have pending work with sufficient
	                // priority. Bailout.
	                var child = bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
	                if (child !== null) {
	                  // The fallback children have pending work. Skip over the
	                  // primary children and work on the fallback.
	                  return child.sibling;
	                } else {
	                  return null;
	                }
	              }
	            }
	            break;
	          }
	        case DehydratedSuspenseComponent:
	          {
	            if (enableSuspenseServerRenderer) {
	              // We know that this component will suspend again because if it has
	              // been unsuspended it has committed as a regular Suspense component.
	              // If it needs to be retried, it should have work scheduled on it.
	              workInProgress.effectTag |= DidCapture;
	              break;
	            }
	          }
	      }
	      return bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
	    }
	  } else {
	    didReceiveUpdate = false;
	  }

	  // Before entering the begin phase, clear the expiration time.
	  workInProgress.expirationTime = NoWork;

	  switch (workInProgress.tag) {
	    case IndeterminateComponent:
	      {
	        var elementType = workInProgress.elementType;
	        return mountIndeterminateComponent(current$$1, workInProgress, elementType, renderExpirationTime);
	      }
	    case LazyComponent:
	      {
	        var _elementType = workInProgress.elementType;
	        return mountLazyComponent(current$$1, workInProgress, _elementType, updateExpirationTime, renderExpirationTime);
	      }
	    case FunctionComponent:
	      {
	        var _Component = workInProgress.type;
	        var unresolvedProps = workInProgress.pendingProps;
	        var resolvedProps = workInProgress.elementType === _Component ? unresolvedProps : resolveDefaultProps(_Component, unresolvedProps);
	        return updateFunctionComponent(current$$1, workInProgress, _Component, resolvedProps, renderExpirationTime);
	      }
	    case ClassComponent:
	      {
	        var _Component2 = workInProgress.type;
	        var _unresolvedProps = workInProgress.pendingProps;
	        var _resolvedProps = workInProgress.elementType === _Component2 ? _unresolvedProps : resolveDefaultProps(_Component2, _unresolvedProps);
	        return updateClassComponent(current$$1, workInProgress, _Component2, _resolvedProps, renderExpirationTime);
	      }
	    case HostRoot:
	      return updateHostRoot(current$$1, workInProgress, renderExpirationTime);
	    case HostComponent:
	      return updateHostComponent(current$$1, workInProgress, renderExpirationTime);
	    case HostText:
	      return updateHostText(current$$1, workInProgress);
	    case SuspenseComponent:
	      return updateSuspenseComponent(current$$1, workInProgress, renderExpirationTime);
	    case HostPortal:
	      return updatePortalComponent(current$$1, workInProgress, renderExpirationTime);
	    case ForwardRef:
	      {
	        var type = workInProgress.type;
	        var _unresolvedProps2 = workInProgress.pendingProps;
	        var _resolvedProps2 = workInProgress.elementType === type ? _unresolvedProps2 : resolveDefaultProps(type, _unresolvedProps2);
	        return updateForwardRef(current$$1, workInProgress, type, _resolvedProps2, renderExpirationTime);
	      }
	    case Fragment:
	      return updateFragment(current$$1, workInProgress, renderExpirationTime);
	    case Mode:
	      return updateMode(current$$1, workInProgress, renderExpirationTime);
	    case Profiler:
	      return updateProfiler(current$$1, workInProgress, renderExpirationTime);
	    case ContextProvider:
	      return updateContextProvider(current$$1, workInProgress, renderExpirationTime);
	    case ContextConsumer:
	      return updateContextConsumer(current$$1, workInProgress, renderExpirationTime);
	    case MemoComponent:
	      {
	        var _type2 = workInProgress.type;
	        var _unresolvedProps3 = workInProgress.pendingProps;
	        // Resolve outer props first, then resolve inner props.
	        var _resolvedProps3 = resolveDefaultProps(_type2, _unresolvedProps3);
	        {
	          if (workInProgress.type !== workInProgress.elementType) {
	            var outerPropTypes = _type2.propTypes;
	            if (outerPropTypes) {
	              checkPropTypes(outerPropTypes, _resolvedProps3, // Resolved for outer only
	              'prop', getComponentName(_type2), getCurrentFiberStackInDev);
	            }
	          }
	        }
	        _resolvedProps3 = resolveDefaultProps(_type2.type, _resolvedProps3);
	        return updateMemoComponent(current$$1, workInProgress, _type2, _resolvedProps3, updateExpirationTime, renderExpirationTime);
	      }
	    case SimpleMemoComponent:
	      {
	        return updateSimpleMemoComponent(current$$1, workInProgress, workInProgress.type, workInProgress.pendingProps, updateExpirationTime, renderExpirationTime);
	      }
	    case IncompleteClassComponent:
	      {
	        var _Component3 = workInProgress.type;
	        var _unresolvedProps4 = workInProgress.pendingProps;
	        var _resolvedProps4 = workInProgress.elementType === _Component3 ? _unresolvedProps4 : resolveDefaultProps(_Component3, _unresolvedProps4);
	        return mountIncompleteClassComponent(current$$1, workInProgress, _Component3, _resolvedProps4, renderExpirationTime);
	      }
	    case DehydratedSuspenseComponent:
	      {
	        if (enableSuspenseServerRenderer) {
	          return updateDehydratedSuspenseComponent(current$$1, workInProgress, renderExpirationTime);
	        }
	        break;
	      }
	  }
	  invariant(false, 'Unknown unit of work tag. This error is likely caused by a bug in React. Please file an issue.');
	}

	var valueCursor = createCursor(null);

	var rendererSigil = void 0;
	{
	  // Use this to detect multiple renderers using the same context
	  rendererSigil = {};
	}

	var currentlyRenderingFiber = null;
	var lastContextDependency = null;
	var lastContextWithAllBitsObserved = null;

	var isDisallowedContextReadInDEV = false;

	function resetContextDependences() {
	  // This is called right before React yields execution, to ensure `readContext`
	  // cannot be called outside the render phase.
	  currentlyRenderingFiber = null;
	  lastContextDependency = null;
	  lastContextWithAllBitsObserved = null;
	  {
	    isDisallowedContextReadInDEV = false;
	  }
	}

	function enterDisallowedContextReadInDEV() {
	  {
	    isDisallowedContextReadInDEV = true;
	  }
	}

	function exitDisallowedContextReadInDEV() {
	  {
	    isDisallowedContextReadInDEV = false;
	  }
	}

	function pushProvider(providerFiber, nextValue) {
	  var context = providerFiber.type._context;

	  if (isPrimaryRenderer) {
	    push(valueCursor, context._currentValue, providerFiber);

	    context._currentValue = nextValue;
	    {
	      !(context._currentRenderer === undefined || context._currentRenderer === null || context._currentRenderer === rendererSigil) ? warningWithoutStack$1(false, 'Detected multiple renderers concurrently rendering the ' + 'same context provider. This is currently unsupported.') : void 0;
	      context._currentRenderer = rendererSigil;
	    }
	  } else {
	    push(valueCursor, context._currentValue2, providerFiber);

	    context._currentValue2 = nextValue;
	    {
	      !(context._currentRenderer2 === undefined || context._currentRenderer2 === null || context._currentRenderer2 === rendererSigil) ? warningWithoutStack$1(false, 'Detected multiple renderers concurrently rendering the ' + 'same context provider. This is currently unsupported.') : void 0;
	      context._currentRenderer2 = rendererSigil;
	    }
	  }
	}

	function popProvider(providerFiber) {
	  var currentValue = valueCursor.current;

	  pop(valueCursor, providerFiber);

	  var context = providerFiber.type._context;
	  if (isPrimaryRenderer) {
	    context._currentValue = currentValue;
	  } else {
	    context._currentValue2 = currentValue;
	  }
	}

	function calculateChangedBits(context, newValue, oldValue) {
	  if (is(oldValue, newValue)) {
	    // No change
	    return 0;
	  } else {
	    var changedBits = typeof context._calculateChangedBits === 'function' ? context._calculateChangedBits(oldValue, newValue) : maxSigned31BitInt;

	    {
	      !((changedBits & maxSigned31BitInt) === changedBits) ? warning$1(false, 'calculateChangedBits: Expected the return value to be a ' + '31-bit integer. Instead received: %s', changedBits) : void 0;
	    }
	    return changedBits | 0;
	  }
	}

	function scheduleWorkOnParentPath(parent, renderExpirationTime) {
	  // Update the child expiration time of all the ancestors, including
	  // the alternates.
	  var node = parent;
	  while (node !== null) {
	    var alternate = node.alternate;
	    if (node.childExpirationTime < renderExpirationTime) {
	      node.childExpirationTime = renderExpirationTime;
	      if (alternate !== null && alternate.childExpirationTime < renderExpirationTime) {
	        alternate.childExpirationTime = renderExpirationTime;
	      }
	    } else if (alternate !== null && alternate.childExpirationTime < renderExpirationTime) {
	      alternate.childExpirationTime = renderExpirationTime;
	    } else {
	      // Neither alternate was updated, which means the rest of the
	      // ancestor path already has sufficient priority.
	      break;
	    }
	    node = node.return;
	  }
	}

	function propagateContextChange(workInProgress, context, changedBits, renderExpirationTime) {
	  var fiber = workInProgress.child;
	  if (fiber !== null) {
	    // Set the return pointer of the child to the work-in-progress fiber.
	    fiber.return = workInProgress;
	  }
	  while (fiber !== null) {
	    var nextFiber = void 0;

	    // Visit this fiber.
	    var list = fiber.contextDependencies;
	    if (list !== null) {
	      nextFiber = fiber.child;

	      var dependency = list.first;
	      while (dependency !== null) {
	        // Check if the context matches.
	        if (dependency.context === context && (dependency.observedBits & changedBits) !== 0) {
	          // Match! Schedule an update on this fiber.

	          if (fiber.tag === ClassComponent) {
	            // Schedule a force update on the work-in-progress.
	            var update = createUpdate(renderExpirationTime);
	            update.tag = ForceUpdate;
	            // TODO: Because we don't have a work-in-progress, this will add the
	            // update to the current fiber, too, which means it will persist even if
	            // this render is thrown away. Since it's a race condition, not sure it's
	            // worth fixing.
	            enqueueUpdate(fiber, update);
	          }

	          if (fiber.expirationTime < renderExpirationTime) {
	            fiber.expirationTime = renderExpirationTime;
	          }
	          var alternate = fiber.alternate;
	          if (alternate !== null && alternate.expirationTime < renderExpirationTime) {
	            alternate.expirationTime = renderExpirationTime;
	          }

	          scheduleWorkOnParentPath(fiber.return, renderExpirationTime);

	          // Mark the expiration time on the list, too.
	          if (list.expirationTime < renderExpirationTime) {
	            list.expirationTime = renderExpirationTime;
	          }

	          // Since we already found a match, we can stop traversing the
	          // dependency list.
	          break;
	        }
	        dependency = dependency.next;
	      }
	    } else if (fiber.tag === ContextProvider) {
	      // Don't scan deeper if this is a matching provider
	      nextFiber = fiber.type === workInProgress.type ? null : fiber.child;
	    } else if (enableSuspenseServerRenderer && fiber.tag === DehydratedSuspenseComponent) {
	      // If a dehydrated suspense component is in this subtree, we don't know
	      // if it will have any context consumers in it. The best we can do is
	      // mark it as having updates on its children.
	      if (fiber.expirationTime < renderExpirationTime) {
	        fiber.expirationTime = renderExpirationTime;
	      }
	      var _alternate = fiber.alternate;
	      if (_alternate !== null && _alternate.expirationTime < renderExpirationTime) {
	        _alternate.expirationTime = renderExpirationTime;
	      }
	      // This is intentionally passing this fiber as the parent
	      // because we want to schedule this fiber as having work
	      // on its children. We'll use the childExpirationTime on
	      // this fiber to indicate that a context has changed.
	      scheduleWorkOnParentPath(fiber, renderExpirationTime);
	      nextFiber = fiber.sibling;
	    } else {
	      // Traverse down.
	      nextFiber = fiber.child;
	    }

	    if (nextFiber !== null) {
	      // Set the return pointer of the child to the work-in-progress fiber.
	      nextFiber.return = fiber;
	    } else {
	      // No child. Traverse to next sibling.
	      nextFiber = fiber;
	      while (nextFiber !== null) {
	        if (nextFiber === workInProgress) {
	          // We're back to the root of this subtree. Exit.
	          nextFiber = null;
	          break;
	        }
	        var sibling = nextFiber.sibling;
	        if (sibling !== null) {
	          // Set the return pointer of the sibling to the work-in-progress fiber.
	          sibling.return = nextFiber.return;
	          nextFiber = sibling;
	          break;
	        }
	        // No more siblings. Traverse up.
	        nextFiber = nextFiber.return;
	      }
	    }
	    fiber = nextFiber;
	  }
	}

	function prepareToReadContext(workInProgress, renderExpirationTime) {
	  currentlyRenderingFiber = workInProgress;
	  lastContextDependency = null;
	  lastContextWithAllBitsObserved = null;

	  var currentDependencies = workInProgress.contextDependencies;
	  if (currentDependencies !== null && currentDependencies.expirationTime >= renderExpirationTime) {
	    // Context list has a pending update. Mark that this fiber performed work.
	    markWorkInProgressReceivedUpdate();
	  }

	  // Reset the work-in-progress list
	  workInProgress.contextDependencies = null;
	}

	function readContext(context, observedBits) {
	  {
	    // This warning would fire if you read context inside a Hook like useMemo.
	    // Unlike the class check below, it's not enforced in production for perf.
	    !!isDisallowedContextReadInDEV ? warning$1(false, 'Context can only be read while React is rendering. ' + 'In classes, you can read it in the render method or getDerivedStateFromProps. ' + 'In function components, you can read it directly in the function body, but not ' + 'inside Hooks like useReducer() or useMemo().') : void 0;
	  }

	  if (lastContextWithAllBitsObserved === context) {
	    // Nothing to do. We already observe everything in this context.
	  } else if (observedBits === false || observedBits === 0) {
	    // Do not observe any updates.
	  } else {
	    var resolvedObservedBits = void 0; // Avoid deopting on observable arguments or heterogeneous types.
	    if (typeof observedBits !== 'number' || observedBits === maxSigned31BitInt) {
	      // Observe all updates.
	      lastContextWithAllBitsObserved = context;
	      resolvedObservedBits = maxSigned31BitInt;
	    } else {
	      resolvedObservedBits = observedBits;
	    }

	    var contextItem = {
	      context: context,
	      observedBits: resolvedObservedBits,
	      next: null
	    };

	    if (lastContextDependency === null) {
	      !(currentlyRenderingFiber !== null) ? invariant(false, 'Context can only be read while React is rendering. In classes, you can read it in the render method or getDerivedStateFromProps. In function components, you can read it directly in the function body, but not inside Hooks like useReducer() or useMemo().') : void 0;

	      // This is the first dependency for this component. Create a new list.
	      lastContextDependency = contextItem;
	      currentlyRenderingFiber.contextDependencies = {
	        first: contextItem,
	        expirationTime: NoWork
	      };
	    } else {
	      // Append a new context item.
	      lastContextDependency = lastContextDependency.next = contextItem;
	    }
	  }
	  return isPrimaryRenderer ? context._currentValue : context._currentValue2;
	}

	// UpdateQueue is a linked list of prioritized updates.
	//
	// Like fibers, update queues come in pairs: a current queue, which represents
	// the visible state of the screen, and a work-in-progress queue, which can be
	// mutated and processed asynchronously before it is committed — a form of
	// double buffering. If a work-in-progress render is discarded before finishing,
	// we create a new work-in-progress by cloning the current queue.
	//
	// Both queues share a persistent, singly-linked list structure. To schedule an
	// update, we append it to the end of both queues. Each queue maintains a
	// pointer to first update in the persistent list that hasn't been processed.
	// The work-in-progress pointer always has a position equal to or greater than
	// the current queue, since we always work on that one. The current queue's
	// pointer is only updated during the commit phase, when we swap in the
	// work-in-progress.
	//
	// For example:
	//
	//   Current pointer:           A - B - C - D - E - F
	//   Work-in-progress pointer:              D - E - F
	//                                          ^
	//                                          The work-in-progress queue has
	//                                          processed more updates than current.
	//
	// The reason we append to both queues is because otherwise we might drop
	// updates without ever processing them. For example, if we only add updates to
	// the work-in-progress queue, some updates could be lost whenever a work-in
	// -progress render restarts by cloning from current. Similarly, if we only add
	// updates to the current queue, the updates will be lost whenever an already
	// in-progress queue commits and swaps with the current queue. However, by
	// adding to both queues, we guarantee that the update will be part of the next
	// work-in-progress. (And because the work-in-progress queue becomes the
	// current queue once it commits, there's no danger of applying the same
	// update twice.)
	//
	// Prioritization
	// --------------
	//
	// Updates are not sorted by priority, but by insertion; new updates are always
	// appended to the end of the list.
	//
	// The priority is still important, though. When processing the update queue
	// during the render phase, only the updates with sufficient priority are
	// included in the result. If we skip an update because it has insufficient
	// priority, it remains in the queue to be processed later, during a lower
	// priority render. Crucially, all updates subsequent to a skipped update also
	// remain in the queue *regardless of their priority*. That means high priority
	// updates are sometimes processed twice, at two separate priorities. We also
	// keep track of a base state, that represents the state before the first
	// update in the queue is applied.
	//
	// For example:
	//
	//   Given a base state of '', and the following queue of updates
	//
	//     A1 - B2 - C1 - D2
	//
	//   where the number indicates the priority, and the update is applied to the
	//   previous state by appending a letter, React will process these updates as
	//   two separate renders, one per distinct priority level:
	//
	//   First render, at priority 1:
	//     Base state: ''
	//     Updates: [A1, C1]
	//     Result state: 'AC'
	//
	//   Second render, at priority 2:
	//     Base state: 'A'            <-  The base state does not include C1,
	//                                    because B2 was skipped.
	//     Updates: [B2, C1, D2]      <-  C1 was rebased on top of B2
	//     Result state: 'ABCD'
	//
	// Because we process updates in insertion order, and rebase high priority
	// updates when preceding updates are skipped, the final result is deterministic
	// regardless of priority. Intermediate state may vary according to system
	// resources, but the final state is always the same.

	var UpdateState = 0;
	var ReplaceState = 1;
	var ForceUpdate = 2;
	var CaptureUpdate = 3;

	// Global state that is reset at the beginning of calling `processUpdateQueue`.
	// It should only be read right after calling `processUpdateQueue`, via
	// `checkHasForceUpdateAfterProcessing`.
	var hasForceUpdate = false;

	var didWarnUpdateInsideUpdate = void 0;
	var currentlyProcessingQueue = void 0;
	var resetCurrentlyProcessingQueue = void 0;
	{
	  didWarnUpdateInsideUpdate = false;
	  currentlyProcessingQueue = null;
	  resetCurrentlyProcessingQueue = function () {
	    currentlyProcessingQueue = null;
	  };
	}

	function createUpdateQueue(baseState) {
	  var queue = {
	    baseState: baseState,
	    firstUpdate: null,
	    lastUpdate: null,
	    firstCapturedUpdate: null,
	    lastCapturedUpdate: null,
	    firstEffect: null,
	    lastEffect: null,
	    firstCapturedEffect: null,
	    lastCapturedEffect: null
	  };
	  return queue;
	}

	function cloneUpdateQueue(currentQueue) {
	  var queue = {
	    baseState: currentQueue.baseState,
	    firstUpdate: currentQueue.firstUpdate,
	    lastUpdate: currentQueue.lastUpdate,

	    // TODO: With resuming, if we bail out and resuse the child tree, we should
	    // keep these effects.
	    firstCapturedUpdate: null,
	    lastCapturedUpdate: null,

	    firstEffect: null,
	    lastEffect: null,

	    firstCapturedEffect: null,
	    lastCapturedEffect: null
	  };
	  return queue;
	}

	function createUpdate(expirationTime) {
	  return {
	    expirationTime: expirationTime,

	    tag: UpdateState,
	    payload: null,
	    callback: null,

	    next: null,
	    nextEffect: null
	  };
	}

	function appendUpdateToQueue(queue, update) {
	  // Append the update to the end of the list.
	  if (queue.lastUpdate === null) {
	    // Queue is empty
	    queue.firstUpdate = queue.lastUpdate = update;
	  } else {
	    queue.lastUpdate.next = update;
	    queue.lastUpdate = update;
	  }
	}

	function enqueueUpdate(fiber, update) {
	  // Update queues are created lazily.
	  var alternate = fiber.alternate;
	  var queue1 = void 0;
	  var queue2 = void 0;
	  if (alternate === null) {
	    // There's only one fiber.
	    queue1 = fiber.updateQueue;
	    queue2 = null;
	    if (queue1 === null) {
	      queue1 = fiber.updateQueue = createUpdateQueue(fiber.memoizedState);
	    }
	  } else {
	    // There are two owners.
	    queue1 = fiber.updateQueue;
	    queue2 = alternate.updateQueue;
	    if (queue1 === null) {
	      if (queue2 === null) {
	        // Neither fiber has an update queue. Create new ones.
	        queue1 = fiber.updateQueue = createUpdateQueue(fiber.memoizedState);
	        queue2 = alternate.updateQueue = createUpdateQueue(alternate.memoizedState);
	      } else {
	        // Only one fiber has an update queue. Clone to create a new one.
	        queue1 = fiber.updateQueue = cloneUpdateQueue(queue2);
	      }
	    } else {
	      if (queue2 === null) {
	        // Only one fiber has an update queue. Clone to create a new one.
	        queue2 = alternate.updateQueue = cloneUpdateQueue(queue1);
	      } else {
	        // Both owners have an update queue.
	      }
	    }
	  }
	  if (queue2 === null || queue1 === queue2) {
	    // There's only a single queue.
	    appendUpdateToQueue(queue1, update);
	  } else {
	    // There are two queues. We need to append the update to both queues,
	    // while accounting for the persistent structure of the list — we don't
	    // want the same update to be added multiple times.
	    if (queue1.lastUpdate === null || queue2.lastUpdate === null) {
	      // One of the queues is not empty. We must add the update to both queues.
	      appendUpdateToQueue(queue1, update);
	      appendUpdateToQueue(queue2, update);
	    } else {
	      // Both queues are non-empty. The last update is the same in both lists,
	      // because of structural sharing. So, only append to one of the lists.
	      appendUpdateToQueue(queue1, update);
	      // But we still need to update the `lastUpdate` pointer of queue2.
	      queue2.lastUpdate = update;
	    }
	  }

	  {
	    if (fiber.tag === ClassComponent && (currentlyProcessingQueue === queue1 || queue2 !== null && currentlyProcessingQueue === queue2) && !didWarnUpdateInsideUpdate) {
	      warningWithoutStack$1(false, 'An update (setState, replaceState, or forceUpdate) was scheduled ' + 'from inside an update function. Update functions should be pure, ' + 'with zero side-effects. Consider using componentDidUpdate or a ' + 'callback.');
	      didWarnUpdateInsideUpdate = true;
	    }
	  }
	}

	function enqueueCapturedUpdate(workInProgress, update) {
	  // Captured updates go into a separate list, and only on the work-in-
	  // progress queue.
	  var workInProgressQueue = workInProgress.updateQueue;
	  if (workInProgressQueue === null) {
	    workInProgressQueue = workInProgress.updateQueue = createUpdateQueue(workInProgress.memoizedState);
	  } else {
	    // TODO: I put this here rather than createWorkInProgress so that we don't
	    // clone the queue unnecessarily. There's probably a better way to
	    // structure this.
	    workInProgressQueue = ensureWorkInProgressQueueIsAClone(workInProgress, workInProgressQueue);
	  }

	  // Append the update to the end of the list.
	  if (workInProgressQueue.lastCapturedUpdate === null) {
	    // This is the first render phase update
	    workInProgressQueue.firstCapturedUpdate = workInProgressQueue.lastCapturedUpdate = update;
	  } else {
	    workInProgressQueue.lastCapturedUpdate.next = update;
	    workInProgressQueue.lastCapturedUpdate = update;
	  }
	}

	function ensureWorkInProgressQueueIsAClone(workInProgress, queue) {
	  var current = workInProgress.alternate;
	  if (current !== null) {
	    // If the work-in-progress queue is equal to the current queue,
	    // we need to clone it first.
	    if (queue === current.updateQueue) {
	      queue = workInProgress.updateQueue = cloneUpdateQueue(queue);
	    }
	  }
	  return queue;
	}

	function getStateFromUpdate(workInProgress, queue, update, prevState, nextProps, instance) {
	  switch (update.tag) {
	    case ReplaceState:
	      {
	        var _payload = update.payload;
	        if (typeof _payload === 'function') {
	          // Updater function
	          {
	            enterDisallowedContextReadInDEV();
	            if (debugRenderPhaseSideEffects || debugRenderPhaseSideEffectsForStrictMode && workInProgress.mode & StrictMode) {
	              _payload.call(instance, prevState, nextProps);
	            }
	          }
	          var nextState = _payload.call(instance, prevState, nextProps);
	          {
	            exitDisallowedContextReadInDEV();
	          }
	          return nextState;
	        }
	        // State object
	        return _payload;
	      }
	    case CaptureUpdate:
	      {
	        workInProgress.effectTag = workInProgress.effectTag & ~ShouldCapture | DidCapture;
	      }
	    // Intentional fallthrough
	    case UpdateState:
	      {
	        var _payload2 = update.payload;
	        var partialState = void 0;
	        if (typeof _payload2 === 'function') {
	          // Updater function
	          {
	            enterDisallowedContextReadInDEV();
	            if (debugRenderPhaseSideEffects || debugRenderPhaseSideEffectsForStrictMode && workInProgress.mode & StrictMode) {
	              _payload2.call(instance, prevState, nextProps);
	            }
	          }
	          partialState = _payload2.call(instance, prevState, nextProps);
	          {
	            exitDisallowedContextReadInDEV();
	          }
	        } else {
	          // Partial state object
	          partialState = _payload2;
	        }
	        if (partialState === null || partialState === undefined) {
	          // Null and undefined are treated as no-ops.
	          return prevState;
	        }
	        // Merge the partial state and the previous state.
	        return _assign({}, prevState, partialState);
	      }
	    case ForceUpdate:
	      {
	        hasForceUpdate = true;
	        return prevState;
	      }
	  }
	  return prevState;
	}

	function processUpdateQueue(workInProgress, queue, props, instance, renderExpirationTime) {
	  hasForceUpdate = false;

	  queue = ensureWorkInProgressQueueIsAClone(workInProgress, queue);

	  {
	    currentlyProcessingQueue = queue;
	  }

	  // These values may change as we process the queue.
	  var newBaseState = queue.baseState;
	  var newFirstUpdate = null;
	  var newExpirationTime = NoWork;

	  // Iterate through the list of updates to compute the result.
	  var update = queue.firstUpdate;
	  var resultState = newBaseState;
	  while (update !== null) {
	    var updateExpirationTime = update.expirationTime;
	    if (updateExpirationTime < renderExpirationTime) {
	      // This update does not have sufficient priority. Skip it.
	      if (newFirstUpdate === null) {
	        // This is the first skipped update. It will be the first update in
	        // the new list.
	        newFirstUpdate = update;
	        // Since this is the first update that was skipped, the current result
	        // is the new base state.
	        newBaseState = resultState;
	      }
	      // Since this update will remain in the list, update the remaining
	      // expiration time.
	      if (newExpirationTime < updateExpirationTime) {
	        newExpirationTime = updateExpirationTime;
	      }
	    } else {
	      // This update does have sufficient priority. Process it and compute
	      // a new result.
	      resultState = getStateFromUpdate(workInProgress, queue, update, resultState, props, instance);
	      var _callback = update.callback;
	      if (_callback !== null) {
	        workInProgress.effectTag |= Callback;
	        // Set this to null, in case it was mutated during an aborted render.
	        update.nextEffect = null;
	        if (queue.lastEffect === null) {
	          queue.firstEffect = queue.lastEffect = update;
	        } else {
	          queue.lastEffect.nextEffect = update;
	          queue.lastEffect = update;
	        }
	      }
	    }
	    // Continue to the next update.
	    update = update.next;
	  }

	  // Separately, iterate though the list of captured updates.
	  var newFirstCapturedUpdate = null;
	  update = queue.firstCapturedUpdate;
	  while (update !== null) {
	    var _updateExpirationTime = update.expirationTime;
	    if (_updateExpirationTime < renderExpirationTime) {
	      // This update does not have sufficient priority. Skip it.
	      if (newFirstCapturedUpdate === null) {
	        // This is the first skipped captured update. It will be the first
	        // update in the new list.
	        newFirstCapturedUpdate = update;
	        // If this is the first update that was skipped, the current result is
	        // the new base state.
	        if (newFirstUpdate === null) {
	          newBaseState = resultState;
	        }
	      }
	      // Since this update will remain in the list, update the remaining
	      // expiration time.
	      if (newExpirationTime < _updateExpirationTime) {
	        newExpirationTime = _updateExpirationTime;
	      }
	    } else {
	      // This update does have sufficient priority. Process it and compute
	      // a new result.
	      resultState = getStateFromUpdate(workInProgress, queue, update, resultState, props, instance);
	      var _callback2 = update.callback;
	      if (_callback2 !== null) {
	        workInProgress.effectTag |= Callback;
	        // Set this to null, in case it was mutated during an aborted render.
	        update.nextEffect = null;
	        if (queue.lastCapturedEffect === null) {
	          queue.firstCapturedEffect = queue.lastCapturedEffect = update;
	        } else {
	          queue.lastCapturedEffect.nextEffect = update;
	          queue.lastCapturedEffect = update;
	        }
	      }
	    }
	    update = update.next;
	  }

	  if (newFirstUpdate === null) {
	    queue.lastUpdate = null;
	  }
	  if (newFirstCapturedUpdate === null) {
	    queue.lastCapturedUpdate = null;
	  } else {
	    workInProgress.effectTag |= Callback;
	  }
	  if (newFirstUpdate === null && newFirstCapturedUpdate === null) {
	    // We processed every update, without skipping. That means the new base
	    // state is the same as the result state.
	    newBaseState = resultState;
	  }

	  queue.baseState = newBaseState;
	  queue.firstUpdate = newFirstUpdate;
	  queue.firstCapturedUpdate = newFirstCapturedUpdate;

	  // Set the remaining expiration time to be whatever is remaining in the queue.
	  // This should be fine because the only two other things that contribute to
	  // expiration time are props and context. We're already in the middle of the
	  // begin phase by the time we start processing the queue, so we've already
	  // dealt with the props. Context in components that specify
	  // shouldComponentUpdate is tricky; but we'll have to account for
	  // that regardless.
	  workInProgress.expirationTime = newExpirationTime;
	  workInProgress.memoizedState = resultState;

	  {
	    currentlyProcessingQueue = null;
	  }
	}

	function callCallback(callback, context) {
	  !(typeof callback === 'function') ? invariant(false, 'Invalid argument passed as callback. Expected a function. Instead received: %s', callback) : void 0;
	  callback.call(context);
	}

	function resetHasForceUpdateBeforeProcessing() {
	  hasForceUpdate = false;
	}

	function checkHasForceUpdateAfterProcessing() {
	  return hasForceUpdate;
	}

	function commitUpdateQueue(finishedWork, finishedQueue, instance, renderExpirationTime) {
	  // If the finished render included captured updates, and there are still
	  // lower priority updates left over, we need to keep the captured updates
	  // in the queue so that they are rebased and not dropped once we process the
	  // queue again at the lower priority.
	  if (finishedQueue.firstCapturedUpdate !== null) {
	    // Join the captured update list to the end of the normal list.
	    if (finishedQueue.lastUpdate !== null) {
	      finishedQueue.lastUpdate.next = finishedQueue.firstCapturedUpdate;
	      finishedQueue.lastUpdate = finishedQueue.lastCapturedUpdate;
	    }
	    // Clear the list of captured updates.
	    finishedQueue.firstCapturedUpdate = finishedQueue.lastCapturedUpdate = null;
	  }

	  // Commit the effects
	  commitUpdateEffects(finishedQueue.firstEffect, instance);
	  finishedQueue.firstEffect = finishedQueue.lastEffect = null;

	  commitUpdateEffects(finishedQueue.firstCapturedEffect, instance);
	  finishedQueue.firstCapturedEffect = finishedQueue.lastCapturedEffect = null;
	}

	function commitUpdateEffects(effect, instance) {
	  while (effect !== null) {
	    var _callback3 = effect.callback;
	    if (_callback3 !== null) {
	      effect.callback = null;
	      callCallback(_callback3, instance);
	    }
	    effect = effect.nextEffect;
	  }
	}

	function createCapturedValue(value, source) {
	  // If the value is an error, call this function immediately after it is thrown
	  // so the stack is accurate.
	  return {
	    value: value,
	    source: source,
	    stack: getStackByFiberInDevAndProd(source)
	  };
	}

	function markUpdate(workInProgress) {
	  // Tag the fiber with an update effect. This turns a Placement into
	  // a PlacementAndUpdate.
	  workInProgress.effectTag |= Update;
	}

	function markRef$1(workInProgress) {
	  workInProgress.effectTag |= Ref;
	}

	var appendAllChildren = void 0;
	var updateHostContainer = void 0;
	var updateHostComponent$1 = void 0;
	var updateHostText$1 = void 0;
	if (supportsMutation) {
	  // Mutation mode

	  appendAllChildren = function (parent, workInProgress, needsVisibilityToggle, isHidden) {
	    // We only have the top Fiber that was created but we need recurse down its
	    // children to find all the terminal nodes.
	    var node = workInProgress.child;
	    while (node !== null) {
	      if (node.tag === HostComponent || node.tag === HostText) {
	        appendInitialChild(parent, node.stateNode);
	      } else if (node.tag === HostPortal) {
	        // If we have a portal child, then we don't want to traverse
	        // down its children. Instead, we'll get insertions from each child in
	        // the portal directly.
	      } else if (node.child !== null) {
	        node.child.return = node;
	        node = node.child;
	        continue;
	      }
	      if (node === workInProgress) {
	        return;
	      }
	      while (node.sibling === null) {
	        if (node.return === null || node.return === workInProgress) {
	          return;
	        }
	        node = node.return;
	      }
	      node.sibling.return = node.return;
	      node = node.sibling;
	    }
	  };

	  updateHostContainer = function (workInProgress) {
	    // Noop
	  };
	  updateHostComponent$1 = function (current, workInProgress, type, newProps, rootContainerInstance) {
	    // If we have an alternate, that means this is an update and we need to
	    // schedule a side-effect to do the updates.
	    var oldProps = current.memoizedProps;
	    if (oldProps === newProps) {
	      // In mutation mode, this is sufficient for a bailout because
	      // we won't touch this node even if children changed.
	      return;
	    }

	    // If we get updated because one of our children updated, we don't
	    // have newProps so we'll have to reuse them.
	    // TODO: Split the update API as separate for the props vs. children.
	    // Even better would be if children weren't special cased at all tho.
	    var instance = workInProgress.stateNode;
	    var currentHostContext = getHostContext();
	    // TODO: Experiencing an error where oldProps is null. Suggests a host
	    // component is hitting the resume path. Figure out why. Possibly
	    // related to `hidden`.
	    var updatePayload = prepareUpdate(instance, type, oldProps, newProps, rootContainerInstance, currentHostContext);
	    // TODO: Type this specific to this type of component.
	    workInProgress.updateQueue = updatePayload;
	    // If the update payload indicates that there is a change or if there
	    // is a new ref we mark this as an update. All the work is done in commitWork.
	    if (updatePayload) {
	      markUpdate(workInProgress);
	    }
	  };
	  updateHostText$1 = function (current, workInProgress, oldText, newText) {
	    // If the text differs, mark it as an update. All the work in done in commitWork.
	    if (oldText !== newText) {
	      markUpdate(workInProgress);
	    }
	  };
	} else if (supportsPersistence) {
	  // Persistent host tree mode

	  appendAllChildren = function (parent, workInProgress, needsVisibilityToggle, isHidden) {
	    // We only have the top Fiber that was created but we need recurse down its
	    // children to find all the terminal nodes.
	    var node = workInProgress.child;
	    while (node !== null) {
	      // eslint-disable-next-line no-labels
	      branches: if (node.tag === HostComponent) {
	        var instance = node.stateNode;
	        if (needsVisibilityToggle) {
	          var props = node.memoizedProps;
	          var type = node.type;
	          if (isHidden) {
	            // This child is inside a timed out tree. Hide it.
	            instance = cloneHiddenInstance(instance, type, props, node);
	          } else {
	            // This child was previously inside a timed out tree. If it was not
	            // updated during this render, it may need to be unhidden. Clone
	            // again to be sure.
	            instance = cloneUnhiddenInstance(instance, type, props, node);
	          }
	          node.stateNode = instance;
	        }
	        appendInitialChild(parent, instance);
	      } else if (node.tag === HostText) {
	        var _instance = node.stateNode;
	        if (needsVisibilityToggle) {
	          var text = node.memoizedProps;
	          var rootContainerInstance = getRootHostContainer();
	          var currentHostContext = getHostContext();
	          if (isHidden) {
	            _instance = createHiddenTextInstance(text, rootContainerInstance, currentHostContext, workInProgress);
	          } else {
	            _instance = createTextInstance(text, rootContainerInstance, currentHostContext, workInProgress);
	          }
	          node.stateNode = _instance;
	        }
	        appendInitialChild(parent, _instance);
	      } else if (node.tag === HostPortal) {
	        // If we have a portal child, then we don't want to traverse
	        // down its children. Instead, we'll get insertions from each child in
	        // the portal directly.
	      } else if (node.tag === SuspenseComponent) {
	        var current = node.alternate;
	        if (current !== null) {
	          var oldState = current.memoizedState;
	          var newState = node.memoizedState;
	          var oldIsHidden = oldState !== null;
	          var newIsHidden = newState !== null;
	          if (oldIsHidden !== newIsHidden) {
	            // The placeholder either just timed out or switched back to the normal
	            // children after having previously timed out. Toggle the visibility of
	            // the direct host children.
	            var primaryChildParent = newIsHidden ? node.child : node;
	            if (primaryChildParent !== null) {
	              appendAllChildren(parent, primaryChildParent, true, newIsHidden);
	            }
	            // eslint-disable-next-line no-labels
	            break branches;
	          }
	        }
	        if (node.child !== null) {
	          // Continue traversing like normal
	          node.child.return = node;
	          node = node.child;
	          continue;
	        }
	      } else if (node.child !== null) {
	        node.child.return = node;
	        node = node.child;
	        continue;
	      }
	      // $FlowFixMe This is correct but Flow is confused by the labeled break.
	      node = node;
	      if (node === workInProgress) {
	        return;
	      }
	      while (node.sibling === null) {
	        if (node.return === null || node.return === workInProgress) {
	          return;
	        }
	        node = node.return;
	      }
	      node.sibling.return = node.return;
	      node = node.sibling;
	    }
	  };

	  // An unfortunate fork of appendAllChildren because we have two different parent types.
	  var appendAllChildrenToContainer = function (containerChildSet, workInProgress, needsVisibilityToggle, isHidden) {
	    // We only have the top Fiber that was created but we need recurse down its
	    // children to find all the terminal nodes.
	    var node = workInProgress.child;
	    while (node !== null) {
	      // eslint-disable-next-line no-labels
	      branches: if (node.tag === HostComponent) {
	        var instance = node.stateNode;
	        if (needsVisibilityToggle) {
	          var props = node.memoizedProps;
	          var type = node.type;
	          if (isHidden) {
	            // This child is inside a timed out tree. Hide it.
	            instance = cloneHiddenInstance(instance, type, props, node);
	          } else {
	            // This child was previously inside a timed out tree. If it was not
	            // updated during this render, it may need to be unhidden. Clone
	            // again to be sure.
	            instance = cloneUnhiddenInstance(instance, type, props, node);
	          }
	          node.stateNode = instance;
	        }
	        appendChildToContainerChildSet(containerChildSet, instance);
	      } else if (node.tag === HostText) {
	        var _instance2 = node.stateNode;
	        if (needsVisibilityToggle) {
	          var text = node.memoizedProps;
	          var rootContainerInstance = getRootHostContainer();
	          var currentHostContext = getHostContext();
	          if (isHidden) {
	            _instance2 = createHiddenTextInstance(text, rootContainerInstance, currentHostContext, workInProgress);
	          } else {
	            _instance2 = createTextInstance(text, rootContainerInstance, currentHostContext, workInProgress);
	          }
	          node.stateNode = _instance2;
	        }
	        appendChildToContainerChildSet(containerChildSet, _instance2);
	      } else if (node.tag === HostPortal) {
	        // If we have a portal child, then we don't want to traverse
	        // down its children. Instead, we'll get insertions from each child in
	        // the portal directly.
	      } else if (node.tag === SuspenseComponent) {
	        var current = node.alternate;
	        if (current !== null) {
	          var oldState = current.memoizedState;
	          var newState = node.memoizedState;
	          var oldIsHidden = oldState !== null;
	          var newIsHidden = newState !== null;
	          if (oldIsHidden !== newIsHidden) {
	            // The placeholder either just timed out or switched back to the normal
	            // children after having previously timed out. Toggle the visibility of
	            // the direct host children.
	            var primaryChildParent = newIsHidden ? node.child : node;
	            if (primaryChildParent !== null) {
	              appendAllChildrenToContainer(containerChildSet, primaryChildParent, true, newIsHidden);
	            }
	            // eslint-disable-next-line no-labels
	            break branches;
	          }
	        }
	        if (node.child !== null) {
	          // Continue traversing like normal
	          node.child.return = node;
	          node = node.child;
	          continue;
	        }
	      } else if (node.child !== null) {
	        node.child.return = node;
	        node = node.child;
	        continue;
	      }
	      // $FlowFixMe This is correct but Flow is confused by the labeled break.
	      node = node;
	      if (node === workInProgress) {
	        return;
	      }
	      while (node.sibling === null) {
	        if (node.return === null || node.return === workInProgress) {
	          return;
	        }
	        node = node.return;
	      }
	      node.sibling.return = node.return;
	      node = node.sibling;
	    }
	  };
	  updateHostContainer = function (workInProgress) {
	    var portalOrRoot = workInProgress.stateNode;
	    var childrenUnchanged = workInProgress.firstEffect === null;
	    if (childrenUnchanged) {
	      // No changes, just reuse the existing instance.
	    } else {
	      var container = portalOrRoot.containerInfo;
	      var newChildSet = createContainerChildSet(container);
	      // If children might have changed, we have to add them all to the set.
	      appendAllChildrenToContainer(newChildSet, workInProgress, false, false);
	      portalOrRoot.pendingChildren = newChildSet;
	      // Schedule an update on the container to swap out the container.
	      markUpdate(workInProgress);
	      finalizeContainerChildren(container, newChildSet);
	    }
	  };
	  updateHostComponent$1 = function (current, workInProgress, type, newProps, rootContainerInstance) {
	    var currentInstance = current.stateNode;
	    var oldProps = current.memoizedProps;
	    // If there are no effects associated with this node, then none of our children had any updates.
	    // This guarantees that we can reuse all of them.
	    var childrenUnchanged = workInProgress.firstEffect === null;
	    if (childrenUnchanged && oldProps === newProps) {
	      // No changes, just reuse the existing instance.
	      // Note that this might release a previous clone.
	      workInProgress.stateNode = currentInstance;
	      return;
	    }
	    var recyclableInstance = workInProgress.stateNode;
	    var currentHostContext = getHostContext();
	    var updatePayload = null;
	    if (oldProps !== newProps) {
	      updatePayload = prepareUpdate(recyclableInstance, type, oldProps, newProps, rootContainerInstance, currentHostContext);
	    }
	    if (childrenUnchanged && updatePayload === null) {
	      // No changes, just reuse the existing instance.
	      // Note that this might release a previous clone.
	      workInProgress.stateNode = currentInstance;
	      return;
	    }
	    var newInstance = cloneInstance(currentInstance, updatePayload, type, oldProps, newProps, workInProgress, childrenUnchanged, recyclableInstance);
	    if (finalizeInitialChildren(newInstance, type, newProps, rootContainerInstance, currentHostContext)) {
	      markUpdate(workInProgress);
	    }
	    workInProgress.stateNode = newInstance;
	    if (childrenUnchanged) {
	      // If there are no other effects in this tree, we need to flag this node as having one.
	      // Even though we're not going to use it for anything.
	      // Otherwise parents won't know that there are new children to propagate upwards.
	      markUpdate(workInProgress);
	    } else {
	      // If children might have changed, we have to add them all to the set.
	      appendAllChildren(newInstance, workInProgress, false, false);
	    }
	  };
	  updateHostText$1 = function (current, workInProgress, oldText, newText) {
	    if (oldText !== newText) {
	      // If the text content differs, we'll create a new text instance for it.
	      var rootContainerInstance = getRootHostContainer();
	      var currentHostContext = getHostContext();
	      workInProgress.stateNode = createTextInstance(newText, rootContainerInstance, currentHostContext, workInProgress);
	      // We'll have to mark it as having an effect, even though we won't use the effect for anything.
	      // This lets the parents know that at least one of their children has changed.
	      markUpdate(workInProgress);
	    }
	  };
	} else {
	  // No host operations
	  updateHostContainer = function (workInProgress) {
	    // Noop
	  };
	  updateHostComponent$1 = function (current, workInProgress, type, newProps, rootContainerInstance) {
	    // Noop
	  };
	  updateHostText$1 = function (current, workInProgress, oldText, newText) {
	    // Noop
	  };
	}

	function completeWork(current, workInProgress, renderExpirationTime) {
	  var newProps = workInProgress.pendingProps;

	  switch (workInProgress.tag) {
	    case IndeterminateComponent:
	      break;
	    case LazyComponent:
	      break;
	    case SimpleMemoComponent:
	    case FunctionComponent:
	      break;
	    case ClassComponent:
	      {
	        var Component = workInProgress.type;
	        if (isContextProvider(Component)) {
	          popContext(workInProgress);
	        }
	        break;
	      }
	    case HostRoot:
	      {
	        popHostContainer(workInProgress);
	        popTopLevelContextObject(workInProgress);
	        var fiberRoot = workInProgress.stateNode;
	        if (fiberRoot.pendingContext) {
	          fiberRoot.context = fiberRoot.pendingContext;
	          fiberRoot.pendingContext = null;
	        }
	        if (current === null || current.child === null) {
	          // If we hydrated, pop so that we can delete any remaining children
	          // that weren't hydrated.
	          popHydrationState(workInProgress);
	          // This resets the hacky state to fix isMounted before committing.
	          // TODO: Delete this when we delete isMounted and findDOMNode.
	          workInProgress.effectTag &= ~Placement;
	        }
	        updateHostContainer(workInProgress);
	        break;
	      }
	    case HostComponent:
	      {
	        popHostContext(workInProgress);
	        var rootContainerInstance = getRootHostContainer();
	        var type = workInProgress.type;
	        if (current !== null && workInProgress.stateNode != null) {
	          updateHostComponent$1(current, workInProgress, type, newProps, rootContainerInstance);

	          if (current.ref !== workInProgress.ref) {
	            markRef$1(workInProgress);
	          }
	        } else {
	          if (!newProps) {
	            !(workInProgress.stateNode !== null) ? invariant(false, 'We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue.') : void 0;
	            // This can happen when we abort work.
	            break;
	          }

	          var currentHostContext = getHostContext();
	          // TODO: Move createInstance to beginWork and keep it on a context
	          // "stack" as the parent. Then append children as we go in beginWork
	          // or completeWork depending on we want to add then top->down or
	          // bottom->up. Top->down is faster in IE11.
	          var wasHydrated = popHydrationState(workInProgress);
	          if (wasHydrated) {
	            // TODO: Move this and createInstance step into the beginPhase
	            // to consolidate.
	            if (prepareToHydrateHostInstance(workInProgress, rootContainerInstance, currentHostContext)) {
	              // If changes to the hydrated node needs to be applied at the
	              // commit-phase we mark this as such.
	              markUpdate(workInProgress);
	            }
	          } else {
	            var instance = createInstance(type, newProps, rootContainerInstance, currentHostContext, workInProgress);

	            appendAllChildren(instance, workInProgress, false, false);

	            // Certain renderers require commit-time effects for initial mount.
	            // (eg DOM renderer supports auto-focus for certain elements).
	            // Make sure such renderers get scheduled for later work.
	            if (finalizeInitialChildren(instance, type, newProps, rootContainerInstance, currentHostContext)) {
	              markUpdate(workInProgress);
	            }
	            workInProgress.stateNode = instance;
	          }

	          if (workInProgress.ref !== null) {
	            // If there is a ref on a host node we need to schedule a callback
	            markRef$1(workInProgress);
	          }
	        }
	        break;
	      }
	    case HostText:
	      {
	        var newText = newProps;
	        if (current && workInProgress.stateNode != null) {
	          var oldText = current.memoizedProps;
	          // If we have an alternate, that means this is an update and we need
	          // to schedule a side-effect to do the updates.
	          updateHostText$1(current, workInProgress, oldText, newText);
	        } else {
	          if (typeof newText !== 'string') {
	            !(workInProgress.stateNode !== null) ? invariant(false, 'We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue.') : void 0;
	            // This can happen when we abort work.
	          }
	          var _rootContainerInstance = getRootHostContainer();
	          var _currentHostContext = getHostContext();
	          var _wasHydrated = popHydrationState(workInProgress);
	          if (_wasHydrated) {
	            if (prepareToHydrateHostTextInstance(workInProgress)) {
	              markUpdate(workInProgress);
	            }
	          } else {
	            workInProgress.stateNode = createTextInstance(newText, _rootContainerInstance, _currentHostContext, workInProgress);
	          }
	        }
	        break;
	      }
	    case ForwardRef:
	      break;
	    case SuspenseComponent:
	      {
	        var nextState = workInProgress.memoizedState;
	        if ((workInProgress.effectTag & DidCapture) !== NoEffect) {
	          // Something suspended. Re-render with the fallback children.
	          workInProgress.expirationTime = renderExpirationTime;
	          // Do not reset the effect list.
	          return workInProgress;
	        }

	        var nextDidTimeout = nextState !== null;
	        var prevDidTimeout = current !== null && current.memoizedState !== null;

	        if (current !== null && !nextDidTimeout && prevDidTimeout) {
	          // We just switched from the fallback to the normal children. Delete
	          // the fallback.
	          // TODO: Would it be better to store the fallback fragment on
	          var currentFallbackChild = current.child.sibling;
	          if (currentFallbackChild !== null) {
	            // Deletions go at the beginning of the return fiber's effect list
	            var first = workInProgress.firstEffect;
	            if (first !== null) {
	              workInProgress.firstEffect = currentFallbackChild;
	              currentFallbackChild.nextEffect = first;
	            } else {
	              workInProgress.firstEffect = workInProgress.lastEffect = currentFallbackChild;
	              currentFallbackChild.nextEffect = null;
	            }
	            currentFallbackChild.effectTag = Deletion;
	          }
	        }

	        if (nextDidTimeout || prevDidTimeout) {
	          // If the children are hidden, or if they were previous hidden, schedule
	          // an effect to toggle their visibility. This is also used to attach a
	          // retry listener to the promise.
	          workInProgress.effectTag |= Update;
	        }
	        break;
	      }
	    case Fragment:
	      break;
	    case Mode:
	      break;
	    case Profiler:
	      break;
	    case HostPortal:
	      popHostContainer(workInProgress);
	      updateHostContainer(workInProgress);
	      break;
	    case ContextProvider:
	      // Pop provider fiber
	      popProvider(workInProgress);
	      break;
	    case ContextConsumer:
	      break;
	    case MemoComponent:
	      break;
	    case IncompleteClassComponent:
	      {
	        // Same as class component case. I put it down here so that the tags are
	        // sequential to ensure this switch is compiled to a jump table.
	        var _Component = workInProgress.type;
	        if (isContextProvider(_Component)) {
	          popContext(workInProgress);
	        }
	        break;
	      }
	    case DehydratedSuspenseComponent:
	      {
	        if (enableSuspenseServerRenderer) {
	          if (current === null) {
	            var _wasHydrated2 = popHydrationState(workInProgress);
	            !_wasHydrated2 ? invariant(false, 'A dehydrated suspense component was completed without a hydrated node. This is probably a bug in React.') : void 0;
	            skipPastDehydratedSuspenseInstance(workInProgress);
	          } else if ((workInProgress.effectTag & DidCapture) === NoEffect) {
	            // This boundary did not suspend so it's now hydrated.
	            // To handle any future suspense cases, we're going to now upgrade it
	            // to a Suspense component. We detach it from the existing current fiber.
	            current.alternate = null;
	            workInProgress.alternate = null;
	            workInProgress.tag = SuspenseComponent;
	            workInProgress.memoizedState = null;
	            workInProgress.stateNode = null;
	          }
	        }
	        break;
	      }
	    default:
	      invariant(false, 'Unknown unit of work tag. This error is likely caused by a bug in React. Please file an issue.');
	  }

	  return null;
	}

	function shouldCaptureSuspense(workInProgress) {
	  // In order to capture, the Suspense component must have a fallback prop.
	  if (workInProgress.memoizedProps.fallback === undefined) {
	    return false;
	  }
	  // If it was the primary children that just suspended, capture and render the
	  // fallback. Otherwise, don't capture and bubble to the next boundary.
	  var nextState = workInProgress.memoizedState;
	  return nextState === null;
	}

	// This module is forked in different environments.
	// By default, return `true` to log errors to the console.
	// Forks can return `false` if this isn't desirable.
	function showErrorDialog(capturedError) {
	  return true;
	}

	function logCapturedError(capturedError) {
	  var logError = showErrorDialog(capturedError);

	  // Allow injected showErrorDialog() to prevent default console.error logging.
	  // This enables renderers like ReactNative to better manage redbox behavior.
	  if (logError === false) {
	    return;
	  }

	  var error = capturedError.error;
	  {
	    var componentName = capturedError.componentName,
	        componentStack = capturedError.componentStack,
	        errorBoundaryName = capturedError.errorBoundaryName,
	        errorBoundaryFound = capturedError.errorBoundaryFound,
	        willRetry = capturedError.willRetry;

	    // Browsers support silencing uncaught errors by calling
	    // `preventDefault()` in window `error` handler.
	    // We record this information as an expando on the error.

	    if (error != null && error._suppressLogging) {
	      if (errorBoundaryFound && willRetry) {
	        // The error is recoverable and was silenced.
	        // Ignore it and don't print the stack addendum.
	        // This is handy for testing error boundaries without noise.
	        return;
	      }
	      // The error is fatal. Since the silencing might have
	      // been accidental, we'll surface it anyway.
	      // However, the browser would have silenced the original error
	      // so we'll print it first, and then print the stack addendum.
	      console.error(error);
	      // For a more detailed description of this block, see:
	      // https://github.com/facebook/react/pull/13384
	    }

	    var componentNameMessage = componentName ? 'The above error occurred in the <' + componentName + '> component:' : 'The above error occurred in one of your React components:';

	    var errorBoundaryMessage = void 0;
	    // errorBoundaryFound check is sufficient; errorBoundaryName check is to satisfy Flow.
	    if (errorBoundaryFound && errorBoundaryName) {
	      if (willRetry) {
	        errorBoundaryMessage = 'React will try to recreate this component tree from scratch ' + ('using the error boundary you provided, ' + errorBoundaryName + '.');
	      } else {
	        errorBoundaryMessage = 'This error was initially handled by the error boundary ' + errorBoundaryName + '.\n' + 'Recreating the tree from scratch failed so React will unmount the tree.';
	      }
	    } else {
	      errorBoundaryMessage = 'Consider adding an error boundary to your tree to customize error handling behavior.\n' + 'Visit https://fb.me/react-error-boundaries to learn more about error boundaries.';
	    }
	    var combinedMessage = '' + componentNameMessage + componentStack + '\n\n' + ('' + errorBoundaryMessage);

	    // In development, we provide our own message with just the component stack.
	    // We don't include the original error message and JS stack because the browser
	    // has already printed it. Even if the application swallows the error, it is still
	    // displayed by the browser thanks to the DEV-only fake event trick in ReactErrorUtils.
	    console.error(combinedMessage);
	  }
	}

	var didWarnAboutUndefinedSnapshotBeforeUpdate = null;
	{
	  didWarnAboutUndefinedSnapshotBeforeUpdate = new Set();
	}

	var PossiblyWeakSet$1 = typeof WeakSet === 'function' ? WeakSet : Set;

	function logError(boundary, errorInfo) {
	  var source = errorInfo.source;
	  var stack = errorInfo.stack;
	  if (stack === null && source !== null) {
	    stack = getStackByFiberInDevAndProd(source);
	  }

	  var capturedError = {
	    componentName: source !== null ? getComponentName(source.type) : null,
	    componentStack: stack !== null ? stack : '',
	    error: errorInfo.value,
	    errorBoundary: null,
	    errorBoundaryName: null,
	    errorBoundaryFound: false,
	    willRetry: false
	  };

	  if (boundary !== null && boundary.tag === ClassComponent) {
	    capturedError.errorBoundary = boundary.stateNode;
	    capturedError.errorBoundaryName = getComponentName(boundary.type);
	    capturedError.errorBoundaryFound = true;
	    capturedError.willRetry = true;
	  }

	  try {
	    logCapturedError(capturedError);
	  } catch (e) {
	    // This method must not throw, or React internal state will get messed up.
	    // If console.error is overridden, or logCapturedError() shows a dialog that throws,
	    // we want to report this error outside of the normal stack as a last resort.
	    // https://github.com/facebook/react/issues/13188
	    setTimeout(function () {
	      throw e;
	    });
	  }
	}

	var callComponentWillUnmountWithTimer = function (current$$1, instance) {
	  startPhaseTimer(current$$1, 'componentWillUnmount');
	  instance.props = current$$1.memoizedProps;
	  instance.state = current$$1.memoizedState;
	  instance.componentWillUnmount();
	  stopPhaseTimer();
	};

	// Capture errors so they don't interrupt unmounting.
	function safelyCallComponentWillUnmount(current$$1, instance) {
	  {
	    invokeGuardedCallback(null, callComponentWillUnmountWithTimer, null, current$$1, instance);
	    if (hasCaughtError()) {
	      var unmountError = clearCaughtError();
	      captureCommitPhaseError(current$$1, unmountError);
	    }
	  }
	}

	function safelyDetachRef(current$$1) {
	  var ref = current$$1.ref;
	  if (ref !== null) {
	    if (typeof ref === 'function') {
	      {
	        invokeGuardedCallback(null, ref, null, null);
	        if (hasCaughtError()) {
	          var refError = clearCaughtError();
	          captureCommitPhaseError(current$$1, refError);
	        }
	      }
	    } else {
	      ref.current = null;
	    }
	  }
	}

	function safelyCallDestroy(current$$1, destroy) {
	  {
	    invokeGuardedCallback(null, destroy, null);
	    if (hasCaughtError()) {
	      var error = clearCaughtError();
	      captureCommitPhaseError(current$$1, error);
	    }
	  }
	}

	function commitBeforeMutationLifeCycles(current$$1, finishedWork) {
	  switch (finishedWork.tag) {
	    case FunctionComponent:
	    case ForwardRef:
	    case SimpleMemoComponent:
	      {
	        commitHookEffectList(UnmountSnapshot, NoEffect$1, finishedWork);
	        return;
	      }
	    case ClassComponent:
	      {
	        if (finishedWork.effectTag & Snapshot) {
	          if (current$$1 !== null) {
	            var prevProps = current$$1.memoizedProps;
	            var prevState = current$$1.memoizedState;
	            startPhaseTimer(finishedWork, 'getSnapshotBeforeUpdate');
	            var instance = finishedWork.stateNode;
	            // We could update instance props and state here,
	            // but instead we rely on them being set during last render.
	            // TODO: revisit this when we implement resuming.
	            {
	              if (finishedWork.type === finishedWork.elementType && !didWarnAboutReassigningProps) {
	                !(instance.props === finishedWork.memoizedProps) ? warning$1(false, 'Expected %s props to match memoized props before ' + 'getSnapshotBeforeUpdate. ' + 'This might either be because of a bug in React, or because ' + 'a component reassigns its own `this.props`. ' + 'Please file an issue.', getComponentName(finishedWork.type) || 'instance') : void 0;
	                !(instance.state === finishedWork.memoizedState) ? warning$1(false, 'Expected %s state to match memoized state before ' + 'getSnapshotBeforeUpdate. ' + 'This might either be because of a bug in React, or because ' + 'a component reassigns its own `this.props`. ' + 'Please file an issue.', getComponentName(finishedWork.type) || 'instance') : void 0;
	              }
	            }
	            var snapshot = instance.getSnapshotBeforeUpdate(finishedWork.elementType === finishedWork.type ? prevProps : resolveDefaultProps(finishedWork.type, prevProps), prevState);
	            {
	              var didWarnSet = didWarnAboutUndefinedSnapshotBeforeUpdate;
	              if (snapshot === undefined && !didWarnSet.has(finishedWork.type)) {
	                didWarnSet.add(finishedWork.type);
	                warningWithoutStack$1(false, '%s.getSnapshotBeforeUpdate(): A snapshot value (or null) ' + 'must be returned. You have returned undefined.', getComponentName(finishedWork.type));
	              }
	            }
	            instance.__reactInternalSnapshotBeforeUpdate = snapshot;
	            stopPhaseTimer();
	          }
	        }
	        return;
	      }
	    case HostRoot:
	    case HostComponent:
	    case HostText:
	    case HostPortal:
	    case IncompleteClassComponent:
	      // Nothing to do for these component types
	      return;
	    default:
	      {
	        invariant(false, 'This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue.');
	      }
	  }
	}

	function commitHookEffectList(unmountTag, mountTag, finishedWork) {
	  var updateQueue = finishedWork.updateQueue;
	  var lastEffect = updateQueue !== null ? updateQueue.lastEffect : null;
	  if (lastEffect !== null) {
	    var firstEffect = lastEffect.next;
	    var effect = firstEffect;
	    do {
	      if ((effect.tag & unmountTag) !== NoEffect$1) {
	        // Unmount
	        var destroy = effect.destroy;
	        effect.destroy = undefined;
	        if (destroy !== undefined) {
	          destroy();
	        }
	      }
	      if ((effect.tag & mountTag) !== NoEffect$1) {
	        // Mount
	        var create = effect.create;
	        effect.destroy = create();

	        {
	          var _destroy = effect.destroy;
	          if (_destroy !== undefined && typeof _destroy !== 'function') {
	            var addendum = void 0;
	            if (_destroy === null) {
	              addendum = ' You returned null. If your effect does not require clean ' + 'up, return undefined (or nothing).';
	            } else if (typeof _destroy.then === 'function') {
	              addendum = '\n\nIt looks like you wrote useEffect(async () => ...) or returned a Promise. ' + 'Instead, write the async function inside your effect ' + 'and call it immediately:\n\n' + 'useEffect(() => {\n' + '  async function fetchData() {\n' + '    // You can await here\n' + '    const response = await MyAPI.getData(someId);\n' + '    // ...\n' + '  }\n' + '  fetchData();\n' + '}, [someId]); // Or [] if effect doesn\'t need props or state\n\n' + 'Learn more about data fetching with Hooks: https://fb.me/react-hooks-data-fetching';
	            } else {
	              addendum = ' You returned: ' + _destroy;
	            }
	            warningWithoutStack$1(false, 'An effect function must not return anything besides a function, ' + 'which is used for clean-up.%s%s', addendum, getStackByFiberInDevAndProd(finishedWork));
	          }
	        }
	      }
	      effect = effect.next;
	    } while (effect !== firstEffect);
	  }
	}

	function commitPassiveHookEffects(finishedWork) {
	  commitHookEffectList(UnmountPassive, NoEffect$1, finishedWork);
	  commitHookEffectList(NoEffect$1, MountPassive, finishedWork);
	}

	function commitLifeCycles(finishedRoot, current$$1, finishedWork, committedExpirationTime) {
	  switch (finishedWork.tag) {
	    case FunctionComponent:
	    case ForwardRef:
	    case SimpleMemoComponent:
	      {
	        commitHookEffectList(UnmountLayout, MountLayout, finishedWork);
	        break;
	      }
	    case ClassComponent:
	      {
	        var instance = finishedWork.stateNode;
	        if (finishedWork.effectTag & Update) {
	          if (current$$1 === null) {
	            startPhaseTimer(finishedWork, 'componentDidMount');
	            // We could update instance props and state here,
	            // but instead we rely on them being set during last render.
	            // TODO: revisit this when we implement resuming.
	            {
	              if (finishedWork.type === finishedWork.elementType && !didWarnAboutReassigningProps) {
	                !(instance.props === finishedWork.memoizedProps) ? warning$1(false, 'Expected %s props to match memoized props before ' + 'componentDidMount. ' + 'This might either be because of a bug in React, or because ' + 'a component reassigns its own `this.props`. ' + 'Please file an issue.', getComponentName(finishedWork.type) || 'instance') : void 0;
	                !(instance.state === finishedWork.memoizedState) ? warning$1(false, 'Expected %s state to match memoized state before ' + 'componentDidMount. ' + 'This might either be because of a bug in React, or because ' + 'a component reassigns its own `this.props`. ' + 'Please file an issue.', getComponentName(finishedWork.type) || 'instance') : void 0;
	              }
	            }
	            instance.componentDidMount();
	            stopPhaseTimer();
	          } else {
	            var prevProps = finishedWork.elementType === finishedWork.type ? current$$1.memoizedProps : resolveDefaultProps(finishedWork.type, current$$1.memoizedProps);
	            var prevState = current$$1.memoizedState;
	            startPhaseTimer(finishedWork, 'componentDidUpdate');
	            // We could update instance props and state here,
	            // but instead we rely on them being set during last render.
	            // TODO: revisit this when we implement resuming.
	            {
	              if (finishedWork.type === finishedWork.elementType && !didWarnAboutReassigningProps) {
	                !(instance.props === finishedWork.memoizedProps) ? warning$1(false, 'Expected %s props to match memoized props before ' + 'componentDidUpdate. ' + 'This might either be because of a bug in React, or because ' + 'a component reassigns its own `this.props`. ' + 'Please file an issue.', getComponentName(finishedWork.type) || 'instance') : void 0;
	                !(instance.state === finishedWork.memoizedState) ? warning$1(false, 'Expected %s state to match memoized state before ' + 'componentDidUpdate. ' + 'This might either be because of a bug in React, or because ' + 'a component reassigns its own `this.props`. ' + 'Please file an issue.', getComponentName(finishedWork.type) || 'instance') : void 0;
	              }
	            }
	            instance.componentDidUpdate(prevProps, prevState, instance.__reactInternalSnapshotBeforeUpdate);
	            stopPhaseTimer();
	          }
	        }
	        var updateQueue = finishedWork.updateQueue;
	        if (updateQueue !== null) {
	          {
	            if (finishedWork.type === finishedWork.elementType && !didWarnAboutReassigningProps) {
	              !(instance.props === finishedWork.memoizedProps) ? warning$1(false, 'Expected %s props to match memoized props before ' + 'processing the update queue. ' + 'This might either be because of a bug in React, or because ' + 'a component reassigns its own `this.props`. ' + 'Please file an issue.', getComponentName(finishedWork.type) || 'instance') : void 0;
	              !(instance.state === finishedWork.memoizedState) ? warning$1(false, 'Expected %s state to match memoized state before ' + 'processing the update queue. ' + 'This might either be because of a bug in React, or because ' + 'a component reassigns its own `this.props`. ' + 'Please file an issue.', getComponentName(finishedWork.type) || 'instance') : void 0;
	            }
	          }
	          // We could update instance props and state here,
	          // but instead we rely on them being set during last render.
	          // TODO: revisit this when we implement resuming.
	          commitUpdateQueue(finishedWork, updateQueue, instance, committedExpirationTime);
	        }
	        return;
	      }
	    case HostRoot:
	      {
	        var _updateQueue = finishedWork.updateQueue;
	        if (_updateQueue !== null) {
	          var _instance = null;
	          if (finishedWork.child !== null) {
	            switch (finishedWork.child.tag) {
	              case HostComponent:
	                _instance = getPublicInstance(finishedWork.child.stateNode);
	                break;
	              case ClassComponent:
	                _instance = finishedWork.child.stateNode;
	                break;
	            }
	          }
	          commitUpdateQueue(finishedWork, _updateQueue, _instance, committedExpirationTime);
	        }
	        return;
	      }
	    case HostComponent:
	      {
	        var _instance2 = finishedWork.stateNode;

	        // Renderers may schedule work to be done after host components are mounted
	        // (eg DOM renderer may schedule auto-focus for inputs and form controls).
	        // These effects should only be committed when components are first mounted,
	        // aka when there is no current/alternate.
	        if (current$$1 === null && finishedWork.effectTag & Update) {
	          var type = finishedWork.type;
	          var props = finishedWork.memoizedProps;
	          commitMount(_instance2, type, props, finishedWork);
	        }

	        return;
	      }
	    case HostText:
	      {
	        // We have no life-cycles associated with text.
	        return;
	      }
	    case HostPortal:
	      {
	        // We have no life-cycles associated with portals.
	        return;
	      }
	    case Profiler:
	      {
	        if (enableProfilerTimer) {
	          var onRender = finishedWork.memoizedProps.onRender;

	          if (enableSchedulerTracing) {
	            onRender(finishedWork.memoizedProps.id, current$$1 === null ? 'mount' : 'update', finishedWork.actualDuration, finishedWork.treeBaseDuration, finishedWork.actualStartTime, getCommitTime(), finishedRoot.memoizedInteractions);
	          } else {
	            onRender(finishedWork.memoizedProps.id, current$$1 === null ? 'mount' : 'update', finishedWork.actualDuration, finishedWork.treeBaseDuration, finishedWork.actualStartTime, getCommitTime());
	          }
	        }
	        return;
	      }
	    case SuspenseComponent:
	      break;
	    case IncompleteClassComponent:
	      break;
	    default:
	      {
	        invariant(false, 'This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue.');
	      }
	  }
	}

	function hideOrUnhideAllChildren(finishedWork, isHidden) {
	  if (supportsMutation) {
	    // We only have the top Fiber that was inserted but we need to recurse down its
	    var node = finishedWork;
	    while (true) {
	      if (node.tag === HostComponent) {
	        var instance = node.stateNode;
	        if (isHidden) {
	          hideInstance(instance);
	        } else {
	          unhideInstance(node.stateNode, node.memoizedProps);
	        }
	      } else if (node.tag === HostText) {
	        var _instance3 = node.stateNode;
	        if (isHidden) {
	          hideTextInstance(_instance3);
	        } else {
	          unhideTextInstance(_instance3, node.memoizedProps);
	        }
	      } else if (node.tag === SuspenseComponent && node.memoizedState !== null) {
	        // Found a nested Suspense component that timed out. Skip over the
	        var fallbackChildFragment = node.child.sibling;
	        fallbackChildFragment.return = node;
	        node = fallbackChildFragment;
	        continue;
	      } else if (node.child !== null) {
	        node.child.return = node;
	        node = node.child;
	        continue;
	      }
	      if (node === finishedWork) {
	        return;
	      }
	      while (node.sibling === null) {
	        if (node.return === null || node.return === finishedWork) {
	          return;
	        }
	        node = node.return;
	      }
	      node.sibling.return = node.return;
	      node = node.sibling;
	    }
	  }
	}

	function commitAttachRef(finishedWork) {
	  var ref = finishedWork.ref;
	  if (ref !== null) {
	    var instance = finishedWork.stateNode;
	    var instanceToUse = void 0;
	    switch (finishedWork.tag) {
	      case HostComponent:
	        instanceToUse = getPublicInstance(instance);
	        break;
	      default:
	        instanceToUse = instance;
	    }
	    if (typeof ref === 'function') {
	      ref(instanceToUse);
	    } else {
	      {
	        if (!ref.hasOwnProperty('current')) {
	          warningWithoutStack$1(false, 'Unexpected ref object provided for %s. ' + 'Use either a ref-setter function or React.createRef().%s', getComponentName(finishedWork.type), getStackByFiberInDevAndProd(finishedWork));
	        }
	      }

	      ref.current = instanceToUse;
	    }
	  }
	}

	function commitDetachRef(current$$1) {
	  var currentRef = current$$1.ref;
	  if (currentRef !== null) {
	    if (typeof currentRef === 'function') {
	      currentRef(null);
	    } else {
	      currentRef.current = null;
	    }
	  }
	}

	// User-originating errors (lifecycles and refs) should not interrupt
	// deletion, so don't let them throw. Host-originating errors should
	// interrupt deletion, so it's okay
	function commitUnmount(current$$1) {
	  onCommitUnmount(current$$1);

	  switch (current$$1.tag) {
	    case FunctionComponent:
	    case ForwardRef:
	    case MemoComponent:
	    case SimpleMemoComponent:
	      {
	        var updateQueue = current$$1.updateQueue;
	        if (updateQueue !== null) {
	          var lastEffect = updateQueue.lastEffect;
	          if (lastEffect !== null) {
	            var firstEffect = lastEffect.next;
	            var effect = firstEffect;
	            do {
	              var destroy = effect.destroy;
	              if (destroy !== undefined) {
	                safelyCallDestroy(current$$1, destroy);
	              }
	              effect = effect.next;
	            } while (effect !== firstEffect);
	          }
	        }
	        break;
	      }
	    case ClassComponent:
	      {
	        safelyDetachRef(current$$1);
	        var instance = current$$1.stateNode;
	        if (typeof instance.componentWillUnmount === 'function') {
	          safelyCallComponentWillUnmount(current$$1, instance);
	        }
	        return;
	      }
	    case HostComponent:
	      {
	        safelyDetachRef(current$$1);
	        return;
	      }
	    case HostPortal:
	      {
	        // TODO: this is recursive.
	        // We are also not using this parent because
	        // the portal will get pushed immediately.
	        if (supportsMutation) {
	          unmountHostComponents(current$$1);
	        } else if (supportsPersistence) {
	          emptyPortalContainer(current$$1);
	        }
	        return;
	      }
	  }
	}

	function commitNestedUnmounts(root) {
	  // While we're inside a removed host node we don't want to call
	  // removeChild on the inner nodes because they're removed by the top
	  // call anyway. We also want to call componentWillUnmount on all
	  // composites before this host node is removed from the tree. Therefore
	  var node = root;
	  while (true) {
	    commitUnmount(node);
	    // Visit children because they may contain more composite or host nodes.
	    // Skip portals because commitUnmount() currently visits them recursively.
	    if (node.child !== null && (
	    // If we use mutation we drill down into portals using commitUnmount above.
	    // If we don't use mutation we drill down into portals here instead.
	    !supportsMutation || node.tag !== HostPortal)) {
	      node.child.return = node;
	      node = node.child;
	      continue;
	    }
	    if (node === root) {
	      return;
	    }
	    while (node.sibling === null) {
	      if (node.return === null || node.return === root) {
	        return;
	      }
	      node = node.return;
	    }
	    node.sibling.return = node.return;
	    node = node.sibling;
	  }
	}

	function detachFiber(current$$1) {
	  // Cut off the return pointers to disconnect it from the tree. Ideally, we
	  // should clear the child pointer of the parent alternate to let this
	  // get GC:ed but we don't know which for sure which parent is the current
	  // one so we'll settle for GC:ing the subtree of this child. This child
	  // itself will be GC:ed when the parent updates the next time.
	  current$$1.return = null;
	  current$$1.child = null;
	  current$$1.memoizedState = null;
	  current$$1.updateQueue = null;
	  var alternate = current$$1.alternate;
	  if (alternate !== null) {
	    alternate.return = null;
	    alternate.child = null;
	    alternate.memoizedState = null;
	    alternate.updateQueue = null;
	  }
	}

	function emptyPortalContainer(current$$1) {
	  if (!supportsPersistence) {
	    return;
	  }

	  var portal = current$$1.stateNode;
	  var containerInfo = portal.containerInfo;

	  var emptyChildSet = createContainerChildSet(containerInfo);
	  replaceContainerChildren(containerInfo, emptyChildSet);
	}

	function commitContainer(finishedWork) {
	  if (!supportsPersistence) {
	    return;
	  }

	  switch (finishedWork.tag) {
	    case ClassComponent:
	      {
	        return;
	      }
	    case HostComponent:
	      {
	        return;
	      }
	    case HostText:
	      {
	        return;
	      }
	    case HostRoot:
	    case HostPortal:
	      {
	        var portalOrRoot = finishedWork.stateNode;
	        var containerInfo = portalOrRoot.containerInfo,
	            _pendingChildren = portalOrRoot.pendingChildren;

	        replaceContainerChildren(containerInfo, _pendingChildren);
	        return;
	      }
	    default:
	      {
	        invariant(false, 'This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue.');
	      }
	  }
	}

	function getHostParentFiber(fiber) {
	  var parent = fiber.return;
	  while (parent !== null) {
	    if (isHostParent(parent)) {
	      return parent;
	    }
	    parent = parent.return;
	  }
	  invariant(false, 'Expected to find a host parent. This error is likely caused by a bug in React. Please file an issue.');
	}

	function isHostParent(fiber) {
	  return fiber.tag === HostComponent || fiber.tag === HostRoot || fiber.tag === HostPortal;
	}

	function getHostSibling(fiber) {
	  // We're going to search forward into the tree until we find a sibling host
	  // node. Unfortunately, if multiple insertions are done in a row we have to
	  // search past them. This leads to exponential search for the next sibling.
	  var node = fiber;
	  siblings: while (true) {
	    // If we didn't find anything, let's try the next sibling.
	    while (node.sibling === null) {
	      if (node.return === null || isHostParent(node.return)) {
	        // If we pop out of the root or hit the parent the fiber we are the
	        // last sibling.
	        return null;
	      }
	      node = node.return;
	    }
	    node.sibling.return = node.return;
	    node = node.sibling;
	    while (node.tag !== HostComponent && node.tag !== HostText && node.tag !== DehydratedSuspenseComponent) {
	      // If it is not host node and, we might have a host node inside it.
	      // Try to search down until we find one.
	      if (node.effectTag & Placement) {
	        // If we don't have a child, try the siblings instead.
	        continue siblings;
	      }
	      // If we don't have a child, try the siblings instead.
	      // We also skip portals because they are not part of this host tree.
	      if (node.child === null || node.tag === HostPortal) {
	        continue siblings;
	      } else {
	        node.child.return = node;
	        node = node.child;
	      }
	    }
	    // Check if this host node is stable or about to be placed.
	    if (!(node.effectTag & Placement)) {
	      // Found it!
	      return node.stateNode;
	    }
	  }
	}

	function commitPlacement(finishedWork) {
	  if (!supportsMutation) {
	    return;
	  }

	  // Recursively insert all host nodes into the parent.
	  var parentFiber = getHostParentFiber(finishedWork);

	  // Note: these two variables *must* always be updated together.
	  var parent = void 0;
	  var isContainer = void 0;

	  switch (parentFiber.tag) {
	    case HostComponent:
	      parent = parentFiber.stateNode;
	      isContainer = false;
	      break;
	    case HostRoot:
	      parent = parentFiber.stateNode.containerInfo;
	      isContainer = true;
	      break;
	    case HostPortal:
	      parent = parentFiber.stateNode.containerInfo;
	      isContainer = true;
	      break;
	    default:
	      invariant(false, 'Invalid host parent fiber. This error is likely caused by a bug in React. Please file an issue.');
	  }
	  if (parentFiber.effectTag & ContentReset) {
	    // Reset the text content of the parent before doing any insertions
	    resetTextContent(parent);
	    // Clear ContentReset from the effect tag
	    parentFiber.effectTag &= ~ContentReset;
	  }

	  var before = getHostSibling(finishedWork);
	  // We only have the top Fiber that was inserted but we need to recurse down its
	  // children to find all the terminal nodes.
	  var node = finishedWork;
	  while (true) {
	    if (node.tag === HostComponent || node.tag === HostText) {
	      if (before) {
	        if (isContainer) {
	          insertInContainerBefore(parent, node.stateNode, before);
	        } else {
	          insertBefore(parent, node.stateNode, before);
	        }
	      } else {
	        if (isContainer) {
	          appendChildToContainer(parent, node.stateNode);
	        } else {
	          appendChild(parent, node.stateNode);
	        }
	      }
	    } else if (node.tag === HostPortal) {
	      // If the insertion itself is a portal, then we don't want to traverse
	      // down its children. Instead, we'll get insertions from each child in
	      // the portal directly.
	    } else if (node.child !== null) {
	      node.child.return = node;
	      node = node.child;
	      continue;
	    }
	    if (node === finishedWork) {
	      return;
	    }
	    while (node.sibling === null) {
	      if (node.return === null || node.return === finishedWork) {
	        return;
	      }
	      node = node.return;
	    }
	    node.sibling.return = node.return;
	    node = node.sibling;
	  }
	}

	function unmountHostComponents(current$$1) {
	  // We only have the top Fiber that was deleted but we need to recurse down its
	  var node = current$$1;

	  // Each iteration, currentParent is populated with node's host parent if not
	  // currentParentIsValid.
	  var currentParentIsValid = false;

	  // Note: these two variables *must* always be updated together.
	  var currentParent = void 0;
	  var currentParentIsContainer = void 0;

	  while (true) {
	    if (!currentParentIsValid) {
	      var parent = node.return;
	      findParent: while (true) {
	        !(parent !== null) ? invariant(false, 'Expected to find a host parent. This error is likely caused by a bug in React. Please file an issue.') : void 0;
	        switch (parent.tag) {
	          case HostComponent:
	            currentParent = parent.stateNode;
	            currentParentIsContainer = false;
	            break findParent;
	          case HostRoot:
	            currentParent = parent.stateNode.containerInfo;
	            currentParentIsContainer = true;
	            break findParent;
	          case HostPortal:
	            currentParent = parent.stateNode.containerInfo;
	            currentParentIsContainer = true;
	            break findParent;
	        }
	        parent = parent.return;
	      }
	      currentParentIsValid = true;
	    }

	    if (node.tag === HostComponent || node.tag === HostText) {
	      commitNestedUnmounts(node);
	      // After all the children have unmounted, it is now safe to remove the
	      // node from the tree.
	      if (currentParentIsContainer) {
	        removeChildFromContainer(currentParent, node.stateNode);
	      } else {
	        removeChild(currentParent, node.stateNode);
	      }
	      // Don't visit children because we already visited them.
	    } else if (enableSuspenseServerRenderer && node.tag === DehydratedSuspenseComponent) {
	      // Delete the dehydrated suspense boundary and all of its content.
	      if (currentParentIsContainer) {
	        clearSuspenseBoundaryFromContainer(currentParent, node.stateNode);
	      } else {
	        clearSuspenseBoundary(currentParent, node.stateNode);
	      }
	    } else if (node.tag === HostPortal) {
	      if (node.child !== null) {
	        // When we go into a portal, it becomes the parent to remove from.
	        // We will reassign it back when we pop the portal on the way up.
	        currentParent = node.stateNode.containerInfo;
	        currentParentIsContainer = true;
	        // Visit children because portals might contain host components.
	        node.child.return = node;
	        node = node.child;
	        continue;
	      }
	    } else {
	      commitUnmount(node);
	      // Visit children because we may find more host components below.
	      if (node.child !== null) {
	        node.child.return = node;
	        node = node.child;
	        continue;
	      }
	    }
	    if (node === current$$1) {
	      return;
	    }
	    while (node.sibling === null) {
	      if (node.return === null || node.return === current$$1) {
	        return;
	      }
	      node = node.return;
	      if (node.tag === HostPortal) {
	        // When we go out of the portal, we need to restore the parent.
	        // Since we don't keep a stack of them, we will search for it.
	        currentParentIsValid = false;
	      }
	    }
	    node.sibling.return = node.return;
	    node = node.sibling;
	  }
	}

	function commitDeletion(current$$1) {
	  if (supportsMutation) {
	    // Recursively delete all host nodes from the parent.
	    // Detach refs and call componentWillUnmount() on the whole subtree.
	    unmountHostComponents(current$$1);
	  } else {
	    // Detach refs and call componentWillUnmount() on the whole subtree.
	    commitNestedUnmounts(current$$1);
	  }
	  detachFiber(current$$1);
	}

	function commitWork(current$$1, finishedWork) {
	  if (!supportsMutation) {
	    switch (finishedWork.tag) {
	      case FunctionComponent:
	      case ForwardRef:
	      case MemoComponent:
	      case SimpleMemoComponent:
	        {
	          // Note: We currently never use MountMutation, but useLayout uses
	          // UnmountMutation.
	          commitHookEffectList(UnmountMutation, MountMutation, finishedWork);
	          return;
	        }
	    }

	    commitContainer(finishedWork);
	    return;
	  }

	  switch (finishedWork.tag) {
	    case FunctionComponent:
	    case ForwardRef:
	    case MemoComponent:
	    case SimpleMemoComponent:
	      {
	        // Note: We currently never use MountMutation, but useLayout uses
	        // UnmountMutation.
	        commitHookEffectList(UnmountMutation, MountMutation, finishedWork);
	        return;
	      }
	    case ClassComponent:
	      {
	        return;
	      }
	    case HostComponent:
	      {
	        var instance = finishedWork.stateNode;
	        if (instance != null) {
	          // Commit the work prepared earlier.
	          var newProps = finishedWork.memoizedProps;
	          // For hydration we reuse the update path but we treat the oldProps
	          // as the newProps. The updatePayload will contain the real change in
	          // this case.
	          var oldProps = current$$1 !== null ? current$$1.memoizedProps : newProps;
	          var type = finishedWork.type;
	          // TODO: Type the updateQueue to be specific to host components.
	          var updatePayload = finishedWork.updateQueue;
	          finishedWork.updateQueue = null;
	          if (updatePayload !== null) {
	            commitUpdate(instance, updatePayload, type, oldProps, newProps, finishedWork);
	          }
	        }
	        return;
	      }
	    case HostText:
	      {
	        !(finishedWork.stateNode !== null) ? invariant(false, 'This should have a text node initialized. This error is likely caused by a bug in React. Please file an issue.') : void 0;
	        var textInstance = finishedWork.stateNode;
	        var newText = finishedWork.memoizedProps;
	        // For hydration we reuse the update path but we treat the oldProps
	        // as the newProps. The updatePayload will contain the real change in
	        // this case.
	        var oldText = current$$1 !== null ? current$$1.memoizedProps : newText;
	        commitTextUpdate(textInstance, oldText, newText);
	        return;
	      }
	    case HostRoot:
	      {
	        return;
	      }
	    case Profiler:
	      {
	        return;
	      }
	    case SuspenseComponent:
	      {
	        var newState = finishedWork.memoizedState;

	        var newDidTimeout = void 0;
	        var primaryChildParent = finishedWork;
	        if (newState === null) {
	          newDidTimeout = false;
	        } else {
	          newDidTimeout = true;
	          primaryChildParent = finishedWork.child;
	          if (newState.timedOutAt === NoWork) {
	            // If the children had not already timed out, record the time.
	            // This is used to compute the elapsed time during subsequent
	            // attempts to render the children.
	            newState.timedOutAt = requestCurrentTime();
	          }
	        }

	        if (primaryChildParent !== null) {
	          hideOrUnhideAllChildren(primaryChildParent, newDidTimeout);
	        }

	        // If this boundary just timed out, then it will have a set of thenables.
	        // For each thenable, attach a listener so that when it resolves, React
	        // attempts to re-render the boundary in the primary (pre-timeout) state.
	        var thenables = finishedWork.updateQueue;
	        if (thenables !== null) {
	          finishedWork.updateQueue = null;
	          var retryCache = finishedWork.stateNode;
	          if (retryCache === null) {
	            retryCache = finishedWork.stateNode = new PossiblyWeakSet$1();
	          }
	          thenables.forEach(function (thenable) {
	            // Memoize using the boundary fiber to prevent redundant listeners.
	            var retry = retryTimedOutBoundary.bind(null, finishedWork, thenable);
	            if (enableSchedulerTracing) {
	              retry = tracing.unstable_wrap(retry);
	            }
	            if (!retryCache.has(thenable)) {
	              retryCache.add(thenable);
	              thenable.then(retry, retry);
	            }
	          });
	        }

	        return;
	      }
	    case IncompleteClassComponent:
	      {
	        return;
	      }
	    default:
	      {
	        invariant(false, 'This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue.');
	      }
	  }
	}

	function commitResetTextContent(current$$1) {
	  if (!supportsMutation) {
	    return;
	  }
	  resetTextContent(current$$1.stateNode);
	}

	var PossiblyWeakSet = typeof WeakSet === 'function' ? WeakSet : Set;
	var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;

	function createRootErrorUpdate(fiber, errorInfo, expirationTime) {
	  var update = createUpdate(expirationTime);
	  // Unmount the root by rendering null.
	  update.tag = CaptureUpdate;
	  // Caution: React DevTools currently depends on this property
	  // being called "element".
	  update.payload = { element: null };
	  var error = errorInfo.value;
	  update.callback = function () {
	    onUncaughtError(error);
	    logError(fiber, errorInfo);
	  };
	  return update;
	}

	function createClassErrorUpdate(fiber, errorInfo, expirationTime) {
	  var update = createUpdate(expirationTime);
	  update.tag = CaptureUpdate;
	  var getDerivedStateFromError = fiber.type.getDerivedStateFromError;
	  if (typeof getDerivedStateFromError === 'function') {
	    var error = errorInfo.value;
	    update.payload = function () {
	      return getDerivedStateFromError(error);
	    };
	  }

	  var inst = fiber.stateNode;
	  if (inst !== null && typeof inst.componentDidCatch === 'function') {
	    update.callback = function callback() {
	      if (typeof getDerivedStateFromError !== 'function') {
	        // To preserve the preexisting retry behavior of error boundaries,
	        // we keep track of which ones already failed during this batch.
	        // This gets reset before we yield back to the browser.
	        // TODO: Warn in strict mode if getDerivedStateFromError is
	        // not defined.
	        markLegacyErrorBoundaryAsFailed(this);
	      }
	      var error = errorInfo.value;
	      var stack = errorInfo.stack;
	      logError(fiber, errorInfo);
	      this.componentDidCatch(error, {
	        componentStack: stack !== null ? stack : ''
	      });
	      {
	        if (typeof getDerivedStateFromError !== 'function') {
	          // If componentDidCatch is the only error boundary method defined,
	          // then it needs to call setState to recover from errors.
	          // If no state update is scheduled then the boundary will swallow the error.
	          !(fiber.expirationTime === Sync) ? warningWithoutStack$1(false, '%s: Error boundaries should implement getDerivedStateFromError(). ' + 'In that method, return a state update to display an error message or fallback UI.', getComponentName(fiber.type) || 'Unknown') : void 0;
	        }
	      }
	    };
	  }
	  return update;
	}

	function attachPingListener(root, renderExpirationTime, thenable) {
	  // Attach a listener to the promise to "ping" the root and retry. But
	  // only if one does not already exist for the current render expiration
	  // time (which acts like a "thread ID" here).
	  var pingCache = root.pingCache;
	  var threadIDs = void 0;
	  if (pingCache === null) {
	    pingCache = root.pingCache = new PossiblyWeakMap();
	    threadIDs = new Set();
	    pingCache.set(thenable, threadIDs);
	  } else {
	    threadIDs = pingCache.get(thenable);
	    if (threadIDs === undefined) {
	      threadIDs = new Set();
	      pingCache.set(thenable, threadIDs);
	    }
	  }
	  if (!threadIDs.has(renderExpirationTime)) {
	    // Memoize using the thread ID to prevent redundant listeners.
	    threadIDs.add(renderExpirationTime);
	    var ping = pingSuspendedRoot.bind(null, root, thenable, renderExpirationTime);
	    if (enableSchedulerTracing) {
	      ping = tracing.unstable_wrap(ping);
	    }
	    thenable.then(ping, ping);
	  }
	}

	function throwException(root, returnFiber, sourceFiber, value, renderExpirationTime) {
	  // The source fiber did not complete.
	  sourceFiber.effectTag |= Incomplete;
	  // Its effect list is no longer valid.
	  sourceFiber.firstEffect = sourceFiber.lastEffect = null;

	  if (value !== null && typeof value === 'object' && typeof value.then === 'function') {
	    // This is a thenable.
	    var thenable = value;

	    // Find the earliest timeout threshold of all the placeholders in the
	    // ancestor path. We could avoid this traversal by storing the thresholds on
	    // the stack, but we choose not to because we only hit this path if we're
	    // IO-bound (i.e. if something suspends). Whereas the stack is used even in
	    // the non-IO- bound case.
	    var _workInProgress = returnFiber;
	    var earliestTimeoutMs = -1;
	    var startTimeMs = -1;
	    do {
	      if (_workInProgress.tag === SuspenseComponent) {
	        var current$$1 = _workInProgress.alternate;
	        if (current$$1 !== null) {
	          var currentState = current$$1.memoizedState;
	          if (currentState !== null) {
	            // Reached a boundary that already timed out. Do not search
	            // any further.
	            var timedOutAt = currentState.timedOutAt;
	            startTimeMs = expirationTimeToMs(timedOutAt);
	            // Do not search any further.
	            break;
	          }
	        }
	        var timeoutPropMs = _workInProgress.pendingProps.maxDuration;
	        if (typeof timeoutPropMs === 'number') {
	          if (timeoutPropMs <= 0) {
	            earliestTimeoutMs = 0;
	          } else if (earliestTimeoutMs === -1 || timeoutPropMs < earliestTimeoutMs) {
	            earliestTimeoutMs = timeoutPropMs;
	          }
	        }
	      }
	      // If there is a DehydratedSuspenseComponent we don't have to do anything because
	      // if something suspends inside it, we will simply leave that as dehydrated. It
	      // will never timeout.
	      _workInProgress = _workInProgress.return;
	    } while (_workInProgress !== null);

	    // Schedule the nearest Suspense to re-render the timed out view.
	    _workInProgress = returnFiber;
	    do {
	      if (_workInProgress.tag === SuspenseComponent && shouldCaptureSuspense(_workInProgress)) {
	        // Found the nearest boundary.

	        // Stash the promise on the boundary fiber. If the boundary times out, we'll
	        var thenables = _workInProgress.updateQueue;
	        if (thenables === null) {
	          var updateQueue = new Set();
	          updateQueue.add(thenable);
	          _workInProgress.updateQueue = updateQueue;
	        } else {
	          thenables.add(thenable);
	        }

	        // If the boundary is outside of concurrent mode, we should *not*
	        // suspend the commit. Pretend as if the suspended component rendered
	        // null and keep rendering. In the commit phase, we'll schedule a
	        // subsequent synchronous update to re-render the Suspense.
	        //
	        // Note: It doesn't matter whether the component that suspended was
	        // inside a concurrent mode tree. If the Suspense is outside of it, we
	        // should *not* suspend the commit.
	        if ((_workInProgress.mode & ConcurrentMode) === NoEffect) {
	          _workInProgress.effectTag |= DidCapture;

	          // We're going to commit this fiber even though it didn't complete.
	          // But we shouldn't call any lifecycle methods or callbacks. Remove
	          // all lifecycle effect tags.
	          sourceFiber.effectTag &= ~(LifecycleEffectMask | Incomplete);

	          if (sourceFiber.tag === ClassComponent) {
	            var currentSourceFiber = sourceFiber.alternate;
	            if (currentSourceFiber === null) {
	              // This is a new mount. Change the tag so it's not mistaken for a
	              // completed class component. For example, we should not call
	              // componentWillUnmount if it is deleted.
	              sourceFiber.tag = IncompleteClassComponent;
	            } else {
	              // When we try rendering again, we should not reuse the current fiber,
	              // since it's known to be in an inconsistent state. Use a force updte to
	              // prevent a bail out.
	              var update = createUpdate(Sync);
	              update.tag = ForceUpdate;
	              enqueueUpdate(sourceFiber, update);
	            }
	          }

	          // The source fiber did not complete. Mark it with Sync priority to
	          // indicate that it still has pending work.
	          sourceFiber.expirationTime = Sync;

	          // Exit without suspending.
	          return;
	        }

	        // Confirmed that the boundary is in a concurrent mode tree. Continue
	        // with the normal suspend path.

	        attachPingListener(root, renderExpirationTime, thenable);

	        var absoluteTimeoutMs = void 0;
	        if (earliestTimeoutMs === -1) {
	          // If no explicit threshold is given, default to an arbitrarily large
	          // value. The actual size doesn't matter because the threshold for the
	          // whole tree will be clamped to the expiration time.
	          absoluteTimeoutMs = maxSigned31BitInt;
	        } else {
	          if (startTimeMs === -1) {
	            // This suspend happened outside of any already timed-out
	            // placeholders. We don't know exactly when the update was
	            // scheduled, but we can infer an approximate start time from the
	            // expiration time. First, find the earliest uncommitted expiration
	            // time in the tree, including work that is suspended. Then subtract
	            // the offset used to compute an async update's expiration time.
	            // This will cause high priority (interactive) work to expire
	            // earlier than necessary, but we can account for this by adjusting
	            // for the Just Noticeable Difference.
	            var earliestExpirationTime = findEarliestOutstandingPriorityLevel(root, renderExpirationTime);
	            var earliestExpirationTimeMs = expirationTimeToMs(earliestExpirationTime);
	            startTimeMs = earliestExpirationTimeMs - LOW_PRIORITY_EXPIRATION;
	          }
	          absoluteTimeoutMs = startTimeMs + earliestTimeoutMs;
	        }

	        // Mark the earliest timeout in the suspended fiber's ancestor path.
	        // After completing the root, we'll take the largest of all the
	        // suspended fiber's timeouts and use it to compute a timeout for the
	        // whole tree.
	        renderDidSuspend(root, absoluteTimeoutMs, renderExpirationTime);

	        _workInProgress.effectTag |= ShouldCapture;
	        _workInProgress.expirationTime = renderExpirationTime;
	        return;
	      } else if (enableSuspenseServerRenderer && _workInProgress.tag === DehydratedSuspenseComponent) {
	        attachPingListener(root, renderExpirationTime, thenable);

	        // Since we already have a current fiber, we can eagerly add a retry listener.
	        var retryCache = _workInProgress.memoizedState;
	        if (retryCache === null) {
	          retryCache = _workInProgress.memoizedState = new PossiblyWeakSet();
	          var _current = _workInProgress.alternate;
	          !_current ? invariant(false, 'A dehydrated suspense boundary must commit before trying to render. This is probably a bug in React.') : void 0;
	          _current.memoizedState = retryCache;
	        }
	        // Memoize using the boundary fiber to prevent redundant listeners.
	        if (!retryCache.has(thenable)) {
	          retryCache.add(thenable);
	          var retry = retryTimedOutBoundary.bind(null, _workInProgress, thenable);
	          if (enableSchedulerTracing) {
	            retry = tracing.unstable_wrap(retry);
	          }
	          thenable.then(retry, retry);
	        }
	        _workInProgress.effectTag |= ShouldCapture;
	        _workInProgress.expirationTime = renderExpirationTime;
	        return;
	      }
	      // This boundary already captured during this render. Continue to the next
	      // boundary.
	      _workInProgress = _workInProgress.return;
	    } while (_workInProgress !== null);
	    // No boundary was found. Fallthrough to error mode.
	    // TODO: Use invariant so the message is stripped in prod?
	    value = new Error((getComponentName(sourceFiber.type) || 'A React component') + ' suspended while rendering, but no fallback UI was specified.\n' + '\n' + 'Add a <Suspense fallback=...> component higher in the tree to ' + 'provide a loading indicator or placeholder to display.' + getStackByFiberInDevAndProd(sourceFiber));
	  }

	  // We didn't find a boundary that could handle this type of exception. Start
	  // over and traverse parent path again, this time treating the exception
	  // as an error.
	  renderDidError();
	  value = createCapturedValue(value, sourceFiber);
	  var workInProgress = returnFiber;
	  do {
	    switch (workInProgress.tag) {
	      case HostRoot:
	        {
	          var _errorInfo = value;
	          workInProgress.effectTag |= ShouldCapture;
	          workInProgress.expirationTime = renderExpirationTime;
	          var _update = createRootErrorUpdate(workInProgress, _errorInfo, renderExpirationTime);
	          enqueueCapturedUpdate(workInProgress, _update);
	          return;
	        }
	      case ClassComponent:
	        // Capture and retry
	        var errorInfo = value;
	        var ctor = workInProgress.type;
	        var instance = workInProgress.stateNode;
	        if ((workInProgress.effectTag & DidCapture) === NoEffect && (typeof ctor.getDerivedStateFromError === 'function' || instance !== null && typeof instance.componentDidCatch === 'function' && !isAlreadyFailedLegacyErrorBoundary(instance))) {
	          workInProgress.effectTag |= ShouldCapture;
	          workInProgress.expirationTime = renderExpirationTime;
	          // Schedule the error boundary to re-render using updated state
	          var _update2 = createClassErrorUpdate(workInProgress, errorInfo, renderExpirationTime);
	          enqueueCapturedUpdate(workInProgress, _update2);
	          return;
	        }
	        break;
	      default:
	        break;
	    }
	    workInProgress = workInProgress.return;
	  } while (workInProgress !== null);
	}

	function unwindWork(workInProgress, renderExpirationTime) {
	  switch (workInProgress.tag) {
	    case ClassComponent:
	      {
	        var Component = workInProgress.type;
	        if (isContextProvider(Component)) {
	          popContext(workInProgress);
	        }
	        var effectTag = workInProgress.effectTag;
	        if (effectTag & ShouldCapture) {
	          workInProgress.effectTag = effectTag & ~ShouldCapture | DidCapture;
	          return workInProgress;
	        }
	        return null;
	      }
	    case HostRoot:
	      {
	        popHostContainer(workInProgress);
	        popTopLevelContextObject(workInProgress);
	        var _effectTag = workInProgress.effectTag;
	        !((_effectTag & DidCapture) === NoEffect) ? invariant(false, 'The root failed to unmount after an error. This is likely a bug in React. Please file an issue.') : void 0;
	        workInProgress.effectTag = _effectTag & ~ShouldCapture | DidCapture;
	        return workInProgress;
	      }
	    case HostComponent:
	      {
	        // TODO: popHydrationState
	        popHostContext(workInProgress);
	        return null;
	      }
	    case SuspenseComponent:
	      {
	        var _effectTag2 = workInProgress.effectTag;
	        if (_effectTag2 & ShouldCapture) {
	          workInProgress.effectTag = _effectTag2 & ~ShouldCapture | DidCapture;
	          // Captured a suspense effect. Re-render the boundary.
	          return workInProgress;
	        }
	        return null;
	      }
	    case DehydratedSuspenseComponent:
	      {
	        if (enableSuspenseServerRenderer) {
	          // TODO: popHydrationState
	          var _effectTag3 = workInProgress.effectTag;
	          if (_effectTag3 & ShouldCapture) {
	            workInProgress.effectTag = _effectTag3 & ~ShouldCapture | DidCapture;
	            // Captured a suspense effect. Re-render the boundary.
	            return workInProgress;
	          }
	        }
	        return null;
	      }
	    case HostPortal:
	      popHostContainer(workInProgress);
	      return null;
	    case ContextProvider:
	      popProvider(workInProgress);
	      return null;
	    default:
	      return null;
	  }
	}

	function unwindInterruptedWork(interruptedWork) {
	  switch (interruptedWork.tag) {
	    case ClassComponent:
	      {
	        var childContextTypes = interruptedWork.type.childContextTypes;
	        if (childContextTypes !== null && childContextTypes !== undefined) {
	          popContext(interruptedWork);
	        }
	        break;
	      }
	    case HostRoot:
	      {
	        popHostContainer(interruptedWork);
	        popTopLevelContextObject(interruptedWork);
	        break;
	      }
	    case HostComponent:
	      {
	        popHostContext(interruptedWork);
	        break;
	      }
	    case HostPortal:
	      popHostContainer(interruptedWork);
	      break;
	    case ContextProvider:
	      popProvider(interruptedWork);
	      break;
	    default:
	      break;
	  }
	}

	var ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;
	var ReactCurrentOwner$2 = ReactSharedInternals.ReactCurrentOwner;


	var didWarnAboutStateTransition = void 0;
	var didWarnSetStateChildContext = void 0;
	var warnAboutUpdateOnUnmounted = void 0;
	var warnAboutInvalidUpdates = void 0;

	if (enableSchedulerTracing) {
	  // Provide explicit error message when production+profiling bundle of e.g. react-dom
	  // is used with production (non-profiling) bundle of scheduler/tracing
	  !(tracing.__interactionsRef != null && tracing.__interactionsRef.current != null) ? invariant(false, 'It is not supported to run the profiling version of a renderer (for example, `react-dom/profiling`) without also replacing the `scheduler/tracing` module with `scheduler/tracing-profiling`. Your bundler might have a setting for aliasing both modules. Learn more at http://fb.me/react-profiling') : void 0;
	}

	{
	  didWarnAboutStateTransition = false;
	  didWarnSetStateChildContext = false;
	  var didWarnStateUpdateForUnmountedComponent = {};

	  warnAboutUpdateOnUnmounted = function (fiber, isClass) {
	    // We show the whole stack but dedupe on the top component's name because
	    // the problematic code almost always lies inside that component.
	    var componentName = getComponentName(fiber.type) || 'ReactComponent';
	    if (didWarnStateUpdateForUnmountedComponent[componentName]) {
	      return;
	    }
	    warningWithoutStack$1(false, "Can't perform a React state update on an unmounted component. This " + 'is a no-op, but it indicates a memory leak in your application. To ' + 'fix, cancel all subscriptions and asynchronous tasks in %s.%s', isClass ? 'the componentWillUnmount method' : 'a useEffect cleanup function', getStackByFiberInDevAndProd(fiber));
	    didWarnStateUpdateForUnmountedComponent[componentName] = true;
	  };

	  warnAboutInvalidUpdates = function (instance) {
	    switch (phase) {
	      case 'getChildContext':
	        if (didWarnSetStateChildContext) {
	          return;
	        }
	        warningWithoutStack$1(false, 'setState(...): Cannot call setState() inside getChildContext()');
	        didWarnSetStateChildContext = true;
	        break;
	      case 'render':
	        if (didWarnAboutStateTransition) {
	          return;
	        }
	        warningWithoutStack$1(false, 'Cannot update during an existing state transition (such as within ' + '`render`). Render methods should be a pure function of props and state.');
	        didWarnAboutStateTransition = true;
	        break;
	    }
	  };
	}

	// Used to ensure computeUniqueAsyncExpiration is monotonically decreasing.
	var lastUniqueAsyncExpiration = Sync - 1;

	var isWorking = false;

	// The next work in progress fiber that we're currently working on.
	var nextUnitOfWork = null;
	var nextRoot = null;
	// The time at which we're currently rendering work.
	var nextRenderExpirationTime = NoWork;
	var nextLatestAbsoluteTimeoutMs = -1;
	var nextRenderDidError = false;

	// The next fiber with an effect that we're currently committing.
	var nextEffect = null;

	var isCommitting$1 = false;
	var rootWithPendingPassiveEffects = null;
	var passiveEffectCallbackHandle = null;
	var passiveEffectCallback = null;

	var legacyErrorBoundariesThatAlreadyFailed = null;

	// Used for performance tracking.
	var interruptedBy = null;

	var stashedWorkInProgressProperties = void 0;
	var replayUnitOfWork = void 0;
	var mayReplayFailedUnitOfWork = void 0;
	var isReplayingFailedUnitOfWork = void 0;
	var originalReplayError = void 0;
	var rethrowOriginalError = void 0;
	if (true && replayFailedUnitOfWorkWithInvokeGuardedCallback) {
	  stashedWorkInProgressProperties = null;
	  mayReplayFailedUnitOfWork = true;
	  isReplayingFailedUnitOfWork = false;
	  originalReplayError = null;
	  replayUnitOfWork = function (failedUnitOfWork, thrownValue, isYieldy) {
	    if (thrownValue !== null && typeof thrownValue === 'object' && typeof thrownValue.then === 'function') {
	      // Don't replay promises. Treat everything else like an error.
	      // TODO: Need to figure out a different strategy if/when we add
	      // support for catching other types.
	      return;
	    }

	    // Restore the original state of the work-in-progress
	    if (stashedWorkInProgressProperties === null) {
	      // This should never happen. Don't throw because this code is DEV-only.
	      warningWithoutStack$1(false, 'Could not replay rendering after an error. This is likely a bug in React. ' + 'Please file an issue.');
	      return;
	    }
	    assignFiberPropertiesInDEV(failedUnitOfWork, stashedWorkInProgressProperties);

	    switch (failedUnitOfWork.tag) {
	      case HostRoot:
	        popHostContainer(failedUnitOfWork);
	        popTopLevelContextObject(failedUnitOfWork);
	        break;
	      case HostComponent:
	        popHostContext(failedUnitOfWork);
	        break;
	      case ClassComponent:
	        {
	          var Component = failedUnitOfWork.type;
	          if (isContextProvider(Component)) {
	            popContext(failedUnitOfWork);
	          }
	          break;
	        }
	      case HostPortal:
	        popHostContainer(failedUnitOfWork);
	        break;
	      case ContextProvider:
	        popProvider(failedUnitOfWork);
	        break;
	    }
	    // Replay the begin phase.
	    isReplayingFailedUnitOfWork = true;
	    originalReplayError = thrownValue;
	    invokeGuardedCallback(null, workLoop, null, isYieldy);
	    isReplayingFailedUnitOfWork = false;
	    originalReplayError = null;
	    if (hasCaughtError()) {
	      var replayError = clearCaughtError();
	      if (replayError != null && thrownValue != null) {
	        try {
	          // Reading the expando property is intentionally
	          // inside `try` because it might be a getter or Proxy.
	          if (replayError._suppressLogging) {
	            // Also suppress logging for the original error.
	            thrownValue._suppressLogging = true;
	          }
	        } catch (inner) {
	          // Ignore.
	        }
	      }
	    } else {
	      // If the begin phase did not fail the second time, set this pointer
	      // back to the original value.
	      nextUnitOfWork = failedUnitOfWork;
	    }
	  };
	  rethrowOriginalError = function () {
	    throw originalReplayError;
	  };
	}

	function resetStack() {
	  if (nextUnitOfWork !== null) {
	    var interruptedWork = nextUnitOfWork.return;
	    while (interruptedWork !== null) {
	      unwindInterruptedWork(interruptedWork);
	      interruptedWork = interruptedWork.return;
	    }
	  }

	  {
	    ReactStrictModeWarnings.discardPendingWarnings();
	    checkThatStackIsEmpty();
	  }

	  nextRoot = null;
	  nextRenderExpirationTime = NoWork;
	  nextLatestAbsoluteTimeoutMs = -1;
	  nextRenderDidError = false;
	  nextUnitOfWork = null;
	}

	function commitAllHostEffects() {
	  while (nextEffect !== null) {
	    {
	      setCurrentFiber(nextEffect);
	    }
	    recordEffect();

	    var effectTag = nextEffect.effectTag;

	    if (effectTag & ContentReset) {
	      commitResetTextContent(nextEffect);
	    }

	    if (effectTag & Ref) {
	      var current$$1 = nextEffect.alternate;
	      if (current$$1 !== null) {
	        commitDetachRef(current$$1);
	      }
	    }

	    // The following switch statement is only concerned about placement,
	    // updates, and deletions. To avoid needing to add a case for every
	    // possible bitmap value, we remove the secondary effects from the
	    // effect tag and switch on that value.
	    var primaryEffectTag = effectTag & (Placement | Update | Deletion);
	    switch (primaryEffectTag) {
	      case Placement:
	        {
	          commitPlacement(nextEffect);
	          // Clear the "placement" from effect tag so that we know that this is inserted, before
	          // any life-cycles like componentDidMount gets called.
	          // TODO: findDOMNode doesn't rely on this any more but isMounted
	          // does and isMounted is deprecated anyway so we should be able
	          // to kill this.
	          nextEffect.effectTag &= ~Placement;
	          break;
	        }
	      case PlacementAndUpdate:
	        {
	          // Placement
	          commitPlacement(nextEffect);
	          // Clear the "placement" from effect tag so that we know that this is inserted, before
	          // any life-cycles like componentDidMount gets called.
	          nextEffect.effectTag &= ~Placement;

	          // Update
	          var _current = nextEffect.alternate;
	          commitWork(_current, nextEffect);
	          break;
	        }
	      case Update:
	        {
	          var _current2 = nextEffect.alternate;
	          commitWork(_current2, nextEffect);
	          break;
	        }
	      case Deletion:
	        {
	          commitDeletion(nextEffect);
	          break;
	        }
	    }
	    nextEffect = nextEffect.nextEffect;
	  }

	  {
	    resetCurrentFiber();
	  }
	}

	function commitBeforeMutationLifecycles() {
	  while (nextEffect !== null) {
	    {
	      setCurrentFiber(nextEffect);
	    }

	    var effectTag = nextEffect.effectTag;
	    if (effectTag & Snapshot) {
	      recordEffect();
	      var current$$1 = nextEffect.alternate;
	      commitBeforeMutationLifeCycles(current$$1, nextEffect);
	    }

	    nextEffect = nextEffect.nextEffect;
	  }

	  {
	    resetCurrentFiber();
	  }
	}

	function commitAllLifeCycles(finishedRoot, committedExpirationTime) {
	  {
	    ReactStrictModeWarnings.flushPendingUnsafeLifecycleWarnings();
	    ReactStrictModeWarnings.flushLegacyContextWarning();

	    if (warnAboutDeprecatedLifecycles) {
	      ReactStrictModeWarnings.flushPendingDeprecationWarnings();
	    }
	  }
	  while (nextEffect !== null) {
	    {
	      setCurrentFiber(nextEffect);
	    }
	    var effectTag = nextEffect.effectTag;

	    if (effectTag & (Update | Callback)) {
	      recordEffect();
	      var current$$1 = nextEffect.alternate;
	      commitLifeCycles(finishedRoot, current$$1, nextEffect, committedExpirationTime);
	    }

	    if (effectTag & Ref) {
	      recordEffect();
	      commitAttachRef(nextEffect);
	    }

	    if (effectTag & Passive) {
	      rootWithPendingPassiveEffects = finishedRoot;
	    }

	    nextEffect = nextEffect.nextEffect;
	  }
	  {
	    resetCurrentFiber();
	  }
	}

	function commitPassiveEffects(root, firstEffect) {
	  rootWithPendingPassiveEffects = null;
	  passiveEffectCallbackHandle = null;
	  passiveEffectCallback = null;

	  // Set this to true to prevent re-entrancy
	  var previousIsRendering = isRendering;
	  isRendering = true;

	  var effect = firstEffect;
	  do {
	    {
	      setCurrentFiber(effect);
	    }

	    if (effect.effectTag & Passive) {
	      var didError = false;
	      var error = void 0;
	      {
	        invokeGuardedCallback(null, commitPassiveHookEffects, null, effect);
	        if (hasCaughtError()) {
	          didError = true;
	          error = clearCaughtError();
	        }
	      }
	      if (didError) {
	        captureCommitPhaseError(effect, error);
	      }
	    }
	    effect = effect.nextEffect;
	  } while (effect !== null);
	  {
	    resetCurrentFiber();
	  }

	  isRendering = previousIsRendering;

	  // Check if work was scheduled by one of the effects
	  var rootExpirationTime = root.expirationTime;
	  if (rootExpirationTime !== NoWork) {
	    requestWork(root, rootExpirationTime);
	  }
	  // Flush any sync work that was scheduled by effects
	  if (!isBatchingUpdates && !isRendering) {
	    performSyncWork();
	  }
	}

	function isAlreadyFailedLegacyErrorBoundary(instance) {
	  return legacyErrorBoundariesThatAlreadyFailed !== null && legacyErrorBoundariesThatAlreadyFailed.has(instance);
	}

	function markLegacyErrorBoundaryAsFailed(instance) {
	  if (legacyErrorBoundariesThatAlreadyFailed === null) {
	    legacyErrorBoundariesThatAlreadyFailed = new Set([instance]);
	  } else {
	    legacyErrorBoundariesThatAlreadyFailed.add(instance);
	  }
	}

	function flushPassiveEffects() {
	  if (passiveEffectCallbackHandle !== null) {
	    cancelPassiveEffects(passiveEffectCallbackHandle);
	  }
	  if (passiveEffectCallback !== null) {
	    // We call the scheduled callback instead of commitPassiveEffects directly
	    // to ensure tracing works correctly.
	    passiveEffectCallback();
	  }
	}

	function commitRoot(root, finishedWork) {
	  isWorking = true;
	  isCommitting$1 = true;
	  startCommitTimer();

	  !(root.current !== finishedWork) ? invariant(false, 'Cannot commit the same tree as before. This is probably a bug related to the return field. This error is likely caused by a bug in React. Please file an issue.') : void 0;
	  var committedExpirationTime = root.pendingCommitExpirationTime;
	  !(committedExpirationTime !== NoWork) ? invariant(false, 'Cannot commit an incomplete root. This error is likely caused by a bug in React. Please file an issue.') : void 0;
	  root.pendingCommitExpirationTime = NoWork;

	  // Update the pending priority levels to account for the work that we are
	  // about to commit. This needs to happen before calling the lifecycles, since
	  // they may schedule additional updates.
	  var updateExpirationTimeBeforeCommit = finishedWork.expirationTime;
	  var childExpirationTimeBeforeCommit = finishedWork.childExpirationTime;
	  var earliestRemainingTimeBeforeCommit = childExpirationTimeBeforeCommit > updateExpirationTimeBeforeCommit ? childExpirationTimeBeforeCommit : updateExpirationTimeBeforeCommit;
	  markCommittedPriorityLevels(root, earliestRemainingTimeBeforeCommit);

	  var prevInteractions = null;
	  if (enableSchedulerTracing) {
	    // Restore any pending interactions at this point,
	    // So that cascading work triggered during the render phase will be accounted for.
	    prevInteractions = tracing.__interactionsRef.current;
	    tracing.__interactionsRef.current = root.memoizedInteractions;
	  }

	  // Reset this to null before calling lifecycles
	  ReactCurrentOwner$2.current = null;

	  var firstEffect = void 0;
	  if (finishedWork.effectTag > PerformedWork) {
	    // A fiber's effect list consists only of its children, not itself. So if
	    // the root has an effect, we need to add it to the end of the list. The
	    // resulting list is the set that would belong to the root's parent, if
	    // it had one; that is, all the effects in the tree including the root.
	    if (finishedWork.lastEffect !== null) {
	      finishedWork.lastEffect.nextEffect = finishedWork;
	      firstEffect = finishedWork.firstEffect;
	    } else {
	      firstEffect = finishedWork;
	    }
	  } else {
	    // There is no effect on the root.
	    firstEffect = finishedWork.firstEffect;
	  }

	  prepareForCommit(root.containerInfo);

	  // Invoke instances of getSnapshotBeforeUpdate before mutation.
	  nextEffect = firstEffect;
	  startCommitSnapshotEffectsTimer();
	  while (nextEffect !== null) {
	    var didError = false;
	    var error = void 0;
	    {
	      invokeGuardedCallback(null, commitBeforeMutationLifecycles, null);
	      if (hasCaughtError()) {
	        didError = true;
	        error = clearCaughtError();
	      }
	    }
	    if (didError) {
	      !(nextEffect !== null) ? invariant(false, 'Should have next effect. This error is likely caused by a bug in React. Please file an issue.') : void 0;
	      captureCommitPhaseError(nextEffect, error);
	      // Clean-up
	      if (nextEffect !== null) {
	        nextEffect = nextEffect.nextEffect;
	      }
	    }
	  }
	  stopCommitSnapshotEffectsTimer();

	  if (enableProfilerTimer) {
	    // Mark the current commit time to be shared by all Profilers in this batch.
	    // This enables them to be grouped later.
	    recordCommitTime();
	  }

	  // Commit all the side-effects within a tree. We'll do this in two passes.
	  // The first pass performs all the host insertions, updates, deletions and
	  // ref unmounts.
	  nextEffect = firstEffect;
	  startCommitHostEffectsTimer();
	  while (nextEffect !== null) {
	    var _didError = false;
	    var _error = void 0;
	    {
	      invokeGuardedCallback(null, commitAllHostEffects, null);
	      if (hasCaughtError()) {
	        _didError = true;
	        _error = clearCaughtError();
	      }
	    }
	    if (_didError) {
	      !(nextEffect !== null) ? invariant(false, 'Should have next effect. This error is likely caused by a bug in React. Please file an issue.') : void 0;
	      captureCommitPhaseError(nextEffect, _error);
	      // Clean-up
	      if (nextEffect !== null) {
	        nextEffect = nextEffect.nextEffect;
	      }
	    }
	  }
	  stopCommitHostEffectsTimer();

	  resetAfterCommit(root.containerInfo);

	  // The work-in-progress tree is now the current tree. This must come after
	  // the first pass of the commit phase, so that the previous tree is still
	  // current during componentWillUnmount, but before the second pass, so that
	  // the finished work is current during componentDidMount/Update.
	  root.current = finishedWork;

	  // In the second pass we'll perform all life-cycles and ref callbacks.
	  // Life-cycles happen as a separate pass so that all placements, updates,
	  // and deletions in the entire tree have already been invoked.
	  // This pass also triggers any renderer-specific initial effects.
	  nextEffect = firstEffect;
	  startCommitLifeCyclesTimer();
	  while (nextEffect !== null) {
	    var _didError2 = false;
	    var _error2 = void 0;
	    {
	      invokeGuardedCallback(null, commitAllLifeCycles, null, root, committedExpirationTime);
	      if (hasCaughtError()) {
	        _didError2 = true;
	        _error2 = clearCaughtError();
	      }
	    }
	    if (_didError2) {
	      !(nextEffect !== null) ? invariant(false, 'Should have next effect. This error is likely caused by a bug in React. Please file an issue.') : void 0;
	      captureCommitPhaseError(nextEffect, _error2);
	      if (nextEffect !== null) {
	        nextEffect = nextEffect.nextEffect;
	      }
	    }
	  }

	  if (firstEffect !== null && rootWithPendingPassiveEffects !== null) {
	    // This commit included a passive effect. These do not need to fire until
	    // after the next paint. Schedule an callback to fire them in an async
	    // event. To ensure serial execution, the callback will be flushed early if
	    // we enter rootWithPendingPassiveEffects commit phase before then.
	    var callback = commitPassiveEffects.bind(null, root, firstEffect);
	    if (enableSchedulerTracing) {
	      // TODO: Avoid this extra callback by mutating the tracing ref directly,
	      // like we do at the beginning of commitRoot. I've opted not to do that
	      // here because that code is still in flux.
	      callback = tracing.unstable_wrap(callback);
	    }
	    passiveEffectCallbackHandle = scheduler.unstable_runWithPriority(scheduler.unstable_NormalPriority, function () {
	      return schedulePassiveEffects(callback);
	    });
	    passiveEffectCallback = callback;
	  }

	  isCommitting$1 = false;
	  isWorking = false;
	  stopCommitLifeCyclesTimer();
	  stopCommitTimer();
	  onCommitRoot(finishedWork.stateNode);
	  if (true && ReactFiberInstrumentation_1.debugTool) {
	    ReactFiberInstrumentation_1.debugTool.onCommitWork(finishedWork);
	  }

	  var updateExpirationTimeAfterCommit = finishedWork.expirationTime;
	  var childExpirationTimeAfterCommit = finishedWork.childExpirationTime;
	  var earliestRemainingTimeAfterCommit = childExpirationTimeAfterCommit > updateExpirationTimeAfterCommit ? childExpirationTimeAfterCommit : updateExpirationTimeAfterCommit;
	  if (earliestRemainingTimeAfterCommit === NoWork) {
	    // If there's no remaining work, we can clear the set of already failed
	    // error boundaries.
	    legacyErrorBoundariesThatAlreadyFailed = null;
	  }
	  onCommit(root, earliestRemainingTimeAfterCommit);

	  if (enableSchedulerTracing) {
	    tracing.__interactionsRef.current = prevInteractions;

	    var subscriber = void 0;

	    try {
	      subscriber = tracing.__subscriberRef.current;
	      if (subscriber !== null && root.memoizedInteractions.size > 0) {
	        var threadID = computeThreadID(committedExpirationTime, root.interactionThreadID);
	        subscriber.onWorkStopped(root.memoizedInteractions, threadID);
	      }
	    } catch (error) {
	      // It's not safe for commitRoot() to throw.
	      // Store the error for now and we'll re-throw in finishRendering().
	      if (!hasUnhandledError) {
	        hasUnhandledError = true;
	        unhandledError = error;
	      }
	    } finally {
	      // Clear completed interactions from the pending Map.
	      // Unless the render was suspended or cascading work was scheduled,
	      // In which case– leave pending interactions until the subsequent render.
	      var pendingInteractionMap = root.pendingInteractionMap;
	      pendingInteractionMap.forEach(function (scheduledInteractions, scheduledExpirationTime) {
	        // Only decrement the pending interaction count if we're done.
	        // If there's still work at the current priority,
	        // That indicates that we are waiting for suspense data.
	        if (scheduledExpirationTime > earliestRemainingTimeAfterCommit) {
	          pendingInteractionMap.delete(scheduledExpirationTime);

	          scheduledInteractions.forEach(function (interaction) {
	            interaction.__count--;

	            if (subscriber !== null && interaction.__count === 0) {
	              try {
	                subscriber.onInteractionScheduledWorkCompleted(interaction);
	              } catch (error) {
	                // It's not safe for commitRoot() to throw.
	                // Store the error for now and we'll re-throw in finishRendering().
	                if (!hasUnhandledError) {
	                  hasUnhandledError = true;
	                  unhandledError = error;
	                }
	              }
	            }
	          });
	        }
	      });
	    }
	  }
	}

	function resetChildExpirationTime(workInProgress, renderTime) {
	  if (renderTime !== Never && workInProgress.childExpirationTime === Never) {
	    // The children of this component are hidden. Don't bubble their
	    // expiration times.
	    return;
	  }

	  var newChildExpirationTime = NoWork;

	  // Bubble up the earliest expiration time.
	  if (enableProfilerTimer && workInProgress.mode & ProfileMode) {
	    // We're in profiling mode.
	    // Let's use this same traversal to update the render durations.
	    var actualDuration = workInProgress.actualDuration;
	    var treeBaseDuration = workInProgress.selfBaseDuration;

	    // When a fiber is cloned, its actualDuration is reset to 0.
	    // This value will only be updated if work is done on the fiber (i.e. it doesn't bailout).
	    // When work is done, it should bubble to the parent's actualDuration.
	    // If the fiber has not been cloned though, (meaning no work was done),
	    // Then this value will reflect the amount of time spent working on a previous render.
	    // In that case it should not bubble.
	    // We determine whether it was cloned by comparing the child pointer.
	    var shouldBubbleActualDurations = workInProgress.alternate === null || workInProgress.child !== workInProgress.alternate.child;

	    var child = workInProgress.child;
	    while (child !== null) {
	      var childUpdateExpirationTime = child.expirationTime;
	      var childChildExpirationTime = child.childExpirationTime;
	      if (childUpdateExpirationTime > newChildExpirationTime) {
	        newChildExpirationTime = childUpdateExpirationTime;
	      }
	      if (childChildExpirationTime > newChildExpirationTime) {
	        newChildExpirationTime = childChildExpirationTime;
	      }
	      if (shouldBubbleActualDurations) {
	        actualDuration += child.actualDuration;
	      }
	      treeBaseDuration += child.treeBaseDuration;
	      child = child.sibling;
	    }
	    workInProgress.actualDuration = actualDuration;
	    workInProgress.treeBaseDuration = treeBaseDuration;
	  } else {
	    var _child = workInProgress.child;
	    while (_child !== null) {
	      var _childUpdateExpirationTime = _child.expirationTime;
	      var _childChildExpirationTime = _child.childExpirationTime;
	      if (_childUpdateExpirationTime > newChildExpirationTime) {
	        newChildExpirationTime = _childUpdateExpirationTime;
	      }
	      if (_childChildExpirationTime > newChildExpirationTime) {
	        newChildExpirationTime = _childChildExpirationTime;
	      }
	      _child = _child.sibling;
	    }
	  }

	  workInProgress.childExpirationTime = newChildExpirationTime;
	}

	function completeUnitOfWork(workInProgress) {
	  // Attempt to complete the current unit of work, then move to the
	  // next sibling. If there are no more siblings, return to the
	  // parent fiber.
	  while (true) {
	    // The current, flushed, state of this fiber is the alternate.
	    // Ideally nothing should rely on this, but relying on it here
	    // means that we don't need an additional field on the work in
	    // progress.
	    var current$$1 = workInProgress.alternate;
	    {
	      setCurrentFiber(workInProgress);
	    }

	    var returnFiber = workInProgress.return;
	    var siblingFiber = workInProgress.sibling;

	    if ((workInProgress.effectTag & Incomplete) === NoEffect) {
	      if (true && replayFailedUnitOfWorkWithInvokeGuardedCallback) {
	        // Don't replay if it fails during completion phase.
	        mayReplayFailedUnitOfWork = false;
	      }
	      // This fiber completed.
	      // Remember we're completing this unit so we can find a boundary if it fails.
	      nextUnitOfWork = workInProgress;
	      if (enableProfilerTimer) {
	        if (workInProgress.mode & ProfileMode) {
	          startProfilerTimer(workInProgress);
	        }
	        nextUnitOfWork = completeWork(current$$1, workInProgress, nextRenderExpirationTime);
	        if (workInProgress.mode & ProfileMode) {
	          // Update render duration assuming we didn't error.
	          stopProfilerTimerIfRunningAndRecordDelta(workInProgress, false);
	        }
	      } else {
	        nextUnitOfWork = completeWork(current$$1, workInProgress, nextRenderExpirationTime);
	      }
	      if (true && replayFailedUnitOfWorkWithInvokeGuardedCallback) {
	        // We're out of completion phase so replaying is fine now.
	        mayReplayFailedUnitOfWork = true;
	      }
	      stopWorkTimer(workInProgress);
	      resetChildExpirationTime(workInProgress, nextRenderExpirationTime);
	      {
	        resetCurrentFiber();
	      }

	      if (nextUnitOfWork !== null) {
	        // Completing this fiber spawned new work. Work on that next.
	        return nextUnitOfWork;
	      }

	      if (returnFiber !== null &&
	      // Do not append effects to parents if a sibling failed to complete
	      (returnFiber.effectTag & Incomplete) === NoEffect) {
	        // Append all the effects of the subtree and this fiber onto the effect
	        // list of the parent. The completion order of the children affects the
	        // side-effect order.
	        if (returnFiber.firstEffect === null) {
	          returnFiber.firstEffect = workInProgress.firstEffect;
	        }
	        if (workInProgress.lastEffect !== null) {
	          if (returnFiber.lastEffect !== null) {
	            returnFiber.lastEffect.nextEffect = workInProgress.firstEffect;
	          }
	          returnFiber.lastEffect = workInProgress.lastEffect;
	        }

	        // If this fiber had side-effects, we append it AFTER the children's
	        // side-effects. We can perform certain side-effects earlier if
	        // needed, by doing multiple passes over the effect list. We don't want
	        // to schedule our own side-effect on our own list because if end up
	        // reusing children we'll schedule this effect onto itself since we're
	        // at the end.
	        var effectTag = workInProgress.effectTag;
	        // Skip both NoWork and PerformedWork tags when creating the effect list.
	        // PerformedWork effect is read by React DevTools but shouldn't be committed.
	        if (effectTag > PerformedWork) {
	          if (returnFiber.lastEffect !== null) {
	            returnFiber.lastEffect.nextEffect = workInProgress;
	          } else {
	            returnFiber.firstEffect = workInProgress;
	          }
	          returnFiber.lastEffect = workInProgress;
	        }
	      }

	      if (true && ReactFiberInstrumentation_1.debugTool) {
	        ReactFiberInstrumentation_1.debugTool.onCompleteWork(workInProgress);
	      }

	      if (siblingFiber !== null) {
	        // If there is more work to do in this returnFiber, do that next.
	        return siblingFiber;
	      } else if (returnFiber !== null) {
	        // If there's no more work in this returnFiber. Complete the returnFiber.
	        workInProgress = returnFiber;
	        continue;
	      } else {
	        // We've reached the root.
	        return null;
	      }
	    } else {
	      if (enableProfilerTimer && workInProgress.mode & ProfileMode) {
	        // Record the render duration for the fiber that errored.
	        stopProfilerTimerIfRunningAndRecordDelta(workInProgress, false);

	        // Include the time spent working on failed children before continuing.
	        var actualDuration = workInProgress.actualDuration;
	        var child = workInProgress.child;
	        while (child !== null) {
	          actualDuration += child.actualDuration;
	          child = child.sibling;
	        }
	        workInProgress.actualDuration = actualDuration;
	      }

	      // This fiber did not complete because something threw. Pop values off
	      // the stack without entering the complete phase. If this is a boundary,
	      // capture values if possible.
	      var next = unwindWork(workInProgress, nextRenderExpirationTime);
	      // Because this fiber did not complete, don't reset its expiration time.
	      if (workInProgress.effectTag & DidCapture) {
	        // Restarting an error boundary
	        stopFailedWorkTimer(workInProgress);
	      } else {
	        stopWorkTimer(workInProgress);
	      }

	      {
	        resetCurrentFiber();
	      }

	      if (next !== null) {
	        stopWorkTimer(workInProgress);
	        if (true && ReactFiberInstrumentation_1.debugTool) {
	          ReactFiberInstrumentation_1.debugTool.onCompleteWork(workInProgress);
	        }

	        // If completing this work spawned new work, do that next. We'll come
	        // back here again.
	        // Since we're restarting, remove anything that is not a host effect
	        // from the effect tag.
	        next.effectTag &= HostEffectMask;
	        return next;
	      }

	      if (returnFiber !== null) {
	        // Mark the parent fiber as incomplete and clear its effect list.
	        returnFiber.firstEffect = returnFiber.lastEffect = null;
	        returnFiber.effectTag |= Incomplete;
	      }

	      if (true && ReactFiberInstrumentation_1.debugTool) {
	        ReactFiberInstrumentation_1.debugTool.onCompleteWork(workInProgress);
	      }

	      if (siblingFiber !== null) {
	        // If there is more work to do in this returnFiber, do that next.
	        return siblingFiber;
	      } else if (returnFiber !== null) {
	        // If there's no more work in this returnFiber. Complete the returnFiber.
	        workInProgress = returnFiber;
	        continue;
	      } else {
	        return null;
	      }
	    }
	  }

	  // Without this explicit null return Flow complains of invalid return type
	  // TODO Remove the above while(true) loop
	  // eslint-disable-next-line no-unreachable
	  return null;
	}

	function performUnitOfWork(workInProgress) {
	  // The current, flushed, state of this fiber is the alternate.
	  // Ideally nothing should rely on this, but relying on it here
	  // means that we don't need an additional field on the work in
	  // progress.
	  var current$$1 = workInProgress.alternate;

	  // See if beginning this work spawns more work.
	  startWorkTimer(workInProgress);
	  {
	    setCurrentFiber(workInProgress);
	  }

	  if (true && replayFailedUnitOfWorkWithInvokeGuardedCallback) {
	    stashedWorkInProgressProperties = assignFiberPropertiesInDEV(stashedWorkInProgressProperties, workInProgress);
	  }

	  var next = void 0;
	  if (enableProfilerTimer) {
	    if (workInProgress.mode & ProfileMode) {
	      startProfilerTimer(workInProgress);
	    }

	    next = beginWork(current$$1, workInProgress, nextRenderExpirationTime);
	    workInProgress.memoizedProps = workInProgress.pendingProps;

	    if (workInProgress.mode & ProfileMode) {
	      // Record the render duration assuming we didn't bailout (or error).
	      stopProfilerTimerIfRunningAndRecordDelta(workInProgress, true);
	    }
	  } else {
	    next = beginWork(current$$1, workInProgress, nextRenderExpirationTime);
	    workInProgress.memoizedProps = workInProgress.pendingProps;
	  }

	  {
	    resetCurrentFiber();
	    if (isReplayingFailedUnitOfWork) {
	      // Currently replaying a failed unit of work. This should be unreachable,
	      // because the render phase is meant to be idempotent, and it should
	      // have thrown again. Since it didn't, rethrow the original error, so
	      // React's internal stack is not misaligned.
	      rethrowOriginalError();
	    }
	  }
	  if (true && ReactFiberInstrumentation_1.debugTool) {
	    ReactFiberInstrumentation_1.debugTool.onBeginWork(workInProgress);
	  }

	  if (next === null) {
	    // If this doesn't spawn new work, complete the current work.
	    next = completeUnitOfWork(workInProgress);
	  }

	  ReactCurrentOwner$2.current = null;

	  return next;
	}

	function workLoop(isYieldy) {
	  if (!isYieldy) {
	    // Flush work without yielding
	    while (nextUnitOfWork !== null) {
	      nextUnitOfWork = performUnitOfWork(nextUnitOfWork);
	    }
	  } else {
	    // Flush asynchronous work until there's a higher priority event
	    while (nextUnitOfWork !== null && !shouldYieldToRenderer()) {
	      nextUnitOfWork = performUnitOfWork(nextUnitOfWork);
	    }
	  }
	}

	function renderRoot(root, isYieldy) {
	  !!isWorking ? invariant(false, 'renderRoot was called recursively. This error is likely caused by a bug in React. Please file an issue.') : void 0;

	  flushPassiveEffects();

	  isWorking = true;
	  var previousDispatcher = ReactCurrentDispatcher.current;
	  ReactCurrentDispatcher.current = ContextOnlyDispatcher;

	  var expirationTime = root.nextExpirationTimeToWorkOn;

	  // Check if we're starting from a fresh stack, or if we're resuming from
	  // previously yielded work.
	  if (expirationTime !== nextRenderExpirationTime || root !== nextRoot || nextUnitOfWork === null) {
	    // Reset the stack and start working from the root.
	    resetStack();
	    nextRoot = root;
	    nextRenderExpirationTime = expirationTime;
	    nextUnitOfWork = createWorkInProgress(nextRoot.current, null, nextRenderExpirationTime);
	    root.pendingCommitExpirationTime = NoWork;

	    if (enableSchedulerTracing) {
	      // Determine which interactions this batch of work currently includes,
	      // So that we can accurately attribute time spent working on it,
	      var interactions = new Set();
	      root.pendingInteractionMap.forEach(function (scheduledInteractions, scheduledExpirationTime) {
	        if (scheduledExpirationTime >= expirationTime) {
	          scheduledInteractions.forEach(function (interaction) {
	            return interactions.add(interaction);
	          });
	        }
	      });

	      // Store the current set of interactions on the FiberRoot for a few reasons:
	      // We can re-use it in hot functions like renderRoot() without having to recalculate it.
	      // We will also use it in commitWork() to pass to any Profiler onRender() hooks.
	      // This also provides DevTools with a way to access it when the onCommitRoot() hook is called.
	      root.memoizedInteractions = interactions;

	      if (interactions.size > 0) {
	        var subscriber = tracing.__subscriberRef.current;
	        if (subscriber !== null) {
	          var threadID = computeThreadID(expirationTime, root.interactionThreadID);
	          try {
	            subscriber.onWorkStarted(interactions, threadID);
	          } catch (error) {
	            // Work thrown by an interaction tracing subscriber should be rethrown,
	            // But only once it's safe (to avoid leaving the scheduler in an invalid state).
	            // Store the error for now and we'll re-throw in finishRendering().
	            if (!hasUnhandledError) {
	              hasUnhandledError = true;
	              unhandledError = error;
	            }
	          }
	        }
	      }
	    }
	  }

	  var prevInteractions = null;
	  if (enableSchedulerTracing) {
	    // We're about to start new traced work.
	    // Restore pending interactions so cascading work triggered during the render phase will be accounted for.
	    prevInteractions = tracing.__interactionsRef.current;
	    tracing.__interactionsRef.current = root.memoizedInteractions;
	  }

	  var didFatal = false;

	  startWorkLoopTimer(nextUnitOfWork);

	  do {
	    try {
	      workLoop(isYieldy);
	    } catch (thrownValue) {
	      resetContextDependences();
	      resetHooks();

	      // Reset in case completion throws.
	      // This is only used in DEV and when replaying is on.
	      var mayReplay = void 0;
	      if (true && replayFailedUnitOfWorkWithInvokeGuardedCallback) {
	        mayReplay = mayReplayFailedUnitOfWork;
	        mayReplayFailedUnitOfWork = true;
	      }

	      if (nextUnitOfWork === null) {
	        // This is a fatal error.
	        didFatal = true;
	        onUncaughtError(thrownValue);
	      } else {
	        if (enableProfilerTimer && nextUnitOfWork.mode & ProfileMode) {
	          // Record the time spent rendering before an error was thrown.
	          // This avoids inaccurate Profiler durations in the case of a suspended render.
	          stopProfilerTimerIfRunningAndRecordDelta(nextUnitOfWork, true);
	        }

	        {
	          // Reset global debug state
	          // We assume this is defined in DEV
	          resetCurrentlyProcessingQueue();
	        }

	        if (true && replayFailedUnitOfWorkWithInvokeGuardedCallback) {
	          if (mayReplay) {
	            var failedUnitOfWork = nextUnitOfWork;
	            replayUnitOfWork(failedUnitOfWork, thrownValue, isYieldy);
	          }
	        }

	        // TODO: we already know this isn't true in some cases.
	        // At least this shows a nicer error message until we figure out the cause.
	        // https://github.com/facebook/react/issues/12449#issuecomment-386727431
	        !(nextUnitOfWork !== null) ? invariant(false, 'Failed to replay rendering after an error. This is likely caused by a bug in React. Please file an issue with a reproducing case to help us find it.') : void 0;

	        var sourceFiber = nextUnitOfWork;
	        var returnFiber = sourceFiber.return;
	        if (returnFiber === null) {
	          // This is the root. The root could capture its own errors. However,
	          // we don't know if it errors before or after we pushed the host
	          // context. This information is needed to avoid a stack mismatch.
	          // Because we're not sure, treat this as a fatal error. We could track
	          // which phase it fails in, but doesn't seem worth it. At least
	          // for now.
	          didFatal = true;
	          onUncaughtError(thrownValue);
	        } else {
	          throwException(root, returnFiber, sourceFiber, thrownValue, nextRenderExpirationTime);
	          nextUnitOfWork = completeUnitOfWork(sourceFiber);
	          continue;
	        }
	      }
	    }
	    break;
	  } while (true);

	  if (enableSchedulerTracing) {
	    // Traced work is done for now; restore the previous interactions.
	    tracing.__interactionsRef.current = prevInteractions;
	  }

	  // We're done performing work. Time to clean up.
	  isWorking = false;
	  ReactCurrentDispatcher.current = previousDispatcher;
	  resetContextDependences();
	  resetHooks();

	  // Yield back to main thread.
	  if (didFatal) {
	    var _didCompleteRoot = false;
	    stopWorkLoopTimer(interruptedBy, _didCompleteRoot);
	    interruptedBy = null;
	    // There was a fatal error.
	    {
	      resetStackAfterFatalErrorInDev();
	    }
	    // `nextRoot` points to the in-progress root. A non-null value indicates
	    // that we're in the middle of an async render. Set it to null to indicate
	    // there's no more work to be done in the current batch.
	    nextRoot = null;
	    onFatal(root);
	    return;
	  }

	  if (nextUnitOfWork !== null) {
	    // There's still remaining async work in this tree, but we ran out of time
	    // in the current frame. Yield back to the renderer. Unless we're
	    // interrupted by a higher priority update, we'll continue later from where
	    // we left off.
	    var _didCompleteRoot2 = false;
	    stopWorkLoopTimer(interruptedBy, _didCompleteRoot2);
	    interruptedBy = null;
	    onYield(root);
	    return;
	  }

	  // We completed the whole tree.
	  var didCompleteRoot = true;
	  stopWorkLoopTimer(interruptedBy, didCompleteRoot);
	  var rootWorkInProgress = root.current.alternate;
	  !(rootWorkInProgress !== null) ? invariant(false, 'Finished root should have a work-in-progress. This error is likely caused by a bug in React. Please file an issue.') : void 0;

	  // `nextRoot` points to the in-progress root. A non-null value indicates
	  // that we're in the middle of an async render. Set it to null to indicate
	  // there's no more work to be done in the current batch.
	  nextRoot = null;
	  interruptedBy = null;

	  if (nextRenderDidError) {
	    // There was an error
	    if (hasLowerPriorityWork(root, expirationTime)) {
	      // There's lower priority work. If so, it may have the effect of fixing
	      // the exception that was just thrown. Exit without committing. This is
	      // similar to a suspend, but without a timeout because we're not waiting
	      // for a promise to resolve. React will restart at the lower
	      // priority level.
	      markSuspendedPriorityLevel(root, expirationTime);
	      var suspendedExpirationTime = expirationTime;
	      var rootExpirationTime = root.expirationTime;
	      onSuspend(root, rootWorkInProgress, suspendedExpirationTime, rootExpirationTime, -1 // Indicates no timeout
	      );
	      return;
	    } else if (
	    // There's no lower priority work, but we're rendering asynchronously.
	    // Synchronously attempt to render the same level one more time. This is
	    // similar to a suspend, but without a timeout because we're not waiting
	    // for a promise to resolve.
	    !root.didError && isYieldy) {
	      root.didError = true;
	      var _suspendedExpirationTime = root.nextExpirationTimeToWorkOn = expirationTime;
	      var _rootExpirationTime = root.expirationTime = Sync;
	      onSuspend(root, rootWorkInProgress, _suspendedExpirationTime, _rootExpirationTime, -1 // Indicates no timeout
	      );
	      return;
	    }
	  }

	  if (isYieldy && nextLatestAbsoluteTimeoutMs !== -1) {
	    // The tree was suspended.
	    var _suspendedExpirationTime2 = expirationTime;
	    markSuspendedPriorityLevel(root, _suspendedExpirationTime2);

	    // Find the earliest uncommitted expiration time in the tree, including
	    // work that is suspended. The timeout threshold cannot be longer than
	    // the overall expiration.
	    var earliestExpirationTime = findEarliestOutstandingPriorityLevel(root, expirationTime);
	    var earliestExpirationTimeMs = expirationTimeToMs(earliestExpirationTime);
	    if (earliestExpirationTimeMs < nextLatestAbsoluteTimeoutMs) {
	      nextLatestAbsoluteTimeoutMs = earliestExpirationTimeMs;
	    }

	    // Subtract the current time from the absolute timeout to get the number
	    // of milliseconds until the timeout. In other words, convert an absolute
	    // timestamp to a relative time. This is the value that is passed
	    // to `setTimeout`.
	    var currentTimeMs = expirationTimeToMs(requestCurrentTime());
	    var msUntilTimeout = nextLatestAbsoluteTimeoutMs - currentTimeMs;
	    msUntilTimeout = msUntilTimeout < 0 ? 0 : msUntilTimeout;

	    // TODO: Account for the Just Noticeable Difference

	    var _rootExpirationTime2 = root.expirationTime;
	    onSuspend(root, rootWorkInProgress, _suspendedExpirationTime2, _rootExpirationTime2, msUntilTimeout);
	    return;
	  }

	  // Ready to commit.
	  onComplete(root, rootWorkInProgress, expirationTime);
	}

	function captureCommitPhaseError(sourceFiber, value) {
	  var expirationTime = Sync;
	  var fiber = sourceFiber.return;
	  while (fiber !== null) {
	    switch (fiber.tag) {
	      case ClassComponent:
	        var ctor = fiber.type;
	        var instance = fiber.stateNode;
	        if (typeof ctor.getDerivedStateFromError === 'function' || typeof instance.componentDidCatch === 'function' && !isAlreadyFailedLegacyErrorBoundary(instance)) {
	          var errorInfo = createCapturedValue(value, sourceFiber);
	          var update = createClassErrorUpdate(fiber, errorInfo, expirationTime);
	          enqueueUpdate(fiber, update);
	          scheduleWork(fiber, expirationTime);
	          return;
	        }
	        break;
	      case HostRoot:
	        {
	          var _errorInfo = createCapturedValue(value, sourceFiber);
	          var _update = createRootErrorUpdate(fiber, _errorInfo, expirationTime);
	          enqueueUpdate(fiber, _update);
	          scheduleWork(fiber, expirationTime);
	          return;
	        }
	    }
	    fiber = fiber.return;
	  }

	  if (sourceFiber.tag === HostRoot) {
	    // Error was thrown at the root. There is no parent, so the root
	    // itself should capture it.
	    var rootFiber = sourceFiber;
	    var _errorInfo2 = createCapturedValue(value, rootFiber);
	    var _update2 = createRootErrorUpdate(rootFiber, _errorInfo2, expirationTime);
	    enqueueUpdate(rootFiber, _update2);
	    scheduleWork(rootFiber, expirationTime);
	  }
	}

	function computeThreadID(expirationTime, interactionThreadID) {
	  // Interaction threads are unique per root and expiration time.
	  return expirationTime * 1000 + interactionThreadID;
	}

	// Creates a unique async expiration time.
	function computeUniqueAsyncExpiration() {
	  var currentTime = requestCurrentTime();
	  var result = computeAsyncExpiration(currentTime);
	  if (result >= lastUniqueAsyncExpiration) {
	    // Since we assume the current time monotonically increases, we only hit
	    // this branch when computeUniqueAsyncExpiration is fired multiple times
	    // within a 200ms window (or whatever the async bucket size is).
	    result = lastUniqueAsyncExpiration - 1;
	  }
	  lastUniqueAsyncExpiration = result;
	  return lastUniqueAsyncExpiration;
	}

	function computeExpirationForFiber(currentTime, fiber) {
	  var priorityLevel = scheduler.unstable_getCurrentPriorityLevel();

	  var expirationTime = void 0;
	  if ((fiber.mode & ConcurrentMode) === NoContext) {
	    // Outside of concurrent mode, updates are always synchronous.
	    expirationTime = Sync;
	  } else if (isWorking && !isCommitting$1) {
	    // During render phase, updates expire during as the current render.
	    expirationTime = nextRenderExpirationTime;
	  } else {
	    switch (priorityLevel) {
	      case scheduler.unstable_ImmediatePriority:
	        expirationTime = Sync;
	        break;
	      case scheduler.unstable_UserBlockingPriority:
	        expirationTime = computeInteractiveExpiration(currentTime);
	        break;
	      case scheduler.unstable_NormalPriority:
	        // This is a normal, concurrent update
	        expirationTime = computeAsyncExpiration(currentTime);
	        break;
	      case scheduler.unstable_LowPriority:
	      case scheduler.unstable_IdlePriority:
	        expirationTime = Never;
	        break;
	      default:
	        invariant(false, 'Unknown priority level. This error is likely caused by a bug in React. Please file an issue.');
	    }

	    // If we're in the middle of rendering a tree, do not update at the same
	    // expiration time that is already rendering.
	    if (nextRoot !== null && expirationTime === nextRenderExpirationTime) {
	      expirationTime -= 1;
	    }
	  }

	  // Keep track of the lowest pending interactive expiration time. This
	  // allows us to synchronously flush all interactive updates
	  // when needed.
	  // TODO: Move this to renderer?
	  if (priorityLevel === scheduler.unstable_UserBlockingPriority && (lowestPriorityPendingInteractiveExpirationTime === NoWork || expirationTime < lowestPriorityPendingInteractiveExpirationTime)) {
	    lowestPriorityPendingInteractiveExpirationTime = expirationTime;
	  }

	  return expirationTime;
	}

	function renderDidSuspend(root, absoluteTimeoutMs, suspendedTime) {
	  // Schedule the timeout.
	  if (absoluteTimeoutMs >= 0 && nextLatestAbsoluteTimeoutMs < absoluteTimeoutMs) {
	    nextLatestAbsoluteTimeoutMs = absoluteTimeoutMs;
	  }
	}

	function renderDidError() {
	  nextRenderDidError = true;
	}

	function pingSuspendedRoot(root, thenable, pingTime) {
	  // A promise that previously suspended React from committing has resolved.
	  // If React is still suspended, try again at the previous level (pingTime).

	  var pingCache = root.pingCache;
	  if (pingCache !== null) {
	    // The thenable resolved, so we no longer need to memoize, because it will
	    // never be thrown again.
	    pingCache.delete(thenable);
	  }

	  if (nextRoot !== null && nextRenderExpirationTime === pingTime) {
	    // Received a ping at the same priority level at which we're currently
	    // rendering. Restart from the root.
	    nextRoot = null;
	  } else {
	    // Confirm that the root is still suspended at this level. Otherwise exit.
	    if (isPriorityLevelSuspended(root, pingTime)) {
	      // Ping at the original level
	      markPingedPriorityLevel(root, pingTime);
	      var rootExpirationTime = root.expirationTime;
	      if (rootExpirationTime !== NoWork) {
	        requestWork(root, rootExpirationTime);
	      }
	    }
	  }
	}

	function retryTimedOutBoundary(boundaryFiber, thenable) {
	  // The boundary fiber (a Suspense component) previously timed out and was
	  // rendered in its fallback state. One of the promises that suspended it has
	  // resolved, which means at least part of the tree was likely unblocked. Try
	  var retryCache = void 0;
	  if (enableSuspenseServerRenderer) {
	    switch (boundaryFiber.tag) {
	      case SuspenseComponent:
	        retryCache = boundaryFiber.stateNode;
	        break;
	      case DehydratedSuspenseComponent:
	        retryCache = boundaryFiber.memoizedState;
	        break;
	      default:
	        invariant(false, 'Pinged unknown suspense boundary type. This is probably a bug in React.');
	    }
	  } else {
	    retryCache = boundaryFiber.stateNode;
	  }
	  if (retryCache !== null) {
	    // The thenable resolved, so we no longer need to memoize, because it will
	    // never be thrown again.
	    retryCache.delete(thenable);
	  }

	  var currentTime = requestCurrentTime();
	  var retryTime = computeExpirationForFiber(currentTime, boundaryFiber);
	  var root = scheduleWorkToRoot(boundaryFiber, retryTime);
	  if (root !== null) {
	    markPendingPriorityLevel(root, retryTime);
	    var rootExpirationTime = root.expirationTime;
	    if (rootExpirationTime !== NoWork) {
	      requestWork(root, rootExpirationTime);
	    }
	  }
	}

	function scheduleWorkToRoot(fiber, expirationTime) {
	  recordScheduleUpdate();

	  {
	    if (fiber.tag === ClassComponent) {
	      var instance = fiber.stateNode;
	      warnAboutInvalidUpdates(instance);
	    }
	  }

	  // Update the source fiber's expiration time
	  if (fiber.expirationTime < expirationTime) {
	    fiber.expirationTime = expirationTime;
	  }
	  var alternate = fiber.alternate;
	  if (alternate !== null && alternate.expirationTime < expirationTime) {
	    alternate.expirationTime = expirationTime;
	  }
	  // Walk the parent path to the root and update the child expiration time.
	  var node = fiber.return;
	  var root = null;
	  if (node === null && fiber.tag === HostRoot) {
	    root = fiber.stateNode;
	  } else {
	    while (node !== null) {
	      alternate = node.alternate;
	      if (node.childExpirationTime < expirationTime) {
	        node.childExpirationTime = expirationTime;
	        if (alternate !== null && alternate.childExpirationTime < expirationTime) {
	          alternate.childExpirationTime = expirationTime;
	        }
	      } else if (alternate !== null && alternate.childExpirationTime < expirationTime) {
	        alternate.childExpirationTime = expirationTime;
	      }
	      if (node.return === null && node.tag === HostRoot) {
	        root = node.stateNode;
	        break;
	      }
	      node = node.return;
	    }
	  }

	  if (enableSchedulerTracing) {
	    if (root !== null) {
	      var interactions = tracing.__interactionsRef.current;
	      if (interactions.size > 0) {
	        var pendingInteractionMap = root.pendingInteractionMap;
	        var pendingInteractions = pendingInteractionMap.get(expirationTime);
	        if (pendingInteractions != null) {
	          interactions.forEach(function (interaction) {
	            if (!pendingInteractions.has(interaction)) {
	              // Update the pending async work count for previously unscheduled interaction.
	              interaction.__count++;
	            }

	            pendingInteractions.add(interaction);
	          });
	        } else {
	          pendingInteractionMap.set(expirationTime, new Set(interactions));

	          // Update the pending async work count for the current interactions.
	          interactions.forEach(function (interaction) {
	            interaction.__count++;
	          });
	        }

	        var subscriber = tracing.__subscriberRef.current;
	        if (subscriber !== null) {
	          var threadID = computeThreadID(expirationTime, root.interactionThreadID);
	          subscriber.onWorkScheduled(interactions, threadID);
	        }
	      }
	    }
	  }
	  return root;
	}

	function warnIfNotCurrentlyBatchingInDev(fiber) {
	  {
	    if (isRendering === false && isBatchingUpdates === false) {
	      warningWithoutStack$1(false, 'An update to %s inside a test was not wrapped in act(...).\n\n' + 'When testing, code that causes React state updates should be wrapped into act(...):\n\n' + 'act(() => {\n' + '  /* fire events that update state */\n' + '});\n' + '/* assert on the output */\n\n' + "This ensures that you're testing the behavior the user would see in the browser." + ' Learn more at https://fb.me/react-wrap-tests-with-act' + '%s', getComponentName(fiber.type), getStackByFiberInDevAndProd(fiber));
	    }
	  }
	}

	function scheduleWork(fiber, expirationTime) {
	  var root = scheduleWorkToRoot(fiber, expirationTime);
	  if (root === null) {
	    {
	      switch (fiber.tag) {
	        case ClassComponent:
	          warnAboutUpdateOnUnmounted(fiber, true);
	          break;
	        case FunctionComponent:
	        case ForwardRef:
	        case MemoComponent:
	        case SimpleMemoComponent:
	          warnAboutUpdateOnUnmounted(fiber, false);
	          break;
	      }
	    }
	    return;
	  }

	  if (!isWorking && nextRenderExpirationTime !== NoWork && expirationTime > nextRenderExpirationTime) {
	    // This is an interruption. (Used for performance tracking.)
	    interruptedBy = fiber;
	    resetStack();
	  }
	  markPendingPriorityLevel(root, expirationTime);
	  if (
	  // If we're in the render phase, we don't need to schedule this root
	  // for an update, because we'll do it before we exit...
	  !isWorking || isCommitting$1 ||
	  // ...unless this is a different root than the one we're rendering.
	  nextRoot !== root) {
	    var rootExpirationTime = root.expirationTime;
	    requestWork(root, rootExpirationTime);
	  }
	  if (nestedUpdateCount > NESTED_UPDATE_LIMIT) {
	    // Reset this back to zero so subsequent updates don't throw.
	    nestedUpdateCount = 0;
	    invariant(false, 'Maximum update depth exceeded. This can happen when a component repeatedly calls setState inside componentWillUpdate or componentDidUpdate. React limits the number of nested updates to prevent infinite loops.');
	  }
	}

	function syncUpdates(fn, a, b, c, d) {
	  return scheduler.unstable_runWithPriority(scheduler.unstable_ImmediatePriority, function () {
	    return fn(a, b, c, d);
	  });
	}

	// TODO: Everything below this is written as if it has been lifted to the
	// renderers. I'll do this in a follow-up.

	// Linked-list of roots
	var firstScheduledRoot = null;
	var lastScheduledRoot = null;

	var callbackExpirationTime = NoWork;
	var callbackID = void 0;
	var isRendering = false;
	var nextFlushedRoot = null;
	var nextFlushedExpirationTime = NoWork;
	var lowestPriorityPendingInteractiveExpirationTime = NoWork;
	var hasUnhandledError = false;
	var unhandledError = null;

	var isBatchingUpdates = false;
	var isUnbatchingUpdates = false;

	var completedBatches = null;

	var originalStartTimeMs = scheduler.unstable_now();
	var currentRendererTime = msToExpirationTime(originalStartTimeMs);
	var currentSchedulerTime = currentRendererTime;

	// Use these to prevent an infinite loop of nested updates
	var NESTED_UPDATE_LIMIT = 50;
	var nestedUpdateCount = 0;
	var lastCommittedRootDuringThisBatch = null;

	function recomputeCurrentRendererTime() {
	  var currentTimeMs = scheduler.unstable_now() - originalStartTimeMs;
	  currentRendererTime = msToExpirationTime(currentTimeMs);
	}

	function scheduleCallbackWithExpirationTime(root, expirationTime) {
	  if (callbackExpirationTime !== NoWork) {
	    // A callback is already scheduled. Check its expiration time (timeout).
	    if (expirationTime < callbackExpirationTime) {
	      // Existing callback has sufficient timeout. Exit.
	      return;
	    } else {
	      if (callbackID !== null) {
	        // Existing callback has insufficient timeout. Cancel and schedule a
	        // new one.
	        scheduler.unstable_cancelCallback(callbackID);
	      }
	    }
	    // The request callback timer is already running. Don't start a new one.
	  } else {
	    startRequestCallbackTimer();
	  }

	  callbackExpirationTime = expirationTime;
	  var currentMs = scheduler.unstable_now() - originalStartTimeMs;
	  var expirationTimeMs = expirationTimeToMs(expirationTime);
	  var timeout = expirationTimeMs - currentMs;
	  callbackID = scheduler.unstable_scheduleCallback(performAsyncWork, { timeout: timeout });
	}

	// For every call to renderRoot, one of onFatal, onComplete, onSuspend, and
	// onYield is called upon exiting. We use these in lieu of returning a tuple.
	// I've also chosen not to inline them into renderRoot because these will
	// eventually be lifted into the renderer.
	function onFatal(root) {
	  root.finishedWork = null;
	}

	function onComplete(root, finishedWork, expirationTime) {
	  root.pendingCommitExpirationTime = expirationTime;
	  root.finishedWork = finishedWork;
	}

	function onSuspend(root, finishedWork, suspendedExpirationTime, rootExpirationTime, msUntilTimeout) {
	  root.expirationTime = rootExpirationTime;
	  if (msUntilTimeout === 0 && !shouldYieldToRenderer()) {
	    // Don't wait an additional tick. Commit the tree immediately.
	    root.pendingCommitExpirationTime = suspendedExpirationTime;
	    root.finishedWork = finishedWork;
	  } else if (msUntilTimeout > 0) {
	    // Wait `msUntilTimeout` milliseconds before committing.
	    root.timeoutHandle = scheduleTimeout(onTimeout.bind(null, root, finishedWork, suspendedExpirationTime), msUntilTimeout);
	  }
	}

	function onYield(root) {
	  root.finishedWork = null;
	}

	function onTimeout(root, finishedWork, suspendedExpirationTime) {
	  // The root timed out. Commit it.
	  root.pendingCommitExpirationTime = suspendedExpirationTime;
	  root.finishedWork = finishedWork;
	  // Read the current time before entering the commit phase. We can be
	  // certain this won't cause tearing related to batching of event updates
	  // because we're at the top of a timer event.
	  recomputeCurrentRendererTime();
	  currentSchedulerTime = currentRendererTime;
	  flushRoot(root, suspendedExpirationTime);
	}

	function onCommit(root, expirationTime) {
	  root.expirationTime = expirationTime;
	  root.finishedWork = null;
	}

	function requestCurrentTime() {
	  // requestCurrentTime is called by the scheduler to compute an expiration
	  // time.
	  //
	  // Expiration times are computed by adding to the current time (the start
	  // time). However, if two updates are scheduled within the same event, we
	  // should treat their start times as simultaneous, even if the actual clock
	  // time has advanced between the first and second call.

	  // In other words, because expiration times determine how updates are batched,
	  // we want all updates of like priority that occur within the same event to
	  // receive the same expiration time. Otherwise we get tearing.
	  //
	  // We keep track of two separate times: the current "renderer" time and the
	  // current "scheduler" time. The renderer time can be updated whenever; it
	  // only exists to minimize the calls performance.now.
	  //
	  // But the scheduler time can only be updated if there's no pending work, or
	  // if we know for certain that we're not in the middle of an event.

	  if (isRendering) {
	    // We're already rendering. Return the most recently read time.
	    return currentSchedulerTime;
	  }
	  // Check if there's pending work.
	  findHighestPriorityRoot();
	  if (nextFlushedExpirationTime === NoWork || nextFlushedExpirationTime === Never) {
	    // If there's no pending work, or if the pending work is offscreen, we can
	    // read the current time without risk of tearing.
	    recomputeCurrentRendererTime();
	    currentSchedulerTime = currentRendererTime;
	    return currentSchedulerTime;
	  }
	  // There's already pending work. We might be in the middle of a browser
	  // event. If we were to read the current time, it could cause multiple updates
	  // within the same event to receive different expiration times, leading to
	  // tearing. Return the last read time. During the next idle callback, the
	  // time will be updated.
	  return currentSchedulerTime;
	}

	// requestWork is called by the scheduler whenever a root receives an update.
	// It's up to the renderer to call renderRoot at some point in the future.
	function requestWork(root, expirationTime) {
	  addRootToSchedule(root, expirationTime);
	  if (isRendering) {
	    // Prevent reentrancy. Remaining work will be scheduled at the end of
	    // the currently rendering batch.
	    return;
	  }

	  if (isBatchingUpdates) {
	    // Flush work at the end of the batch.
	    if (isUnbatchingUpdates) {
	      // ...unless we're inside unbatchedUpdates, in which case we should
	      // flush it now.
	      nextFlushedRoot = root;
	      nextFlushedExpirationTime = Sync;
	      performWorkOnRoot(root, Sync, false);
	    }
	    return;
	  }

	  // TODO: Get rid of Sync and use current time?
	  if (expirationTime === Sync) {
	    performSyncWork();
	  } else {
	    scheduleCallbackWithExpirationTime(root, expirationTime);
	  }
	}

	function addRootToSchedule(root, expirationTime) {
	  // Add the root to the schedule.
	  // Check if this root is already part of the schedule.
	  if (root.nextScheduledRoot === null) {
	    // This root is not already scheduled. Add it.
	    root.expirationTime = expirationTime;
	    if (lastScheduledRoot === null) {
	      firstScheduledRoot = lastScheduledRoot = root;
	      root.nextScheduledRoot = root;
	    } else {
	      lastScheduledRoot.nextScheduledRoot = root;
	      lastScheduledRoot = root;
	      lastScheduledRoot.nextScheduledRoot = firstScheduledRoot;
	    }
	  } else {
	    // This root is already scheduled, but its priority may have increased.
	    var remainingExpirationTime = root.expirationTime;
	    if (expirationTime > remainingExpirationTime) {
	      // Update the priority.
	      root.expirationTime = expirationTime;
	    }
	  }
	}

	function findHighestPriorityRoot() {
	  var highestPriorityWork = NoWork;
	  var highestPriorityRoot = null;
	  if (lastScheduledRoot !== null) {
	    var previousScheduledRoot = lastScheduledRoot;
	    var root = firstScheduledRoot;
	    while (root !== null) {
	      var remainingExpirationTime = root.expirationTime;
	      if (remainingExpirationTime === NoWork) {
	        // This root no longer has work. Remove it from the scheduler.

	        // TODO: This check is redudant, but Flow is confused by the branch
	        // below where we set lastScheduledRoot to null, even though we break
	        // from the loop right after.
	        !(previousScheduledRoot !== null && lastScheduledRoot !== null) ? invariant(false, 'Should have a previous and last root. This error is likely caused by a bug in React. Please file an issue.') : void 0;
	        if (root === root.nextScheduledRoot) {
	          // This is the only root in the list.
	          root.nextScheduledRoot = null;
	          firstScheduledRoot = lastScheduledRoot = null;
	          break;
	        } else if (root === firstScheduledRoot) {
	          // This is the first root in the list.
	          var next = root.nextScheduledRoot;
	          firstScheduledRoot = next;
	          lastScheduledRoot.nextScheduledRoot = next;
	          root.nextScheduledRoot = null;
	        } else if (root === lastScheduledRoot) {
	          // This is the last root in the list.
	          lastScheduledRoot = previousScheduledRoot;
	          lastScheduledRoot.nextScheduledRoot = firstScheduledRoot;
	          root.nextScheduledRoot = null;
	          break;
	        } else {
	          previousScheduledRoot.nextScheduledRoot = root.nextScheduledRoot;
	          root.nextScheduledRoot = null;
	        }
	        root = previousScheduledRoot.nextScheduledRoot;
	      } else {
	        if (remainingExpirationTime > highestPriorityWork) {
	          // Update the priority, if it's higher
	          highestPriorityWork = remainingExpirationTime;
	          highestPriorityRoot = root;
	        }
	        if (root === lastScheduledRoot) {
	          break;
	        }
	        if (highestPriorityWork === Sync) {
	          // Sync is highest priority by definition so
	          // we can stop searching.
	          break;
	        }
	        previousScheduledRoot = root;
	        root = root.nextScheduledRoot;
	      }
	    }
	  }

	  nextFlushedRoot = highestPriorityRoot;
	  nextFlushedExpirationTime = highestPriorityWork;
	}

	// TODO: This wrapper exists because many of the older tests (the ones that use
	// flushDeferredPri) rely on the number of times `shouldYield` is called. We
	// should get rid of it.
	var didYield = false;
	function shouldYieldToRenderer() {
	  if (didYield) {
	    return true;
	  }
	  if (scheduler.unstable_shouldYield()) {
	    didYield = true;
	    return true;
	  }
	  return false;
	}

	function performAsyncWork() {
	  try {
	    if (!shouldYieldToRenderer()) {
	      // The callback timed out. That means at least one update has expired.
	      // Iterate through the root schedule. If they contain expired work, set
	      // the next render expiration time to the current time. This has the effect
	      // of flushing all expired work in a single batch, instead of flushing each
	      // level one at a time.
	      if (firstScheduledRoot !== null) {
	        recomputeCurrentRendererTime();
	        var root = firstScheduledRoot;
	        do {
	          didExpireAtExpirationTime(root, currentRendererTime);
	          // The root schedule is circular, so this is never null.
	          root = root.nextScheduledRoot;
	        } while (root !== firstScheduledRoot);
	      }
	    }
	    performWork(NoWork, true);
	  } finally {
	    didYield = false;
	  }
	}

	function performSyncWork() {
	  performWork(Sync, false);
	}

	function performWork(minExpirationTime, isYieldy) {
	  // Keep working on roots until there's no more work, or until there's a higher
	  // priority event.
	  findHighestPriorityRoot();

	  if (isYieldy) {
	    recomputeCurrentRendererTime();
	    currentSchedulerTime = currentRendererTime;

	    if (enableUserTimingAPI) {
	      var didExpire = nextFlushedExpirationTime > currentRendererTime;
	      var timeout = expirationTimeToMs(nextFlushedExpirationTime);
	      stopRequestCallbackTimer(didExpire, timeout);
	    }

	    while (nextFlushedRoot !== null && nextFlushedExpirationTime !== NoWork && minExpirationTime <= nextFlushedExpirationTime && !(didYield && currentRendererTime > nextFlushedExpirationTime)) {
	      performWorkOnRoot(nextFlushedRoot, nextFlushedExpirationTime, currentRendererTime > nextFlushedExpirationTime);
	      findHighestPriorityRoot();
	      recomputeCurrentRendererTime();
	      currentSchedulerTime = currentRendererTime;
	    }
	  } else {
	    while (nextFlushedRoot !== null && nextFlushedExpirationTime !== NoWork && minExpirationTime <= nextFlushedExpirationTime) {
	      performWorkOnRoot(nextFlushedRoot, nextFlushedExpirationTime, false);
	      findHighestPriorityRoot();
	    }
	  }

	  // We're done flushing work. Either we ran out of time in this callback,
	  // or there's no more work left with sufficient priority.

	  // If we're inside a callback, set this to false since we just completed it.
	  if (isYieldy) {
	    callbackExpirationTime = NoWork;
	    callbackID = null;
	  }
	  // If there's work left over, schedule a new callback.
	  if (nextFlushedExpirationTime !== NoWork) {
	    scheduleCallbackWithExpirationTime(nextFlushedRoot, nextFlushedExpirationTime);
	  }

	  // Clean-up.
	  finishRendering();
	}

	function flushRoot(root, expirationTime) {
	  !!isRendering ? invariant(false, 'work.commit(): Cannot commit while already rendering. This likely means you attempted to commit from inside a lifecycle method.') : void 0;
	  // Perform work on root as if the given expiration time is the current time.
	  // This has the effect of synchronously flushing all work up to and
	  // including the given time.
	  nextFlushedRoot = root;
	  nextFlushedExpirationTime = expirationTime;
	  performWorkOnRoot(root, expirationTime, false);
	  // Flush any sync work that was scheduled by lifecycles
	  performSyncWork();
	}

	function finishRendering() {
	  nestedUpdateCount = 0;
	  lastCommittedRootDuringThisBatch = null;

	  if (completedBatches !== null) {
	    var batches = completedBatches;
	    completedBatches = null;
	    for (var i = 0; i < batches.length; i++) {
	      var batch = batches[i];
	      try {
	        batch._onComplete();
	      } catch (error) {
	        if (!hasUnhandledError) {
	          hasUnhandledError = true;
	          unhandledError = error;
	        }
	      }
	    }
	  }

	  if (hasUnhandledError) {
	    var error = unhandledError;
	    unhandledError = null;
	    hasUnhandledError = false;
	    throw error;
	  }
	}

	function performWorkOnRoot(root, expirationTime, isYieldy) {
	  !!isRendering ? invariant(false, 'performWorkOnRoot was called recursively. This error is likely caused by a bug in React. Please file an issue.') : void 0;

	  isRendering = true;

	  // Check if this is async work or sync/expired work.
	  if (!isYieldy) {
	    // Flush work without yielding.
	    // TODO: Non-yieldy work does not necessarily imply expired work. A renderer
	    // may want to perform some work without yielding, but also without
	    // requiring the root to complete (by triggering placeholders).

	    var finishedWork = root.finishedWork;
	    if (finishedWork !== null) {
	      // This root is already complete. We can commit it.
	      completeRoot(root, finishedWork, expirationTime);
	    } else {
	      root.finishedWork = null;
	      // If this root previously suspended, clear its existing timeout, since
	      // we're about to try rendering again.
	      var timeoutHandle = root.timeoutHandle;
	      if (timeoutHandle !== noTimeout) {
	        root.timeoutHandle = noTimeout;
	        // $FlowFixMe Complains noTimeout is not a TimeoutID, despite the check above
	        cancelTimeout(timeoutHandle);
	      }
	      renderRoot(root, isYieldy);
	      finishedWork = root.finishedWork;
	      if (finishedWork !== null) {
	        // We've completed the root. Commit it.
	        completeRoot(root, finishedWork, expirationTime);
	      }
	    }
	  } else {
	    // Flush async work.
	    var _finishedWork = root.finishedWork;
	    if (_finishedWork !== null) {
	      // This root is already complete. We can commit it.
	      completeRoot(root, _finishedWork, expirationTime);
	    } else {
	      root.finishedWork = null;
	      // If this root previously suspended, clear its existing timeout, since
	      // we're about to try rendering again.
	      var _timeoutHandle = root.timeoutHandle;
	      if (_timeoutHandle !== noTimeout) {
	        root.timeoutHandle = noTimeout;
	        // $FlowFixMe Complains noTimeout is not a TimeoutID, despite the check above
	        cancelTimeout(_timeoutHandle);
	      }
	      renderRoot(root, isYieldy);
	      _finishedWork = root.finishedWork;
	      if (_finishedWork !== null) {
	        // We've completed the root. Check the if we should yield one more time
	        // before committing.
	        if (!shouldYieldToRenderer()) {
	          // Still time left. Commit the root.
	          completeRoot(root, _finishedWork, expirationTime);
	        } else {
	          // There's no time left. Mark this root as complete. We'll come
	          // back and commit it later.
	          root.finishedWork = _finishedWork;
	        }
	      }
	    }
	  }

	  isRendering = false;
	}

	function completeRoot(root, finishedWork, expirationTime) {
	  // Check if there's a batch that matches this expiration time.
	  var firstBatch = root.firstBatch;
	  if (firstBatch !== null && firstBatch._expirationTime >= expirationTime) {
	    if (completedBatches === null) {
	      completedBatches = [firstBatch];
	    } else {
	      completedBatches.push(firstBatch);
	    }
	    if (firstBatch._defer) {
	      // This root is blocked from committing by a batch. Unschedule it until
	      // we receive another update.
	      root.finishedWork = finishedWork;
	      root.expirationTime = NoWork;
	      return;
	    }
	  }

	  // Commit the root.
	  root.finishedWork = null;

	  // Check if this is a nested update (a sync update scheduled during the
	  // commit phase).
	  if (root === lastCommittedRootDuringThisBatch) {
	    // If the next root is the same as the previous root, this is a nested
	    // update. To prevent an infinite loop, increment the nested update count.
	    nestedUpdateCount++;
	  } else {
	    // Reset whenever we switch roots.
	    lastCommittedRootDuringThisBatch = root;
	    nestedUpdateCount = 0;
	  }
	  scheduler.unstable_runWithPriority(scheduler.unstable_ImmediatePriority, function () {
	    commitRoot(root, finishedWork);
	  });
	}

	function onUncaughtError(error) {
	  !(nextFlushedRoot !== null) ? invariant(false, 'Should be working on a root. This error is likely caused by a bug in React. Please file an issue.') : void 0;
	  // Unschedule this root so we don't work on it again until there's
	  // another update.
	  nextFlushedRoot.expirationTime = NoWork;
	  if (!hasUnhandledError) {
	    hasUnhandledError = true;
	    unhandledError = error;
	  }
	}

	// TODO: Batching should be implemented at the renderer level, not inside
	// the reconciler.
	function batchedUpdates$1(fn, a) {
	  var previousIsBatchingUpdates = isBatchingUpdates;
	  isBatchingUpdates = true;
	  try {
	    return fn(a);
	  } finally {
	    isBatchingUpdates = previousIsBatchingUpdates;
	    if (!isBatchingUpdates && !isRendering) {
	      performSyncWork();
	    }
	  }
	}

	// TODO: Batching should be implemented at the renderer level, not inside
	// the reconciler.
	function unbatchedUpdates(fn, a) {
	  if (isBatchingUpdates && !isUnbatchingUpdates) {
	    isUnbatchingUpdates = true;
	    try {
	      return fn(a);
	    } finally {
	      isUnbatchingUpdates = false;
	    }
	  }
	  return fn(a);
	}

	// TODO: Batching should be implemented at the renderer level, not within
	// the reconciler.
	function flushSync(fn, a) {
	  !!isRendering ? invariant(false, 'flushSync was called from inside a lifecycle method. It cannot be called when React is already rendering.') : void 0;
	  var previousIsBatchingUpdates = isBatchingUpdates;
	  isBatchingUpdates = true;
	  try {
	    return syncUpdates(fn, a);
	  } finally {
	    isBatchingUpdates = previousIsBatchingUpdates;
	    performSyncWork();
	  }
	}

	function interactiveUpdates$1(fn, a, b) {
	  // If there are any pending interactive updates, synchronously flush them.
	  // This needs to happen before we read any handlers, because the effect of
	  // the previous event may influence which handlers are called during
	  // this event.
	  if (!isBatchingUpdates && !isRendering && lowestPriorityPendingInteractiveExpirationTime !== NoWork) {
	    // Synchronously flush pending interactive updates.
	    performWork(lowestPriorityPendingInteractiveExpirationTime, false);
	    lowestPriorityPendingInteractiveExpirationTime = NoWork;
	  }
	  var previousIsBatchingUpdates = isBatchingUpdates;
	  isBatchingUpdates = true;
	  try {
	    return scheduler.unstable_runWithPriority(scheduler.unstable_UserBlockingPriority, function () {
	      return fn(a, b);
	    });
	  } finally {
	    isBatchingUpdates = previousIsBatchingUpdates;
	    if (!isBatchingUpdates && !isRendering) {
	      performSyncWork();
	    }
	  }
	}

	function flushInteractiveUpdates$1() {
	  if (!isRendering && lowestPriorityPendingInteractiveExpirationTime !== NoWork) {
	    // Synchronously flush pending interactive updates.
	    performWork(lowestPriorityPendingInteractiveExpirationTime, false);
	    lowestPriorityPendingInteractiveExpirationTime = NoWork;
	  }
	}

	function flushControlled(fn) {
	  var previousIsBatchingUpdates = isBatchingUpdates;
	  isBatchingUpdates = true;
	  try {
	    syncUpdates(fn);
	  } finally {
	    isBatchingUpdates = previousIsBatchingUpdates;
	    if (!isBatchingUpdates && !isRendering) {
	      performSyncWork();
	    }
	  }
	}

	// 0 is PROD, 1 is DEV.
	// Might add PROFILE later.


	var didWarnAboutNestedUpdates = void 0;
	var didWarnAboutFindNodeInStrictMode = void 0;

	{
	  didWarnAboutNestedUpdates = false;
	  didWarnAboutFindNodeInStrictMode = {};
	}

	function getContextForSubtree(parentComponent) {
	  if (!parentComponent) {
	    return emptyContextObject;
	  }

	  var fiber = get(parentComponent);
	  var parentContext = findCurrentUnmaskedContext(fiber);

	  if (fiber.tag === ClassComponent) {
	    var Component = fiber.type;
	    if (isContextProvider(Component)) {
	      return processChildContext(fiber, Component, parentContext);
	    }
	  }

	  return parentContext;
	}

	function scheduleRootUpdate(current$$1, element, expirationTime, callback) {
	  {
	    if (phase === 'render' && current !== null && !didWarnAboutNestedUpdates) {
	      didWarnAboutNestedUpdates = true;
	      warningWithoutStack$1(false, 'Render methods should be a pure function of props and state; ' + 'triggering nested component updates from render is not allowed. ' + 'If necessary, trigger nested updates in componentDidUpdate.\n\n' + 'Check the render method of %s.', getComponentName(current.type) || 'Unknown');
	    }
	  }

	  var update = createUpdate(expirationTime);
	  // Caution: React DevTools currently depends on this property
	  // being called "element".
	  update.payload = { element: element };

	  callback = callback === undefined ? null : callback;
	  if (callback !== null) {
	    !(typeof callback === 'function') ? warningWithoutStack$1(false, 'render(...): Expected the last optional `callback` argument to be a ' + 'function. Instead received: %s.', callback) : void 0;
	    update.callback = callback;
	  }

	  flushPassiveEffects();
	  enqueueUpdate(current$$1, update);
	  scheduleWork(current$$1, expirationTime);

	  return expirationTime;
	}

	function updateContainerAtExpirationTime(element, container, parentComponent, expirationTime, callback) {
	  // TODO: If this is a nested container, this won't be the root.
	  var current$$1 = container.current;

	  {
	    if (ReactFiberInstrumentation_1.debugTool) {
	      if (current$$1.alternate === null) {
	        ReactFiberInstrumentation_1.debugTool.onMountContainer(container);
	      } else if (element === null) {
	        ReactFiberInstrumentation_1.debugTool.onUnmountContainer(container);
	      } else {
	        ReactFiberInstrumentation_1.debugTool.onUpdateContainer(container);
	      }
	    }
	  }

	  var context = getContextForSubtree(parentComponent);
	  if (container.context === null) {
	    container.context = context;
	  } else {
	    container.pendingContext = context;
	  }

	  return scheduleRootUpdate(current$$1, element, expirationTime, callback);
	}

	function findHostInstance(component) {
	  var fiber = get(component);
	  if (fiber === undefined) {
	    if (typeof component.render === 'function') {
	      invariant(false, 'Unable to find node on an unmounted component.');
	    } else {
	      invariant(false, 'Argument appears to not be a ReactComponent. Keys: %s', Object.keys(component));
	    }
	  }
	  var hostFiber = findCurrentHostFiber(fiber);
	  if (hostFiber === null) {
	    return null;
	  }
	  return hostFiber.stateNode;
	}

	function findHostInstanceWithWarning(component, methodName) {
	  {
	    var fiber = get(component);
	    if (fiber === undefined) {
	      if (typeof component.render === 'function') {
	        invariant(false, 'Unable to find node on an unmounted component.');
	      } else {
	        invariant(false, 'Argument appears to not be a ReactComponent. Keys: %s', Object.keys(component));
	      }
	    }
	    var hostFiber = findCurrentHostFiber(fiber);
	    if (hostFiber === null) {
	      return null;
	    }
	    if (hostFiber.mode & StrictMode) {
	      var componentName = getComponentName(fiber.type) || 'Component';
	      if (!didWarnAboutFindNodeInStrictMode[componentName]) {
	        didWarnAboutFindNodeInStrictMode[componentName] = true;
	        if (fiber.mode & StrictMode) {
	          warningWithoutStack$1(false, '%s is deprecated in StrictMode. ' + '%s was passed an instance of %s which is inside StrictMode. ' + 'Instead, add a ref directly to the element you want to reference.' + '\n%s' + '\n\nLearn more about using refs safely here:' + '\nhttps://fb.me/react-strict-mode-find-node', methodName, methodName, componentName, getStackByFiberInDevAndProd(hostFiber));
	        } else {
	          warningWithoutStack$1(false, '%s is deprecated in StrictMode. ' + '%s was passed an instance of %s which renders StrictMode children. ' + 'Instead, add a ref directly to the element you want to reference.' + '\n%s' + '\n\nLearn more about using refs safely here:' + '\nhttps://fb.me/react-strict-mode-find-node', methodName, methodName, componentName, getStackByFiberInDevAndProd(hostFiber));
	        }
	      }
	    }
	    return hostFiber.stateNode;
	  }
	  return findHostInstance(component);
	}

	function createContainer(containerInfo, isConcurrent, hydrate) {
	  return createFiberRoot(containerInfo, isConcurrent, hydrate);
	}

	function updateContainer(element, container, parentComponent, callback) {
	  var current$$1 = container.current;
	  var currentTime = requestCurrentTime();
	  var expirationTime = computeExpirationForFiber(currentTime, current$$1);
	  return updateContainerAtExpirationTime(element, container, parentComponent, expirationTime, callback);
	}

	function getPublicRootInstance(container) {
	  var containerFiber = container.current;
	  if (!containerFiber.child) {
	    return null;
	  }
	  switch (containerFiber.child.tag) {
	    case HostComponent:
	      return getPublicInstance(containerFiber.child.stateNode);
	    default:
	      return containerFiber.child.stateNode;
	  }
	}

	function findHostInstanceWithNoPortals(fiber) {
	  var hostFiber = findCurrentHostFiberWithNoPortals(fiber);
	  if (hostFiber === null) {
	    return null;
	  }
	  return hostFiber.stateNode;
	}

	var overrideProps = null;

	{
	  var copyWithSetImpl = function (obj, path, idx, value) {
	    if (idx >= path.length) {
	      return value;
	    }
	    var key = path[idx];
	    var updated = Array.isArray(obj) ? obj.slice() : _assign({}, obj);
	    // $FlowFixMe number or string is fine here
	    updated[key] = copyWithSetImpl(obj[key], path, idx + 1, value);
	    return updated;
	  };

	  var copyWithSet = function (obj, path, value) {
	    return copyWithSetImpl(obj, path, 0, value);
	  };

	  // Support DevTools props for function components, forwardRef, memo, host components, etc.
	  overrideProps = function (fiber, path, value) {
	    flushPassiveEffects();
	    fiber.pendingProps = copyWithSet(fiber.memoizedProps, path, value);
	    if (fiber.alternate) {
	      fiber.alternate.pendingProps = fiber.pendingProps;
	    }
	    scheduleWork(fiber, Sync);
	  };
	}

	function injectIntoDevTools(devToolsConfig) {
	  var findFiberByHostInstance = devToolsConfig.findFiberByHostInstance;
	  var ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;


	  return injectInternals(_assign({}, devToolsConfig, {
	    overrideProps: overrideProps,
	    currentDispatcherRef: ReactCurrentDispatcher,
	    findHostInstanceByFiber: function (fiber) {
	      var hostFiber = findCurrentHostFiber(fiber);
	      if (hostFiber === null) {
	        return null;
	      }
	      return hostFiber.stateNode;
	    },
	    findFiberByHostInstance: function (instance) {
	      if (!findFiberByHostInstance) {
	        // Might not be implemented by the renderer.
	        return null;
	      }
	      return findFiberByHostInstance(instance);
	    }
	  }));
	}

	// This file intentionally does *not* have the Flow annotation.
	// Don't add it. See `./inline-typed.js` for an explanation.

	function createPortal$1(children, containerInfo,
	// TODO: figure out the API for cross-renderer implementation.
	implementation) {
	  var key = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;

	  return {
	    // This tag allow us to uniquely identify this as a React Portal
	    $$typeof: REACT_PORTAL_TYPE,
	    key: key == null ? null : '' + key,
	    children: children,
	    containerInfo: containerInfo,
	    implementation: implementation
	  };
	}

	// TODO: this is special because it gets imported during build.

	var ReactVersion = '16.8.6';

	// TODO: This type is shared between the reconciler and ReactDOM, but will
	// eventually be lifted out to the renderer.

	var ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;

	var topLevelUpdateWarnings = void 0;
	var warnOnInvalidCallback = void 0;
	var didWarnAboutUnstableCreatePortal = false;

	{
	  if (typeof Map !== 'function' ||
	  // $FlowIssue Flow incorrectly thinks Map has no prototype
	  Map.prototype == null || typeof Map.prototype.forEach !== 'function' || typeof Set !== 'function' ||
	  // $FlowIssue Flow incorrectly thinks Set has no prototype
	  Set.prototype == null || typeof Set.prototype.clear !== 'function' || typeof Set.prototype.forEach !== 'function') {
	    warningWithoutStack$1(false, 'React depends on Map and Set built-in types. Make sure that you load a ' + 'polyfill in older browsers. https://fb.me/react-polyfills');
	  }

	  topLevelUpdateWarnings = function (container) {
	    if (container._reactRootContainer && container.nodeType !== COMMENT_NODE) {
	      var hostInstance = findHostInstanceWithNoPortals(container._reactRootContainer._internalRoot.current);
	      if (hostInstance) {
	        !(hostInstance.parentNode === container) ? warningWithoutStack$1(false, 'render(...): It looks like the React-rendered content of this ' + 'container was removed without using React. This is not ' + 'supported and will cause errors. Instead, call ' + 'ReactDOM.unmountComponentAtNode to empty a container.') : void 0;
	      }
	    }

	    var isRootRenderedBySomeReact = !!container._reactRootContainer;
	    var rootEl = getReactRootElementInContainer(container);
	    var hasNonRootReactChild = !!(rootEl && getInstanceFromNode$1(rootEl));

	    !(!hasNonRootReactChild || isRootRenderedBySomeReact) ? warningWithoutStack$1(false, 'render(...): Replacing React-rendered children with a new root ' + 'component. If you intended to update the children of this node, ' + 'you should instead have the existing children update their state ' + 'and render the new components instead of calling ReactDOM.render.') : void 0;

	    !(container.nodeType !== ELEMENT_NODE || !container.tagName || container.tagName.toUpperCase() !== 'BODY') ? warningWithoutStack$1(false, 'render(): Rendering components directly into document.body is ' + 'discouraged, since its children are often manipulated by third-party ' + 'scripts and browser extensions. This may lead to subtle ' + 'reconciliation issues. Try rendering into a container element created ' + 'for your app.') : void 0;
	  };

	  warnOnInvalidCallback = function (callback, callerName) {
	    !(callback === null || typeof callback === 'function') ? warningWithoutStack$1(false, '%s(...): Expected the last optional `callback` argument to be a ' + 'function. Instead received: %s.', callerName, callback) : void 0;
	  };
	}

	setRestoreImplementation(restoreControlledState$1);

	function ReactBatch(root) {
	  var expirationTime = computeUniqueAsyncExpiration();
	  this._expirationTime = expirationTime;
	  this._root = root;
	  this._next = null;
	  this._callbacks = null;
	  this._didComplete = false;
	  this._hasChildren = false;
	  this._children = null;
	  this._defer = true;
	}
	ReactBatch.prototype.render = function (children) {
	  !this._defer ? invariant(false, 'batch.render: Cannot render a batch that already committed.') : void 0;
	  this._hasChildren = true;
	  this._children = children;
	  var internalRoot = this._root._internalRoot;
	  var expirationTime = this._expirationTime;
	  var work = new ReactWork();
	  updateContainerAtExpirationTime(children, internalRoot, null, expirationTime, work._onCommit);
	  return work;
	};
	ReactBatch.prototype.then = function (onComplete) {
	  if (this._didComplete) {
	    onComplete();
	    return;
	  }
	  var callbacks = this._callbacks;
	  if (callbacks === null) {
	    callbacks = this._callbacks = [];
	  }
	  callbacks.push(onComplete);
	};
	ReactBatch.prototype.commit = function () {
	  var internalRoot = this._root._internalRoot;
	  var firstBatch = internalRoot.firstBatch;
	  !(this._defer && firstBatch !== null) ? invariant(false, 'batch.commit: Cannot commit a batch multiple times.') : void 0;

	  if (!this._hasChildren) {
	    // This batch is empty. Return.
	    this._next = null;
	    this._defer = false;
	    return;
	  }

	  var expirationTime = this._expirationTime;

	  // Ensure this is the first batch in the list.
	  if (firstBatch !== this) {
	    // This batch is not the earliest batch. We need to move it to the front.
	    // Update its expiration time to be the expiration time of the earliest
	    // batch, so that we can flush it without flushing the other batches.
	    if (this._hasChildren) {
	      expirationTime = this._expirationTime = firstBatch._expirationTime;
	      // Rendering this batch again ensures its children will be the final state
	      // when we flush (updates are processed in insertion order: last
	      // update wins).
	      // TODO: This forces a restart. Should we print a warning?
	      this.render(this._children);
	    }

	    // Remove the batch from the list.
	    var previous = null;
	    var batch = firstBatch;
	    while (batch !== this) {
	      previous = batch;
	      batch = batch._next;
	    }
	    !(previous !== null) ? invariant(false, 'batch.commit: Cannot commit a batch multiple times.') : void 0;
	    previous._next = batch._next;

	    // Add it to the front.
	    this._next = firstBatch;
	    firstBatch = internalRoot.firstBatch = this;
	  }

	  // Synchronously flush all the work up to this batch's expiration time.
	  this._defer = false;
	  flushRoot(internalRoot, expirationTime);

	  // Pop the batch from the list.
	  var next = this._next;
	  this._next = null;
	  firstBatch = internalRoot.firstBatch = next;

	  // Append the next earliest batch's children to the update queue.
	  if (firstBatch !== null && firstBatch._hasChildren) {
	    firstBatch.render(firstBatch._children);
	  }
	};
	ReactBatch.prototype._onComplete = function () {
	  if (this._didComplete) {
	    return;
	  }
	  this._didComplete = true;
	  var callbacks = this._callbacks;
	  if (callbacks === null) {
	    return;
	  }
	  // TODO: Error handling.
	  for (var i = 0; i < callbacks.length; i++) {
	    var _callback = callbacks[i];
	    _callback();
	  }
	};

	function ReactWork() {
	  this._callbacks = null;
	  this._didCommit = false;
	  // TODO: Avoid need to bind by replacing callbacks in the update queue with
	  // list of Work objects.
	  this._onCommit = this._onCommit.bind(this);
	}
	ReactWork.prototype.then = function (onCommit) {
	  if (this._didCommit) {
	    onCommit();
	    return;
	  }
	  var callbacks = this._callbacks;
	  if (callbacks === null) {
	    callbacks = this._callbacks = [];
	  }
	  callbacks.push(onCommit);
	};
	ReactWork.prototype._onCommit = function () {
	  if (this._didCommit) {
	    return;
	  }
	  this._didCommit = true;
	  var callbacks = this._callbacks;
	  if (callbacks === null) {
	    return;
	  }
	  // TODO: Error handling.
	  for (var i = 0; i < callbacks.length; i++) {
	    var _callback2 = callbacks[i];
	    !(typeof _callback2 === 'function') ? invariant(false, 'Invalid argument passed as callback. Expected a function. Instead received: %s', _callback2) : void 0;
	    _callback2();
	  }
	};

	function ReactRoot(container, isConcurrent, hydrate) {
	  var root = createContainer(container, isConcurrent, hydrate);
	  this._internalRoot = root;
	}
	ReactRoot.prototype.render = function (children, callback) {
	  var root = this._internalRoot;
	  var work = new ReactWork();
	  callback = callback === undefined ? null : callback;
	  {
	    warnOnInvalidCallback(callback, 'render');
	  }
	  if (callback !== null) {
	    work.then(callback);
	  }
	  updateContainer(children, root, null, work._onCommit);
	  return work;
	};
	ReactRoot.prototype.unmount = function (callback) {
	  var root = this._internalRoot;
	  var work = new ReactWork();
	  callback = callback === undefined ? null : callback;
	  {
	    warnOnInvalidCallback(callback, 'render');
	  }
	  if (callback !== null) {
	    work.then(callback);
	  }
	  updateContainer(null, root, null, work._onCommit);
	  return work;
	};
	ReactRoot.prototype.legacy_renderSubtreeIntoContainer = function (parentComponent, children, callback) {
	  var root = this._internalRoot;
	  var work = new ReactWork();
	  callback = callback === undefined ? null : callback;
	  {
	    warnOnInvalidCallback(callback, 'render');
	  }
	  if (callback !== null) {
	    work.then(callback);
	  }
	  updateContainer(children, root, parentComponent, work._onCommit);
	  return work;
	};
	ReactRoot.prototype.createBatch = function () {
	  var batch = new ReactBatch(this);
	  var expirationTime = batch._expirationTime;

	  var internalRoot = this._internalRoot;
	  var firstBatch = internalRoot.firstBatch;
	  if (firstBatch === null) {
	    internalRoot.firstBatch = batch;
	    batch._next = null;
	  } else {
	    // Insert sorted by expiration time then insertion order
	    var insertAfter = null;
	    var insertBefore = firstBatch;
	    while (insertBefore !== null && insertBefore._expirationTime >= expirationTime) {
	      insertAfter = insertBefore;
	      insertBefore = insertBefore._next;
	    }
	    batch._next = insertBefore;
	    if (insertAfter !== null) {
	      insertAfter._next = batch;
	    }
	  }

	  return batch;
	};

	/**
	 * True if the supplied DOM node is a valid node element.
	 *
	 * @param {?DOMElement} node The candidate DOM node.
	 * @return {boolean} True if the DOM is a valid DOM node.
	 * @internal
	 */
	function isValidContainer(node) {
	  return !!(node && (node.nodeType === ELEMENT_NODE || node.nodeType === DOCUMENT_NODE || node.nodeType === DOCUMENT_FRAGMENT_NODE || node.nodeType === COMMENT_NODE && node.nodeValue === ' react-mount-point-unstable '));
	}

	function getReactRootElementInContainer(container) {
	  if (!container) {
	    return null;
	  }

	  if (container.nodeType === DOCUMENT_NODE) {
	    return container.documentElement;
	  } else {
	    return container.firstChild;
	  }
	}

	function shouldHydrateDueToLegacyHeuristic(container) {
	  var rootElement = getReactRootElementInContainer(container);
	  return !!(rootElement && rootElement.nodeType === ELEMENT_NODE && rootElement.hasAttribute(ROOT_ATTRIBUTE_NAME));
	}

	setBatchingImplementation(batchedUpdates$1, interactiveUpdates$1, flushInteractiveUpdates$1);

	var warnedAboutHydrateAPI = false;

	function legacyCreateRootFromDOMContainer(container, forceHydrate) {
	  var shouldHydrate = forceHydrate || shouldHydrateDueToLegacyHeuristic(container);
	  // First clear any existing content.
	  if (!shouldHydrate) {
	    var warned = false;
	    var rootSibling = void 0;
	    while (rootSibling = container.lastChild) {
	      {
	        if (!warned && rootSibling.nodeType === ELEMENT_NODE && rootSibling.hasAttribute(ROOT_ATTRIBUTE_NAME)) {
	          warned = true;
	          warningWithoutStack$1(false, 'render(): Target node has markup rendered by React, but there ' + 'are unrelated nodes as well. This is most commonly caused by ' + 'white-space inserted around server-rendered markup.');
	        }
	      }
	      container.removeChild(rootSibling);
	    }
	  }
	  {
	    if (shouldHydrate && !forceHydrate && !warnedAboutHydrateAPI) {
	      warnedAboutHydrateAPI = true;
	      lowPriorityWarning$1(false, 'render(): Calling ReactDOM.render() to hydrate server-rendered markup ' + 'will stop working in React v17. Replace the ReactDOM.render() call ' + 'with ReactDOM.hydrate() if you want React to attach to the server HTML.');
	    }
	  }
	  // Legacy roots are not async by default.
	  var isConcurrent = false;
	  return new ReactRoot(container, isConcurrent, shouldHydrate);
	}

	function legacyRenderSubtreeIntoContainer(parentComponent, children, container, forceHydrate, callback) {
	  {
	    topLevelUpdateWarnings(container);
	  }

	  // TODO: Without `any` type, Flow says "Property cannot be accessed on any
	  // member of intersection type." Whyyyyyy.
	  var root = container._reactRootContainer;
	  if (!root) {
	    // Initial mount
	    root = container._reactRootContainer = legacyCreateRootFromDOMContainer(container, forceHydrate);
	    if (typeof callback === 'function') {
	      var originalCallback = callback;
	      callback = function () {
	        var instance = getPublicRootInstance(root._internalRoot);
	        originalCallback.call(instance);
	      };
	    }
	    // Initial mount should not be batched.
	    unbatchedUpdates(function () {
	      if (parentComponent != null) {
	        root.legacy_renderSubtreeIntoContainer(parentComponent, children, callback);
	      } else {
	        root.render(children, callback);
	      }
	    });
	  } else {
	    if (typeof callback === 'function') {
	      var _originalCallback = callback;
	      callback = function () {
	        var instance = getPublicRootInstance(root._internalRoot);
	        _originalCallback.call(instance);
	      };
	    }
	    // Update
	    if (parentComponent != null) {
	      root.legacy_renderSubtreeIntoContainer(parentComponent, children, callback);
	    } else {
	      root.render(children, callback);
	    }
	  }
	  return getPublicRootInstance(root._internalRoot);
	}

	function createPortal$$1(children, container) {
	  var key = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;

	  !isValidContainer(container) ? invariant(false, 'Target container is not a DOM element.') : void 0;
	  // TODO: pass ReactDOM portal implementation as third argument
	  return createPortal$1(children, container, null, key);
	}

	var ReactDOM = {
	  createPortal: createPortal$$1,

	  findDOMNode: function (componentOrElement) {
	    {
	      var owner = ReactCurrentOwner.current;
	      if (owner !== null && owner.stateNode !== null) {
	        var warnedAboutRefsInRender = owner.stateNode._warnedAboutRefsInRender;
	        !warnedAboutRefsInRender ? warningWithoutStack$1(false, '%s is accessing findDOMNode inside its render(). ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', getComponentName(owner.type) || 'A component') : void 0;
	        owner.stateNode._warnedAboutRefsInRender = true;
	      }
	    }
	    if (componentOrElement == null) {
	      return null;
	    }
	    if (componentOrElement.nodeType === ELEMENT_NODE) {
	      return componentOrElement;
	    }
	    {
	      return findHostInstanceWithWarning(componentOrElement, 'findDOMNode');
	    }
	    return findHostInstance(componentOrElement);
	  },
	  hydrate: function (element, container, callback) {
	    !isValidContainer(container) ? invariant(false, 'Target container is not a DOM element.') : void 0;
	    {
	      !!container._reactHasBeenPassedToCreateRootDEV ? warningWithoutStack$1(false, 'You are calling ReactDOM.hydrate() on a container that was previously ' + 'passed to ReactDOM.%s(). This is not supported. ' + 'Did you mean to call createRoot(container, {hydrate: true}).render(element)?', enableStableConcurrentModeAPIs ? 'createRoot' : 'unstable_createRoot') : void 0;
	    }
	    // TODO: throw or warn if we couldn't hydrate?
	    return legacyRenderSubtreeIntoContainer(null, element, container, true, callback);
	  },
	  render: function (element, container, callback) {
	    !isValidContainer(container) ? invariant(false, 'Target container is not a DOM element.') : void 0;
	    {
	      !!container._reactHasBeenPassedToCreateRootDEV ? warningWithoutStack$1(false, 'You are calling ReactDOM.render() on a container that was previously ' + 'passed to ReactDOM.%s(). This is not supported. ' + 'Did you mean to call root.render(element)?', enableStableConcurrentModeAPIs ? 'createRoot' : 'unstable_createRoot') : void 0;
	    }
	    return legacyRenderSubtreeIntoContainer(null, element, container, false, callback);
	  },
	  unstable_renderSubtreeIntoContainer: function (parentComponent, element, containerNode, callback) {
	    !isValidContainer(containerNode) ? invariant(false, 'Target container is not a DOM element.') : void 0;
	    !(parentComponent != null && has(parentComponent)) ? invariant(false, 'parentComponent must be a valid React Component') : void 0;
	    return legacyRenderSubtreeIntoContainer(parentComponent, element, containerNode, false, callback);
	  },
	  unmountComponentAtNode: function (container) {
	    !isValidContainer(container) ? invariant(false, 'unmountComponentAtNode(...): Target container is not a DOM element.') : void 0;

	    {
	      !!container._reactHasBeenPassedToCreateRootDEV ? warningWithoutStack$1(false, 'You are calling ReactDOM.unmountComponentAtNode() on a container that was previously ' + 'passed to ReactDOM.%s(). This is not supported. Did you mean to call root.unmount()?', enableStableConcurrentModeAPIs ? 'createRoot' : 'unstable_createRoot') : void 0;
	    }

	    if (container._reactRootContainer) {
	      {
	        var rootEl = getReactRootElementInContainer(container);
	        var renderedByDifferentReact = rootEl && !getInstanceFromNode$1(rootEl);
	        !!renderedByDifferentReact ? warningWithoutStack$1(false, "unmountComponentAtNode(): The node you're attempting to unmount " + 'was rendered by another copy of React.') : void 0;
	      }

	      // Unmount should not be batched.
	      unbatchedUpdates(function () {
	        legacyRenderSubtreeIntoContainer(null, null, container, false, function () {
	          container._reactRootContainer = null;
	        });
	      });
	      // If you call unmountComponentAtNode twice in quick succession, you'll
	      // get `true` twice. That's probably fine?
	      return true;
	    } else {
	      {
	        var _rootEl = getReactRootElementInContainer(container);
	        var hasNonRootReactChild = !!(_rootEl && getInstanceFromNode$1(_rootEl));

	        // Check if the container itself is a React root node.
	        var isContainerReactRoot = container.nodeType === ELEMENT_NODE && isValidContainer(container.parentNode) && !!container.parentNode._reactRootContainer;

	        !!hasNonRootReactChild ? warningWithoutStack$1(false, "unmountComponentAtNode(): The node you're attempting to unmount " + 'was rendered by React and is not a top-level container. %s', isContainerReactRoot ? 'You may have accidentally passed in a React root node instead ' + 'of its container.' : 'Instead, have the parent component update its state and ' + 'rerender in order to remove this component.') : void 0;
	      }

	      return false;
	    }
	  },


	  // Temporary alias since we already shipped React 16 RC with it.
	  // TODO: remove in React 17.
	  unstable_createPortal: function () {
	    if (!didWarnAboutUnstableCreatePortal) {
	      didWarnAboutUnstableCreatePortal = true;
	      lowPriorityWarning$1(false, 'The ReactDOM.unstable_createPortal() alias has been deprecated, ' + 'and will be removed in React 17+. Update your code to use ' + 'ReactDOM.createPortal() instead. It has the exact same API, ' + 'but without the "unstable_" prefix.');
	    }
	    return createPortal$$1.apply(undefined, arguments);
	  },


	  unstable_batchedUpdates: batchedUpdates$1,

	  unstable_interactiveUpdates: interactiveUpdates$1,

	  flushSync: flushSync,

	  unstable_createRoot: createRoot,
	  unstable_flushControlled: flushControlled,

	  __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: {
	    // Keep in sync with ReactDOMUnstableNativeDependencies.js
	    // and ReactTestUtils.js. This is an array for better minification.
	    Events: [getInstanceFromNode$1, getNodeFromInstance$1, getFiberCurrentPropsFromNode$1, injection.injectEventPluginsByName, eventNameDispatchConfigs, accumulateTwoPhaseDispatches, accumulateDirectDispatches, enqueueStateRestore, restoreStateIfNeeded, dispatchEvent, runEventsInBatch]
	  }
	};

	function createRoot(container, options) {
	  var functionName = enableStableConcurrentModeAPIs ? 'createRoot' : 'unstable_createRoot';
	  !isValidContainer(container) ? invariant(false, '%s(...): Target container is not a DOM element.', functionName) : void 0;
	  {
	    !!container._reactRootContainer ? warningWithoutStack$1(false, 'You are calling ReactDOM.%s() on a container that was previously ' + 'passed to ReactDOM.render(). This is not supported.', enableStableConcurrentModeAPIs ? 'createRoot' : 'unstable_createRoot') : void 0;
	    container._reactHasBeenPassedToCreateRootDEV = true;
	  }
	  var hydrate = options != null && options.hydrate === true;
	  return new ReactRoot(container, true, hydrate);
	}

	if (enableStableConcurrentModeAPIs) {
	  ReactDOM.createRoot = createRoot;
	  ReactDOM.unstable_createRoot = undefined;
	}

	var foundDevTools = injectIntoDevTools({
	  findFiberByHostInstance: getClosestInstanceFromNode,
	  bundleType: 1,
	  version: ReactVersion,
	  rendererPackageName: 'react-dom'
	});

	{
	  if (!foundDevTools && canUseDOM && window.top === window.self) {
	    // If we're in Chrome or Firefox, provide a download link if not installed.
	    if (navigator.userAgent.indexOf('Chrome') > -1 && navigator.userAgent.indexOf('Edge') === -1 || navigator.userAgent.indexOf('Firefox') > -1) {
	      var protocol = window.location.protocol;
	      // Don't warn in exotic cases like chrome-extension://.
	      if (/^(https?|file):$/.test(protocol)) {
	        console.info('%cDownload the React DevTools ' + 'for a better development experience: ' + 'https://fb.me/react-devtools' + (protocol === 'file:' ? '\nYou might need to use a local HTTP server (instead of file://): ' + 'https://fb.me/react-devtools-faq' : ''), 'font-weight:bold');
	      }
	    }
	  }
	}



	var ReactDOM$2 = Object.freeze({
		default: ReactDOM
	});

	var ReactDOM$3 = ( ReactDOM$2 && ReactDOM ) || ReactDOM$2;

	// TODO: decide on the top-level export form.
	// This is hacky but makes it work with both Rollup and Jest.
	var reactDom = ReactDOM$3.default || ReactDOM$3;

	module.exports = reactDom;
	  })();
	}

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 16 */,
/* 17 */,
/* 18 */,
/* 19 */
/***/ (function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = {
	  metrics: {
	    breakdown: {
	      html: {
	        bytes: {
	          color: [115, 210, 222],
	          name: 'HTML',
	          transform: function transform(value) {
	            return (value / 1000).toFixed(1);
	          },
	          unit: 'KB'
	        },
	        requests: {
	          color: [115, 210, 222],
	          name: 'HTML'
	        }
	      },
	      js: {
	        bytes: {
	          color: [251, 177, 60],
	          name: 'JS',
	          transform: function transform(value) {
	            return (value / 1000).toFixed(1);
	          },
	          unit: 'KB'
	        },
	        requests: {
	          color: [251, 177, 60],
	          name: 'JS'
	        }
	      },
	      css: {
	        bytes: {
	          color: [33, 131, 128],
	          name: 'CSS',
	          transform: function transform(value) {
	            return (value / 1000).toFixed(1);
	          },
	          unit: 'KB'
	        },
	        requests: {
	          color: [33, 131, 128],
	          name: 'CSS'
	        }
	      },
	      image: {
	        bytes: {
	          color: [143, 45, 86],
	          name: 'Images',
	          transform: function transform(value) {
	            return (value / 1000).toFixed(1);
	          },
	          unit: 'KB'
	        },
	        requests: {
	          color: [143, 45, 86],
	          name: 'Images'
	        }
	      },
	      flash: {
	        bytes: {
	          color: [33, 41, 92],
	          name: 'Flash',
	          transform: function transform(value) {
	            return (value / 1000).toFixed(1);
	          },
	          unit: 'KB'
	        },
	        requests: {
	          color: [33, 41, 92],
	          name: 'Flash'
	        }
	      },
	      font: {
	        bytes: {
	          color: [216, 17, 89],
	          name: 'Fonts',
	          transform: function transform(value) {
	            return (value / 1000).toFixed(1);
	          },
	          unit: 'KB'
	        },
	        requests: {
	          color: [216, 17, 89],
	          name: 'Fonts'
	        }
	      },
	      other: {
	        bytes: {
	          color: [231, 143, 142],
	          name: 'Other',
	          transform: function transform(value) {
	            return (value / 1000).toFixed(1);
	          },
	          unit: 'KB'
	        },
	        requests: {
	          color: [231, 143, 142],
	          name: 'Other'
	        }
	      }
	    },
	    loadTime: {
	      color: [195, 125, 146],
	      name: 'Load time',
	      transform: function transform(value) {
	        return (value / 1000).toFixed(2);
	      },
	      unit: 's',
	      description: 'The time between the initial request and the browser load event'
	    },
	    firstPaint: {
	      color: [173, 138, 100],
	      name: 'Start render',
	      transform: function transform(value) {
	        return (value / 1000).toFixed(2);
	      },
	      unit: 's',
	      description: 'The time until the browser starts painting content to the screen'
	    },
	    fullyLoaded: {
	      color: [3, 181, 170],
	      name: 'Fully loaded',
	      transform: function transform(value) {
	        return (value / 1000).toFixed(2);
	      },
	      unit: 's',
	      description: 'The time at which the page has fully finished loading content'
	    },
	    SpeedIndex: {
	      color: [87, 117, 144],
	      name: 'SpeedIndex',
	      transform: function transform(value) {
	        return (value / 1000).toFixed(2);
	      },
	      unit: 's',
	      description: 'A custom metric introduced by WebPageTest to rate pages based on how quickly they are visually populated'
	    },
	    TTFB: {
	      color: [80, 48, 71],
	      name: 'Back-end',
	      transform: function transform(value) {
	        return (value / 1000).toFixed(2);
	      },
	      unit: 's',
	      description: 'The time it takes for the server to respond with the first byte of the response'
	    },
	    visualComplete: {
	      color: [243, 202, 64],
	      name: 'Visually complete',
	      transform: function transform(value) {
	        return (value / 1000).toFixed(2);
	      },
	      unit: 's',
	      description: 'The time it takes for the page to be fully visually populated'
	    },
	    pagespeed: {
	      color: [51, 103, 214],
	      name: 'PageSpeed score',
	      unit: '',
	      description: 'A custom metric defined by Google PageSpeed Insights'
	    },
	    lighthouse: {
	      color: [121, 180, 115],
	      name: 'Lighthouse PWA score',
	      unit: '',
	      description: 'A Progressive Web App (PWA) score defined by Google Lighthouse'
	    }
	  },

	  periods: ['day', 'week', 'month', 'year']
	};
	var dropdownPeriod = exports.dropdownPeriod = [{
	  key: 'day',
	  text: 'day',
	  value: 'day'
	}, {
	  key: 'week',
	  text: 'week',
	  value: 'week'
	}, {
	  key: 'month',
	  text: 'month',
	  value: 'month'
	}, {
	  key: 'year',
	  text: 'year',
	  value: 'year'
	}];

/***/ }),
/* 20 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var _reactDom = __webpack_require__(10);

	var _Section = __webpack_require__(21);

	var _Section2 = _interopRequireDefault(_Section);

	var _Utils = __webpack_require__(154);

	var Utils = _interopRequireWildcard(_Utils);

	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // eslint-disable-line no-unused-vars

	var Dashboard = function (_React$Component) {
	  _inherits(Dashboard, _React$Component);

	  function Dashboard(props) {
	    _classCallCheck(this, Dashboard);

	    var _this = _possibleConstructorReturn(this, (Dashboard.__proto__ || Object.getPrototypeOf(Dashboard)).call(this, props));

	    _this._onPeriodChange = function (slug) {
	      _this.props.onPeriodChange(slug);
	    };

	    _this._onProfileChange = function (slug) {
	      _this.props.onProfileChange(slug);
	    };

	    return _this;
	  }

	  _createClass(Dashboard, [{
	    key: 'render',
	    value: function render() {
	      var _this2 = this;

	      console.log(this.props);
	      var results = this.props.results;
	      var dates = Utils.getDateRangeForPeriod(this.props.period);
	      var dateFrom = dates.from.getTime();
	      var dateTo = dates.to.getTime();
	      var timestamps = Utils.getTimestampsByInterval(results, dateFrom, dateTo);
	      var lastTs = timestamps[timestamps.length - 1];
	      var lastResult = results[lastTs];
	      var videoFrames = lastResult && lastResult.videoFrames || [];
	      var wptUrl = this.props.profile.wptUrl ? this.props.profile.wptUrl.indexOf('http') === 0 ? this.props.profile.wptUrl : null : 'https://www.webpagetest.org';
	      var profileUrl = this.props.profile.parameters.url;

	      var onClickPagespeed = function onClickPagespeed(event, data) {
	        var index = data[0]._index;
	        var timestamp = timestamps[index];
	        var result = results[timestamp];
	        var encodedUrl = encodeURIComponent(profileUrl);
	        var insightsUrl = 'https://developers.google.com/speed/pagespeed/insights/?url=' + encodedUrl;
	        var lighthouseUrl = 'https://www.webpagetest.org/lighthouse.php?test=' + result.id;

	        if (event.shiftKey) {
	          window.open(lighthouseUrl, '_blank');
	        } else {
	          window.open(insightsUrl, '_blank');
	        }
	      };

	      var onClickWpt = function onClickWpt(event, data) {
	        if (!data.length || !wptUrl) return;

	        var index = data[0]._index;
	        var timestamp = timestamps[index];
	        var result = results[timestamp];
	        var testUrl = wptUrl + '/result/' + result.id + '/';

	        window.open(testUrl, '_blank');
	      };

	      var profiles = this.props.profiles;

	      var a = '5';
	      return _react2.default.createElement(
	        'div',
	        { className: 'u-wrapper' },
	        _react2.default.createElement(
	          'section',
	          { className: 'u-wrapper__nav' },
	          profiles.map(function (item, key) {
	            return _react2.default.createElement(
	              'span',
	              {
	                key: key,
	                name: item.slug,
	                onClick: function onClick() {
	                  return _this2._onProfileChange(item.slug);
	                }
	              },
	              item.name
	            );
	          })
	        ),
	        _react2.default.createElement(
	          'section',
	          { className: 'u-wrapper__sections' },
	          _react2.default.createElement(_Section2.default, _extends({}, this.props, {
	            id: 'loadTimes',
	            footNote: _react2.default.createElement(
	              'span',
	              null,
	              'Click on a data point to see the corresponding WebPageTest result'
	            ),
	            lastResult: lastResult,
	            metrics: ['TTFB', 'loadTime', 'fullyLoaded'],
	            onClick: onClickWpt,
	            title: 'Load times',
	            yLabel: 'Time (seconds)'
	          })),
	          _react2.default.createElement(_Section2.default, _extends({}, this.props, {
	            id: 'rendering',
	            footNote: _react2.default.createElement(
	              'span',
	              null,
	              'Click on a data point to see the corresponding WebPageTest result'
	            ),
	            lastResult: lastResult,
	            onClick: onClickWpt,
	            metrics: ['firstPaint', 'SpeedIndex', 'visualComplete'],
	            title: 'Rendering',
	            yLabel: 'Time (seconds)'
	          })),
	          _react2.default.createElement(_Section2.default, _extends({}, this.props, {
	            id: 'pagespeed',
	            footNote: _react2.default.createElement(
	              'span',
	              null,
	              'Click on a data point to see the Google PageSpeed report. Shift+Click to see the Lighthouse report.',
	              _react2.default.createElement('br', null),
	              'Not all WebPageTest locations support Lighthouse - ',
	              _react2.default.createElement(
	                'a',
	                { href: 'https://speedtracker.org/blog/using-lighthouse' },
	                'click here'
	              ),
	              ' to learn more.'
	            ),
	            lastResult: lastResult,
	            maxValue: 100,
	            metrics: ['pagespeed', 'lighthouse'],
	            onClick: onClickPagespeed,
	            title: 'Google PageSpeed and Lighthouse',
	            yLabel: 'Score (0-100)'
	          })),
	          _react2.default.createElement(_Section2.default, _extends({}, this.props, {
	            id: 'contentBreakdownBytes',
	            footNote: _react2.default.createElement(
	              'span',
	              null,
	              'Click on a data point to see the corresponding WebPageTest result'
	            ),
	            lastResult: lastResult,
	            onClick: onClickWpt,
	            metrics: ['breakdown.html.bytes', 'breakdown.js.bytes', 'breakdown.css.bytes', 'breakdown.image.bytes', 'breakdown.flash.bytes', 'breakdown.font.bytes', 'breakdown.other.bytes'],
	            title: 'Content breakdown (size)',
	            yLabel: 'Traffic (kilobytes)'
	          })),
	          _react2.default.createElement(_Section2.default, _extends({}, this.props, {
	            id: 'contentBreakdownRequests',
	            footNote: _react2.default.createElement(
	              'span',
	              null,
	              'Click on a data point to see the corresponding WebPageTest result'
	            ),
	            lastResult: lastResult,
	            onClick: onClickWpt,
	            metrics: ['breakdown.html.requests', 'breakdown.js.requests', 'breakdown.css.requests', 'breakdown.image.requests', 'breakdown.flash.requests', 'breakdown.font.requests', 'breakdown.other.requests'],
	            title: 'Content breakdown (requests)',
	            yLabel: 'Requests'
	          })),
	          videoFrames.length && wptUrl && _react2.default.createElement(
	            'div',
	            { className: 'c-Section' },
	            _react2.default.createElement(
	              'h3',
	              { className: 'c-Section__title' },
	              'Latest filmstrip view'
	            ),
	            _react2.default.createElement(
	              'div',
	              { className: 'c-Filmstrip' },
	              videoFrames.map(function (frame, index) {
	                var progress = frame._t / 1000 + 's';

	                return _react2.default.createElement(
	                  'div',
	                  { key: index, className: 'c-Filmstrip__item' },
	                  _react2.default.createElement(
	                    'p',
	                    { className: 'c-Filmstrip__progress' },
	                    progress,
	                    ' (',
	                    frame._vc,
	                    '%)'
	                  ),
	                  _react2.default.createElement('img', { className: 'c-Filmstrip__image', src: Utils.getVideoFrameURL(wptUrl, lastResult.id, frame) })
	                );
	              })
	            )
	          )
	        )
	      );
	    }
	  }]);

	  return Dashboard;
	}(_react2.default.Component);

	exports.default = Dashboard;

/***/ }),
/* 21 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var _reactDom = __webpack_require__(10);

	var _Chart = __webpack_require__(22);

	var _Chart2 = _interopRequireDefault(_Chart);

	var _Info = __webpack_require__(158);

	var _Info2 = _interopRequireDefault(_Info);

	var _Constants = __webpack_require__(19);

	var _Constants2 = _interopRequireDefault(_Constants);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // eslint-disable-line no-unused-vars

	var objectPath = __webpack_require__(157);

	var Section = function (_React$Component) {
	  _inherits(Section, _React$Component);

	  function Section() {
	    _classCallCheck(this, Section);

	    return _possibleConstructorReturn(this, (Section.__proto__ || Object.getPrototypeOf(Section)).apply(this, arguments));
	  }

	  _createClass(Section, [{
	    key: 'render',
	    value: function render() {
	      var _props = this.props,
	          metrics = _props.metrics,
	          lastResult = _props.lastResult,
	          title = _props.title,
	          id = _props.id,
	          yLabel = _props.yLabel;

	      var budgets = (this.props.profile.budgets || []).filter(function (budget) {
	        return metrics.indexOf(budget.metric) !== -1;
	      });

	      return _react2.default.createElement(
	        'div',
	        { className: 'c-Section' },
	        _react2.default.createElement(
	          'h3',
	          { className: 'c-Section__title' },
	          title
	        ),
	        _react2.default.createElement(
	          'div',
	          { className: 'c-Section__indicators' },
	          metrics.map(function (metricPath, index) {
	            var metric = objectPath.get(_Constants2.default.metrics, metricPath);
	            var value = objectPath.get(lastResult, metricPath);

	            if (typeof value !== 'undefined') {
	              if (typeof metric.transform === 'function') {
	                value = metric.transform(value);
	              }

	              if (metric.unit) {
	                value += metric.unit;
	              }
	            } else {
	              value = '—';
	            }

	            var info = metric.description ? _react2.default.createElement(_Info2.default, { text: metric.description }) : null;
	            var displayValue = value !== null ? value : '—';

	            return _react2.default.createElement(
	              'dl',
	              { key: index, className: 'c-Indicator' },
	              _react2.default.createElement(
	                'dt',
	                { className: 'c-Indicator__key' },
	                metric.name,
	                info
	              ),
	              _react2.default.createElement(
	                'dd',
	                { className: 'c-Indicator__value' },
	                displayValue
	              )
	            );
	          }),
	          budgets.map(function (budget, index) {
	            var metric = objectPath.get(_Constants2.default.metrics, budget.metric);
	            var value = objectPath.get(lastResult, budget.metric);

	            var budgetValue = budget.max || budget.min || 0;
	            var statusClass = ' c-Indicator--success';

	            if (budget.max && value > budgetValue || budget.min && value < budgetValue) {
	              statusClass = ' c-Indicator--danger';
	            }

	            if (typeof metric.transform === 'function') {
	              budgetValue = metric.transform(budgetValue);
	            }

	            if (typeof budgetValue !== 'undefined') {
	              if (metric.unit) {
	                budgetValue += metric.unit;
	              }
	            } else {
	              budgetValue = '—';
	            }

	            return _react2.default.createElement(
	              'dl',
	              { key: index, className: 'c-Indicator' + statusClass },
	              _react2.default.createElement(
	                'dt',
	                { className: 'c-Indicator__key' },
	                metric.name,
	                ' budget'
	              ),
	              _react2.default.createElement(
	                'dd',
	                { className: 'c-Indicator__value' },
	                budgetValue
	              )
	            );
	          })
	        ),
	        _react2.default.createElement(_Chart2.default, _extends({}, this.props, {
	          id: id,
	          budgets: budgets,
	          metrics: metrics,
	          yLabel: yLabel
	        }))
	      );
	    }
	  }]);

	  return Section;
	}(_react2.default.Component);

	exports.default = Section;

/***/ }),
/* 22 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var _reactDom = __webpack_require__(10);

	var _chart = __webpack_require__(23);

	var _chart2 = _interopRequireDefault(_chart);

	var _Constants = __webpack_require__(19);

	var _Constants2 = _interopRequireDefault(_Constants);

	var _Utils = __webpack_require__(154);

	var Utils = _interopRequireWildcard(_Utils);

	var _ansiColors = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"ansi-colors\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // eslint-disable-line no-unused-vars

	var objectPath = __webpack_require__(157);

	var Chart = function (_React$Component) {
	  _inherits(Chart, _React$Component);

	  function Chart() {
	    var _ref;

	    var _temp, _this, _ret;

	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    _classCallCheck(this, Chart);

	    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Chart.__proto__ || Object.getPrototypeOf(Chart)).call.apply(_ref, [this].concat(args))), _this), _this._initChart = function () {
	      var dates = Utils.getDateRangeForPeriod(_this.props.period);
	      var dateFrom = dates.from.getTime();
	      var dateTo = dates.to.getTime();
	      var results = _this.props.results;

	      var timestamps = Utils.getTimestampsByInterval(results, dateFrom, dateTo);

	      var datasets = [];

	      _this.props.metrics.forEach(function (metricPath) {
	        var metric = objectPath.get(_Constants2.default.metrics, metricPath);

	        var values = timestamps.map(function (timestamp) {
	          var value = objectPath.get(results[timestamp], metricPath);

	          if (typeof metric.transform === 'function') {
	            value = metric.transform(value);
	          }

	          return value;
	        });

	        var bar_ctx = document.getElementById('chart' + _this.props.id).getContext('2d');
	        var gradient = bar_ctx.createLinearGradient(0, 0, 0, 500);
	        var color = metric.color;

	        gradient.addColorStop(0, 'rgba(' + color[0] + ', ' + color[1] + ', ' + color[2] + ', 0.5)'); // show this color at 0%;
	        gradient.addColorStop(0.5, 'rgba(' + color[0] + ', ' + color[1] + ', ' + color[2] + ', 0.25)'); // show this color at 50%;
	        gradient.addColorStop(1, 'rgba(' + color[0] + ', ' + color[1] + ', ' + color[2] + ', 0)'); // show this color at 100%;

	        datasets.push({
	          backgroundColor: gradient, // Utils.getColor(metric.color, 0.5),
	          borderColor: Utils.getColor(metric.color, 1),
	          pointBackgroundColor: Utils.getColor(color, 1),
	          pointBorderColor: 'rgba(255, 255, 255, 0)',
	          pointHoverBorderColor: 'rgb(255, 255, 255)',
	          pointBorderWidth: 2,
	          pointHoverBorderWidth: 3,
	          data: values,
	          label: metric.name,
	          lineTension: 0.5,
	          pointRadius: 4
	        });
	      });

	      var lineChart = _chart2.default.controllers.line.prototype.draw;

	      _chart2.default.helpers.extend(_chart2.default.controllers.line.prototype, {
	        draw: function draw() {
	          lineChart.apply(this, arguments);

	          var chart = this.chart;
	          var ctx = chart.chart.ctx;

	          var lineStart = chart.scales['x-axis-0'].left;
	          var lineEnd = lineStart + chart.scales['x-axis-0'].width;

	          chart.config.data.budgets.forEach(function (budget) {
	            var metric = objectPath.get(_Constants2.default.metrics, budget.metric);
	            var value = budget.max || budget.min;

	            if (value) {
	              if (typeof metric.transform === 'function') {
	                value = metric.transform(value);
	              }

	              var yValue = chart.scales['y-axis-0'].getPixelForValue(value);

	              ctx.save();
	              ctx.beginPath();
	              ctx.moveTo(lineStart, yValue);
	              ctx.strokeStyle = '#ff0000';
	              ctx.lineTo(lineEnd, yValue);
	              ctx.stroke();

	              ctx.restore();
	            }
	          });
	        }
	      });

	      var labels = timestamps.map(function (timestamp) {
	        return timestamp * 1000;
	      });
	      var target = document.getElementById('chart' + _this.props.id);
	      /* eslint-disable no-new */
	      new _chart2.default(target, {
	        type: 'line',
	        data: {
	          labels: labels,
	          datasets: datasets,
	          budgets: _this.props.budgets
	        },
	        options: {
	          onClick: _this.props.onClick,
	          scales: {
	            xAxes: [{
	              type: 'time',
	              time: {
	                displayFormats: {
	                  unit: 'month'
	                },
	                min: labels[0],
	                max: labels[labels.length - 1]
	              },
	              gridLines: {
	                color: "rgba(0, 0, 0, 0)"
	              }
	            }],
	            yAxes: [{
	              ticks: {
	                beginAtZero: true,
	                max: _this.props.maxValue
	              },
	              gridLines: {
	                color: "rgba(0, 0, 0, 0)"
	              }
	            }]
	          },
	          tooltips: {
	            enabled: true,
	            mode: 'label',
	            backgroundColor: 'rgba(255, 255, 255, 0.8)',
	            titleFontColor: 'rgb(0, 0, 0)',
	            bodyFontColor: 'rgb(0, 0, 0)',
	            callbacks: {
	              title: function title(tooltipItems, data) {
	                var date = new Date(tooltipItems[0].xLabel);
	                var year = date.getFullYear();
	                var month = date.getMonth() + 1;
	                var day = date.getDate();
	                var hours = date.getHours();
	                var minutes = date.getMinutes();
	                var seconds = date.getSeconds();

	                return day + '/' + month + '/' + year + ' @ ' + hours + ':' + minutes + ':' + seconds;
	              }
	            },
	            position: 'nearest'
	          }
	        }
	      });
	      /* eslint-enable no-new */
	    }, _temp), _possibleConstructorReturn(_this, _ret);
	  }

	  _createClass(Chart, [{
	    key: 'componentDidMount',
	    value: function componentDidMount() {
	      this._initChart();
	    }
	  }, {
	    key: 'componentDidUpdate',
	    value: function componentDidUpdate() {
	      this._initChart();
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _props = this.props,
	          footNote = _props.footNote,
	          results = _props.results,
	          id = _props.id;

	      var placeholderClass = Object.keys(results) < 2 ? ' c-Chart--placeholder' : '';

	      return _react2.default.createElement(
	        'div',
	        { className: 'c-Chart' + placeholderClass },
	        _react2.default.createElement('canvas', { id: 'chart' + id, width: '400', height: '250' }),
	        footNote && _react2.default.createElement(
	          'p',
	          { className: 'c-Chart__footer' },
	          footNote
	        )
	      );
	    }
	  }]);

	  return Chart;
	}(_react2.default.Component);

	exports.default = Chart;

/***/ }),
/* 23 */
/***/ (function(module, exports, __webpack_require__) {

	/*!
	 * Chart.js v2.8.0
	 * https://www.chartjs.org
	 * (c) 2019 Chart.js Contributors
	 * Released under the MIT License
	 */
	(function (global, factory) {
	 true ? module.exports = factory(function() { try { return __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"moment\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())); } catch(e) { } }()) :
	typeof define === 'function' && define.amd ? define(['require'], function(require) { return factory(function() { try { return require('moment'); } catch(e) { } }()); }) :
	(global.Chart = factory(global.moment));
	}(this, (function (moment) { 'use strict';

	moment = moment && moment.hasOwnProperty('default') ? moment['default'] : moment;

	/* MIT license */

	var conversions = {
	  rgb2hsl: rgb2hsl,
	  rgb2hsv: rgb2hsv,
	  rgb2hwb: rgb2hwb,
	  rgb2cmyk: rgb2cmyk,
	  rgb2keyword: rgb2keyword,
	  rgb2xyz: rgb2xyz,
	  rgb2lab: rgb2lab,
	  rgb2lch: rgb2lch,

	  hsl2rgb: hsl2rgb,
	  hsl2hsv: hsl2hsv,
	  hsl2hwb: hsl2hwb,
	  hsl2cmyk: hsl2cmyk,
	  hsl2keyword: hsl2keyword,

	  hsv2rgb: hsv2rgb,
	  hsv2hsl: hsv2hsl,
	  hsv2hwb: hsv2hwb,
	  hsv2cmyk: hsv2cmyk,
	  hsv2keyword: hsv2keyword,

	  hwb2rgb: hwb2rgb,
	  hwb2hsl: hwb2hsl,
	  hwb2hsv: hwb2hsv,
	  hwb2cmyk: hwb2cmyk,
	  hwb2keyword: hwb2keyword,

	  cmyk2rgb: cmyk2rgb,
	  cmyk2hsl: cmyk2hsl,
	  cmyk2hsv: cmyk2hsv,
	  cmyk2hwb: cmyk2hwb,
	  cmyk2keyword: cmyk2keyword,

	  keyword2rgb: keyword2rgb,
	  keyword2hsl: keyword2hsl,
	  keyword2hsv: keyword2hsv,
	  keyword2hwb: keyword2hwb,
	  keyword2cmyk: keyword2cmyk,
	  keyword2lab: keyword2lab,
	  keyword2xyz: keyword2xyz,

	  xyz2rgb: xyz2rgb,
	  xyz2lab: xyz2lab,
	  xyz2lch: xyz2lch,

	  lab2xyz: lab2xyz,
	  lab2rgb: lab2rgb,
	  lab2lch: lab2lch,

	  lch2lab: lch2lab,
	  lch2xyz: lch2xyz,
	  lch2rgb: lch2rgb
	};


	function rgb2hsl(rgb) {
	  var r = rgb[0]/255,
	      g = rgb[1]/255,
	      b = rgb[2]/255,
	      min = Math.min(r, g, b),
	      max = Math.max(r, g, b),
	      delta = max - min,
	      h, s, l;

	  if (max == min)
	    h = 0;
	  else if (r == max)
	    h = (g - b) / delta;
	  else if (g == max)
	    h = 2 + (b - r) / delta;
	  else if (b == max)
	    h = 4 + (r - g)/ delta;

	  h = Math.min(h * 60, 360);

	  if (h < 0)
	    h += 360;

	  l = (min + max) / 2;

	  if (max == min)
	    s = 0;
	  else if (l <= 0.5)
	    s = delta / (max + min);
	  else
	    s = delta / (2 - max - min);

	  return [h, s * 100, l * 100];
	}

	function rgb2hsv(rgb) {
	  var r = rgb[0],
	      g = rgb[1],
	      b = rgb[2],
	      min = Math.min(r, g, b),
	      max = Math.max(r, g, b),
	      delta = max - min,
	      h, s, v;

	  if (max == 0)
	    s = 0;
	  else
	    s = (delta/max * 1000)/10;

	  if (max == min)
	    h = 0;
	  else if (r == max)
	    h = (g - b) / delta;
	  else if (g == max)
	    h = 2 + (b - r) / delta;
	  else if (b == max)
	    h = 4 + (r - g) / delta;

	  h = Math.min(h * 60, 360);

	  if (h < 0)
	    h += 360;

	  v = ((max / 255) * 1000) / 10;

	  return [h, s, v];
	}

	function rgb2hwb(rgb) {
	  var r = rgb[0],
	      g = rgb[1],
	      b = rgb[2],
	      h = rgb2hsl(rgb)[0],
	      w = 1/255 * Math.min(r, Math.min(g, b)),
	      b = 1 - 1/255 * Math.max(r, Math.max(g, b));

	  return [h, w * 100, b * 100];
	}

	function rgb2cmyk(rgb) {
	  var r = rgb[0] / 255,
	      g = rgb[1] / 255,
	      b = rgb[2] / 255,
	      c, m, y, k;

	  k = Math.min(1 - r, 1 - g, 1 - b);
	  c = (1 - r - k) / (1 - k) || 0;
	  m = (1 - g - k) / (1 - k) || 0;
	  y = (1 - b - k) / (1 - k) || 0;
	  return [c * 100, m * 100, y * 100, k * 100];
	}

	function rgb2keyword(rgb) {
	  return reverseKeywords[JSON.stringify(rgb)];
	}

	function rgb2xyz(rgb) {
	  var r = rgb[0] / 255,
	      g = rgb[1] / 255,
	      b = rgb[2] / 255;

	  // assume sRGB
	  r = r > 0.04045 ? Math.pow(((r + 0.055) / 1.055), 2.4) : (r / 12.92);
	  g = g > 0.04045 ? Math.pow(((g + 0.055) / 1.055), 2.4) : (g / 12.92);
	  b = b > 0.04045 ? Math.pow(((b + 0.055) / 1.055), 2.4) : (b / 12.92);

	  var x = (r * 0.4124) + (g * 0.3576) + (b * 0.1805);
	  var y = (r * 0.2126) + (g * 0.7152) + (b * 0.0722);
	  var z = (r * 0.0193) + (g * 0.1192) + (b * 0.9505);

	  return [x * 100, y *100, z * 100];
	}

	function rgb2lab(rgb) {
	  var xyz = rgb2xyz(rgb),
	        x = xyz[0],
	        y = xyz[1],
	        z = xyz[2],
	        l, a, b;

	  x /= 95.047;
	  y /= 100;
	  z /= 108.883;

	  x = x > 0.008856 ? Math.pow(x, 1/3) : (7.787 * x) + (16 / 116);
	  y = y > 0.008856 ? Math.pow(y, 1/3) : (7.787 * y) + (16 / 116);
	  z = z > 0.008856 ? Math.pow(z, 1/3) : (7.787 * z) + (16 / 116);

	  l = (116 * y) - 16;
	  a = 500 * (x - y);
	  b = 200 * (y - z);

	  return [l, a, b];
	}

	function rgb2lch(args) {
	  return lab2lch(rgb2lab(args));
	}

	function hsl2rgb(hsl) {
	  var h = hsl[0] / 360,
	      s = hsl[1] / 100,
	      l = hsl[2] / 100,
	      t1, t2, t3, rgb, val;

	  if (s == 0) {
	    val = l * 255;
	    return [val, val, val];
	  }

	  if (l < 0.5)
	    t2 = l * (1 + s);
	  else
	    t2 = l + s - l * s;
	  t1 = 2 * l - t2;

	  rgb = [0, 0, 0];
	  for (var i = 0; i < 3; i++) {
	    t3 = h + 1 / 3 * - (i - 1);
	    t3 < 0 && t3++;
	    t3 > 1 && t3--;

	    if (6 * t3 < 1)
	      val = t1 + (t2 - t1) * 6 * t3;
	    else if (2 * t3 < 1)
	      val = t2;
	    else if (3 * t3 < 2)
	      val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;
	    else
	      val = t1;

	    rgb[i] = val * 255;
	  }

	  return rgb;
	}

	function hsl2hsv(hsl) {
	  var h = hsl[0],
	      s = hsl[1] / 100,
	      l = hsl[2] / 100,
	      sv, v;

	  if(l === 0) {
	      // no need to do calc on black
	      // also avoids divide by 0 error
	      return [0, 0, 0];
	  }

	  l *= 2;
	  s *= (l <= 1) ? l : 2 - l;
	  v = (l + s) / 2;
	  sv = (2 * s) / (l + s);
	  return [h, sv * 100, v * 100];
	}

	function hsl2hwb(args) {
	  return rgb2hwb(hsl2rgb(args));
	}

	function hsl2cmyk(args) {
	  return rgb2cmyk(hsl2rgb(args));
	}

	function hsl2keyword(args) {
	  return rgb2keyword(hsl2rgb(args));
	}


	function hsv2rgb(hsv) {
	  var h = hsv[0] / 60,
	      s = hsv[1] / 100,
	      v = hsv[2] / 100,
	      hi = Math.floor(h) % 6;

	  var f = h - Math.floor(h),
	      p = 255 * v * (1 - s),
	      q = 255 * v * (1 - (s * f)),
	      t = 255 * v * (1 - (s * (1 - f))),
	      v = 255 * v;

	  switch(hi) {
	    case 0:
	      return [v, t, p];
	    case 1:
	      return [q, v, p];
	    case 2:
	      return [p, v, t];
	    case 3:
	      return [p, q, v];
	    case 4:
	      return [t, p, v];
	    case 5:
	      return [v, p, q];
	  }
	}

	function hsv2hsl(hsv) {
	  var h = hsv[0],
	      s = hsv[1] / 100,
	      v = hsv[2] / 100,
	      sl, l;

	  l = (2 - s) * v;
	  sl = s * v;
	  sl /= (l <= 1) ? l : 2 - l;
	  sl = sl || 0;
	  l /= 2;
	  return [h, sl * 100, l * 100];
	}

	function hsv2hwb(args) {
	  return rgb2hwb(hsv2rgb(args))
	}

	function hsv2cmyk(args) {
	  return rgb2cmyk(hsv2rgb(args));
	}

	function hsv2keyword(args) {
	  return rgb2keyword(hsv2rgb(args));
	}

	// http://dev.w3.org/csswg/css-color/#hwb-to-rgb
	function hwb2rgb(hwb) {
	  var h = hwb[0] / 360,
	      wh = hwb[1] / 100,
	      bl = hwb[2] / 100,
	      ratio = wh + bl,
	      i, v, f, n;

	  // wh + bl cant be > 1
	  if (ratio > 1) {
	    wh /= ratio;
	    bl /= ratio;
	  }

	  i = Math.floor(6 * h);
	  v = 1 - bl;
	  f = 6 * h - i;
	  if ((i & 0x01) != 0) {
	    f = 1 - f;
	  }
	  n = wh + f * (v - wh);  // linear interpolation

	  switch (i) {
	    default:
	    case 6:
	    case 0: r = v; g = n; b = wh; break;
	    case 1: r = n; g = v; b = wh; break;
	    case 2: r = wh; g = v; b = n; break;
	    case 3: r = wh; g = n; b = v; break;
	    case 4: r = n; g = wh; b = v; break;
	    case 5: r = v; g = wh; b = n; break;
	  }

	  return [r * 255, g * 255, b * 255];
	}

	function hwb2hsl(args) {
	  return rgb2hsl(hwb2rgb(args));
	}

	function hwb2hsv(args) {
	  return rgb2hsv(hwb2rgb(args));
	}

	function hwb2cmyk(args) {
	  return rgb2cmyk(hwb2rgb(args));
	}

	function hwb2keyword(args) {
	  return rgb2keyword(hwb2rgb(args));
	}

	function cmyk2rgb(cmyk) {
	  var c = cmyk[0] / 100,
	      m = cmyk[1] / 100,
	      y = cmyk[2] / 100,
	      k = cmyk[3] / 100,
	      r, g, b;

	  r = 1 - Math.min(1, c * (1 - k) + k);
	  g = 1 - Math.min(1, m * (1 - k) + k);
	  b = 1 - Math.min(1, y * (1 - k) + k);
	  return [r * 255, g * 255, b * 255];
	}

	function cmyk2hsl(args) {
	  return rgb2hsl(cmyk2rgb(args));
	}

	function cmyk2hsv(args) {
	  return rgb2hsv(cmyk2rgb(args));
	}

	function cmyk2hwb(args) {
	  return rgb2hwb(cmyk2rgb(args));
	}

	function cmyk2keyword(args) {
	  return rgb2keyword(cmyk2rgb(args));
	}


	function xyz2rgb(xyz) {
	  var x = xyz[0] / 100,
	      y = xyz[1] / 100,
	      z = xyz[2] / 100,
	      r, g, b;

	  r = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);
	  g = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);
	  b = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);

	  // assume sRGB
	  r = r > 0.0031308 ? ((1.055 * Math.pow(r, 1.0 / 2.4)) - 0.055)
	    : r = (r * 12.92);

	  g = g > 0.0031308 ? ((1.055 * Math.pow(g, 1.0 / 2.4)) - 0.055)
	    : g = (g * 12.92);

	  b = b > 0.0031308 ? ((1.055 * Math.pow(b, 1.0 / 2.4)) - 0.055)
	    : b = (b * 12.92);

	  r = Math.min(Math.max(0, r), 1);
	  g = Math.min(Math.max(0, g), 1);
	  b = Math.min(Math.max(0, b), 1);

	  return [r * 255, g * 255, b * 255];
	}

	function xyz2lab(xyz) {
	  var x = xyz[0],
	      y = xyz[1],
	      z = xyz[2],
	      l, a, b;

	  x /= 95.047;
	  y /= 100;
	  z /= 108.883;

	  x = x > 0.008856 ? Math.pow(x, 1/3) : (7.787 * x) + (16 / 116);
	  y = y > 0.008856 ? Math.pow(y, 1/3) : (7.787 * y) + (16 / 116);
	  z = z > 0.008856 ? Math.pow(z, 1/3) : (7.787 * z) + (16 / 116);

	  l = (116 * y) - 16;
	  a = 500 * (x - y);
	  b = 200 * (y - z);

	  return [l, a, b];
	}

	function xyz2lch(args) {
	  return lab2lch(xyz2lab(args));
	}

	function lab2xyz(lab) {
	  var l = lab[0],
	      a = lab[1],
	      b = lab[2],
	      x, y, z, y2;

	  if (l <= 8) {
	    y = (l * 100) / 903.3;
	    y2 = (7.787 * (y / 100)) + (16 / 116);
	  } else {
	    y = 100 * Math.pow((l + 16) / 116, 3);
	    y2 = Math.pow(y / 100, 1/3);
	  }

	  x = x / 95.047 <= 0.008856 ? x = (95.047 * ((a / 500) + y2 - (16 / 116))) / 7.787 : 95.047 * Math.pow((a / 500) + y2, 3);

	  z = z / 108.883 <= 0.008859 ? z = (108.883 * (y2 - (b / 200) - (16 / 116))) / 7.787 : 108.883 * Math.pow(y2 - (b / 200), 3);

	  return [x, y, z];
	}

	function lab2lch(lab) {
	  var l = lab[0],
	      a = lab[1],
	      b = lab[2],
	      hr, h, c;

	  hr = Math.atan2(b, a);
	  h = hr * 360 / 2 / Math.PI;
	  if (h < 0) {
	    h += 360;
	  }
	  c = Math.sqrt(a * a + b * b);
	  return [l, c, h];
	}

	function lab2rgb(args) {
	  return xyz2rgb(lab2xyz(args));
	}

	function lch2lab(lch) {
	  var l = lch[0],
	      c = lch[1],
	      h = lch[2],
	      a, b, hr;

	  hr = h / 360 * 2 * Math.PI;
	  a = c * Math.cos(hr);
	  b = c * Math.sin(hr);
	  return [l, a, b];
	}

	function lch2xyz(args) {
	  return lab2xyz(lch2lab(args));
	}

	function lch2rgb(args) {
	  return lab2rgb(lch2lab(args));
	}

	function keyword2rgb(keyword) {
	  return cssKeywords[keyword];
	}

	function keyword2hsl(args) {
	  return rgb2hsl(keyword2rgb(args));
	}

	function keyword2hsv(args) {
	  return rgb2hsv(keyword2rgb(args));
	}

	function keyword2hwb(args) {
	  return rgb2hwb(keyword2rgb(args));
	}

	function keyword2cmyk(args) {
	  return rgb2cmyk(keyword2rgb(args));
	}

	function keyword2lab(args) {
	  return rgb2lab(keyword2rgb(args));
	}

	function keyword2xyz(args) {
	  return rgb2xyz(keyword2rgb(args));
	}

	var cssKeywords = {
	  aliceblue:  [240,248,255],
	  antiquewhite: [250,235,215],
	  aqua: [0,255,255],
	  aquamarine: [127,255,212],
	  azure:  [240,255,255],
	  beige:  [245,245,220],
	  bisque: [255,228,196],
	  black:  [0,0,0],
	  blanchedalmond: [255,235,205],
	  blue: [0,0,255],
	  blueviolet: [138,43,226],
	  brown:  [165,42,42],
	  burlywood:  [222,184,135],
	  cadetblue:  [95,158,160],
	  chartreuse: [127,255,0],
	  chocolate:  [210,105,30],
	  coral:  [255,127,80],
	  cornflowerblue: [100,149,237],
	  cornsilk: [255,248,220],
	  crimson:  [220,20,60],
	  cyan: [0,255,255],
	  darkblue: [0,0,139],
	  darkcyan: [0,139,139],
	  darkgoldenrod:  [184,134,11],
	  darkgray: [169,169,169],
	  darkgreen:  [0,100,0],
	  darkgrey: [169,169,169],
	  darkkhaki:  [189,183,107],
	  darkmagenta:  [139,0,139],
	  darkolivegreen: [85,107,47],
	  darkorange: [255,140,0],
	  darkorchid: [153,50,204],
	  darkred:  [139,0,0],
	  darksalmon: [233,150,122],
	  darkseagreen: [143,188,143],
	  darkslateblue:  [72,61,139],
	  darkslategray:  [47,79,79],
	  darkslategrey:  [47,79,79],
	  darkturquoise:  [0,206,209],
	  darkviolet: [148,0,211],
	  deeppink: [255,20,147],
	  deepskyblue:  [0,191,255],
	  dimgray:  [105,105,105],
	  dimgrey:  [105,105,105],
	  dodgerblue: [30,144,255],
	  firebrick:  [178,34,34],
	  floralwhite:  [255,250,240],
	  forestgreen:  [34,139,34],
	  fuchsia:  [255,0,255],
	  gainsboro:  [220,220,220],
	  ghostwhite: [248,248,255],
	  gold: [255,215,0],
	  goldenrod:  [218,165,32],
	  gray: [128,128,128],
	  green:  [0,128,0],
	  greenyellow:  [173,255,47],
	  grey: [128,128,128],
	  honeydew: [240,255,240],
	  hotpink:  [255,105,180],
	  indianred:  [205,92,92],
	  indigo: [75,0,130],
	  ivory:  [255,255,240],
	  khaki:  [240,230,140],
	  lavender: [230,230,250],
	  lavenderblush:  [255,240,245],
	  lawngreen:  [124,252,0],
	  lemonchiffon: [255,250,205],
	  lightblue:  [173,216,230],
	  lightcoral: [240,128,128],
	  lightcyan:  [224,255,255],
	  lightgoldenrodyellow: [250,250,210],
	  lightgray:  [211,211,211],
	  lightgreen: [144,238,144],
	  lightgrey:  [211,211,211],
	  lightpink:  [255,182,193],
	  lightsalmon:  [255,160,122],
	  lightseagreen:  [32,178,170],
	  lightskyblue: [135,206,250],
	  lightslategray: [119,136,153],
	  lightslategrey: [119,136,153],
	  lightsteelblue: [176,196,222],
	  lightyellow:  [255,255,224],
	  lime: [0,255,0],
	  limegreen:  [50,205,50],
	  linen:  [250,240,230],
	  magenta:  [255,0,255],
	  maroon: [128,0,0],
	  mediumaquamarine: [102,205,170],
	  mediumblue: [0,0,205],
	  mediumorchid: [186,85,211],
	  mediumpurple: [147,112,219],
	  mediumseagreen: [60,179,113],
	  mediumslateblue:  [123,104,238],
	  mediumspringgreen:  [0,250,154],
	  mediumturquoise:  [72,209,204],
	  mediumvioletred:  [199,21,133],
	  midnightblue: [25,25,112],
	  mintcream:  [245,255,250],
	  mistyrose:  [255,228,225],
	  moccasin: [255,228,181],
	  navajowhite:  [255,222,173],
	  navy: [0,0,128],
	  oldlace:  [253,245,230],
	  olive:  [128,128,0],
	  olivedrab:  [107,142,35],
	  orange: [255,165,0],
	  orangered:  [255,69,0],
	  orchid: [218,112,214],
	  palegoldenrod:  [238,232,170],
	  palegreen:  [152,251,152],
	  paleturquoise:  [175,238,238],
	  palevioletred:  [219,112,147],
	  papayawhip: [255,239,213],
	  peachpuff:  [255,218,185],
	  peru: [205,133,63],
	  pink: [255,192,203],
	  plum: [221,160,221],
	  powderblue: [176,224,230],
	  purple: [128,0,128],
	  rebeccapurple: [102, 51, 153],
	  red:  [255,0,0],
	  rosybrown:  [188,143,143],
	  royalblue:  [65,105,225],
	  saddlebrown:  [139,69,19],
	  salmon: [250,128,114],
	  sandybrown: [244,164,96],
	  seagreen: [46,139,87],
	  seashell: [255,245,238],
	  sienna: [160,82,45],
	  silver: [192,192,192],
	  skyblue:  [135,206,235],
	  slateblue:  [106,90,205],
	  slategray:  [112,128,144],
	  slategrey:  [112,128,144],
	  snow: [255,250,250],
	  springgreen:  [0,255,127],
	  steelblue:  [70,130,180],
	  tan:  [210,180,140],
	  teal: [0,128,128],
	  thistle:  [216,191,216],
	  tomato: [255,99,71],
	  turquoise:  [64,224,208],
	  violet: [238,130,238],
	  wheat:  [245,222,179],
	  white:  [255,255,255],
	  whitesmoke: [245,245,245],
	  yellow: [255,255,0],
	  yellowgreen:  [154,205,50]
	};

	var reverseKeywords = {};
	for (var key in cssKeywords) {
	  reverseKeywords[JSON.stringify(cssKeywords[key])] = key;
	}

	var convert = function() {
	   return new Converter();
	};

	for (var func in conversions) {
	  // export Raw versions
	  convert[func + "Raw"] =  (function(func) {
	    // accept array or plain args
	    return function(arg) {
	      if (typeof arg == "number")
	        arg = Array.prototype.slice.call(arguments);
	      return conversions[func](arg);
	    }
	  })(func);

	  var pair = /(\w+)2(\w+)/.exec(func),
	      from = pair[1],
	      to = pair[2];

	  // export rgb2hsl and ["rgb"]["hsl"]
	  convert[from] = convert[from] || {};

	  convert[from][to] = convert[func] = (function(func) { 
	    return function(arg) {
	      if (typeof arg == "number")
	        arg = Array.prototype.slice.call(arguments);
	      
	      var val = conversions[func](arg);
	      if (typeof val == "string" || val === undefined)
	        return val; // keyword

	      for (var i = 0; i < val.length; i++)
	        val[i] = Math.round(val[i]);
	      return val;
	    }
	  })(func);
	}


	/* Converter does lazy conversion and caching */
	var Converter = function() {
	   this.convs = {};
	};

	/* Either get the values for a space or
	  set the values for a space, depending on args */
	Converter.prototype.routeSpace = function(space, args) {
	   var values = args[0];
	   if (values === undefined) {
	      // color.rgb()
	      return this.getValues(space);
	   }
	   // color.rgb(10, 10, 10)
	   if (typeof values == "number") {
	      values = Array.prototype.slice.call(args);        
	   }

	   return this.setValues(space, values);
	};
	  
	/* Set the values for a space, invalidating cache */
	Converter.prototype.setValues = function(space, values) {
	   this.space = space;
	   this.convs = {};
	   this.convs[space] = values;
	   return this;
	};

	/* Get the values for a space. If there's already
	  a conversion for the space, fetch it, otherwise
	  compute it */
	Converter.prototype.getValues = function(space) {
	   var vals = this.convs[space];
	   if (!vals) {
	      var fspace = this.space,
	          from = this.convs[fspace];
	      vals = convert[fspace][space](from);

	      this.convs[space] = vals;
	   }
	  return vals;
	};

	["rgb", "hsl", "hsv", "cmyk", "keyword"].forEach(function(space) {
	   Converter.prototype[space] = function(vals) {
	      return this.routeSpace(space, arguments);
	   };
	});

	var colorConvert = convert;

	var colorName = {
		"aliceblue": [240, 248, 255],
		"antiquewhite": [250, 235, 215],
		"aqua": [0, 255, 255],
		"aquamarine": [127, 255, 212],
		"azure": [240, 255, 255],
		"beige": [245, 245, 220],
		"bisque": [255, 228, 196],
		"black": [0, 0, 0],
		"blanchedalmond": [255, 235, 205],
		"blue": [0, 0, 255],
		"blueviolet": [138, 43, 226],
		"brown": [165, 42, 42],
		"burlywood": [222, 184, 135],
		"cadetblue": [95, 158, 160],
		"chartreuse": [127, 255, 0],
		"chocolate": [210, 105, 30],
		"coral": [255, 127, 80],
		"cornflowerblue": [100, 149, 237],
		"cornsilk": [255, 248, 220],
		"crimson": [220, 20, 60],
		"cyan": [0, 255, 255],
		"darkblue": [0, 0, 139],
		"darkcyan": [0, 139, 139],
		"darkgoldenrod": [184, 134, 11],
		"darkgray": [169, 169, 169],
		"darkgreen": [0, 100, 0],
		"darkgrey": [169, 169, 169],
		"darkkhaki": [189, 183, 107],
		"darkmagenta": [139, 0, 139],
		"darkolivegreen": [85, 107, 47],
		"darkorange": [255, 140, 0],
		"darkorchid": [153, 50, 204],
		"darkred": [139, 0, 0],
		"darksalmon": [233, 150, 122],
		"darkseagreen": [143, 188, 143],
		"darkslateblue": [72, 61, 139],
		"darkslategray": [47, 79, 79],
		"darkslategrey": [47, 79, 79],
		"darkturquoise": [0, 206, 209],
		"darkviolet": [148, 0, 211],
		"deeppink": [255, 20, 147],
		"deepskyblue": [0, 191, 255],
		"dimgray": [105, 105, 105],
		"dimgrey": [105, 105, 105],
		"dodgerblue": [30, 144, 255],
		"firebrick": [178, 34, 34],
		"floralwhite": [255, 250, 240],
		"forestgreen": [34, 139, 34],
		"fuchsia": [255, 0, 255],
		"gainsboro": [220, 220, 220],
		"ghostwhite": [248, 248, 255],
		"gold": [255, 215, 0],
		"goldenrod": [218, 165, 32],
		"gray": [128, 128, 128],
		"green": [0, 128, 0],
		"greenyellow": [173, 255, 47],
		"grey": [128, 128, 128],
		"honeydew": [240, 255, 240],
		"hotpink": [255, 105, 180],
		"indianred": [205, 92, 92],
		"indigo": [75, 0, 130],
		"ivory": [255, 255, 240],
		"khaki": [240, 230, 140],
		"lavender": [230, 230, 250],
		"lavenderblush": [255, 240, 245],
		"lawngreen": [124, 252, 0],
		"lemonchiffon": [255, 250, 205],
		"lightblue": [173, 216, 230],
		"lightcoral": [240, 128, 128],
		"lightcyan": [224, 255, 255],
		"lightgoldenrodyellow": [250, 250, 210],
		"lightgray": [211, 211, 211],
		"lightgreen": [144, 238, 144],
		"lightgrey": [211, 211, 211],
		"lightpink": [255, 182, 193],
		"lightsalmon": [255, 160, 122],
		"lightseagreen": [32, 178, 170],
		"lightskyblue": [135, 206, 250],
		"lightslategray": [119, 136, 153],
		"lightslategrey": [119, 136, 153],
		"lightsteelblue": [176, 196, 222],
		"lightyellow": [255, 255, 224],
		"lime": [0, 255, 0],
		"limegreen": [50, 205, 50],
		"linen": [250, 240, 230],
		"magenta": [255, 0, 255],
		"maroon": [128, 0, 0],
		"mediumaquamarine": [102, 205, 170],
		"mediumblue": [0, 0, 205],
		"mediumorchid": [186, 85, 211],
		"mediumpurple": [147, 112, 219],
		"mediumseagreen": [60, 179, 113],
		"mediumslateblue": [123, 104, 238],
		"mediumspringgreen": [0, 250, 154],
		"mediumturquoise": [72, 209, 204],
		"mediumvioletred": [199, 21, 133],
		"midnightblue": [25, 25, 112],
		"mintcream": [245, 255, 250],
		"mistyrose": [255, 228, 225],
		"moccasin": [255, 228, 181],
		"navajowhite": [255, 222, 173],
		"navy": [0, 0, 128],
		"oldlace": [253, 245, 230],
		"olive": [128, 128, 0],
		"olivedrab": [107, 142, 35],
		"orange": [255, 165, 0],
		"orangered": [255, 69, 0],
		"orchid": [218, 112, 214],
		"palegoldenrod": [238, 232, 170],
		"palegreen": [152, 251, 152],
		"paleturquoise": [175, 238, 238],
		"palevioletred": [219, 112, 147],
		"papayawhip": [255, 239, 213],
		"peachpuff": [255, 218, 185],
		"peru": [205, 133, 63],
		"pink": [255, 192, 203],
		"plum": [221, 160, 221],
		"powderblue": [176, 224, 230],
		"purple": [128, 0, 128],
		"rebeccapurple": [102, 51, 153],
		"red": [255, 0, 0],
		"rosybrown": [188, 143, 143],
		"royalblue": [65, 105, 225],
		"saddlebrown": [139, 69, 19],
		"salmon": [250, 128, 114],
		"sandybrown": [244, 164, 96],
		"seagreen": [46, 139, 87],
		"seashell": [255, 245, 238],
		"sienna": [160, 82, 45],
		"silver": [192, 192, 192],
		"skyblue": [135, 206, 235],
		"slateblue": [106, 90, 205],
		"slategray": [112, 128, 144],
		"slategrey": [112, 128, 144],
		"snow": [255, 250, 250],
		"springgreen": [0, 255, 127],
		"steelblue": [70, 130, 180],
		"tan": [210, 180, 140],
		"teal": [0, 128, 128],
		"thistle": [216, 191, 216],
		"tomato": [255, 99, 71],
		"turquoise": [64, 224, 208],
		"violet": [238, 130, 238],
		"wheat": [245, 222, 179],
		"white": [255, 255, 255],
		"whitesmoke": [245, 245, 245],
		"yellow": [255, 255, 0],
		"yellowgreen": [154, 205, 50]
	};

	/* MIT license */


	var colorString = {
	   getRgba: getRgba,
	   getHsla: getHsla,
	   getRgb: getRgb,
	   getHsl: getHsl,
	   getHwb: getHwb,
	   getAlpha: getAlpha,

	   hexString: hexString,
	   rgbString: rgbString,
	   rgbaString: rgbaString,
	   percentString: percentString,
	   percentaString: percentaString,
	   hslString: hslString,
	   hslaString: hslaString,
	   hwbString: hwbString,
	   keyword: keyword
	};

	function getRgba(string) {
	   if (!string) {
	      return;
	   }
	   var abbr =  /^#([a-fA-F0-9]{3,4})$/i,
	       hex =  /^#([a-fA-F0-9]{6}([a-fA-F0-9]{2})?)$/i,
	       rgba = /^rgba?\(\s*([+-]?\d+)\s*,\s*([+-]?\d+)\s*,\s*([+-]?\d+)\s*(?:,\s*([+-]?[\d\.]+)\s*)?\)$/i,
	       per = /^rgba?\(\s*([+-]?[\d\.]+)\%\s*,\s*([+-]?[\d\.]+)\%\s*,\s*([+-]?[\d\.]+)\%\s*(?:,\s*([+-]?[\d\.]+)\s*)?\)$/i,
	       keyword = /(\w+)/;

	   var rgb = [0, 0, 0],
	       a = 1,
	       match = string.match(abbr),
	       hexAlpha = "";
	   if (match) {
	      match = match[1];
	      hexAlpha = match[3];
	      for (var i = 0; i < rgb.length; i++) {
	         rgb[i] = parseInt(match[i] + match[i], 16);
	      }
	      if (hexAlpha) {
	         a = Math.round((parseInt(hexAlpha + hexAlpha, 16) / 255) * 100) / 100;
	      }
	   }
	   else if (match = string.match(hex)) {
	      hexAlpha = match[2];
	      match = match[1];
	      for (var i = 0; i < rgb.length; i++) {
	         rgb[i] = parseInt(match.slice(i * 2, i * 2 + 2), 16);
	      }
	      if (hexAlpha) {
	         a = Math.round((parseInt(hexAlpha, 16) / 255) * 100) / 100;
	      }
	   }
	   else if (match = string.match(rgba)) {
	      for (var i = 0; i < rgb.length; i++) {
	         rgb[i] = parseInt(match[i + 1]);
	      }
	      a = parseFloat(match[4]);
	   }
	   else if (match = string.match(per)) {
	      for (var i = 0; i < rgb.length; i++) {
	         rgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);
	      }
	      a = parseFloat(match[4]);
	   }
	   else if (match = string.match(keyword)) {
	      if (match[1] == "transparent") {
	         return [0, 0, 0, 0];
	      }
	      rgb = colorName[match[1]];
	      if (!rgb) {
	         return;
	      }
	   }

	   for (var i = 0; i < rgb.length; i++) {
	      rgb[i] = scale(rgb[i], 0, 255);
	   }
	   if (!a && a != 0) {
	      a = 1;
	   }
	   else {
	      a = scale(a, 0, 1);
	   }
	   rgb[3] = a;
	   return rgb;
	}

	function getHsla(string) {
	   if (!string) {
	      return;
	   }
	   var hsl = /^hsla?\(\s*([+-]?\d+)(?:deg)?\s*,\s*([+-]?[\d\.]+)%\s*,\s*([+-]?[\d\.]+)%\s*(?:,\s*([+-]?[\d\.]+)\s*)?\)/;
	   var match = string.match(hsl);
	   if (match) {
	      var alpha = parseFloat(match[4]);
	      var h = scale(parseInt(match[1]), 0, 360),
	          s = scale(parseFloat(match[2]), 0, 100),
	          l = scale(parseFloat(match[3]), 0, 100),
	          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);
	      return [h, s, l, a];
	   }
	}

	function getHwb(string) {
	   if (!string) {
	      return;
	   }
	   var hwb = /^hwb\(\s*([+-]?\d+)(?:deg)?\s*,\s*([+-]?[\d\.]+)%\s*,\s*([+-]?[\d\.]+)%\s*(?:,\s*([+-]?[\d\.]+)\s*)?\)/;
	   var match = string.match(hwb);
	   if (match) {
	    var alpha = parseFloat(match[4]);
	      var h = scale(parseInt(match[1]), 0, 360),
	          w = scale(parseFloat(match[2]), 0, 100),
	          b = scale(parseFloat(match[3]), 0, 100),
	          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);
	      return [h, w, b, a];
	   }
	}

	function getRgb(string) {
	   var rgba = getRgba(string);
	   return rgba && rgba.slice(0, 3);
	}

	function getHsl(string) {
	  var hsla = getHsla(string);
	  return hsla && hsla.slice(0, 3);
	}

	function getAlpha(string) {
	   var vals = getRgba(string);
	   if (vals) {
	      return vals[3];
	   }
	   else if (vals = getHsla(string)) {
	      return vals[3];
	   }
	   else if (vals = getHwb(string)) {
	      return vals[3];
	   }
	}

	// generators
	function hexString(rgba, a) {
	   var a = (a !== undefined && rgba.length === 3) ? a : rgba[3];
	   return "#" + hexDouble(rgba[0]) 
	              + hexDouble(rgba[1])
	              + hexDouble(rgba[2])
	              + (
	                 (a >= 0 && a < 1)
	                 ? hexDouble(Math.round(a * 255))
	                 : ""
	              );
	}

	function rgbString(rgba, alpha) {
	   if (alpha < 1 || (rgba[3] && rgba[3] < 1)) {
	      return rgbaString(rgba, alpha);
	   }
	   return "rgb(" + rgba[0] + ", " + rgba[1] + ", " + rgba[2] + ")";
	}

	function rgbaString(rgba, alpha) {
	   if (alpha === undefined) {
	      alpha = (rgba[3] !== undefined ? rgba[3] : 1);
	   }
	   return "rgba(" + rgba[0] + ", " + rgba[1] + ", " + rgba[2]
	           + ", " + alpha + ")";
	}

	function percentString(rgba, alpha) {
	   if (alpha < 1 || (rgba[3] && rgba[3] < 1)) {
	      return percentaString(rgba, alpha);
	   }
	   var r = Math.round(rgba[0]/255 * 100),
	       g = Math.round(rgba[1]/255 * 100),
	       b = Math.round(rgba[2]/255 * 100);

	   return "rgb(" + r + "%, " + g + "%, " + b + "%)";
	}

	function percentaString(rgba, alpha) {
	   var r = Math.round(rgba[0]/255 * 100),
	       g = Math.round(rgba[1]/255 * 100),
	       b = Math.round(rgba[2]/255 * 100);
	   return "rgba(" + r + "%, " + g + "%, " + b + "%, " + (alpha || rgba[3] || 1) + ")";
	}

	function hslString(hsla, alpha) {
	   if (alpha < 1 || (hsla[3] && hsla[3] < 1)) {
	      return hslaString(hsla, alpha);
	   }
	   return "hsl(" + hsla[0] + ", " + hsla[1] + "%, " + hsla[2] + "%)";
	}

	function hslaString(hsla, alpha) {
	   if (alpha === undefined) {
	      alpha = (hsla[3] !== undefined ? hsla[3] : 1);
	   }
	   return "hsla(" + hsla[0] + ", " + hsla[1] + "%, " + hsla[2] + "%, "
	           + alpha + ")";
	}

	// hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax
	// (hwb have alpha optional & 1 is default value)
	function hwbString(hwb, alpha) {
	   if (alpha === undefined) {
	      alpha = (hwb[3] !== undefined ? hwb[3] : 1);
	   }
	   return "hwb(" + hwb[0] + ", " + hwb[1] + "%, " + hwb[2] + "%"
	           + (alpha !== undefined && alpha !== 1 ? ", " + alpha : "") + ")";
	}

	function keyword(rgb) {
	  return reverseNames[rgb.slice(0, 3)];
	}

	// helpers
	function scale(num, min, max) {
	   return Math.min(Math.max(min, num), max);
	}

	function hexDouble(num) {
	  var str = num.toString(16).toUpperCase();
	  return (str.length < 2) ? "0" + str : str;
	}


	//create a list of reverse color names
	var reverseNames = {};
	for (var name in colorName) {
	   reverseNames[colorName[name]] = name;
	}

	/* MIT license */



	var Color = function (obj) {
		if (obj instanceof Color) {
			return obj;
		}
		if (!(this instanceof Color)) {
			return new Color(obj);
		}

		this.valid = false;
		this.values = {
			rgb: [0, 0, 0],
			hsl: [0, 0, 0],
			hsv: [0, 0, 0],
			hwb: [0, 0, 0],
			cmyk: [0, 0, 0, 0],
			alpha: 1
		};

		// parse Color() argument
		var vals;
		if (typeof obj === 'string') {
			vals = colorString.getRgba(obj);
			if (vals) {
				this.setValues('rgb', vals);
			} else if (vals = colorString.getHsla(obj)) {
				this.setValues('hsl', vals);
			} else if (vals = colorString.getHwb(obj)) {
				this.setValues('hwb', vals);
			}
		} else if (typeof obj === 'object') {
			vals = obj;
			if (vals.r !== undefined || vals.red !== undefined) {
				this.setValues('rgb', vals);
			} else if (vals.l !== undefined || vals.lightness !== undefined) {
				this.setValues('hsl', vals);
			} else if (vals.v !== undefined || vals.value !== undefined) {
				this.setValues('hsv', vals);
			} else if (vals.w !== undefined || vals.whiteness !== undefined) {
				this.setValues('hwb', vals);
			} else if (vals.c !== undefined || vals.cyan !== undefined) {
				this.setValues('cmyk', vals);
			}
		}
	};

	Color.prototype = {
		isValid: function () {
			return this.valid;
		},
		rgb: function () {
			return this.setSpace('rgb', arguments);
		},
		hsl: function () {
			return this.setSpace('hsl', arguments);
		},
		hsv: function () {
			return this.setSpace('hsv', arguments);
		},
		hwb: function () {
			return this.setSpace('hwb', arguments);
		},
		cmyk: function () {
			return this.setSpace('cmyk', arguments);
		},

		rgbArray: function () {
			return this.values.rgb;
		},
		hslArray: function () {
			return this.values.hsl;
		},
		hsvArray: function () {
			return this.values.hsv;
		},
		hwbArray: function () {
			var values = this.values;
			if (values.alpha !== 1) {
				return values.hwb.concat([values.alpha]);
			}
			return values.hwb;
		},
		cmykArray: function () {
			return this.values.cmyk;
		},
		rgbaArray: function () {
			var values = this.values;
			return values.rgb.concat([values.alpha]);
		},
		hslaArray: function () {
			var values = this.values;
			return values.hsl.concat([values.alpha]);
		},
		alpha: function (val) {
			if (val === undefined) {
				return this.values.alpha;
			}
			this.setValues('alpha', val);
			return this;
		},

		red: function (val) {
			return this.setChannel('rgb', 0, val);
		},
		green: function (val) {
			return this.setChannel('rgb', 1, val);
		},
		blue: function (val) {
			return this.setChannel('rgb', 2, val);
		},
		hue: function (val) {
			if (val) {
				val %= 360;
				val = val < 0 ? 360 + val : val;
			}
			return this.setChannel('hsl', 0, val);
		},
		saturation: function (val) {
			return this.setChannel('hsl', 1, val);
		},
		lightness: function (val) {
			return this.setChannel('hsl', 2, val);
		},
		saturationv: function (val) {
			return this.setChannel('hsv', 1, val);
		},
		whiteness: function (val) {
			return this.setChannel('hwb', 1, val);
		},
		blackness: function (val) {
			return this.setChannel('hwb', 2, val);
		},
		value: function (val) {
			return this.setChannel('hsv', 2, val);
		},
		cyan: function (val) {
			return this.setChannel('cmyk', 0, val);
		},
		magenta: function (val) {
			return this.setChannel('cmyk', 1, val);
		},
		yellow: function (val) {
			return this.setChannel('cmyk', 2, val);
		},
		black: function (val) {
			return this.setChannel('cmyk', 3, val);
		},

		hexString: function () {
			return colorString.hexString(this.values.rgb);
		},
		rgbString: function () {
			return colorString.rgbString(this.values.rgb, this.values.alpha);
		},
		rgbaString: function () {
			return colorString.rgbaString(this.values.rgb, this.values.alpha);
		},
		percentString: function () {
			return colorString.percentString(this.values.rgb, this.values.alpha);
		},
		hslString: function () {
			return colorString.hslString(this.values.hsl, this.values.alpha);
		},
		hslaString: function () {
			return colorString.hslaString(this.values.hsl, this.values.alpha);
		},
		hwbString: function () {
			return colorString.hwbString(this.values.hwb, this.values.alpha);
		},
		keyword: function () {
			return colorString.keyword(this.values.rgb, this.values.alpha);
		},

		rgbNumber: function () {
			var rgb = this.values.rgb;
			return (rgb[0] << 16) | (rgb[1] << 8) | rgb[2];
		},

		luminosity: function () {
			// http://www.w3.org/TR/WCAG20/#relativeluminancedef
			var rgb = this.values.rgb;
			var lum = [];
			for (var i = 0; i < rgb.length; i++) {
				var chan = rgb[i] / 255;
				lum[i] = (chan <= 0.03928) ? chan / 12.92 : Math.pow(((chan + 0.055) / 1.055), 2.4);
			}
			return 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];
		},

		contrast: function (color2) {
			// http://www.w3.org/TR/WCAG20/#contrast-ratiodef
			var lum1 = this.luminosity();
			var lum2 = color2.luminosity();
			if (lum1 > lum2) {
				return (lum1 + 0.05) / (lum2 + 0.05);
			}
			return (lum2 + 0.05) / (lum1 + 0.05);
		},

		level: function (color2) {
			var contrastRatio = this.contrast(color2);
			if (contrastRatio >= 7.1) {
				return 'AAA';
			}

			return (contrastRatio >= 4.5) ? 'AA' : '';
		},

		dark: function () {
			// YIQ equation from http://24ways.org/2010/calculating-color-contrast
			var rgb = this.values.rgb;
			var yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;
			return yiq < 128;
		},

		light: function () {
			return !this.dark();
		},

		negate: function () {
			var rgb = [];
			for (var i = 0; i < 3; i++) {
				rgb[i] = 255 - this.values.rgb[i];
			}
			this.setValues('rgb', rgb);
			return this;
		},

		lighten: function (ratio) {
			var hsl = this.values.hsl;
			hsl[2] += hsl[2] * ratio;
			this.setValues('hsl', hsl);
			return this;
		},

		darken: function (ratio) {
			var hsl = this.values.hsl;
			hsl[2] -= hsl[2] * ratio;
			this.setValues('hsl', hsl);
			return this;
		},

		saturate: function (ratio) {
			var hsl = this.values.hsl;
			hsl[1] += hsl[1] * ratio;
			this.setValues('hsl', hsl);
			return this;
		},

		desaturate: function (ratio) {
			var hsl = this.values.hsl;
			hsl[1] -= hsl[1] * ratio;
			this.setValues('hsl', hsl);
			return this;
		},

		whiten: function (ratio) {
			var hwb = this.values.hwb;
			hwb[1] += hwb[1] * ratio;
			this.setValues('hwb', hwb);
			return this;
		},

		blacken: function (ratio) {
			var hwb = this.values.hwb;
			hwb[2] += hwb[2] * ratio;
			this.setValues('hwb', hwb);
			return this;
		},

		greyscale: function () {
			var rgb = this.values.rgb;
			// http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale
			var val = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;
			this.setValues('rgb', [val, val, val]);
			return this;
		},

		clearer: function (ratio) {
			var alpha = this.values.alpha;
			this.setValues('alpha', alpha - (alpha * ratio));
			return this;
		},

		opaquer: function (ratio) {
			var alpha = this.values.alpha;
			this.setValues('alpha', alpha + (alpha * ratio));
			return this;
		},

		rotate: function (degrees) {
			var hsl = this.values.hsl;
			var hue = (hsl[0] + degrees) % 360;
			hsl[0] = hue < 0 ? 360 + hue : hue;
			this.setValues('hsl', hsl);
			return this;
		},

		/**
		 * Ported from sass implementation in C
		 * https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209
		 */
		mix: function (mixinColor, weight) {
			var color1 = this;
			var color2 = mixinColor;
			var p = weight === undefined ? 0.5 : weight;

			var w = 2 * p - 1;
			var a = color1.alpha() - color2.alpha();

			var w1 = (((w * a === -1) ? w : (w + a) / (1 + w * a)) + 1) / 2.0;
			var w2 = 1 - w1;

			return this
				.rgb(
					w1 * color1.red() + w2 * color2.red(),
					w1 * color1.green() + w2 * color2.green(),
					w1 * color1.blue() + w2 * color2.blue()
				)
				.alpha(color1.alpha() * p + color2.alpha() * (1 - p));
		},

		toJSON: function () {
			return this.rgb();
		},

		clone: function () {
			// NOTE(SB): using node-clone creates a dependency to Buffer when using browserify,
			// making the final build way to big to embed in Chart.js. So let's do it manually,
			// assuming that values to clone are 1 dimension arrays containing only numbers,
			// except 'alpha' which is a number.
			var result = new Color();
			var source = this.values;
			var target = result.values;
			var value, type;

			for (var prop in source) {
				if (source.hasOwnProperty(prop)) {
					value = source[prop];
					type = ({}).toString.call(value);
					if (type === '[object Array]') {
						target[prop] = value.slice(0);
					} else if (type === '[object Number]') {
						target[prop] = value;
					} else {
						console.error('unexpected color value:', value);
					}
				}
			}

			return result;
		}
	};

	Color.prototype.spaces = {
		rgb: ['red', 'green', 'blue'],
		hsl: ['hue', 'saturation', 'lightness'],
		hsv: ['hue', 'saturation', 'value'],
		hwb: ['hue', 'whiteness', 'blackness'],
		cmyk: ['cyan', 'magenta', 'yellow', 'black']
	};

	Color.prototype.maxes = {
		rgb: [255, 255, 255],
		hsl: [360, 100, 100],
		hsv: [360, 100, 100],
		hwb: [360, 100, 100],
		cmyk: [100, 100, 100, 100]
	};

	Color.prototype.getValues = function (space) {
		var values = this.values;
		var vals = {};

		for (var i = 0; i < space.length; i++) {
			vals[space.charAt(i)] = values[space][i];
		}

		if (values.alpha !== 1) {
			vals.a = values.alpha;
		}

		// {r: 255, g: 255, b: 255, a: 0.4}
		return vals;
	};

	Color.prototype.setValues = function (space, vals) {
		var values = this.values;
		var spaces = this.spaces;
		var maxes = this.maxes;
		var alpha = 1;
		var i;

		this.valid = true;

		if (space === 'alpha') {
			alpha = vals;
		} else if (vals.length) {
			// [10, 10, 10]
			values[space] = vals.slice(0, space.length);
			alpha = vals[space.length];
		} else if (vals[space.charAt(0)] !== undefined) {
			// {r: 10, g: 10, b: 10}
			for (i = 0; i < space.length; i++) {
				values[space][i] = vals[space.charAt(i)];
			}

			alpha = vals.a;
		} else if (vals[spaces[space][0]] !== undefined) {
			// {red: 10, green: 10, blue: 10}
			var chans = spaces[space];

			for (i = 0; i < space.length; i++) {
				values[space][i] = vals[chans[i]];
			}

			alpha = vals.alpha;
		}

		values.alpha = Math.max(0, Math.min(1, (alpha === undefined ? values.alpha : alpha)));

		if (space === 'alpha') {
			return false;
		}

		var capped;

		// cap values of the space prior converting all values
		for (i = 0; i < space.length; i++) {
			capped = Math.max(0, Math.min(maxes[space][i], values[space][i]));
			values[space][i] = Math.round(capped);
		}

		// convert to all the other color spaces
		for (var sname in spaces) {
			if (sname !== space) {
				values[sname] = colorConvert[space][sname](values[space]);
			}
		}

		return true;
	};

	Color.prototype.setSpace = function (space, args) {
		var vals = args[0];

		if (vals === undefined) {
			// color.rgb()
			return this.getValues(space);
		}

		// color.rgb(10, 10, 10)
		if (typeof vals === 'number') {
			vals = Array.prototype.slice.call(args);
		}

		this.setValues(space, vals);
		return this;
	};

	Color.prototype.setChannel = function (space, index, val) {
		var svalues = this.values[space];
		if (val === undefined) {
			// color.red()
			return svalues[index];
		} else if (val === svalues[index]) {
			// color.red(color.red())
			return this;
		}

		// color.red(100)
		svalues[index] = val;
		this.setValues(space, svalues);

		return this;
	};

	if (typeof window !== 'undefined') {
		window.Color = Color;
	}

	var chartjsColor = Color;

	/**
	 * @namespace Chart.helpers
	 */
	var helpers = {
		/**
		 * An empty function that can be used, for example, for optional callback.
		 */
		noop: function() {},

		/**
		 * Returns a unique id, sequentially generated from a global variable.
		 * @returns {number}
		 * @function
		 */
		uid: (function() {
			var id = 0;
			return function() {
				return id++;
			};
		}()),

		/**
		 * Returns true if `value` is neither null nor undefined, else returns false.
		 * @param {*} value - The value to test.
		 * @returns {boolean}
		 * @since 2.7.0
		 */
		isNullOrUndef: function(value) {
			return value === null || typeof value === 'undefined';
		},

		/**
		 * Returns true if `value` is an array (including typed arrays), else returns false.
		 * @param {*} value - The value to test.
		 * @returns {boolean}
		 * @function
		 */
		isArray: function(value) {
			if (Array.isArray && Array.isArray(value)) {
				return true;
			}
			var type = Object.prototype.toString.call(value);
			if (type.substr(0, 7) === '[object' && type.substr(-6) === 'Array]') {
				return true;
			}
			return false;
		},

		/**
		 * Returns true if `value` is an object (excluding null), else returns false.
		 * @param {*} value - The value to test.
		 * @returns {boolean}
		 * @since 2.7.0
		 */
		isObject: function(value) {
			return value !== null && Object.prototype.toString.call(value) === '[object Object]';
		},

		/**
		 * Returns true if `value` is a finite number, else returns false
		 * @param {*} value  - The value to test.
		 * @returns {boolean}
		 */
		isFinite: function(value) {
			return (typeof value === 'number' || value instanceof Number) && isFinite(value);
		},

		/**
		 * Returns `value` if defined, else returns `defaultValue`.
		 * @param {*} value - The value to return if defined.
		 * @param {*} defaultValue - The value to return if `value` is undefined.
		 * @returns {*}
		 */
		valueOrDefault: function(value, defaultValue) {
			return typeof value === 'undefined' ? defaultValue : value;
		},

		/**
		 * Returns value at the given `index` in array if defined, else returns `defaultValue`.
		 * @param {Array} value - The array to lookup for value at `index`.
		 * @param {number} index - The index in `value` to lookup for value.
		 * @param {*} defaultValue - The value to return if `value[index]` is undefined.
		 * @returns {*}
		 */
		valueAtIndexOrDefault: function(value, index, defaultValue) {
			return helpers.valueOrDefault(helpers.isArray(value) ? value[index] : value, defaultValue);
		},

		/**
		 * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the
		 * value returned by `fn`. If `fn` is not a function, this method returns undefined.
		 * @param {function} fn - The function to call.
		 * @param {Array|undefined|null} args - The arguments with which `fn` should be called.
		 * @param {object} [thisArg] - The value of `this` provided for the call to `fn`.
		 * @returns {*}
		 */
		callback: function(fn, args, thisArg) {
			if (fn && typeof fn.call === 'function') {
				return fn.apply(thisArg, args);
			}
		},

		/**
		 * Note(SB) for performance sake, this method should only be used when loopable type
		 * is unknown or in none intensive code (not called often and small loopable). Else
		 * it's preferable to use a regular for() loop and save extra function calls.
		 * @param {object|Array} loopable - The object or array to be iterated.
		 * @param {function} fn - The function to call for each item.
		 * @param {object} [thisArg] - The value of `this` provided for the call to `fn`.
		 * @param {boolean} [reverse] - If true, iterates backward on the loopable.
		 */
		each: function(loopable, fn, thisArg, reverse) {
			var i, len, keys;
			if (helpers.isArray(loopable)) {
				len = loopable.length;
				if (reverse) {
					for (i = len - 1; i >= 0; i--) {
						fn.call(thisArg, loopable[i], i);
					}
				} else {
					for (i = 0; i < len; i++) {
						fn.call(thisArg, loopable[i], i);
					}
				}
			} else if (helpers.isObject(loopable)) {
				keys = Object.keys(loopable);
				len = keys.length;
				for (i = 0; i < len; i++) {
					fn.call(thisArg, loopable[keys[i]], keys[i]);
				}
			}
		},

		/**
		 * Returns true if the `a0` and `a1` arrays have the same content, else returns false.
		 * @see https://stackoverflow.com/a/14853974
		 * @param {Array} a0 - The array to compare
		 * @param {Array} a1 - The array to compare
		 * @returns {boolean}
		 */
		arrayEquals: function(a0, a1) {
			var i, ilen, v0, v1;

			if (!a0 || !a1 || a0.length !== a1.length) {
				return false;
			}

			for (i = 0, ilen = a0.length; i < ilen; ++i) {
				v0 = a0[i];
				v1 = a1[i];

				if (v0 instanceof Array && v1 instanceof Array) {
					if (!helpers.arrayEquals(v0, v1)) {
						return false;
					}
				} else if (v0 !== v1) {
					// NOTE: two different object instances will never be equal: {x:20} != {x:20}
					return false;
				}
			}

			return true;
		},

		/**
		 * Returns a deep copy of `source` without keeping references on objects and arrays.
		 * @param {*} source - The value to clone.
		 * @returns {*}
		 */
		clone: function(source) {
			if (helpers.isArray(source)) {
				return source.map(helpers.clone);
			}

			if (helpers.isObject(source)) {
				var target = {};
				var keys = Object.keys(source);
				var klen = keys.length;
				var k = 0;

				for (; k < klen; ++k) {
					target[keys[k]] = helpers.clone(source[keys[k]]);
				}

				return target;
			}

			return source;
		},

		/**
		 * The default merger when Chart.helpers.merge is called without merger option.
		 * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.
		 * @private
		 */
		_merger: function(key, target, source, options) {
			var tval = target[key];
			var sval = source[key];

			if (helpers.isObject(tval) && helpers.isObject(sval)) {
				helpers.merge(tval, sval, options);
			} else {
				target[key] = helpers.clone(sval);
			}
		},

		/**
		 * Merges source[key] in target[key] only if target[key] is undefined.
		 * @private
		 */
		_mergerIf: function(key, target, source) {
			var tval = target[key];
			var sval = source[key];

			if (helpers.isObject(tval) && helpers.isObject(sval)) {
				helpers.mergeIf(tval, sval);
			} else if (!target.hasOwnProperty(key)) {
				target[key] = helpers.clone(sval);
			}
		},

		/**
		 * Recursively deep copies `source` properties into `target` with the given `options`.
		 * IMPORTANT: `target` is not cloned and will be updated with `source` properties.
		 * @param {object} target - The target object in which all sources are merged into.
		 * @param {object|object[]} source - Object(s) to merge into `target`.
		 * @param {object} [options] - Merging options:
		 * @param {function} [options.merger] - The merge method (key, target, source, options)
		 * @returns {object} The `target` object.
		 */
		merge: function(target, source, options) {
			var sources = helpers.isArray(source) ? source : [source];
			var ilen = sources.length;
			var merge, i, keys, klen, k;

			if (!helpers.isObject(target)) {
				return target;
			}

			options = options || {};
			merge = options.merger || helpers._merger;

			for (i = 0; i < ilen; ++i) {
				source = sources[i];
				if (!helpers.isObject(source)) {
					continue;
				}

				keys = Object.keys(source);
				for (k = 0, klen = keys.length; k < klen; ++k) {
					merge(keys[k], target, source, options);
				}
			}

			return target;
		},

		/**
		 * Recursively deep copies `source` properties into `target` *only* if not defined in target.
		 * IMPORTANT: `target` is not cloned and will be updated with `source` properties.
		 * @param {object} target - The target object in which all sources are merged into.
		 * @param {object|object[]} source - Object(s) to merge into `target`.
		 * @returns {object} The `target` object.
		 */
		mergeIf: function(target, source) {
			return helpers.merge(target, source, {merger: helpers._mergerIf});
		},

		/**
		 * Applies the contents of two or more objects together into the first object.
		 * @param {object} target - The target object in which all objects are merged into.
		 * @param {object} arg1 - Object containing additional properties to merge in target.
		 * @param {object} argN - Additional objects containing properties to merge in target.
		 * @returns {object} The `target` object.
		 */
		extend: function(target) {
			var setFn = function(value, key) {
				target[key] = value;
			};
			for (var i = 1, ilen = arguments.length; i < ilen; ++i) {
				helpers.each(arguments[i], setFn);
			}
			return target;
		},

		/**
		 * Basic javascript inheritance based on the model created in Backbone.js
		 */
		inherits: function(extensions) {
			var me = this;
			var ChartElement = (extensions && extensions.hasOwnProperty('constructor')) ? extensions.constructor : function() {
				return me.apply(this, arguments);
			};

			var Surrogate = function() {
				this.constructor = ChartElement;
			};

			Surrogate.prototype = me.prototype;
			ChartElement.prototype = new Surrogate();
			ChartElement.extend = helpers.inherits;

			if (extensions) {
				helpers.extend(ChartElement.prototype, extensions);
			}

			ChartElement.__super__ = me.prototype;
			return ChartElement;
		}
	};

	var helpers_core = helpers;

	// DEPRECATIONS

	/**
	 * Provided for backward compatibility, use Chart.helpers.callback instead.
	 * @function Chart.helpers.callCallback
	 * @deprecated since version 2.6.0
	 * @todo remove at version 3
	 * @private
	 */
	helpers.callCallback = helpers.callback;

	/**
	 * Provided for backward compatibility, use Array.prototype.indexOf instead.
	 * Array.prototype.indexOf compatibility: Chrome, Opera, Safari, FF1.5+, IE9+
	 * @function Chart.helpers.indexOf
	 * @deprecated since version 2.7.0
	 * @todo remove at version 3
	 * @private
	 */
	helpers.indexOf = function(array, item, fromIndex) {
		return Array.prototype.indexOf.call(array, item, fromIndex);
	};

	/**
	 * Provided for backward compatibility, use Chart.helpers.valueOrDefault instead.
	 * @function Chart.helpers.getValueOrDefault
	 * @deprecated since version 2.7.0
	 * @todo remove at version 3
	 * @private
	 */
	helpers.getValueOrDefault = helpers.valueOrDefault;

	/**
	 * Provided for backward compatibility, use Chart.helpers.valueAtIndexOrDefault instead.
	 * @function Chart.helpers.getValueAtIndexOrDefault
	 * @deprecated since version 2.7.0
	 * @todo remove at version 3
	 * @private
	 */
	helpers.getValueAtIndexOrDefault = helpers.valueAtIndexOrDefault;

	/**
	 * Easing functions adapted from Robert Penner's easing equations.
	 * @namespace Chart.helpers.easingEffects
	 * @see http://www.robertpenner.com/easing/
	 */
	var effects = {
		linear: function(t) {
			return t;
		},

		easeInQuad: function(t) {
			return t * t;
		},

		easeOutQuad: function(t) {
			return -t * (t - 2);
		},

		easeInOutQuad: function(t) {
			if ((t /= 0.5) < 1) {
				return 0.5 * t * t;
			}
			return -0.5 * ((--t) * (t - 2) - 1);
		},

		easeInCubic: function(t) {
			return t * t * t;
		},

		easeOutCubic: function(t) {
			return (t = t - 1) * t * t + 1;
		},

		easeInOutCubic: function(t) {
			if ((t /= 0.5) < 1) {
				return 0.5 * t * t * t;
			}
			return 0.5 * ((t -= 2) * t * t + 2);
		},

		easeInQuart: function(t) {
			return t * t * t * t;
		},

		easeOutQuart: function(t) {
			return -((t = t - 1) * t * t * t - 1);
		},

		easeInOutQuart: function(t) {
			if ((t /= 0.5) < 1) {
				return 0.5 * t * t * t * t;
			}
			return -0.5 * ((t -= 2) * t * t * t - 2);
		},

		easeInQuint: function(t) {
			return t * t * t * t * t;
		},

		easeOutQuint: function(t) {
			return (t = t - 1) * t * t * t * t + 1;
		},

		easeInOutQuint: function(t) {
			if ((t /= 0.5) < 1) {
				return 0.5 * t * t * t * t * t;
			}
			return 0.5 * ((t -= 2) * t * t * t * t + 2);
		},

		easeInSine: function(t) {
			return -Math.cos(t * (Math.PI / 2)) + 1;
		},

		easeOutSine: function(t) {
			return Math.sin(t * (Math.PI / 2));
		},

		easeInOutSine: function(t) {
			return -0.5 * (Math.cos(Math.PI * t) - 1);
		},

		easeInExpo: function(t) {
			return (t === 0) ? 0 : Math.pow(2, 10 * (t - 1));
		},

		easeOutExpo: function(t) {
			return (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1;
		},

		easeInOutExpo: function(t) {
			if (t === 0) {
				return 0;
			}
			if (t === 1) {
				return 1;
			}
			if ((t /= 0.5) < 1) {
				return 0.5 * Math.pow(2, 10 * (t - 1));
			}
			return 0.5 * (-Math.pow(2, -10 * --t) + 2);
		},

		easeInCirc: function(t) {
			if (t >= 1) {
				return t;
			}
			return -(Math.sqrt(1 - t * t) - 1);
		},

		easeOutCirc: function(t) {
			return Math.sqrt(1 - (t = t - 1) * t);
		},

		easeInOutCirc: function(t) {
			if ((t /= 0.5) < 1) {
				return -0.5 * (Math.sqrt(1 - t * t) - 1);
			}
			return 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);
		},

		easeInElastic: function(t) {
			var s = 1.70158;
			var p = 0;
			var a = 1;
			if (t === 0) {
				return 0;
			}
			if (t === 1) {
				return 1;
			}
			if (!p) {
				p = 0.3;
			}
			if (a < 1) {
				a = 1;
				s = p / 4;
			} else {
				s = p / (2 * Math.PI) * Math.asin(1 / a);
			}
			return -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));
		},

		easeOutElastic: function(t) {
			var s = 1.70158;
			var p = 0;
			var a = 1;
			if (t === 0) {
				return 0;
			}
			if (t === 1) {
				return 1;
			}
			if (!p) {
				p = 0.3;
			}
			if (a < 1) {
				a = 1;
				s = p / 4;
			} else {
				s = p / (2 * Math.PI) * Math.asin(1 / a);
			}
			return a * Math.pow(2, -10 * t) * Math.sin((t - s) * (2 * Math.PI) / p) + 1;
		},

		easeInOutElastic: function(t) {
			var s = 1.70158;
			var p = 0;
			var a = 1;
			if (t === 0) {
				return 0;
			}
			if ((t /= 0.5) === 2) {
				return 1;
			}
			if (!p) {
				p = 0.45;
			}
			if (a < 1) {
				a = 1;
				s = p / 4;
			} else {
				s = p / (2 * Math.PI) * Math.asin(1 / a);
			}
			if (t < 1) {
				return -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));
			}
			return a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p) * 0.5 + 1;
		},
		easeInBack: function(t) {
			var s = 1.70158;
			return t * t * ((s + 1) * t - s);
		},

		easeOutBack: function(t) {
			var s = 1.70158;
			return (t = t - 1) * t * ((s + 1) * t + s) + 1;
		},

		easeInOutBack: function(t) {
			var s = 1.70158;
			if ((t /= 0.5) < 1) {
				return 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));
			}
			return 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);
		},

		easeInBounce: function(t) {
			return 1 - effects.easeOutBounce(1 - t);
		},

		easeOutBounce: function(t) {
			if (t < (1 / 2.75)) {
				return 7.5625 * t * t;
			}
			if (t < (2 / 2.75)) {
				return 7.5625 * (t -= (1.5 / 2.75)) * t + 0.75;
			}
			if (t < (2.5 / 2.75)) {
				return 7.5625 * (t -= (2.25 / 2.75)) * t + 0.9375;
			}
			return 7.5625 * (t -= (2.625 / 2.75)) * t + 0.984375;
		},

		easeInOutBounce: function(t) {
			if (t < 0.5) {
				return effects.easeInBounce(t * 2) * 0.5;
			}
			return effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5;
		}
	};

	var helpers_easing = {
		effects: effects
	};

	// DEPRECATIONS

	/**
	 * Provided for backward compatibility, use Chart.helpers.easing.effects instead.
	 * @function Chart.helpers.easingEffects
	 * @deprecated since version 2.7.0
	 * @todo remove at version 3
	 * @private
	 */
	helpers_core.easingEffects = effects;

	var PI = Math.PI;
	var RAD_PER_DEG = PI / 180;
	var DOUBLE_PI = PI * 2;
	var HALF_PI = PI / 2;
	var QUARTER_PI = PI / 4;
	var TWO_THIRDS_PI = PI * 2 / 3;

	/**
	 * @namespace Chart.helpers.canvas
	 */
	var exports$1 = {
		/**
		 * Clears the entire canvas associated to the given `chart`.
		 * @param {Chart} chart - The chart for which to clear the canvas.
		 */
		clear: function(chart) {
			chart.ctx.clearRect(0, 0, chart.width, chart.height);
		},

		/**
		 * Creates a "path" for a rectangle with rounded corners at position (x, y) with a
		 * given size (width, height) and the same `radius` for all corners.
		 * @param {CanvasRenderingContext2D} ctx - The canvas 2D Context.
		 * @param {number} x - The x axis of the coordinate for the rectangle starting point.
		 * @param {number} y - The y axis of the coordinate for the rectangle starting point.
		 * @param {number} width - The rectangle's width.
		 * @param {number} height - The rectangle's height.
		 * @param {number} radius - The rounded amount (in pixels) for the four corners.
		 * @todo handle `radius` as top-left, top-right, bottom-right, bottom-left array/object?
		 */
		roundedRect: function(ctx, x, y, width, height, radius) {
			if (radius) {
				var r = Math.min(radius, height / 2, width / 2);
				var left = x + r;
				var top = y + r;
				var right = x + width - r;
				var bottom = y + height - r;

				ctx.moveTo(x, top);
				if (left < right && top < bottom) {
					ctx.arc(left, top, r, -PI, -HALF_PI);
					ctx.arc(right, top, r, -HALF_PI, 0);
					ctx.arc(right, bottom, r, 0, HALF_PI);
					ctx.arc(left, bottom, r, HALF_PI, PI);
				} else if (left < right) {
					ctx.moveTo(left, y);
					ctx.arc(right, top, r, -HALF_PI, HALF_PI);
					ctx.arc(left, top, r, HALF_PI, PI + HALF_PI);
				} else if (top < bottom) {
					ctx.arc(left, top, r, -PI, 0);
					ctx.arc(left, bottom, r, 0, PI);
				} else {
					ctx.arc(left, top, r, -PI, PI);
				}
				ctx.closePath();
				ctx.moveTo(x, y);
			} else {
				ctx.rect(x, y, width, height);
			}
		},

		drawPoint: function(ctx, style, radius, x, y, rotation) {
			var type, xOffset, yOffset, size, cornerRadius;
			var rad = (rotation || 0) * RAD_PER_DEG;

			if (style && typeof style === 'object') {
				type = style.toString();
				if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {
					ctx.drawImage(style, x - style.width / 2, y - style.height / 2, style.width, style.height);
					return;
				}
			}

			if (isNaN(radius) || radius <= 0) {
				return;
			}

			ctx.beginPath();

			switch (style) {
			// Default includes circle
			default:
				ctx.arc(x, y, radius, 0, DOUBLE_PI);
				ctx.closePath();
				break;
			case 'triangle':
				ctx.moveTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);
				rad += TWO_THIRDS_PI;
				ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);
				rad += TWO_THIRDS_PI;
				ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);
				ctx.closePath();
				break;
			case 'rectRounded':
				// NOTE: the rounded rect implementation changed to use `arc` instead of
				// `quadraticCurveTo` since it generates better results when rect is
				// almost a circle. 0.516 (instead of 0.5) produces results with visually
				// closer proportion to the previous impl and it is inscribed in the
				// circle with `radius`. For more details, see the following PRs:
				// https://github.com/chartjs/Chart.js/issues/5597
				// https://github.com/chartjs/Chart.js/issues/5858
				cornerRadius = radius * 0.516;
				size = radius - cornerRadius;
				xOffset = Math.cos(rad + QUARTER_PI) * size;
				yOffset = Math.sin(rad + QUARTER_PI) * size;
				ctx.arc(x - xOffset, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);
				ctx.arc(x + yOffset, y - xOffset, cornerRadius, rad - HALF_PI, rad);
				ctx.arc(x + xOffset, y + yOffset, cornerRadius, rad, rad + HALF_PI);
				ctx.arc(x - yOffset, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);
				ctx.closePath();
				break;
			case 'rect':
				if (!rotation) {
					size = Math.SQRT1_2 * radius;
					ctx.rect(x - size, y - size, 2 * size, 2 * size);
					break;
				}
				rad += QUARTER_PI;
				/* falls through */
			case 'rectRot':
				xOffset = Math.cos(rad) * radius;
				yOffset = Math.sin(rad) * radius;
				ctx.moveTo(x - xOffset, y - yOffset);
				ctx.lineTo(x + yOffset, y - xOffset);
				ctx.lineTo(x + xOffset, y + yOffset);
				ctx.lineTo(x - yOffset, y + xOffset);
				ctx.closePath();
				break;
			case 'crossRot':
				rad += QUARTER_PI;
				/* falls through */
			case 'cross':
				xOffset = Math.cos(rad) * radius;
				yOffset = Math.sin(rad) * radius;
				ctx.moveTo(x - xOffset, y - yOffset);
				ctx.lineTo(x + xOffset, y + yOffset);
				ctx.moveTo(x + yOffset, y - xOffset);
				ctx.lineTo(x - yOffset, y + xOffset);
				break;
			case 'star':
				xOffset = Math.cos(rad) * radius;
				yOffset = Math.sin(rad) * radius;
				ctx.moveTo(x - xOffset, y - yOffset);
				ctx.lineTo(x + xOffset, y + yOffset);
				ctx.moveTo(x + yOffset, y - xOffset);
				ctx.lineTo(x - yOffset, y + xOffset);
				rad += QUARTER_PI;
				xOffset = Math.cos(rad) * radius;
				yOffset = Math.sin(rad) * radius;
				ctx.moveTo(x - xOffset, y - yOffset);
				ctx.lineTo(x + xOffset, y + yOffset);
				ctx.moveTo(x + yOffset, y - xOffset);
				ctx.lineTo(x - yOffset, y + xOffset);
				break;
			case 'line':
				xOffset = Math.cos(rad) * radius;
				yOffset = Math.sin(rad) * radius;
				ctx.moveTo(x - xOffset, y - yOffset);
				ctx.lineTo(x + xOffset, y + yOffset);
				break;
			case 'dash':
				ctx.moveTo(x, y);
				ctx.lineTo(x + Math.cos(rad) * radius, y + Math.sin(rad) * radius);
				break;
			}

			ctx.fill();
			ctx.stroke();
		},

		/**
		 * Returns true if the point is inside the rectangle
		 * @param {object} point - The point to test
		 * @param {object} area - The rectangle
		 * @returns {boolean}
		 * @private
		 */
		_isPointInArea: function(point, area) {
			var epsilon = 1e-6; // 1e-6 is margin in pixels for accumulated error.

			return point.x > area.left - epsilon && point.x < area.right + epsilon &&
				point.y > area.top - epsilon && point.y < area.bottom + epsilon;
		},

		clipArea: function(ctx, area) {
			ctx.save();
			ctx.beginPath();
			ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);
			ctx.clip();
		},

		unclipArea: function(ctx) {
			ctx.restore();
		},

		lineTo: function(ctx, previous, target, flip) {
			var stepped = target.steppedLine;
			if (stepped) {
				if (stepped === 'middle') {
					var midpoint = (previous.x + target.x) / 2.0;
					ctx.lineTo(midpoint, flip ? target.y : previous.y);
					ctx.lineTo(midpoint, flip ? previous.y : target.y);
				} else if ((stepped === 'after' && !flip) || (stepped !== 'after' && flip)) {
					ctx.lineTo(previous.x, target.y);
				} else {
					ctx.lineTo(target.x, previous.y);
				}
				ctx.lineTo(target.x, target.y);
				return;
			}

			if (!target.tension) {
				ctx.lineTo(target.x, target.y);
				return;
			}

			ctx.bezierCurveTo(
				flip ? previous.controlPointPreviousX : previous.controlPointNextX,
				flip ? previous.controlPointPreviousY : previous.controlPointNextY,
				flip ? target.controlPointNextX : target.controlPointPreviousX,
				flip ? target.controlPointNextY : target.controlPointPreviousY,
				target.x,
				target.y);
		}
	};

	var helpers_canvas = exports$1;

	// DEPRECATIONS

	/**
	 * Provided for backward compatibility, use Chart.helpers.canvas.clear instead.
	 * @namespace Chart.helpers.clear
	 * @deprecated since version 2.7.0
	 * @todo remove at version 3
	 * @private
	 */
	helpers_core.clear = exports$1.clear;

	/**
	 * Provided for backward compatibility, use Chart.helpers.canvas.roundedRect instead.
	 * @namespace Chart.helpers.drawRoundedRectangle
	 * @deprecated since version 2.7.0
	 * @todo remove at version 3
	 * @private
	 */
	helpers_core.drawRoundedRectangle = function(ctx) {
		ctx.beginPath();
		exports$1.roundedRect.apply(exports$1, arguments);
	};

	var defaults = {
		/**
		 * @private
		 */
		_set: function(scope, values) {
			return helpers_core.merge(this[scope] || (this[scope] = {}), values);
		}
	};

	defaults._set('global', {
		defaultColor: 'rgba(0,0,0,0.1)',
		defaultFontColor: '#666',
		defaultFontFamily: "'Helvetica Neue', 'Helvetica', 'Arial', sans-serif",
		defaultFontSize: 12,
		defaultFontStyle: 'normal',
		defaultLineHeight: 1.2,
		showLines: true
	});

	var core_defaults = defaults;

	var valueOrDefault = helpers_core.valueOrDefault;

	/**
	 * Converts the given font object into a CSS font string.
	 * @param {object} font - A font object.
	 * @return {string} The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font
	 * @private
	 */
	function toFontString(font) {
		if (!font || helpers_core.isNullOrUndef(font.size) || helpers_core.isNullOrUndef(font.family)) {
			return null;
		}

		return (font.style ? font.style + ' ' : '')
			+ (font.weight ? font.weight + ' ' : '')
			+ font.size + 'px '
			+ font.family;
	}

	/**
	 * @alias Chart.helpers.options
	 * @namespace
	 */
	var helpers_options = {
		/**
		 * Converts the given line height `value` in pixels for a specific font `size`.
		 * @param {number|string} value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').
		 * @param {number} size - The font size (in pixels) used to resolve relative `value`.
		 * @returns {number} The effective line height in pixels (size * 1.2 if value is invalid).
		 * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height
		 * @since 2.7.0
		 */
		toLineHeight: function(value, size) {
			var matches = ('' + value).match(/^(normal|(\d+(?:\.\d+)?)(px|em|%)?)$/);
			if (!matches || matches[1] === 'normal') {
				return size * 1.2;
			}

			value = +matches[2];

			switch (matches[3]) {
			case 'px':
				return value;
			case '%':
				value /= 100;
				break;
			default:
				break;
			}

			return size * value;
		},

		/**
		 * Converts the given value into a padding object with pre-computed width/height.
		 * @param {number|object} value - If a number, set the value to all TRBL component,
		 *  else, if and object, use defined properties and sets undefined ones to 0.
		 * @returns {object} The padding values (top, right, bottom, left, width, height)
		 * @since 2.7.0
		 */
		toPadding: function(value) {
			var t, r, b, l;

			if (helpers_core.isObject(value)) {
				t = +value.top || 0;
				r = +value.right || 0;
				b = +value.bottom || 0;
				l = +value.left || 0;
			} else {
				t = r = b = l = +value || 0;
			}

			return {
				top: t,
				right: r,
				bottom: b,
				left: l,
				height: t + b,
				width: l + r
			};
		},

		/**
		 * Parses font options and returns the font object.
		 * @param {object} options - A object that contains font options to be parsed.
		 * @return {object} The font object.
		 * @todo Support font.* options and renamed to toFont().
		 * @private
		 */
		_parseFont: function(options) {
			var globalDefaults = core_defaults.global;
			var size = valueOrDefault(options.fontSize, globalDefaults.defaultFontSize);
			var font = {
				family: valueOrDefault(options.fontFamily, globalDefaults.defaultFontFamily),
				lineHeight: helpers_core.options.toLineHeight(valueOrDefault(options.lineHeight, globalDefaults.defaultLineHeight), size),
				size: size,
				style: valueOrDefault(options.fontStyle, globalDefaults.defaultFontStyle),
				weight: null,
				string: ''
			};

			font.string = toFontString(font);
			return font;
		},

		/**
		 * Evaluates the given `inputs` sequentially and returns the first defined value.
		 * @param {Array} inputs - An array of values, falling back to the last value.
		 * @param {object} [context] - If defined and the current value is a function, the value
		 * is called with `context` as first argument and the result becomes the new input.
		 * @param {number} [index] - If defined and the current value is an array, the value
		 * at `index` become the new input.
		 * @since 2.7.0
		 */
		resolve: function(inputs, context, index) {
			var i, ilen, value;

			for (i = 0, ilen = inputs.length; i < ilen; ++i) {
				value = inputs[i];
				if (value === undefined) {
					continue;
				}
				if (context !== undefined && typeof value === 'function') {
					value = value(context);
				}
				if (index !== undefined && helpers_core.isArray(value)) {
					value = value[index];
				}
				if (value !== undefined) {
					return value;
				}
			}
		}
	};

	var helpers$1 = helpers_core;
	var easing = helpers_easing;
	var canvas = helpers_canvas;
	var options = helpers_options;
	helpers$1.easing = easing;
	helpers$1.canvas = canvas;
	helpers$1.options = options;

	function interpolate(start, view, model, ease) {
		var keys = Object.keys(model);
		var i, ilen, key, actual, origin, target, type, c0, c1;

		for (i = 0, ilen = keys.length; i < ilen; ++i) {
			key = keys[i];

			target = model[key];

			// if a value is added to the model after pivot() has been called, the view
			// doesn't contain it, so let's initialize the view to the target value.
			if (!view.hasOwnProperty(key)) {
				view[key] = target;
			}

			actual = view[key];

			if (actual === target || key[0] === '_') {
				continue;
			}

			if (!start.hasOwnProperty(key)) {
				start[key] = actual;
			}

			origin = start[key];

			type = typeof target;

			if (type === typeof origin) {
				if (type === 'string') {
					c0 = chartjsColor(origin);
					if (c0.valid) {
						c1 = chartjsColor(target);
						if (c1.valid) {
							view[key] = c1.mix(c0, ease).rgbString();
							continue;
						}
					}
				} else if (helpers$1.isFinite(origin) && helpers$1.isFinite(target)) {
					view[key] = origin + (target - origin) * ease;
					continue;
				}
			}

			view[key] = target;
		}
	}

	var Element = function(configuration) {
		helpers$1.extend(this, configuration);
		this.initialize.apply(this, arguments);
	};

	helpers$1.extend(Element.prototype, {

		initialize: function() {
			this.hidden = false;
		},

		pivot: function() {
			var me = this;
			if (!me._view) {
				me._view = helpers$1.clone(me._model);
			}
			me._start = {};
			return me;
		},

		transition: function(ease) {
			var me = this;
			var model = me._model;
			var start = me._start;
			var view = me._view;

			// No animation -> No Transition
			if (!model || ease === 1) {
				me._view = model;
				me._start = null;
				return me;
			}

			if (!view) {
				view = me._view = {};
			}

			if (!start) {
				start = me._start = {};
			}

			interpolate(start, view, model, ease);

			return me;
		},

		tooltipPosition: function() {
			return {
				x: this._model.x,
				y: this._model.y
			};
		},

		hasValue: function() {
			return helpers$1.isNumber(this._model.x) && helpers$1.isNumber(this._model.y);
		}
	});

	Element.extend = helpers$1.inherits;

	var core_element = Element;

	var exports$2 = core_element.extend({
		chart: null, // the animation associated chart instance
		currentStep: 0, // the current animation step
		numSteps: 60, // default number of steps
		easing: '', // the easing to use for this animation
		render: null, // render function used by the animation service

		onAnimationProgress: null, // user specified callback to fire on each step of the animation
		onAnimationComplete: null, // user specified callback to fire when the animation finishes
	});

	var core_animation = exports$2;

	// DEPRECATIONS

	/**
	 * Provided for backward compatibility, use Chart.Animation instead
	 * @prop Chart.Animation#animationObject
	 * @deprecated since version 2.6.0
	 * @todo remove at version 3
	 */
	Object.defineProperty(exports$2.prototype, 'animationObject', {
		get: function() {
			return this;
		}
	});

	/**
	 * Provided for backward compatibility, use Chart.Animation#chart instead
	 * @prop Chart.Animation#chartInstance
	 * @deprecated since version 2.6.0
	 * @todo remove at version 3
	 */
	Object.defineProperty(exports$2.prototype, 'chartInstance', {
		get: function() {
			return this.chart;
		},
		set: function(value) {
			this.chart = value;
		}
	});

	core_defaults._set('global', {
		animation: {
			duration: 1000,
			easing: 'easeOutQuart',
			onProgress: helpers$1.noop,
			onComplete: helpers$1.noop
		}
	});

	var core_animations = {
		animations: [],
		request: null,

		/**
		 * @param {Chart} chart - The chart to animate.
		 * @param {Chart.Animation} animation - The animation that we will animate.
		 * @param {number} duration - The animation duration in ms.
		 * @param {boolean} lazy - if true, the chart is not marked as animating to enable more responsive interactions
		 */
		addAnimation: function(chart, animation, duration, lazy) {
			var animations = this.animations;
			var i, ilen;

			animation.chart = chart;
			animation.startTime = Date.now();
			animation.duration = duration;

			if (!lazy) {
				chart.animating = true;
			}

			for (i = 0, ilen = animations.length; i < ilen; ++i) {
				if (animations[i].chart === chart) {
					animations[i] = animation;
					return;
				}
			}

			animations.push(animation);

			// If there are no animations queued, manually kickstart a digest, for lack of a better word
			if (animations.length === 1) {
				this.requestAnimationFrame();
			}
		},

		cancelAnimation: function(chart) {
			var index = helpers$1.findIndex(this.animations, function(animation) {
				return animation.chart === chart;
			});

			if (index !== -1) {
				this.animations.splice(index, 1);
				chart.animating = false;
			}
		},

		requestAnimationFrame: function() {
			var me = this;
			if (me.request === null) {
				// Skip animation frame requests until the active one is executed.
				// This can happen when processing mouse events, e.g. 'mousemove'
				// and 'mouseout' events will trigger multiple renders.
				me.request = helpers$1.requestAnimFrame.call(window, function() {
					me.request = null;
					me.startDigest();
				});
			}
		},

		/**
		 * @private
		 */
		startDigest: function() {
			var me = this;

			me.advance();

			// Do we have more stuff to animate?
			if (me.animations.length > 0) {
				me.requestAnimationFrame();
			}
		},

		/**
		 * @private
		 */
		advance: function() {
			var animations = this.animations;
			var animation, chart, numSteps, nextStep;
			var i = 0;

			// 1 animation per chart, so we are looping charts here
			while (i < animations.length) {
				animation = animations[i];
				chart = animation.chart;
				numSteps = animation.numSteps;

				// Make sure that currentStep starts at 1
				// https://github.com/chartjs/Chart.js/issues/6104
				nextStep = Math.floor((Date.now() - animation.startTime) / animation.duration * numSteps) + 1;
				animation.currentStep = Math.min(nextStep, numSteps);

				helpers$1.callback(animation.render, [chart, animation], chart);
				helpers$1.callback(animation.onAnimationProgress, [animation], chart);

				if (animation.currentStep >= numSteps) {
					helpers$1.callback(animation.onAnimationComplete, [animation], chart);
					chart.animating = false;
					animations.splice(i, 1);
				} else {
					++i;
				}
			}
		}
	};

	var resolve = helpers$1.options.resolve;

	var arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];

	/**
	 * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',
	 * 'unshift') and notify the listener AFTER the array has been altered. Listeners are
	 * called on the 'onData*' callbacks (e.g. onDataPush, etc.) with same arguments.
	 */
	function listenArrayEvents(array, listener) {
		if (array._chartjs) {
			array._chartjs.listeners.push(listener);
			return;
		}

		Object.defineProperty(array, '_chartjs', {
			configurable: true,
			enumerable: false,
			value: {
				listeners: [listener]
			}
		});

		arrayEvents.forEach(function(key) {
			var method = 'onData' + key.charAt(0).toUpperCase() + key.slice(1);
			var base = array[key];

			Object.defineProperty(array, key, {
				configurable: true,
				enumerable: false,
				value: function() {
					var args = Array.prototype.slice.call(arguments);
					var res = base.apply(this, args);

					helpers$1.each(array._chartjs.listeners, function(object) {
						if (typeof object[method] === 'function') {
							object[method].apply(object, args);
						}
					});

					return res;
				}
			});
		});
	}

	/**
	 * Removes the given array event listener and cleanup extra attached properties (such as
	 * the _chartjs stub and overridden methods) if array doesn't have any more listeners.
	 */
	function unlistenArrayEvents(array, listener) {
		var stub = array._chartjs;
		if (!stub) {
			return;
		}

		var listeners = stub.listeners;
		var index = listeners.indexOf(listener);
		if (index !== -1) {
			listeners.splice(index, 1);
		}

		if (listeners.length > 0) {
			return;
		}

		arrayEvents.forEach(function(key) {
			delete array[key];
		});

		delete array._chartjs;
	}

	// Base class for all dataset controllers (line, bar, etc)
	var DatasetController = function(chart, datasetIndex) {
		this.initialize(chart, datasetIndex);
	};

	helpers$1.extend(DatasetController.prototype, {

		/**
		 * Element type used to generate a meta dataset (e.g. Chart.element.Line).
		 * @type {Chart.core.element}
		 */
		datasetElementType: null,

		/**
		 * Element type used to generate a meta data (e.g. Chart.element.Point).
		 * @type {Chart.core.element}
		 */
		dataElementType: null,

		initialize: function(chart, datasetIndex) {
			var me = this;
			me.chart = chart;
			me.index = datasetIndex;
			me.linkScales();
			me.addElements();
		},

		updateIndex: function(datasetIndex) {
			this.index = datasetIndex;
		},

		linkScales: function() {
			var me = this;
			var meta = me.getMeta();
			var dataset = me.getDataset();

			if (meta.xAxisID === null || !(meta.xAxisID in me.chart.scales)) {
				meta.xAxisID = dataset.xAxisID || me.chart.options.scales.xAxes[0].id;
			}
			if (meta.yAxisID === null || !(meta.yAxisID in me.chart.scales)) {
				meta.yAxisID = dataset.yAxisID || me.chart.options.scales.yAxes[0].id;
			}
		},

		getDataset: function() {
			return this.chart.data.datasets[this.index];
		},

		getMeta: function() {
			return this.chart.getDatasetMeta(this.index);
		},

		getScaleForId: function(scaleID) {
			return this.chart.scales[scaleID];
		},

		/**
		 * @private
		 */
		_getValueScaleId: function() {
			return this.getMeta().yAxisID;
		},

		/**
		 * @private
		 */
		_getIndexScaleId: function() {
			return this.getMeta().xAxisID;
		},

		/**
		 * @private
		 */
		_getValueScale: function() {
			return this.getScaleForId(this._getValueScaleId());
		},

		/**
		 * @private
		 */
		_getIndexScale: function() {
			return this.getScaleForId(this._getIndexScaleId());
		},

		reset: function() {
			this.update(true);
		},

		/**
		 * @private
		 */
		destroy: function() {
			if (this._data) {
				unlistenArrayEvents(this._data, this);
			}
		},

		createMetaDataset: function() {
			var me = this;
			var type = me.datasetElementType;
			return type && new type({
				_chart: me.chart,
				_datasetIndex: me.index
			});
		},

		createMetaData: function(index) {
			var me = this;
			var type = me.dataElementType;
			return type && new type({
				_chart: me.chart,
				_datasetIndex: me.index,
				_index: index
			});
		},

		addElements: function() {
			var me = this;
			var meta = me.getMeta();
			var data = me.getDataset().data || [];
			var metaData = meta.data;
			var i, ilen;

			for (i = 0, ilen = data.length; i < ilen; ++i) {
				metaData[i] = metaData[i] || me.createMetaData(i);
			}

			meta.dataset = meta.dataset || me.createMetaDataset();
		},

		addElementAndReset: function(index) {
			var element = this.createMetaData(index);
			this.getMeta().data.splice(index, 0, element);
			this.updateElement(element, index, true);
		},

		buildOrUpdateElements: function() {
			var me = this;
			var dataset = me.getDataset();
			var data = dataset.data || (dataset.data = []);

			// In order to correctly handle data addition/deletion animation (an thus simulate
			// real-time charts), we need to monitor these data modifications and synchronize
			// the internal meta data accordingly.
			if (me._data !== data) {
				if (me._data) {
					// This case happens when the user replaced the data array instance.
					unlistenArrayEvents(me._data, me);
				}

				if (data && Object.isExtensible(data)) {
					listenArrayEvents(data, me);
				}
				me._data = data;
			}

			// Re-sync meta data in case the user replaced the data array or if we missed
			// any updates and so make sure that we handle number of datapoints changing.
			me.resyncElements();
		},

		update: helpers$1.noop,

		transition: function(easingValue) {
			var meta = this.getMeta();
			var elements = meta.data || [];
			var ilen = elements.length;
			var i = 0;

			for (; i < ilen; ++i) {
				elements[i].transition(easingValue);
			}

			if (meta.dataset) {
				meta.dataset.transition(easingValue);
			}
		},

		draw: function() {
			var meta = this.getMeta();
			var elements = meta.data || [];
			var ilen = elements.length;
			var i = 0;

			if (meta.dataset) {
				meta.dataset.draw();
			}

			for (; i < ilen; ++i) {
				elements[i].draw();
			}
		},

		removeHoverStyle: function(element) {
			helpers$1.merge(element._model, element.$previousStyle || {});
			delete element.$previousStyle;
		},

		setHoverStyle: function(element) {
			var dataset = this.chart.data.datasets[element._datasetIndex];
			var index = element._index;
			var custom = element.custom || {};
			var model = element._model;
			var getHoverColor = helpers$1.getHoverColor;

			element.$previousStyle = {
				backgroundColor: model.backgroundColor,
				borderColor: model.borderColor,
				borderWidth: model.borderWidth
			};

			model.backgroundColor = resolve([custom.hoverBackgroundColor, dataset.hoverBackgroundColor, getHoverColor(model.backgroundColor)], undefined, index);
			model.borderColor = resolve([custom.hoverBorderColor, dataset.hoverBorderColor, getHoverColor(model.borderColor)], undefined, index);
			model.borderWidth = resolve([custom.hoverBorderWidth, dataset.hoverBorderWidth, model.borderWidth], undefined, index);
		},

		/**
		 * @private
		 */
		resyncElements: function() {
			var me = this;
			var meta = me.getMeta();
			var data = me.getDataset().data;
			var numMeta = meta.data.length;
			var numData = data.length;

			if (numData < numMeta) {
				meta.data.splice(numData, numMeta - numData);
			} else if (numData > numMeta) {
				me.insertElements(numMeta, numData - numMeta);
			}
		},

		/**
		 * @private
		 */
		insertElements: function(start, count) {
			for (var i = 0; i < count; ++i) {
				this.addElementAndReset(start + i);
			}
		},

		/**
		 * @private
		 */
		onDataPush: function() {
			var count = arguments.length;
			this.insertElements(this.getDataset().data.length - count, count);
		},

		/**
		 * @private
		 */
		onDataPop: function() {
			this.getMeta().data.pop();
		},

		/**
		 * @private
		 */
		onDataShift: function() {
			this.getMeta().data.shift();
		},

		/**
		 * @private
		 */
		onDataSplice: function(start, count) {
			this.getMeta().data.splice(start, count);
			this.insertElements(start, arguments.length - 2);
		},

		/**
		 * @private
		 */
		onDataUnshift: function() {
			this.insertElements(0, arguments.length);
		}
	});

	DatasetController.extend = helpers$1.inherits;

	var core_datasetController = DatasetController;

	core_defaults._set('global', {
		elements: {
			arc: {
				backgroundColor: core_defaults.global.defaultColor,
				borderColor: '#fff',
				borderWidth: 2,
				borderAlign: 'center'
			}
		}
	});

	var element_arc = core_element.extend({
		inLabelRange: function(mouseX) {
			var vm = this._view;

			if (vm) {
				return (Math.pow(mouseX - vm.x, 2) < Math.pow(vm.radius + vm.hoverRadius, 2));
			}
			return false;
		},

		inRange: function(chartX, chartY) {
			var vm = this._view;

			if (vm) {
				var pointRelativePosition = helpers$1.getAngleFromPoint(vm, {x: chartX, y: chartY});
				var	angle = pointRelativePosition.angle;
				var distance = pointRelativePosition.distance;

				// Sanitise angle range
				var startAngle = vm.startAngle;
				var endAngle = vm.endAngle;
				while (endAngle < startAngle) {
					endAngle += 2.0 * Math.PI;
				}
				while (angle > endAngle) {
					angle -= 2.0 * Math.PI;
				}
				while (angle < startAngle) {
					angle += 2.0 * Math.PI;
				}

				// Check if within the range of the open/close angle
				var betweenAngles = (angle >= startAngle && angle <= endAngle);
				var withinRadius = (distance >= vm.innerRadius && distance <= vm.outerRadius);

				return (betweenAngles && withinRadius);
			}
			return false;
		},

		getCenterPoint: function() {
			var vm = this._view;
			var halfAngle = (vm.startAngle + vm.endAngle) / 2;
			var halfRadius = (vm.innerRadius + vm.outerRadius) / 2;
			return {
				x: vm.x + Math.cos(halfAngle) * halfRadius,
				y: vm.y + Math.sin(halfAngle) * halfRadius
			};
		},

		getArea: function() {
			var vm = this._view;
			return Math.PI * ((vm.endAngle - vm.startAngle) / (2 * Math.PI)) * (Math.pow(vm.outerRadius, 2) - Math.pow(vm.innerRadius, 2));
		},

		tooltipPosition: function() {
			var vm = this._view;
			var centreAngle = vm.startAngle + ((vm.endAngle - vm.startAngle) / 2);
			var rangeFromCentre = (vm.outerRadius - vm.innerRadius) / 2 + vm.innerRadius;

			return {
				x: vm.x + (Math.cos(centreAngle) * rangeFromCentre),
				y: vm.y + (Math.sin(centreAngle) * rangeFromCentre)
			};
		},

		draw: function() {
			var ctx = this._chart.ctx;
			var vm = this._view;
			var sA = vm.startAngle;
			var eA = vm.endAngle;
			var pixelMargin = (vm.borderAlign === 'inner') ? 0.33 : 0;
			var angleMargin;

			ctx.save();

			ctx.beginPath();
			ctx.arc(vm.x, vm.y, Math.max(vm.outerRadius - pixelMargin, 0), sA, eA);
			ctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);
			ctx.closePath();

			ctx.fillStyle = vm.backgroundColor;
			ctx.fill();

			if (vm.borderWidth) {
				if (vm.borderAlign === 'inner') {
					// Draw an inner border by cliping the arc and drawing a double-width border
					// Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders
					ctx.beginPath();
					angleMargin = pixelMargin / vm.outerRadius;
					ctx.arc(vm.x, vm.y, vm.outerRadius, sA - angleMargin, eA + angleMargin);
					if (vm.innerRadius > pixelMargin) {
						angleMargin = pixelMargin / vm.innerRadius;
						ctx.arc(vm.x, vm.y, vm.innerRadius - pixelMargin, eA + angleMargin, sA - angleMargin, true);
					} else {
						ctx.arc(vm.x, vm.y, pixelMargin, eA + Math.PI / 2, sA - Math.PI / 2);
					}
					ctx.closePath();
					ctx.clip();

					ctx.beginPath();
					ctx.arc(vm.x, vm.y, vm.outerRadius, sA, eA);
					ctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);
					ctx.closePath();

					ctx.lineWidth = vm.borderWidth * 2;
					ctx.lineJoin = 'round';
				} else {
					ctx.lineWidth = vm.borderWidth;
					ctx.lineJoin = 'bevel';
				}

				ctx.strokeStyle = vm.borderColor;
				ctx.stroke();
			}

			ctx.restore();
		}
	});

	var valueOrDefault$1 = helpers$1.valueOrDefault;

	var defaultColor = core_defaults.global.defaultColor;

	core_defaults._set('global', {
		elements: {
			line: {
				tension: 0.4,
				backgroundColor: defaultColor,
				borderWidth: 3,
				borderColor: defaultColor,
				borderCapStyle: 'butt',
				borderDash: [],
				borderDashOffset: 0.0,
				borderJoinStyle: 'miter',
				capBezierPoints: true,
				fill: true, // do we fill in the area between the line and its base axis
			}
		}
	});

	var element_line = core_element.extend({
		draw: function() {
			var me = this;
			var vm = me._view;
			var ctx = me._chart.ctx;
			var spanGaps = vm.spanGaps;
			var points = me._children.slice(); // clone array
			var globalDefaults = core_defaults.global;
			var globalOptionLineElements = globalDefaults.elements.line;
			var lastDrawnIndex = -1;
			var index, current, previous, currentVM;

			// If we are looping, adding the first point again
			if (me._loop && points.length) {
				points.push(points[0]);
			}

			ctx.save();

			// Stroke Line Options
			ctx.lineCap = vm.borderCapStyle || globalOptionLineElements.borderCapStyle;

			// IE 9 and 10 do not support line dash
			if (ctx.setLineDash) {
				ctx.setLineDash(vm.borderDash || globalOptionLineElements.borderDash);
			}

			ctx.lineDashOffset = valueOrDefault$1(vm.borderDashOffset, globalOptionLineElements.borderDashOffset);
			ctx.lineJoin = vm.borderJoinStyle || globalOptionLineElements.borderJoinStyle;
			ctx.lineWidth = valueOrDefault$1(vm.borderWidth, globalOptionLineElements.borderWidth);
			ctx.strokeStyle = vm.borderColor || globalDefaults.defaultColor;

			// Stroke Line
			ctx.beginPath();
			lastDrawnIndex = -1;

			for (index = 0; index < points.length; ++index) {
				current = points[index];
				previous = helpers$1.previousItem(points, index);
				currentVM = current._view;

				// First point moves to it's starting position no matter what
				if (index === 0) {
					if (!currentVM.skip) {
						ctx.moveTo(currentVM.x, currentVM.y);
						lastDrawnIndex = index;
					}
				} else {
					previous = lastDrawnIndex === -1 ? previous : points[lastDrawnIndex];

					if (!currentVM.skip) {
						if ((lastDrawnIndex !== (index - 1) && !spanGaps) || lastDrawnIndex === -1) {
							// There was a gap and this is the first point after the gap
							ctx.moveTo(currentVM.x, currentVM.y);
						} else {
							// Line to next point
							helpers$1.canvas.lineTo(ctx, previous._view, current._view);
						}
						lastDrawnIndex = index;
					}
				}
			}

			ctx.stroke();
			ctx.restore();
		}
	});

	var valueOrDefault$2 = helpers$1.valueOrDefault;

	var defaultColor$1 = core_defaults.global.defaultColor;

	core_defaults._set('global', {
		elements: {
			point: {
				radius: 3,
				pointStyle: 'circle',
				backgroundColor: defaultColor$1,
				borderColor: defaultColor$1,
				borderWidth: 1,
				// Hover
				hitRadius: 1,
				hoverRadius: 4,
				hoverBorderWidth: 1
			}
		}
	});

	function xRange(mouseX) {
		var vm = this._view;
		return vm ? (Math.abs(mouseX - vm.x) < vm.radius + vm.hitRadius) : false;
	}

	function yRange(mouseY) {
		var vm = this._view;
		return vm ? (Math.abs(mouseY - vm.y) < vm.radius + vm.hitRadius) : false;
	}

	var element_point = core_element.extend({
		inRange: function(mouseX, mouseY) {
			var vm = this._view;
			return vm ? ((Math.pow(mouseX - vm.x, 2) + Math.pow(mouseY - vm.y, 2)) < Math.pow(vm.hitRadius + vm.radius, 2)) : false;
		},

		inLabelRange: xRange,
		inXRange: xRange,
		inYRange: yRange,

		getCenterPoint: function() {
			var vm = this._view;
			return {
				x: vm.x,
				y: vm.y
			};
		},

		getArea: function() {
			return Math.PI * Math.pow(this._view.radius, 2);
		},

		tooltipPosition: function() {
			var vm = this._view;
			return {
				x: vm.x,
				y: vm.y,
				padding: vm.radius + vm.borderWidth
			};
		},

		draw: function(chartArea) {
			var vm = this._view;
			var ctx = this._chart.ctx;
			var pointStyle = vm.pointStyle;
			var rotation = vm.rotation;
			var radius = vm.radius;
			var x = vm.x;
			var y = vm.y;
			var globalDefaults = core_defaults.global;
			var defaultColor = globalDefaults.defaultColor; // eslint-disable-line no-shadow

			if (vm.skip) {
				return;
			}

			// Clipping for Points.
			if (chartArea === undefined || helpers$1.canvas._isPointInArea(vm, chartArea)) {
				ctx.strokeStyle = vm.borderColor || defaultColor;
				ctx.lineWidth = valueOrDefault$2(vm.borderWidth, globalDefaults.elements.point.borderWidth);
				ctx.fillStyle = vm.backgroundColor || defaultColor;
				helpers$1.canvas.drawPoint(ctx, pointStyle, radius, x, y, rotation);
			}
		}
	});

	var defaultColor$2 = core_defaults.global.defaultColor;

	core_defaults._set('global', {
		elements: {
			rectangle: {
				backgroundColor: defaultColor$2,
				borderColor: defaultColor$2,
				borderSkipped: 'bottom',
				borderWidth: 0
			}
		}
	});

	function isVertical(vm) {
		return vm && vm.width !== undefined;
	}

	/**
	 * Helper function to get the bounds of the bar regardless of the orientation
	 * @param bar {Chart.Element.Rectangle} the bar
	 * @return {Bounds} bounds of the bar
	 * @private
	 */
	function getBarBounds(vm) {
		var x1, x2, y1, y2, half;

		if (isVertical(vm)) {
			half = vm.width / 2;
			x1 = vm.x - half;
			x2 = vm.x + half;
			y1 = Math.min(vm.y, vm.base);
			y2 = Math.max(vm.y, vm.base);
		} else {
			half = vm.height / 2;
			x1 = Math.min(vm.x, vm.base);
			x2 = Math.max(vm.x, vm.base);
			y1 = vm.y - half;
			y2 = vm.y + half;
		}

		return {
			left: x1,
			top: y1,
			right: x2,
			bottom: y2
		};
	}

	function swap(orig, v1, v2) {
		return orig === v1 ? v2 : orig === v2 ? v1 : orig;
	}

	function parseBorderSkipped(vm) {
		var edge = vm.borderSkipped;
		var res = {};

		if (!edge) {
			return res;
		}

		if (vm.horizontal) {
			if (vm.base > vm.x) {
				edge = swap(edge, 'left', 'right');
			}
		} else if (vm.base < vm.y) {
			edge = swap(edge, 'bottom', 'top');
		}

		res[edge] = true;
		return res;
	}

	function parseBorderWidth(vm, maxW, maxH) {
		var value = vm.borderWidth;
		var skip = parseBorderSkipped(vm);
		var t, r, b, l;

		if (helpers$1.isObject(value)) {
			t = +value.top || 0;
			r = +value.right || 0;
			b = +value.bottom || 0;
			l = +value.left || 0;
		} else {
			t = r = b = l = +value || 0;
		}

		return {
			t: skip.top || (t < 0) ? 0 : t > maxH ? maxH : t,
			r: skip.right || (r < 0) ? 0 : r > maxW ? maxW : r,
			b: skip.bottom || (b < 0) ? 0 : b > maxH ? maxH : b,
			l: skip.left || (l < 0) ? 0 : l > maxW ? maxW : l
		};
	}

	function boundingRects(vm) {
		var bounds = getBarBounds(vm);
		var width = bounds.right - bounds.left;
		var height = bounds.bottom - bounds.top;
		var border = parseBorderWidth(vm, width / 2, height / 2);

		return {
			outer: {
				x: bounds.left,
				y: bounds.top,
				w: width,
				h: height
			},
			inner: {
				x: bounds.left + border.l,
				y: bounds.top + border.t,
				w: width - border.l - border.r,
				h: height - border.t - border.b
			}
		};
	}

	function inRange(vm, x, y) {
		var skipX = x === null;
		var skipY = y === null;
		var bounds = !vm || (skipX && skipY) ? false : getBarBounds(vm);

		return bounds
			&& (skipX || x >= bounds.left && x <= bounds.right)
			&& (skipY || y >= bounds.top && y <= bounds.bottom);
	}

	var element_rectangle = core_element.extend({
		draw: function() {
			var ctx = this._chart.ctx;
			var vm = this._view;
			var rects = boundingRects(vm);
			var outer = rects.outer;
			var inner = rects.inner;

			ctx.fillStyle = vm.backgroundColor;
			ctx.fillRect(outer.x, outer.y, outer.w, outer.h);

			if (outer.w === inner.w && outer.h === inner.h) {
				return;
			}

			ctx.save();
			ctx.beginPath();
			ctx.rect(outer.x, outer.y, outer.w, outer.h);
			ctx.clip();
			ctx.fillStyle = vm.borderColor;
			ctx.rect(inner.x, inner.y, inner.w, inner.h);
			ctx.fill('evenodd');
			ctx.restore();
		},

		height: function() {
			var vm = this._view;
			return vm.base - vm.y;
		},

		inRange: function(mouseX, mouseY) {
			return inRange(this._view, mouseX, mouseY);
		},

		inLabelRange: function(mouseX, mouseY) {
			var vm = this._view;
			return isVertical(vm)
				? inRange(vm, mouseX, null)
				: inRange(vm, null, mouseY);
		},

		inXRange: function(mouseX) {
			return inRange(this._view, mouseX, null);
		},

		inYRange: function(mouseY) {
			return inRange(this._view, null, mouseY);
		},

		getCenterPoint: function() {
			var vm = this._view;
			var x, y;
			if (isVertical(vm)) {
				x = vm.x;
				y = (vm.y + vm.base) / 2;
			} else {
				x = (vm.x + vm.base) / 2;
				y = vm.y;
			}

			return {x: x, y: y};
		},

		getArea: function() {
			var vm = this._view;

			return isVertical(vm)
				? vm.width * Math.abs(vm.y - vm.base)
				: vm.height * Math.abs(vm.x - vm.base);
		},

		tooltipPosition: function() {
			var vm = this._view;
			return {
				x: vm.x,
				y: vm.y
			};
		}
	});

	var elements = {};
	var Arc = element_arc;
	var Line = element_line;
	var Point = element_point;
	var Rectangle = element_rectangle;
	elements.Arc = Arc;
	elements.Line = Line;
	elements.Point = Point;
	elements.Rectangle = Rectangle;

	var resolve$1 = helpers$1.options.resolve;

	core_defaults._set('bar', {
		hover: {
			mode: 'label'
		},

		scales: {
			xAxes: [{
				type: 'category',
				categoryPercentage: 0.8,
				barPercentage: 0.9,
				offset: true,
				gridLines: {
					offsetGridLines: true
				}
			}],

			yAxes: [{
				type: 'linear'
			}]
		}
	});

	/**
	 * Computes the "optimal" sample size to maintain bars equally sized while preventing overlap.
	 * @private
	 */
	function computeMinSampleSize(scale, pixels) {
		var min = scale.isHorizontal() ? scale.width : scale.height;
		var ticks = scale.getTicks();
		var prev, curr, i, ilen;

		for (i = 1, ilen = pixels.length; i < ilen; ++i) {
			min = Math.min(min, Math.abs(pixels[i] - pixels[i - 1]));
		}

		for (i = 0, ilen = ticks.length; i < ilen; ++i) {
			curr = scale.getPixelForTick(i);
			min = i > 0 ? Math.min(min, curr - prev) : min;
			prev = curr;
		}

		return min;
	}

	/**
	 * Computes an "ideal" category based on the absolute bar thickness or, if undefined or null,
	 * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This
	 * mode currently always generates bars equally sized (until we introduce scriptable options?).
	 * @private
	 */
	function computeFitCategoryTraits(index, ruler, options) {
		var thickness = options.barThickness;
		var count = ruler.stackCount;
		var curr = ruler.pixels[index];
		var size, ratio;

		if (helpers$1.isNullOrUndef(thickness)) {
			size = ruler.min * options.categoryPercentage;
			ratio = options.barPercentage;
		} else {
			// When bar thickness is enforced, category and bar percentages are ignored.
			// Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')
			// and deprecate barPercentage since this value is ignored when thickness is absolute.
			size = thickness * count;
			ratio = 1;
		}

		return {
			chunk: size / count,
			ratio: ratio,
			start: curr - (size / 2)
		};
	}

	/**
	 * Computes an "optimal" category that globally arranges bars side by side (no gap when
	 * percentage options are 1), based on the previous and following categories. This mode
	 * generates bars with different widths when data are not evenly spaced.
	 * @private
	 */
	function computeFlexCategoryTraits(index, ruler, options) {
		var pixels = ruler.pixels;
		var curr = pixels[index];
		var prev = index > 0 ? pixels[index - 1] : null;
		var next = index < pixels.length - 1 ? pixels[index + 1] : null;
		var percent = options.categoryPercentage;
		var start, size;

		if (prev === null) {
			// first data: its size is double based on the next point or,
			// if it's also the last data, we use the scale size.
			prev = curr - (next === null ? ruler.end - ruler.start : next - curr);
		}

		if (next === null) {
			// last data: its size is also double based on the previous point.
			next = curr + curr - prev;
		}

		start = curr - (curr - Math.min(prev, next)) / 2 * percent;
		size = Math.abs(next - prev) / 2 * percent;

		return {
			chunk: size / ruler.stackCount,
			ratio: options.barPercentage,
			start: start
		};
	}

	var controller_bar = core_datasetController.extend({

		dataElementType: elements.Rectangle,

		initialize: function() {
			var me = this;
			var meta;

			core_datasetController.prototype.initialize.apply(me, arguments);

			meta = me.getMeta();
			meta.stack = me.getDataset().stack;
			meta.bar = true;
		},

		update: function(reset) {
			var me = this;
			var rects = me.getMeta().data;
			var i, ilen;

			me._ruler = me.getRuler();

			for (i = 0, ilen = rects.length; i < ilen; ++i) {
				me.updateElement(rects[i], i, reset);
			}
		},

		updateElement: function(rectangle, index, reset) {
			var me = this;
			var meta = me.getMeta();
			var dataset = me.getDataset();
			var options = me._resolveElementOptions(rectangle, index);

			rectangle._xScale = me.getScaleForId(meta.xAxisID);
			rectangle._yScale = me.getScaleForId(meta.yAxisID);
			rectangle._datasetIndex = me.index;
			rectangle._index = index;
			rectangle._model = {
				backgroundColor: options.backgroundColor,
				borderColor: options.borderColor,
				borderSkipped: options.borderSkipped,
				borderWidth: options.borderWidth,
				datasetLabel: dataset.label,
				label: me.chart.data.labels[index]
			};

			me._updateElementGeometry(rectangle, index, reset);

			rectangle.pivot();
		},

		/**
		 * @private
		 */
		_updateElementGeometry: function(rectangle, index, reset) {
			var me = this;
			var model = rectangle._model;
			var vscale = me._getValueScale();
			var base = vscale.getBasePixel();
			var horizontal = vscale.isHorizontal();
			var ruler = me._ruler || me.getRuler();
			var vpixels = me.calculateBarValuePixels(me.index, index);
			var ipixels = me.calculateBarIndexPixels(me.index, index, ruler);

			model.horizontal = horizontal;
			model.base = reset ? base : vpixels.base;
			model.x = horizontal ? reset ? base : vpixels.head : ipixels.center;
			model.y = horizontal ? ipixels.center : reset ? base : vpixels.head;
			model.height = horizontal ? ipixels.size : undefined;
			model.width = horizontal ? undefined : ipixels.size;
		},

		/**
		 * Returns the stacks based on groups and bar visibility.
		 * @param {number} [last] - The dataset index
		 * @returns {string[]} The list of stack IDs
		 * @private
		 */
		_getStacks: function(last) {
			var me = this;
			var chart = me.chart;
			var scale = me._getIndexScale();
			var stacked = scale.options.stacked;
			var ilen = last === undefined ? chart.data.datasets.length : last + 1;
			var stacks = [];
			var i, meta;

			for (i = 0; i < ilen; ++i) {
				meta = chart.getDatasetMeta(i);
				if (meta.bar && chart.isDatasetVisible(i) &&
					(stacked === false ||
					(stacked === true && stacks.indexOf(meta.stack) === -1) ||
					(stacked === undefined && (meta.stack === undefined || stacks.indexOf(meta.stack) === -1)))) {
					stacks.push(meta.stack);
				}
			}

			return stacks;
		},

		/**
		 * Returns the effective number of stacks based on groups and bar visibility.
		 * @private
		 */
		getStackCount: function() {
			return this._getStacks().length;
		},

		/**
		 * Returns the stack index for the given dataset based on groups and bar visibility.
		 * @param {number} [datasetIndex] - The dataset index
		 * @param {string} [name] - The stack name to find
		 * @returns {number} The stack index
		 * @private
		 */
		getStackIndex: function(datasetIndex, name) {
			var stacks = this._getStacks(datasetIndex);
			var index = (name !== undefined)
				? stacks.indexOf(name)
				: -1; // indexOf returns -1 if element is not present

			return (index === -1)
				? stacks.length - 1
				: index;
		},

		/**
		 * @private
		 */
		getRuler: function() {
			var me = this;
			var scale = me._getIndexScale();
			var stackCount = me.getStackCount();
			var datasetIndex = me.index;
			var isHorizontal = scale.isHorizontal();
			var start = isHorizontal ? scale.left : scale.top;
			var end = start + (isHorizontal ? scale.width : scale.height);
			var pixels = [];
			var i, ilen, min;

			for (i = 0, ilen = me.getMeta().data.length; i < ilen; ++i) {
				pixels.push(scale.getPixelForValue(null, i, datasetIndex));
			}

			min = helpers$1.isNullOrUndef(scale.options.barThickness)
				? computeMinSampleSize(scale, pixels)
				: -1;

			return {
				min: min,
				pixels: pixels,
				start: start,
				end: end,
				stackCount: stackCount,
				scale: scale
			};
		},

		/**
		 * Note: pixel values are not clamped to the scale area.
		 * @private
		 */
		calculateBarValuePixels: function(datasetIndex, index) {
			var me = this;
			var chart = me.chart;
			var meta = me.getMeta();
			var scale = me._getValueScale();
			var isHorizontal = scale.isHorizontal();
			var datasets = chart.data.datasets;
			var value = +scale.getRightValue(datasets[datasetIndex].data[index]);
			var minBarLength = scale.options.minBarLength;
			var stacked = scale.options.stacked;
			var stack = meta.stack;
			var start = 0;
			var i, imeta, ivalue, base, head, size;

			if (stacked || (stacked === undefined && stack !== undefined)) {
				for (i = 0; i < datasetIndex; ++i) {
					imeta = chart.getDatasetMeta(i);

					if (imeta.bar &&
						imeta.stack === stack &&
						imeta.controller._getValueScaleId() === scale.id &&
						chart.isDatasetVisible(i)) {

						ivalue = +scale.getRightValue(datasets[i].data[index]);
						if ((value < 0 && ivalue < 0) || (value >= 0 && ivalue > 0)) {
							start += ivalue;
						}
					}
				}
			}

			base = scale.getPixelForValue(start);
			head = scale.getPixelForValue(start + value);
			size = head - base;

			if (minBarLength !== undefined && Math.abs(size) < minBarLength) {
				size = minBarLength;
				if (value >= 0 && !isHorizontal || value < 0 && isHorizontal) {
					head = base - minBarLength;
				} else {
					head = base + minBarLength;
				}
			}

			return {
				size: size,
				base: base,
				head: head,
				center: head + size / 2
			};
		},

		/**
		 * @private
		 */
		calculateBarIndexPixels: function(datasetIndex, index, ruler) {
			var me = this;
			var options = ruler.scale.options;
			var range = options.barThickness === 'flex'
				? computeFlexCategoryTraits(index, ruler, options)
				: computeFitCategoryTraits(index, ruler, options);

			var stackIndex = me.getStackIndex(datasetIndex, me.getMeta().stack);
			var center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);
			var size = Math.min(
				helpers$1.valueOrDefault(options.maxBarThickness, Infinity),
				range.chunk * range.ratio);

			return {
				base: center - size / 2,
				head: center + size / 2,
				center: center,
				size: size
			};
		},

		draw: function() {
			var me = this;
			var chart = me.chart;
			var scale = me._getValueScale();
			var rects = me.getMeta().data;
			var dataset = me.getDataset();
			var ilen = rects.length;
			var i = 0;

			helpers$1.canvas.clipArea(chart.ctx, chart.chartArea);

			for (; i < ilen; ++i) {
				if (!isNaN(scale.getRightValue(dataset.data[i]))) {
					rects[i].draw();
				}
			}

			helpers$1.canvas.unclipArea(chart.ctx);
		},

		/**
		 * @private
		 */
		_resolveElementOptions: function(rectangle, index) {
			var me = this;
			var chart = me.chart;
			var datasets = chart.data.datasets;
			var dataset = datasets[me.index];
			var custom = rectangle.custom || {};
			var options = chart.options.elements.rectangle;
			var values = {};
			var i, ilen, key;

			// Scriptable options
			var context = {
				chart: chart,
				dataIndex: index,
				dataset: dataset,
				datasetIndex: me.index
			};

			var keys = [
				'backgroundColor',
				'borderColor',
				'borderSkipped',
				'borderWidth'
			];

			for (i = 0, ilen = keys.length; i < ilen; ++i) {
				key = keys[i];
				values[key] = resolve$1([
					custom[key],
					dataset[key],
					options[key]
				], context, index);
			}

			return values;
		}
	});

	var valueOrDefault$3 = helpers$1.valueOrDefault;
	var resolve$2 = helpers$1.options.resolve;

	core_defaults._set('bubble', {
		hover: {
			mode: 'single'
		},

		scales: {
			xAxes: [{
				type: 'linear', // bubble should probably use a linear scale by default
				position: 'bottom',
				id: 'x-axis-0' // need an ID so datasets can reference the scale
			}],
			yAxes: [{
				type: 'linear',
				position: 'left',
				id: 'y-axis-0'
			}]
		},

		tooltips: {
			callbacks: {
				title: function() {
					// Title doesn't make sense for scatter since we format the data as a point
					return '';
				},
				label: function(item, data) {
					var datasetLabel = data.datasets[item.datasetIndex].label || '';
					var dataPoint = data.datasets[item.datasetIndex].data[item.index];
					return datasetLabel + ': (' + item.xLabel + ', ' + item.yLabel + ', ' + dataPoint.r + ')';
				}
			}
		}
	});

	var controller_bubble = core_datasetController.extend({
		/**
		 * @protected
		 */
		dataElementType: elements.Point,

		/**
		 * @protected
		 */
		update: function(reset) {
			var me = this;
			var meta = me.getMeta();
			var points = meta.data;

			// Update Points
			helpers$1.each(points, function(point, index) {
				me.updateElement(point, index, reset);
			});
		},

		/**
		 * @protected
		 */
		updateElement: function(point, index, reset) {
			var me = this;
			var meta = me.getMeta();
			var custom = point.custom || {};
			var xScale = me.getScaleForId(meta.xAxisID);
			var yScale = me.getScaleForId(meta.yAxisID);
			var options = me._resolveElementOptions(point, index);
			var data = me.getDataset().data[index];
			var dsIndex = me.index;

			var x = reset ? xScale.getPixelForDecimal(0.5) : xScale.getPixelForValue(typeof data === 'object' ? data : NaN, index, dsIndex);
			var y = reset ? yScale.getBasePixel() : yScale.getPixelForValue(data, index, dsIndex);

			point._xScale = xScale;
			point._yScale = yScale;
			point._options = options;
			point._datasetIndex = dsIndex;
			point._index = index;
			point._model = {
				backgroundColor: options.backgroundColor,
				borderColor: options.borderColor,
				borderWidth: options.borderWidth,
				hitRadius: options.hitRadius,
				pointStyle: options.pointStyle,
				rotation: options.rotation,
				radius: reset ? 0 : options.radius,
				skip: custom.skip || isNaN(x) || isNaN(y),
				x: x,
				y: y,
			};

			point.pivot();
		},

		/**
		 * @protected
		 */
		setHoverStyle: function(point) {
			var model = point._model;
			var options = point._options;
			var getHoverColor = helpers$1.getHoverColor;

			point.$previousStyle = {
				backgroundColor: model.backgroundColor,
				borderColor: model.borderColor,
				borderWidth: model.borderWidth,
				radius: model.radius
			};

			model.backgroundColor = valueOrDefault$3(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));
			model.borderColor = valueOrDefault$3(options.hoverBorderColor, getHoverColor(options.borderColor));
			model.borderWidth = valueOrDefault$3(options.hoverBorderWidth, options.borderWidth);
			model.radius = options.radius + options.hoverRadius;
		},

		/**
		 * @private
		 */
		_resolveElementOptions: function(point, index) {
			var me = this;
			var chart = me.chart;
			var datasets = chart.data.datasets;
			var dataset = datasets[me.index];
			var custom = point.custom || {};
			var options = chart.options.elements.point;
			var data = dataset.data[index];
			var values = {};
			var i, ilen, key;

			// Scriptable options
			var context = {
				chart: chart,
				dataIndex: index,
				dataset: dataset,
				datasetIndex: me.index
			};

			var keys = [
				'backgroundColor',
				'borderColor',
				'borderWidth',
				'hoverBackgroundColor',
				'hoverBorderColor',
				'hoverBorderWidth',
				'hoverRadius',
				'hitRadius',
				'pointStyle',
				'rotation'
			];

			for (i = 0, ilen = keys.length; i < ilen; ++i) {
				key = keys[i];
				values[key] = resolve$2([
					custom[key],
					dataset[key],
					options[key]
				], context, index);
			}

			// Custom radius resolution
			values.radius = resolve$2([
				custom.radius,
				data ? data.r : undefined,
				dataset.radius,
				options.radius
			], context, index);

			return values;
		}
	});

	var resolve$3 = helpers$1.options.resolve;
	var valueOrDefault$4 = helpers$1.valueOrDefault;

	core_defaults._set('doughnut', {
		animation: {
			// Boolean - Whether we animate the rotation of the Doughnut
			animateRotate: true,
			// Boolean - Whether we animate scaling the Doughnut from the centre
			animateScale: false
		},
		hover: {
			mode: 'single'
		},
		legendCallback: function(chart) {
			var text = [];
			text.push('<ul class="' + chart.id + '-legend">');

			var data = chart.data;
			var datasets = data.datasets;
			var labels = data.labels;

			if (datasets.length) {
				for (var i = 0; i < datasets[0].data.length; ++i) {
					text.push('<li><span style="background-color:' + datasets[0].backgroundColor[i] + '"></span>');
					if (labels[i]) {
						text.push(labels[i]);
					}
					text.push('</li>');
				}
			}

			text.push('</ul>');
			return text.join('');
		},
		legend: {
			labels: {
				generateLabels: function(chart) {
					var data = chart.data;
					if (data.labels.length && data.datasets.length) {
						return data.labels.map(function(label, i) {
							var meta = chart.getDatasetMeta(0);
							var ds = data.datasets[0];
							var arc = meta.data[i];
							var custom = arc && arc.custom || {};
							var arcOpts = chart.options.elements.arc;
							var fill = resolve$3([custom.backgroundColor, ds.backgroundColor, arcOpts.backgroundColor], undefined, i);
							var stroke = resolve$3([custom.borderColor, ds.borderColor, arcOpts.borderColor], undefined, i);
							var bw = resolve$3([custom.borderWidth, ds.borderWidth, arcOpts.borderWidth], undefined, i);

							return {
								text: label,
								fillStyle: fill,
								strokeStyle: stroke,
								lineWidth: bw,
								hidden: isNaN(ds.data[i]) || meta.data[i].hidden,

								// Extra data used for toggling the correct item
								index: i
							};
						});
					}
					return [];
				}
			},

			onClick: function(e, legendItem) {
				var index = legendItem.index;
				var chart = this.chart;
				var i, ilen, meta;

				for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {
					meta = chart.getDatasetMeta(i);
					// toggle visibility of index if exists
					if (meta.data[index]) {
						meta.data[index].hidden = !meta.data[index].hidden;
					}
				}

				chart.update();
			}
		},

		// The percentage of the chart that we cut out of the middle.
		cutoutPercentage: 50,

		// The rotation of the chart, where the first data arc begins.
		rotation: Math.PI * -0.5,

		// The total circumference of the chart.
		circumference: Math.PI * 2.0,

		// Need to override these to give a nice default
		tooltips: {
			callbacks: {
				title: function() {
					return '';
				},
				label: function(tooltipItem, data) {
					var dataLabel = data.labels[tooltipItem.index];
					var value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];

					if (helpers$1.isArray(dataLabel)) {
						// show value on first line of multiline label
						// need to clone because we are changing the value
						dataLabel = dataLabel.slice();
						dataLabel[0] += value;
					} else {
						dataLabel += value;
					}

					return dataLabel;
				}
			}
		}
	});

	var controller_doughnut = core_datasetController.extend({

		dataElementType: elements.Arc,

		linkScales: helpers$1.noop,

		// Get index of the dataset in relation to the visible datasets. This allows determining the inner and outer radius correctly
		getRingIndex: function(datasetIndex) {
			var ringIndex = 0;

			for (var j = 0; j < datasetIndex; ++j) {
				if (this.chart.isDatasetVisible(j)) {
					++ringIndex;
				}
			}

			return ringIndex;
		},

		update: function(reset) {
			var me = this;
			var chart = me.chart;
			var chartArea = chart.chartArea;
			var opts = chart.options;
			var availableWidth = chartArea.right - chartArea.left;
			var availableHeight = chartArea.bottom - chartArea.top;
			var minSize = Math.min(availableWidth, availableHeight);
			var offset = {x: 0, y: 0};
			var meta = me.getMeta();
			var arcs = meta.data;
			var cutoutPercentage = opts.cutoutPercentage;
			var circumference = opts.circumference;
			var chartWeight = me._getRingWeight(me.index);
			var i, ilen;

			// If the chart's circumference isn't a full circle, calculate minSize as a ratio of the width/height of the arc
			if (circumference < Math.PI * 2.0) {
				var startAngle = opts.rotation % (Math.PI * 2.0);
				startAngle += Math.PI * 2.0 * (startAngle >= Math.PI ? -1 : startAngle < -Math.PI ? 1 : 0);
				var endAngle = startAngle + circumference;
				var start = {x: Math.cos(startAngle), y: Math.sin(startAngle)};
				var end = {x: Math.cos(endAngle), y: Math.sin(endAngle)};
				var contains0 = (startAngle <= 0 && endAngle >= 0) || (startAngle <= Math.PI * 2.0 && Math.PI * 2.0 <= endAngle);
				var contains90 = (startAngle <= Math.PI * 0.5 && Math.PI * 0.5 <= endAngle) || (startAngle <= Math.PI * 2.5 && Math.PI * 2.5 <= endAngle);
				var contains180 = (startAngle <= -Math.PI && -Math.PI <= endAngle) || (startAngle <= Math.PI && Math.PI <= endAngle);
				var contains270 = (startAngle <= -Math.PI * 0.5 && -Math.PI * 0.5 <= endAngle) || (startAngle <= Math.PI * 1.5 && Math.PI * 1.5 <= endAngle);
				var cutout = cutoutPercentage / 100.0;
				var min = {x: contains180 ? -1 : Math.min(start.x * (start.x < 0 ? 1 : cutout), end.x * (end.x < 0 ? 1 : cutout)), y: contains270 ? -1 : Math.min(start.y * (start.y < 0 ? 1 : cutout), end.y * (end.y < 0 ? 1 : cutout))};
				var max = {x: contains0 ? 1 : Math.max(start.x * (start.x > 0 ? 1 : cutout), end.x * (end.x > 0 ? 1 : cutout)), y: contains90 ? 1 : Math.max(start.y * (start.y > 0 ? 1 : cutout), end.y * (end.y > 0 ? 1 : cutout))};
				var size = {width: (max.x - min.x) * 0.5, height: (max.y - min.y) * 0.5};
				minSize = Math.min(availableWidth / size.width, availableHeight / size.height);
				offset = {x: (max.x + min.x) * -0.5, y: (max.y + min.y) * -0.5};
			}

			for (i = 0, ilen = arcs.length; i < ilen; ++i) {
				arcs[i]._options = me._resolveElementOptions(arcs[i], i);
			}

			chart.borderWidth = me.getMaxBorderWidth();
			chart.outerRadius = Math.max((minSize - chart.borderWidth) / 2, 0);
			chart.innerRadius = Math.max(cutoutPercentage ? (chart.outerRadius / 100) * (cutoutPercentage) : 0, 0);
			chart.radiusLength = (chart.outerRadius - chart.innerRadius) / (me._getVisibleDatasetWeightTotal() || 1);
			chart.offsetX = offset.x * chart.outerRadius;
			chart.offsetY = offset.y * chart.outerRadius;

			meta.total = me.calculateTotal();

			me.outerRadius = chart.outerRadius - chart.radiusLength * me._getRingWeightOffset(me.index);
			me.innerRadius = Math.max(me.outerRadius - chart.radiusLength * chartWeight, 0);

			for (i = 0, ilen = arcs.length; i < ilen; ++i) {
				me.updateElement(arcs[i], i, reset);
			}
		},

		updateElement: function(arc, index, reset) {
			var me = this;
			var chart = me.chart;
			var chartArea = chart.chartArea;
			var opts = chart.options;
			var animationOpts = opts.animation;
			var centerX = (chartArea.left + chartArea.right) / 2;
			var centerY = (chartArea.top + chartArea.bottom) / 2;
			var startAngle = opts.rotation; // non reset case handled later
			var endAngle = opts.rotation; // non reset case handled later
			var dataset = me.getDataset();
			var circumference = reset && animationOpts.animateRotate ? 0 : arc.hidden ? 0 : me.calculateCircumference(dataset.data[index]) * (opts.circumference / (2.0 * Math.PI));
			var innerRadius = reset && animationOpts.animateScale ? 0 : me.innerRadius;
			var outerRadius = reset && animationOpts.animateScale ? 0 : me.outerRadius;
			var options = arc._options || {};

			helpers$1.extend(arc, {
				// Utility
				_datasetIndex: me.index,
				_index: index,

				// Desired view properties
				_model: {
					backgroundColor: options.backgroundColor,
					borderColor: options.borderColor,
					borderWidth: options.borderWidth,
					borderAlign: options.borderAlign,
					x: centerX + chart.offsetX,
					y: centerY + chart.offsetY,
					startAngle: startAngle,
					endAngle: endAngle,
					circumference: circumference,
					outerRadius: outerRadius,
					innerRadius: innerRadius,
					label: helpers$1.valueAtIndexOrDefault(dataset.label, index, chart.data.labels[index])
				}
			});

			var model = arc._model;

			// Set correct angles if not resetting
			if (!reset || !animationOpts.animateRotate) {
				if (index === 0) {
					model.startAngle = opts.rotation;
				} else {
					model.startAngle = me.getMeta().data[index - 1]._model.endAngle;
				}

				model.endAngle = model.startAngle + model.circumference;
			}

			arc.pivot();
		},

		calculateTotal: function() {
			var dataset = this.getDataset();
			var meta = this.getMeta();
			var total = 0;
			var value;

			helpers$1.each(meta.data, function(element, index) {
				value = dataset.data[index];
				if (!isNaN(value) && !element.hidden) {
					total += Math.abs(value);
				}
			});

			/* if (total === 0) {
				total = NaN;
			}*/

			return total;
		},

		calculateCircumference: function(value) {
			var total = this.getMeta().total;
			if (total > 0 && !isNaN(value)) {
				return (Math.PI * 2.0) * (Math.abs(value) / total);
			}
			return 0;
		},

		// gets the max border or hover width to properly scale pie charts
		getMaxBorderWidth: function(arcs) {
			var me = this;
			var max = 0;
			var chart = me.chart;
			var i, ilen, meta, arc, controller, options, borderWidth, hoverWidth;

			if (!arcs) {
				// Find the outmost visible dataset
				for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {
					if (chart.isDatasetVisible(i)) {
						meta = chart.getDatasetMeta(i);
						arcs = meta.data;
						if (i !== me.index) {
							controller = meta.controller;
						}
						break;
					}
				}
			}

			if (!arcs) {
				return 0;
			}

			for (i = 0, ilen = arcs.length; i < ilen; ++i) {
				arc = arcs[i];
				options = controller ? controller._resolveElementOptions(arc, i) : arc._options;
				if (options.borderAlign !== 'inner') {
					borderWidth = options.borderWidth;
					hoverWidth = options.hoverBorderWidth;

					max = borderWidth > max ? borderWidth : max;
					max = hoverWidth > max ? hoverWidth : max;
				}
			}
			return max;
		},

		/**
		 * @protected
		 */
		setHoverStyle: function(arc) {
			var model = arc._model;
			var options = arc._options;
			var getHoverColor = helpers$1.getHoverColor;

			arc.$previousStyle = {
				backgroundColor: model.backgroundColor,
				borderColor: model.borderColor,
				borderWidth: model.borderWidth,
			};

			model.backgroundColor = valueOrDefault$4(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));
			model.borderColor = valueOrDefault$4(options.hoverBorderColor, getHoverColor(options.borderColor));
			model.borderWidth = valueOrDefault$4(options.hoverBorderWidth, options.borderWidth);
		},

		/**
		 * @private
		 */
		_resolveElementOptions: function(arc, index) {
			var me = this;
			var chart = me.chart;
			var dataset = me.getDataset();
			var custom = arc.custom || {};
			var options = chart.options.elements.arc;
			var values = {};
			var i, ilen, key;

			// Scriptable options
			var context = {
				chart: chart,
				dataIndex: index,
				dataset: dataset,
				datasetIndex: me.index
			};

			var keys = [
				'backgroundColor',
				'borderColor',
				'borderWidth',
				'borderAlign',
				'hoverBackgroundColor',
				'hoverBorderColor',
				'hoverBorderWidth',
			];

			for (i = 0, ilen = keys.length; i < ilen; ++i) {
				key = keys[i];
				values[key] = resolve$3([
					custom[key],
					dataset[key],
					options[key]
				], context, index);
			}

			return values;
		},

		/**
		 * Get radius length offset of the dataset in relation to the visible datasets weights. This allows determining the inner and outer radius correctly
		 * @private
		 */
		_getRingWeightOffset: function(datasetIndex) {
			var ringWeightOffset = 0;

			for (var i = 0; i < datasetIndex; ++i) {
				if (this.chart.isDatasetVisible(i)) {
					ringWeightOffset += this._getRingWeight(i);
				}
			}

			return ringWeightOffset;
		},

		/**
		 * @private
		 */
		_getRingWeight: function(dataSetIndex) {
			return Math.max(valueOrDefault$4(this.chart.data.datasets[dataSetIndex].weight, 1), 0);
		},

		/**
		 * Returns the sum of all visibile data set weights.  This value can be 0.
		 * @private
		 */
		_getVisibleDatasetWeightTotal: function() {
			return this._getRingWeightOffset(this.chart.data.datasets.length);
		}
	});

	core_defaults._set('horizontalBar', {
		hover: {
			mode: 'index',
			axis: 'y'
		},

		scales: {
			xAxes: [{
				type: 'linear',
				position: 'bottom'
			}],

			yAxes: [{
				type: 'category',
				position: 'left',
				categoryPercentage: 0.8,
				barPercentage: 0.9,
				offset: true,
				gridLines: {
					offsetGridLines: true
				}
			}]
		},

		elements: {
			rectangle: {
				borderSkipped: 'left'
			}
		},

		tooltips: {
			mode: 'index',
			axis: 'y'
		}
	});

	var controller_horizontalBar = controller_bar.extend({
		/**
		 * @private
		 */
		_getValueScaleId: function() {
			return this.getMeta().xAxisID;
		},

		/**
		 * @private
		 */
		_getIndexScaleId: function() {
			return this.getMeta().yAxisID;
		}
	});

	var valueOrDefault$5 = helpers$1.valueOrDefault;
	var resolve$4 = helpers$1.options.resolve;
	var isPointInArea = helpers$1.canvas._isPointInArea;

	core_defaults._set('line', {
		showLines: true,
		spanGaps: false,

		hover: {
			mode: 'label'
		},

		scales: {
			xAxes: [{
				type: 'category',
				id: 'x-axis-0'
			}],
			yAxes: [{
				type: 'linear',
				id: 'y-axis-0'
			}]
		}
	});

	function lineEnabled(dataset, options) {
		return valueOrDefault$5(dataset.showLine, options.showLines);
	}

	var controller_line = core_datasetController.extend({

		datasetElementType: elements.Line,

		dataElementType: elements.Point,

		update: function(reset) {
			var me = this;
			var meta = me.getMeta();
			var line = meta.dataset;
			var points = meta.data || [];
			var scale = me.getScaleForId(meta.yAxisID);
			var dataset = me.getDataset();
			var showLine = lineEnabled(dataset, me.chart.options);
			var i, ilen;

			// Update Line
			if (showLine) {
				// Compatibility: If the properties are defined with only the old name, use those values
				if ((dataset.tension !== undefined) && (dataset.lineTension === undefined)) {
					dataset.lineTension = dataset.tension;
				}

				// Utility
				line._scale = scale;
				line._datasetIndex = me.index;
				// Data
				line._children = points;
				// Model
				line._model = me._resolveLineOptions(line);

				line.pivot();
			}

			// Update Points
			for (i = 0, ilen = points.length; i < ilen; ++i) {
				me.updateElement(points[i], i, reset);
			}

			if (showLine && line._model.tension !== 0) {
				me.updateBezierControlPoints();
			}

			// Now pivot the point for animation
			for (i = 0, ilen = points.length; i < ilen; ++i) {
				points[i].pivot();
			}
		},

		updateElement: function(point, index, reset) {
			var me = this;
			var meta = me.getMeta();
			var custom = point.custom || {};
			var dataset = me.getDataset();
			var datasetIndex = me.index;
			var value = dataset.data[index];
			var yScale = me.getScaleForId(meta.yAxisID);
			var xScale = me.getScaleForId(meta.xAxisID);
			var lineModel = meta.dataset._model;
			var x, y;

			var options = me._resolvePointOptions(point, index);

			x = xScale.getPixelForValue(typeof value === 'object' ? value : NaN, index, datasetIndex);
			y = reset ? yScale.getBasePixel() : me.calculatePointY(value, index, datasetIndex);

			// Utility
			point._xScale = xScale;
			point._yScale = yScale;
			point._options = options;
			point._datasetIndex = datasetIndex;
			point._index = index;

			// Desired view properties
			point._model = {
				x: x,
				y: y,
				skip: custom.skip || isNaN(x) || isNaN(y),
				// Appearance
				radius: options.radius,
				pointStyle: options.pointStyle,
				rotation: options.rotation,
				backgroundColor: options.backgroundColor,
				borderColor: options.borderColor,
				borderWidth: options.borderWidth,
				tension: valueOrDefault$5(custom.tension, lineModel ? lineModel.tension : 0),
				steppedLine: lineModel ? lineModel.steppedLine : false,
				// Tooltip
				hitRadius: options.hitRadius
			};
		},

		/**
		 * @private
		 */
		_resolvePointOptions: function(element, index) {
			var me = this;
			var chart = me.chart;
			var dataset = chart.data.datasets[me.index];
			var custom = element.custom || {};
			var options = chart.options.elements.point;
			var values = {};
			var i, ilen, key;

			// Scriptable options
			var context = {
				chart: chart,
				dataIndex: index,
				dataset: dataset,
				datasetIndex: me.index
			};

			var ELEMENT_OPTIONS = {
				backgroundColor: 'pointBackgroundColor',
				borderColor: 'pointBorderColor',
				borderWidth: 'pointBorderWidth',
				hitRadius: 'pointHitRadius',
				hoverBackgroundColor: 'pointHoverBackgroundColor',
				hoverBorderColor: 'pointHoverBorderColor',
				hoverBorderWidth: 'pointHoverBorderWidth',
				hoverRadius: 'pointHoverRadius',
				pointStyle: 'pointStyle',
				radius: 'pointRadius',
				rotation: 'pointRotation'
			};
			var keys = Object.keys(ELEMENT_OPTIONS);

			for (i = 0, ilen = keys.length; i < ilen; ++i) {
				key = keys[i];
				values[key] = resolve$4([
					custom[key],
					dataset[ELEMENT_OPTIONS[key]],
					dataset[key],
					options[key]
				], context, index);
			}

			return values;
		},

		/**
		 * @private
		 */
		_resolveLineOptions: function(element) {
			var me = this;
			var chart = me.chart;
			var dataset = chart.data.datasets[me.index];
			var custom = element.custom || {};
			var options = chart.options;
			var elementOptions = options.elements.line;
			var values = {};
			var i, ilen, key;

			var keys = [
				'backgroundColor',
				'borderWidth',
				'borderColor',
				'borderCapStyle',
				'borderDash',
				'borderDashOffset',
				'borderJoinStyle',
				'fill',
				'cubicInterpolationMode'
			];

			for (i = 0, ilen = keys.length; i < ilen; ++i) {
				key = keys[i];
				values[key] = resolve$4([
					custom[key],
					dataset[key],
					elementOptions[key]
				]);
			}

			// The default behavior of lines is to break at null values, according
			// to https://github.com/chartjs/Chart.js/issues/2435#issuecomment-216718158
			// This option gives lines the ability to span gaps
			values.spanGaps = valueOrDefault$5(dataset.spanGaps, options.spanGaps);
			values.tension = valueOrDefault$5(dataset.lineTension, elementOptions.tension);
			values.steppedLine = resolve$4([custom.steppedLine, dataset.steppedLine, elementOptions.stepped]);

			return values;
		},

		calculatePointY: function(value, index, datasetIndex) {
			var me = this;
			var chart = me.chart;
			var meta = me.getMeta();
			var yScale = me.getScaleForId(meta.yAxisID);
			var sumPos = 0;
			var sumNeg = 0;
			var i, ds, dsMeta;

			if (yScale.options.stacked) {
				for (i = 0; i < datasetIndex; i++) {
					ds = chart.data.datasets[i];
					dsMeta = chart.getDatasetMeta(i);
					if (dsMeta.type === 'line' && dsMeta.yAxisID === yScale.id && chart.isDatasetVisible(i)) {
						var stackedRightValue = Number(yScale.getRightValue(ds.data[index]));
						if (stackedRightValue < 0) {
							sumNeg += stackedRightValue || 0;
						} else {
							sumPos += stackedRightValue || 0;
						}
					}
				}

				var rightValue = Number(yScale.getRightValue(value));
				if (rightValue < 0) {
					return yScale.getPixelForValue(sumNeg + rightValue);
				}
				return yScale.getPixelForValue(sumPos + rightValue);
			}

			return yScale.getPixelForValue(value);
		},

		updateBezierControlPoints: function() {
			var me = this;
			var chart = me.chart;
			var meta = me.getMeta();
			var lineModel = meta.dataset._model;
			var area = chart.chartArea;
			var points = meta.data || [];
			var i, ilen, model, controlPoints;

			// Only consider points that are drawn in case the spanGaps option is used
			if (lineModel.spanGaps) {
				points = points.filter(function(pt) {
					return !pt._model.skip;
				});
			}

			function capControlPoint(pt, min, max) {
				return Math.max(Math.min(pt, max), min);
			}

			if (lineModel.cubicInterpolationMode === 'monotone') {
				helpers$1.splineCurveMonotone(points);
			} else {
				for (i = 0, ilen = points.length; i < ilen; ++i) {
					model = points[i]._model;
					controlPoints = helpers$1.splineCurve(
						helpers$1.previousItem(points, i)._model,
						model,
						helpers$1.nextItem(points, i)._model,
						lineModel.tension
					);
					model.controlPointPreviousX = controlPoints.previous.x;
					model.controlPointPreviousY = controlPoints.previous.y;
					model.controlPointNextX = controlPoints.next.x;
					model.controlPointNextY = controlPoints.next.y;
				}
			}

			if (chart.options.elements.line.capBezierPoints) {
				for (i = 0, ilen = points.length; i < ilen; ++i) {
					model = points[i]._model;
					if (isPointInArea(model, area)) {
						if (i > 0 && isPointInArea(points[i - 1]._model, area)) {
							model.controlPointPreviousX = capControlPoint(model.controlPointPreviousX, area.left, area.right);
							model.controlPointPreviousY = capControlPoint(model.controlPointPreviousY, area.top, area.bottom);
						}
						if (i < points.length - 1 && isPointInArea(points[i + 1]._model, area)) {
							model.controlPointNextX = capControlPoint(model.controlPointNextX, area.left, area.right);
							model.controlPointNextY = capControlPoint(model.controlPointNextY, area.top, area.bottom);
						}
					}
				}
			}
		},

		draw: function() {
			var me = this;
			var chart = me.chart;
			var meta = me.getMeta();
			var points = meta.data || [];
			var area = chart.chartArea;
			var ilen = points.length;
			var halfBorderWidth;
			var i = 0;

			if (lineEnabled(me.getDataset(), chart.options)) {
				halfBorderWidth = (meta.dataset._model.borderWidth || 0) / 2;

				helpers$1.canvas.clipArea(chart.ctx, {
					left: area.left,
					right: area.right,
					top: area.top - halfBorderWidth,
					bottom: area.bottom + halfBorderWidth
				});

				meta.dataset.draw();

				helpers$1.canvas.unclipArea(chart.ctx);
			}

			// Draw the points
			for (; i < ilen; ++i) {
				points[i].draw(area);
			}
		},

		/**
		 * @protected
		 */
		setHoverStyle: function(point) {
			var model = point._model;
			var options = point._options;
			var getHoverColor = helpers$1.getHoverColor;

			point.$previousStyle = {
				backgroundColor: model.backgroundColor,
				borderColor: model.borderColor,
				borderWidth: model.borderWidth,
				radius: model.radius
			};

			model.backgroundColor = valueOrDefault$5(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));
			model.borderColor = valueOrDefault$5(options.hoverBorderColor, getHoverColor(options.borderColor));
			model.borderWidth = valueOrDefault$5(options.hoverBorderWidth, options.borderWidth);
			model.radius = valueOrDefault$5(options.hoverRadius, options.radius);
		},
	});

	var resolve$5 = helpers$1.options.resolve;

	core_defaults._set('polarArea', {
		scale: {
			type: 'radialLinear',
			angleLines: {
				display: false
			},
			gridLines: {
				circular: true
			},
			pointLabels: {
				display: false
			},
			ticks: {
				beginAtZero: true
			}
		},

		// Boolean - Whether to animate the rotation of the chart
		animation: {
			animateRotate: true,
			animateScale: true
		},

		startAngle: -0.5 * Math.PI,
		legendCallback: function(chart) {
			var text = [];
			text.push('<ul class="' + chart.id + '-legend">');

			var data = chart.data;
			var datasets = data.datasets;
			var labels = data.labels;

			if (datasets.length) {
				for (var i = 0; i < datasets[0].data.length; ++i) {
					text.push('<li><span style="background-color:' + datasets[0].backgroundColor[i] + '"></span>');
					if (labels[i]) {
						text.push(labels[i]);
					}
					text.push('</li>');
				}
			}

			text.push('</ul>');
			return text.join('');
		},
		legend: {
			labels: {
				generateLabels: function(chart) {
					var data = chart.data;
					if (data.labels.length && data.datasets.length) {
						return data.labels.map(function(label, i) {
							var meta = chart.getDatasetMeta(0);
							var ds = data.datasets[0];
							var arc = meta.data[i];
							var custom = arc.custom || {};
							var arcOpts = chart.options.elements.arc;
							var fill = resolve$5([custom.backgroundColor, ds.backgroundColor, arcOpts.backgroundColor], undefined, i);
							var stroke = resolve$5([custom.borderColor, ds.borderColor, arcOpts.borderColor], undefined, i);
							var bw = resolve$5([custom.borderWidth, ds.borderWidth, arcOpts.borderWidth], undefined, i);

							return {
								text: label,
								fillStyle: fill,
								strokeStyle: stroke,
								lineWidth: bw,
								hidden: isNaN(ds.data[i]) || meta.data[i].hidden,

								// Extra data used for toggling the correct item
								index: i
							};
						});
					}
					return [];
				}
			},

			onClick: function(e, legendItem) {
				var index = legendItem.index;
				var chart = this.chart;
				var i, ilen, meta;

				for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {
					meta = chart.getDatasetMeta(i);
					meta.data[index].hidden = !meta.data[index].hidden;
				}

				chart.update();
			}
		},

		// Need to override these to give a nice default
		tooltips: {
			callbacks: {
				title: function() {
					return '';
				},
				label: function(item, data) {
					return data.labels[item.index] + ': ' + item.yLabel;
				}
			}
		}
	});

	var controller_polarArea = core_datasetController.extend({

		dataElementType: elements.Arc,

		linkScales: helpers$1.noop,

		update: function(reset) {
			var me = this;
			var dataset = me.getDataset();
			var meta = me.getMeta();
			var start = me.chart.options.startAngle || 0;
			var starts = me._starts = [];
			var angles = me._angles = [];
			var arcs = meta.data;
			var i, ilen, angle;

			me._updateRadius();

			meta.count = me.countVisibleElements();

			for (i = 0, ilen = dataset.data.length; i < ilen; i++) {
				starts[i] = start;
				angle = me._computeAngle(i);
				angles[i] = angle;
				start += angle;
			}

			for (i = 0, ilen = arcs.length; i < ilen; ++i) {
				arcs[i]._options = me._resolveElementOptions(arcs[i], i);
				me.updateElement(arcs[i], i, reset);
			}
		},

		/**
		 * @private
		 */
		_updateRadius: function() {
			var me = this;
			var chart = me.chart;
			var chartArea = chart.chartArea;
			var opts = chart.options;
			var minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);

			chart.outerRadius = Math.max(minSize / 2, 0);
			chart.innerRadius = Math.max(opts.cutoutPercentage ? (chart.outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);
			chart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();

			me.outerRadius = chart.outerRadius - (chart.radiusLength * me.index);
			me.innerRadius = me.outerRadius - chart.radiusLength;
		},

		updateElement: function(arc, index, reset) {
			var me = this;
			var chart = me.chart;
			var dataset = me.getDataset();
			var opts = chart.options;
			var animationOpts = opts.animation;
			var scale = chart.scale;
			var labels = chart.data.labels;

			var centerX = scale.xCenter;
			var centerY = scale.yCenter;

			// var negHalfPI = -0.5 * Math.PI;
			var datasetStartAngle = opts.startAngle;
			var distance = arc.hidden ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);
			var startAngle = me._starts[index];
			var endAngle = startAngle + (arc.hidden ? 0 : me._angles[index]);

			var resetRadius = animationOpts.animateScale ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);
			var options = arc._options || {};

			helpers$1.extend(arc, {
				// Utility
				_datasetIndex: me.index,
				_index: index,
				_scale: scale,

				// Desired view properties
				_model: {
					backgroundColor: options.backgroundColor,
					borderColor: options.borderColor,
					borderWidth: options.borderWidth,
					borderAlign: options.borderAlign,
					x: centerX,
					y: centerY,
					innerRadius: 0,
					outerRadius: reset ? resetRadius : distance,
					startAngle: reset && animationOpts.animateRotate ? datasetStartAngle : startAngle,
					endAngle: reset && animationOpts.animateRotate ? datasetStartAngle : endAngle,
					label: helpers$1.valueAtIndexOrDefault(labels, index, labels[index])
				}
			});

			arc.pivot();
		},

		countVisibleElements: function() {
			var dataset = this.getDataset();
			var meta = this.getMeta();
			var count = 0;

			helpers$1.each(meta.data, function(element, index) {
				if (!isNaN(dataset.data[index]) && !element.hidden) {
					count++;
				}
			});

			return count;
		},

		/**
		 * @protected
		 */
		setHoverStyle: function(arc) {
			var model = arc._model;
			var options = arc._options;
			var getHoverColor = helpers$1.getHoverColor;
			var valueOrDefault = helpers$1.valueOrDefault;

			arc.$previousStyle = {
				backgroundColor: model.backgroundColor,
				borderColor: model.borderColor,
				borderWidth: model.borderWidth,
			};

			model.backgroundColor = valueOrDefault(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));
			model.borderColor = valueOrDefault(options.hoverBorderColor, getHoverColor(options.borderColor));
			model.borderWidth = valueOrDefault(options.hoverBorderWidth, options.borderWidth);
		},

		/**
		 * @private
		 */
		_resolveElementOptions: function(arc, index) {
			var me = this;
			var chart = me.chart;
			var dataset = me.getDataset();
			var custom = arc.custom || {};
			var options = chart.options.elements.arc;
			var values = {};
			var i, ilen, key;

			// Scriptable options
			var context = {
				chart: chart,
				dataIndex: index,
				dataset: dataset,
				datasetIndex: me.index
			};

			var keys = [
				'backgroundColor',
				'borderColor',
				'borderWidth',
				'borderAlign',
				'hoverBackgroundColor',
				'hoverBorderColor',
				'hoverBorderWidth',
			];

			for (i = 0, ilen = keys.length; i < ilen; ++i) {
				key = keys[i];
				values[key] = resolve$5([
					custom[key],
					dataset[key],
					options[key]
				], context, index);
			}

			return values;
		},

		/**
		 * @private
		 */
		_computeAngle: function(index) {
			var me = this;
			var count = this.getMeta().count;
			var dataset = me.getDataset();
			var meta = me.getMeta();

			if (isNaN(dataset.data[index]) || meta.data[index].hidden) {
				return 0;
			}

			// Scriptable options
			var context = {
				chart: me.chart,
				dataIndex: index,
				dataset: dataset,
				datasetIndex: me.index
			};

			return resolve$5([
				me.chart.options.elements.arc.angle,
				(2 * Math.PI) / count
			], context, index);
		}
	});

	core_defaults._set('pie', helpers$1.clone(core_defaults.doughnut));
	core_defaults._set('pie', {
		cutoutPercentage: 0
	});

	// Pie charts are Doughnut chart with different defaults
	var controller_pie = controller_doughnut;

	var valueOrDefault$6 = helpers$1.valueOrDefault;
	var resolve$6 = helpers$1.options.resolve;

	core_defaults._set('radar', {
		scale: {
			type: 'radialLinear'
		},
		elements: {
			line: {
				tension: 0 // no bezier in radar
			}
		}
	});

	var controller_radar = core_datasetController.extend({

		datasetElementType: elements.Line,

		dataElementType: elements.Point,

		linkScales: helpers$1.noop,

		update: function(reset) {
			var me = this;
			var meta = me.getMeta();
			var line = meta.dataset;
			var points = meta.data || [];
			var scale = me.chart.scale;
			var dataset = me.getDataset();
			var i, ilen;

			// Compatibility: If the properties are defined with only the old name, use those values
			if ((dataset.tension !== undefined) && (dataset.lineTension === undefined)) {
				dataset.lineTension = dataset.tension;
			}

			// Utility
			line._scale = scale;
			line._datasetIndex = me.index;
			// Data
			line._children = points;
			line._loop = true;
			// Model
			line._model = me._resolveLineOptions(line);

			line.pivot();

			// Update Points
			for (i = 0, ilen = points.length; i < ilen; ++i) {
				me.updateElement(points[i], i, reset);
			}

			// Update bezier control points
			me.updateBezierControlPoints();

			// Now pivot the point for animation
			for (i = 0, ilen = points.length; i < ilen; ++i) {
				points[i].pivot();
			}
		},

		updateElement: function(point, index, reset) {
			var me = this;
			var custom = point.custom || {};
			var dataset = me.getDataset();
			var scale = me.chart.scale;
			var pointPosition = scale.getPointPositionForValue(index, dataset.data[index]);
			var options = me._resolvePointOptions(point, index);
			var lineModel = me.getMeta().dataset._model;
			var x = reset ? scale.xCenter : pointPosition.x;
			var y = reset ? scale.yCenter : pointPosition.y;

			// Utility
			point._scale = scale;
			point._options = options;
			point._datasetIndex = me.index;
			point._index = index;

			// Desired view properties
			point._model = {
				x: x, // value not used in dataset scale, but we want a consistent API between scales
				y: y,
				skip: custom.skip || isNaN(x) || isNaN(y),
				// Appearance
				radius: options.radius,
				pointStyle: options.pointStyle,
				rotation: options.rotation,
				backgroundColor: options.backgroundColor,
				borderColor: options.borderColor,
				borderWidth: options.borderWidth,
				tension: valueOrDefault$6(custom.tension, lineModel ? lineModel.tension : 0),

				// Tooltip
				hitRadius: options.hitRadius
			};
		},

		/**
		 * @private
		 */
		_resolvePointOptions: function(element, index) {
			var me = this;
			var chart = me.chart;
			var dataset = chart.data.datasets[me.index];
			var custom = element.custom || {};
			var options = chart.options.elements.point;
			var values = {};
			var i, ilen, key;

			// Scriptable options
			var context = {
				chart: chart,
				dataIndex: index,
				dataset: dataset,
				datasetIndex: me.index
			};

			var ELEMENT_OPTIONS = {
				backgroundColor: 'pointBackgroundColor',
				borderColor: 'pointBorderColor',
				borderWidth: 'pointBorderWidth',
				hitRadius: 'pointHitRadius',
				hoverBackgroundColor: 'pointHoverBackgroundColor',
				hoverBorderColor: 'pointHoverBorderColor',
				hoverBorderWidth: 'pointHoverBorderWidth',
				hoverRadius: 'pointHoverRadius',
				pointStyle: 'pointStyle',
				radius: 'pointRadius',
				rotation: 'pointRotation'
			};
			var keys = Object.keys(ELEMENT_OPTIONS);

			for (i = 0, ilen = keys.length; i < ilen; ++i) {
				key = keys[i];
				values[key] = resolve$6([
					custom[key],
					dataset[ELEMENT_OPTIONS[key]],
					dataset[key],
					options[key]
				], context, index);
			}

			return values;
		},

		/**
		 * @private
		 */
		_resolveLineOptions: function(element) {
			var me = this;
			var chart = me.chart;
			var dataset = chart.data.datasets[me.index];
			var custom = element.custom || {};
			var options = chart.options.elements.line;
			var values = {};
			var i, ilen, key;

			var keys = [
				'backgroundColor',
				'borderWidth',
				'borderColor',
				'borderCapStyle',
				'borderDash',
				'borderDashOffset',
				'borderJoinStyle',
				'fill'
			];

			for (i = 0, ilen = keys.length; i < ilen; ++i) {
				key = keys[i];
				values[key] = resolve$6([
					custom[key],
					dataset[key],
					options[key]
				]);
			}

			values.tension = valueOrDefault$6(dataset.lineTension, options.tension);

			return values;
		},

		updateBezierControlPoints: function() {
			var me = this;
			var meta = me.getMeta();
			var area = me.chart.chartArea;
			var points = meta.data || [];
			var i, ilen, model, controlPoints;

			function capControlPoint(pt, min, max) {
				return Math.max(Math.min(pt, max), min);
			}

			for (i = 0, ilen = points.length; i < ilen; ++i) {
				model = points[i]._model;
				controlPoints = helpers$1.splineCurve(
					helpers$1.previousItem(points, i, true)._model,
					model,
					helpers$1.nextItem(points, i, true)._model,
					model.tension
				);

				// Prevent the bezier going outside of the bounds of the graph
				model.controlPointPreviousX = capControlPoint(controlPoints.previous.x, area.left, area.right);
				model.controlPointPreviousY = capControlPoint(controlPoints.previous.y, area.top, area.bottom);
				model.controlPointNextX = capControlPoint(controlPoints.next.x, area.left, area.right);
				model.controlPointNextY = capControlPoint(controlPoints.next.y, area.top, area.bottom);
			}
		},

		setHoverStyle: function(point) {
			var model = point._model;
			var options = point._options;
			var getHoverColor = helpers$1.getHoverColor;

			point.$previousStyle = {
				backgroundColor: model.backgroundColor,
				borderColor: model.borderColor,
				borderWidth: model.borderWidth,
				radius: model.radius
			};

			model.backgroundColor = valueOrDefault$6(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));
			model.borderColor = valueOrDefault$6(options.hoverBorderColor, getHoverColor(options.borderColor));
			model.borderWidth = valueOrDefault$6(options.hoverBorderWidth, options.borderWidth);
			model.radius = valueOrDefault$6(options.hoverRadius, options.radius);
		}
	});

	core_defaults._set('scatter', {
		hover: {
			mode: 'single'
		},

		scales: {
			xAxes: [{
				id: 'x-axis-1',    // need an ID so datasets can reference the scale
				type: 'linear',    // scatter should not use a category axis
				position: 'bottom'
			}],
			yAxes: [{
				id: 'y-axis-1',
				type: 'linear',
				position: 'left'
			}]
		},

		showLines: false,

		tooltips: {
			callbacks: {
				title: function() {
					return '';     // doesn't make sense for scatter since data are formatted as a point
				},
				label: function(item) {
					return '(' + item.xLabel + ', ' + item.yLabel + ')';
				}
			}
		}
	});

	// Scatter charts use line controllers
	var controller_scatter = controller_line;

	// NOTE export a map in which the key represents the controller type, not
	// the class, and so must be CamelCase in order to be correctly retrieved
	// by the controller in core.controller.js (`controllers[meta.type]`).

	var controllers = {
		bar: controller_bar,
		bubble: controller_bubble,
		doughnut: controller_doughnut,
		horizontalBar: controller_horizontalBar,
		line: controller_line,
		polarArea: controller_polarArea,
		pie: controller_pie,
		radar: controller_radar,
		scatter: controller_scatter
	};

	/**
	 * Helper function to get relative position for an event
	 * @param {Event|IEvent} event - The event to get the position for
	 * @param {Chart} chart - The chart
	 * @returns {object} the event position
	 */
	function getRelativePosition(e, chart) {
		if (e.native) {
			return {
				x: e.x,
				y: e.y
			};
		}

		return helpers$1.getRelativePosition(e, chart);
	}

	/**
	 * Helper function to traverse all of the visible elements in the chart
	 * @param {Chart} chart - the chart
	 * @param {function} handler - the callback to execute for each visible item
	 */
	function parseVisibleItems(chart, handler) {
		var datasets = chart.data.datasets;
		var meta, i, j, ilen, jlen;

		for (i = 0, ilen = datasets.length; i < ilen; ++i) {
			if (!chart.isDatasetVisible(i)) {
				continue;
			}

			meta = chart.getDatasetMeta(i);
			for (j = 0, jlen = meta.data.length; j < jlen; ++j) {
				var element = meta.data[j];
				if (!element._view.skip) {
					handler(element);
				}
			}
		}
	}

	/**
	 * Helper function to get the items that intersect the event position
	 * @param {ChartElement[]} items - elements to filter
	 * @param {object} position - the point to be nearest to
	 * @return {ChartElement[]} the nearest items
	 */
	function getIntersectItems(chart, position) {
		var elements = [];

		parseVisibleItems(chart, function(element) {
			if (element.inRange(position.x, position.y)) {
				elements.push(element);
			}
		});

		return elements;
	}

	/**
	 * Helper function to get the items nearest to the event position considering all visible items in teh chart
	 * @param {Chart} chart - the chart to look at elements from
	 * @param {object} position - the point to be nearest to
	 * @param {boolean} intersect - if true, only consider items that intersect the position
	 * @param {function} distanceMetric - function to provide the distance between points
	 * @return {ChartElement[]} the nearest items
	 */
	function getNearestItems(chart, position, intersect, distanceMetric) {
		var minDistance = Number.POSITIVE_INFINITY;
		var nearestItems = [];

		parseVisibleItems(chart, function(element) {
			if (intersect && !element.inRange(position.x, position.y)) {
				return;
			}

			var center = element.getCenterPoint();
			var distance = distanceMetric(position, center);
			if (distance < minDistance) {
				nearestItems = [element];
				minDistance = distance;
			} else if (distance === minDistance) {
				// Can have multiple items at the same distance in which case we sort by size
				nearestItems.push(element);
			}
		});

		return nearestItems;
	}

	/**
	 * Get a distance metric function for two points based on the
	 * axis mode setting
	 * @param {string} axis - the axis mode. x|y|xy
	 */
	function getDistanceMetricForAxis(axis) {
		var useX = axis.indexOf('x') !== -1;
		var useY = axis.indexOf('y') !== -1;

		return function(pt1, pt2) {
			var deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;
			var deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;
			return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));
		};
	}

	function indexMode(chart, e, options) {
		var position = getRelativePosition(e, chart);
		// Default axis for index mode is 'x' to match old behaviour
		options.axis = options.axis || 'x';
		var distanceMetric = getDistanceMetricForAxis(options.axis);
		var items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);
		var elements = [];

		if (!items.length) {
			return [];
		}

		chart.data.datasets.forEach(function(dataset, datasetIndex) {
			if (chart.isDatasetVisible(datasetIndex)) {
				var meta = chart.getDatasetMeta(datasetIndex);
				var element = meta.data[items[0]._index];

				// don't count items that are skipped (null data)
				if (element && !element._view.skip) {
					elements.push(element);
				}
			}
		});

		return elements;
	}

	/**
	 * @interface IInteractionOptions
	 */
	/**
	 * If true, only consider items that intersect the point
	 * @name IInterfaceOptions#boolean
	 * @type Boolean
	 */

	/**
	 * Contains interaction related functions
	 * @namespace Chart.Interaction
	 */
	var core_interaction = {
		// Helper function for different modes
		modes: {
			single: function(chart, e) {
				var position = getRelativePosition(e, chart);
				var elements = [];

				parseVisibleItems(chart, function(element) {
					if (element.inRange(position.x, position.y)) {
						elements.push(element);
						return elements;
					}
				});

				return elements.slice(0, 1);
			},

			/**
			 * @function Chart.Interaction.modes.label
			 * @deprecated since version 2.4.0
			 * @todo remove at version 3
			 * @private
			 */
			label: indexMode,

			/**
			 * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something
			 * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item
			 * @function Chart.Interaction.modes.index
			 * @since v2.4.0
			 * @param {Chart} chart - the chart we are returning items from
			 * @param {Event} e - the event we are find things at
			 * @param {IInteractionOptions} options - options to use during interaction
			 * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned
			 */
			index: indexMode,

			/**
			 * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something
			 * If the options.intersect is false, we find the nearest item and return the items in that dataset
			 * @function Chart.Interaction.modes.dataset
			 * @param {Chart} chart - the chart we are returning items from
			 * @param {Event} e - the event we are find things at
			 * @param {IInteractionOptions} options - options to use during interaction
			 * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned
			 */
			dataset: function(chart, e, options) {
				var position = getRelativePosition(e, chart);
				options.axis = options.axis || 'xy';
				var distanceMetric = getDistanceMetricForAxis(options.axis);
				var items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);

				if (items.length > 0) {
					items = chart.getDatasetMeta(items[0]._datasetIndex).data;
				}

				return items;
			},

			/**
			 * @function Chart.Interaction.modes.x-axis
			 * @deprecated since version 2.4.0. Use index mode and intersect == true
			 * @todo remove at version 3
			 * @private
			 */
			'x-axis': function(chart, e) {
				return indexMode(chart, e, {intersect: false});
			},

			/**
			 * Point mode returns all elements that hit test based on the event position
			 * of the event
			 * @function Chart.Interaction.modes.intersect
			 * @param {Chart} chart - the chart we are returning items from
			 * @param {Event} e - the event we are find things at
			 * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned
			 */
			point: function(chart, e) {
				var position = getRelativePosition(e, chart);
				return getIntersectItems(chart, position);
			},

			/**
			 * nearest mode returns the element closest to the point
			 * @function Chart.Interaction.modes.intersect
			 * @param {Chart} chart - the chart we are returning items from
			 * @param {Event} e - the event we are find things at
			 * @param {IInteractionOptions} options - options to use
			 * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned
			 */
			nearest: function(chart, e, options) {
				var position = getRelativePosition(e, chart);
				options.axis = options.axis || 'xy';
				var distanceMetric = getDistanceMetricForAxis(options.axis);
				return getNearestItems(chart, position, options.intersect, distanceMetric);
			},

			/**
			 * x mode returns the elements that hit-test at the current x coordinate
			 * @function Chart.Interaction.modes.x
			 * @param {Chart} chart - the chart we are returning items from
			 * @param {Event} e - the event we are find things at
			 * @param {IInteractionOptions} options - options to use
			 * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned
			 */
			x: function(chart, e, options) {
				var position = getRelativePosition(e, chart);
				var items = [];
				var intersectsItem = false;

				parseVisibleItems(chart, function(element) {
					if (element.inXRange(position.x)) {
						items.push(element);
					}

					if (element.inRange(position.x, position.y)) {
						intersectsItem = true;
					}
				});

				// If we want to trigger on an intersect and we don't have any items
				// that intersect the position, return nothing
				if (options.intersect && !intersectsItem) {
					items = [];
				}
				return items;
			},

			/**
			 * y mode returns the elements that hit-test at the current y coordinate
			 * @function Chart.Interaction.modes.y
			 * @param {Chart} chart - the chart we are returning items from
			 * @param {Event} e - the event we are find things at
			 * @param {IInteractionOptions} options - options to use
			 * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned
			 */
			y: function(chart, e, options) {
				var position = getRelativePosition(e, chart);
				var items = [];
				var intersectsItem = false;

				parseVisibleItems(chart, function(element) {
					if (element.inYRange(position.y)) {
						items.push(element);
					}

					if (element.inRange(position.x, position.y)) {
						intersectsItem = true;
					}
				});

				// If we want to trigger on an intersect and we don't have any items
				// that intersect the position, return nothing
				if (options.intersect && !intersectsItem) {
					items = [];
				}
				return items;
			}
		}
	};

	function filterByPosition(array, position) {
		return helpers$1.where(array, function(v) {
			return v.position === position;
		});
	}

	function sortByWeight(array, reverse) {
		array.forEach(function(v, i) {
			v._tmpIndex_ = i;
			return v;
		});
		array.sort(function(a, b) {
			var v0 = reverse ? b : a;
			var v1 = reverse ? a : b;
			return v0.weight === v1.weight ?
				v0._tmpIndex_ - v1._tmpIndex_ :
				v0.weight - v1.weight;
		});
		array.forEach(function(v) {
			delete v._tmpIndex_;
		});
	}

	function findMaxPadding(boxes) {
		var top = 0;
		var left = 0;
		var bottom = 0;
		var right = 0;
		helpers$1.each(boxes, function(box) {
			if (box.getPadding) {
				var boxPadding = box.getPadding();
				top = Math.max(top, boxPadding.top);
				left = Math.max(left, boxPadding.left);
				bottom = Math.max(bottom, boxPadding.bottom);
				right = Math.max(right, boxPadding.right);
			}
		});
		return {
			top: top,
			left: left,
			bottom: bottom,
			right: right
		};
	}

	function addSizeByPosition(boxes, size) {
		helpers$1.each(boxes, function(box) {
			size[box.position] += box.isHorizontal() ? box.height : box.width;
		});
	}

	core_defaults._set('global', {
		layout: {
			padding: {
				top: 0,
				right: 0,
				bottom: 0,
				left: 0
			}
		}
	});

	/**
	 * @interface ILayoutItem
	 * @prop {string} position - The position of the item in the chart layout. Possible values are
	 * 'left', 'top', 'right', 'bottom', and 'chartArea'
	 * @prop {number} weight - The weight used to sort the item. Higher weights are further away from the chart area
	 * @prop {boolean} fullWidth - if true, and the item is horizontal, then push vertical boxes down
	 * @prop {function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)
	 * @prop {function} update - Takes two parameters: width and height. Returns size of item
	 * @prop {function} getPadding -  Returns an object with padding on the edges
	 * @prop {number} width - Width of item. Must be valid after update()
	 * @prop {number} height - Height of item. Must be valid after update()
	 * @prop {number} left - Left edge of the item. Set by layout system and cannot be used in update
	 * @prop {number} top - Top edge of the item. Set by layout system and cannot be used in update
	 * @prop {number} right - Right edge of the item. Set by layout system and cannot be used in update
	 * @prop {number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update
	 */

	// The layout service is very self explanatory.  It's responsible for the layout within a chart.
	// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need
	// It is this service's responsibility of carrying out that layout.
	var core_layouts = {
		defaults: {},

		/**
		 * Register a box to a chart.
		 * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.
		 * @param {Chart} chart - the chart to use
		 * @param {ILayoutItem} item - the item to add to be layed out
		 */
		addBox: function(chart, item) {
			if (!chart.boxes) {
				chart.boxes = [];
			}

			// initialize item with default values
			item.fullWidth = item.fullWidth || false;
			item.position = item.position || 'top';
			item.weight = item.weight || 0;

			chart.boxes.push(item);
		},

		/**
		 * Remove a layoutItem from a chart
		 * @param {Chart} chart - the chart to remove the box from
		 * @param {ILayoutItem} layoutItem - the item to remove from the layout
		 */
		removeBox: function(chart, layoutItem) {
			var index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;
			if (index !== -1) {
				chart.boxes.splice(index, 1);
			}
		},

		/**
		 * Sets (or updates) options on the given `item`.
		 * @param {Chart} chart - the chart in which the item lives (or will be added to)
		 * @param {ILayoutItem} item - the item to configure with the given options
		 * @param {object} options - the new item options.
		 */
		configure: function(chart, item, options) {
			var props = ['fullWidth', 'position', 'weight'];
			var ilen = props.length;
			var i = 0;
			var prop;

			for (; i < ilen; ++i) {
				prop = props[i];
				if (options.hasOwnProperty(prop)) {
					item[prop] = options[prop];
				}
			}
		},

		/**
		 * Fits boxes of the given chart into the given size by having each box measure itself
		 * then running a fitting algorithm
		 * @param {Chart} chart - the chart
		 * @param {number} width - the width to fit into
		 * @param {number} height - the height to fit into
		 */
		update: function(chart, width, height) {
			if (!chart) {
				return;
			}

			var layoutOptions = chart.options.layout || {};
			var padding = helpers$1.options.toPadding(layoutOptions.padding);
			var leftPadding = padding.left;
			var rightPadding = padding.right;
			var topPadding = padding.top;
			var bottomPadding = padding.bottom;

			var leftBoxes = filterByPosition(chart.boxes, 'left');
			var rightBoxes = filterByPosition(chart.boxes, 'right');
			var topBoxes = filterByPosition(chart.boxes, 'top');
			var bottomBoxes = filterByPosition(chart.boxes, 'bottom');
			var chartAreaBoxes = filterByPosition(chart.boxes, 'chartArea');

			// Sort boxes by weight. A higher weight is further away from the chart area
			sortByWeight(leftBoxes, true);
			sortByWeight(rightBoxes, false);
			sortByWeight(topBoxes, true);
			sortByWeight(bottomBoxes, false);

			var verticalBoxes = leftBoxes.concat(rightBoxes);
			var horizontalBoxes = topBoxes.concat(bottomBoxes);
			var outerBoxes = verticalBoxes.concat(horizontalBoxes);

			// Essentially we now have any number of boxes on each of the 4 sides.
			// Our canvas looks like the following.
			// The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and
			// B1 is the bottom axis
			// There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays
			// These locations are single-box locations only, when trying to register a chartArea location that is already taken,
			// an error will be thrown.
			//
			// |----------------------------------------------------|
			// |                  T1 (Full Width)                   |
			// |----------------------------------------------------|
			// |    |    |                 T2                  |    |
			// |    |----|-------------------------------------|----|
			// |    |    | C1 |                           | C2 |    |
			// |    |    |----|                           |----|    |
			// |    |    |                                     |    |
			// | L1 | L2 |           ChartArea (C0)            | R1 |
			// |    |    |                                     |    |
			// |    |    |----|                           |----|    |
			// |    |    | C3 |                           | C4 |    |
			// |    |----|-------------------------------------|----|
			// |    |    |                 B1                  |    |
			// |----------------------------------------------------|
			// |                  B2 (Full Width)                   |
			// |----------------------------------------------------|
			//
			// What we do to find the best sizing, we do the following
			// 1. Determine the minimum size of the chart area.
			// 2. Split the remaining width equally between each vertical axis
			// 3. Split the remaining height equally between each horizontal axis
			// 4. Give each layout the maximum size it can be. The layout will return it's minimum size
			// 5. Adjust the sizes of each axis based on it's minimum reported size.
			// 6. Refit each axis
			// 7. Position each axis in the final location
			// 8. Tell the chart the final location of the chart area
			// 9. Tell any axes that overlay the chart area the positions of the chart area

			// Step 1
			var chartWidth = width - leftPadding - rightPadding;
			var chartHeight = height - topPadding - bottomPadding;
			var chartAreaWidth = chartWidth / 2; // min 50%

			// Step 2
			var verticalBoxWidth = (width - chartAreaWidth) / verticalBoxes.length;

			// Step 3
			// TODO re-limit horizontal axis height (this limit has affected only padding calculation since PR 1837)
			// var horizontalBoxHeight = (height - chartAreaHeight) / horizontalBoxes.length;

			// Step 4
			var maxChartAreaWidth = chartWidth;
			var maxChartAreaHeight = chartHeight;
			var outerBoxSizes = {top: topPadding, left: leftPadding, bottom: bottomPadding, right: rightPadding};
			var minBoxSizes = [];
			var maxPadding;

			function getMinimumBoxSize(box) {
				var minSize;
				var isHorizontal = box.isHorizontal();

				if (isHorizontal) {
					minSize = box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2);
					maxChartAreaHeight -= minSize.height;
				} else {
					minSize = box.update(verticalBoxWidth, maxChartAreaHeight);
					maxChartAreaWidth -= minSize.width;
				}

				minBoxSizes.push({
					horizontal: isHorizontal,
					width: minSize.width,
					box: box,
				});
			}

			helpers$1.each(outerBoxes, getMinimumBoxSize);

			// If a horizontal box has padding, we move the left boxes over to avoid ugly charts (see issue #2478)
			maxPadding = findMaxPadding(outerBoxes);

			// At this point, maxChartAreaHeight and maxChartAreaWidth are the size the chart area could
			// be if the axes are drawn at their minimum sizes.
			// Steps 5 & 6

			// Function to fit a box
			function fitBox(box) {
				var minBoxSize = helpers$1.findNextWhere(minBoxSizes, function(minBox) {
					return minBox.box === box;
				});

				if (minBoxSize) {
					if (minBoxSize.horizontal) {
						var scaleMargin = {
							left: Math.max(outerBoxSizes.left, maxPadding.left),
							right: Math.max(outerBoxSizes.right, maxPadding.right),
							top: 0,
							bottom: 0
						};

						// Don't use min size here because of label rotation. When the labels are rotated, their rotation highly depends
						// on the margin. Sometimes they need to increase in size slightly
						box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2, scaleMargin);
					} else {
						box.update(minBoxSize.width, maxChartAreaHeight);
					}
				}
			}

			// Update, and calculate the left and right margins for the horizontal boxes
			helpers$1.each(verticalBoxes, fitBox);
			addSizeByPosition(verticalBoxes, outerBoxSizes);

			// Set the Left and Right margins for the horizontal boxes
			helpers$1.each(horizontalBoxes, fitBox);
			addSizeByPosition(horizontalBoxes, outerBoxSizes);

			function finalFitVerticalBox(box) {
				var minBoxSize = helpers$1.findNextWhere(minBoxSizes, function(minSize) {
					return minSize.box === box;
				});

				var scaleMargin = {
					left: 0,
					right: 0,
					top: outerBoxSizes.top,
					bottom: outerBoxSizes.bottom
				};

				if (minBoxSize) {
					box.update(minBoxSize.width, maxChartAreaHeight, scaleMargin);
				}
			}

			// Let the left layout know the final margin
			helpers$1.each(verticalBoxes, finalFitVerticalBox);

			// Recalculate because the size of each layout might have changed slightly due to the margins (label rotation for instance)
			outerBoxSizes = {top: topPadding, left: leftPadding, bottom: bottomPadding, right: rightPadding};
			addSizeByPosition(outerBoxes, outerBoxSizes);

			// We may be adding some padding to account for rotated x axis labels
			var leftPaddingAddition = Math.max(maxPadding.left - outerBoxSizes.left, 0);
			outerBoxSizes.left += leftPaddingAddition;
			outerBoxSizes.right += Math.max(maxPadding.right - outerBoxSizes.right, 0);

			var topPaddingAddition = Math.max(maxPadding.top - outerBoxSizes.top, 0);
			outerBoxSizes.top += topPaddingAddition;
			outerBoxSizes.bottom += Math.max(maxPadding.bottom - outerBoxSizes.bottom, 0);

			// Figure out if our chart area changed. This would occur if the dataset layout label rotation
			// changed due to the application of the margins in step 6. Since we can only get bigger, this is safe to do
			// without calling `fit` again
			var newMaxChartAreaHeight = height - outerBoxSizes.top - outerBoxSizes.bottom;
			var newMaxChartAreaWidth = width - outerBoxSizes.left - outerBoxSizes.right;

			if (newMaxChartAreaWidth !== maxChartAreaWidth || newMaxChartAreaHeight !== maxChartAreaHeight) {
				helpers$1.each(verticalBoxes, function(box) {
					box.height = newMaxChartAreaHeight;
				});

				helpers$1.each(horizontalBoxes, function(box) {
					if (!box.fullWidth) {
						box.width = newMaxChartAreaWidth;
					}
				});

				maxChartAreaHeight = newMaxChartAreaHeight;
				maxChartAreaWidth = newMaxChartAreaWidth;
			}

			// Step 7 - Position the boxes
			var left = leftPadding + leftPaddingAddition;
			var top = topPadding + topPaddingAddition;

			function placeBox(box) {
				if (box.isHorizontal()) {
					box.left = box.fullWidth ? leftPadding : outerBoxSizes.left;
					box.right = box.fullWidth ? width - rightPadding : outerBoxSizes.left + maxChartAreaWidth;
					box.top = top;
					box.bottom = top + box.height;

					// Move to next point
					top = box.bottom;

				} else {

					box.left = left;
					box.right = left + box.width;
					box.top = outerBoxSizes.top;
					box.bottom = outerBoxSizes.top + maxChartAreaHeight;

					// Move to next point
					left = box.right;
				}
			}

			helpers$1.each(leftBoxes.concat(topBoxes), placeBox);

			// Account for chart width and height
			left += maxChartAreaWidth;
			top += maxChartAreaHeight;

			helpers$1.each(rightBoxes, placeBox);
			helpers$1.each(bottomBoxes, placeBox);

			// Step 8
			chart.chartArea = {
				left: outerBoxSizes.left,
				top: outerBoxSizes.top,
				right: outerBoxSizes.left + maxChartAreaWidth,
				bottom: outerBoxSizes.top + maxChartAreaHeight
			};

			// Step 9
			helpers$1.each(chartAreaBoxes, function(box) {
				box.left = chart.chartArea.left;
				box.top = chart.chartArea.top;
				box.right = chart.chartArea.right;
				box.bottom = chart.chartArea.bottom;

				box.update(maxChartAreaWidth, maxChartAreaHeight);
			});
		}
	};

	/**
	 * Platform fallback implementation (minimal).
	 * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939
	 */

	var platform_basic = {
		acquireContext: function(item) {
			if (item && item.canvas) {
				// Support for any object associated to a canvas (including a context2d)
				item = item.canvas;
			}

			return item && item.getContext('2d') || null;
		}
	};

	var platform_dom = "/*\n * DOM element rendering detection\n * https://davidwalsh.name/detect-node-insertion\n */\n@keyframes chartjs-render-animation {\n\tfrom { opacity: 0.99; }\n\tto { opacity: 1; }\n}\n\n.chartjs-render-monitor {\n\tanimation: chartjs-render-animation 0.001s;\n}\n\n/*\n * DOM element resizing detection\n * https://github.com/marcj/css-element-queries\n */\n.chartjs-size-monitor,\n.chartjs-size-monitor-expand,\n.chartjs-size-monitor-shrink {\n\tposition: absolute;\n\tdirection: ltr;\n\tleft: 0;\n\ttop: 0;\n\tright: 0;\n\tbottom: 0;\n\toverflow: hidden;\n\tpointer-events: none;\n\tvisibility: hidden;\n\tz-index: -1;\n}\n\n.chartjs-size-monitor-expand > div {\n\tposition: absolute;\n\twidth: 1000000px;\n\theight: 1000000px;\n\tleft: 0;\n\ttop: 0;\n}\n\n.chartjs-size-monitor-shrink > div {\n\tposition: absolute;\n\twidth: 200%;\n\theight: 200%;\n\tleft: 0;\n\ttop: 0;\n}\n";

	var platform_dom$1 = /*#__PURE__*/Object.freeze({
	default: platform_dom
	});

	function getCjsExportFromNamespace (n) {
		return n && n.default || n;
	}

	var stylesheet = getCjsExportFromNamespace(platform_dom$1);

	var EXPANDO_KEY = '$chartjs';
	var CSS_PREFIX = 'chartjs-';
	var CSS_SIZE_MONITOR = CSS_PREFIX + 'size-monitor';
	var CSS_RENDER_MONITOR = CSS_PREFIX + 'render-monitor';
	var CSS_RENDER_ANIMATION = CSS_PREFIX + 'render-animation';
	var ANIMATION_START_EVENTS = ['animationstart', 'webkitAnimationStart'];

	/**
	 * DOM event types -> Chart.js event types.
	 * Note: only events with different types are mapped.
	 * @see https://developer.mozilla.org/en-US/docs/Web/Events
	 */
	var EVENT_TYPES = {
		touchstart: 'mousedown',
		touchmove: 'mousemove',
		touchend: 'mouseup',
		pointerenter: 'mouseenter',
		pointerdown: 'mousedown',
		pointermove: 'mousemove',
		pointerup: 'mouseup',
		pointerleave: 'mouseout',
		pointerout: 'mouseout'
	};

	/**
	 * The "used" size is the final value of a dimension property after all calculations have
	 * been performed. This method uses the computed style of `element` but returns undefined
	 * if the computed style is not expressed in pixels. That can happen in some cases where
	 * `element` has a size relative to its parent and this last one is not yet displayed,
	 * for example because of `display: none` on a parent node.
	 * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value
	 * @returns {number} Size in pixels or undefined if unknown.
	 */
	function readUsedSize(element, property) {
		var value = helpers$1.getStyle(element, property);
		var matches = value && value.match(/^(\d+)(\.\d+)?px$/);
		return matches ? Number(matches[1]) : undefined;
	}

	/**
	 * Initializes the canvas style and render size without modifying the canvas display size,
	 * since responsiveness is handled by the controller.resize() method. The config is used
	 * to determine the aspect ratio to apply in case no explicit height has been specified.
	 */
	function initCanvas(canvas, config) {
		var style = canvas.style;

		// NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it
		// returns null or '' if no explicit value has been set to the canvas attribute.
		var renderHeight = canvas.getAttribute('height');
		var renderWidth = canvas.getAttribute('width');

		// Chart.js modifies some canvas values that we want to restore on destroy
		canvas[EXPANDO_KEY] = {
			initial: {
				height: renderHeight,
				width: renderWidth,
				style: {
					display: style.display,
					height: style.height,
					width: style.width
				}
			}
		};

		// Force canvas to display as block to avoid extra space caused by inline
		// elements, which would interfere with the responsive resize process.
		// https://github.com/chartjs/Chart.js/issues/2538
		style.display = style.display || 'block';

		if (renderWidth === null || renderWidth === '') {
			var displayWidth = readUsedSize(canvas, 'width');
			if (displayWidth !== undefined) {
				canvas.width = displayWidth;
			}
		}

		if (renderHeight === null || renderHeight === '') {
			if (canvas.style.height === '') {
				// If no explicit render height and style height, let's apply the aspect ratio,
				// which one can be specified by the user but also by charts as default option
				// (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.
				canvas.height = canvas.width / (config.options.aspectRatio || 2);
			} else {
				var displayHeight = readUsedSize(canvas, 'height');
				if (displayWidth !== undefined) {
					canvas.height = displayHeight;
				}
			}
		}

		return canvas;
	}

	/**
	 * Detects support for options object argument in addEventListener.
	 * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support
	 * @private
	 */
	var supportsEventListenerOptions = (function() {
		var supports = false;
		try {
			var options = Object.defineProperty({}, 'passive', {
				// eslint-disable-next-line getter-return
				get: function() {
					supports = true;
				}
			});
			window.addEventListener('e', null, options);
		} catch (e) {
			// continue regardless of error
		}
		return supports;
	}());

	// Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.
	// https://github.com/chartjs/Chart.js/issues/4287
	var eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;

	function addListener(node, type, listener) {
		node.addEventListener(type, listener, eventListenerOptions);
	}

	function removeListener(node, type, listener) {
		node.removeEventListener(type, listener, eventListenerOptions);
	}

	function createEvent(type, chart, x, y, nativeEvent) {
		return {
			type: type,
			chart: chart,
			native: nativeEvent || null,
			x: x !== undefined ? x : null,
			y: y !== undefined ? y : null,
		};
	}

	function fromNativeEvent(event, chart) {
		var type = EVENT_TYPES[event.type] || event.type;
		var pos = helpers$1.getRelativePosition(event, chart);
		return createEvent(type, chart, pos.x, pos.y, event);
	}

	function throttled(fn, thisArg) {
		var ticking = false;
		var args = [];

		return function() {
			args = Array.prototype.slice.call(arguments);
			thisArg = thisArg || this;

			if (!ticking) {
				ticking = true;
				helpers$1.requestAnimFrame.call(window, function() {
					ticking = false;
					fn.apply(thisArg, args);
				});
			}
		};
	}

	function createDiv(cls) {
		var el = document.createElement('div');
		el.className = cls || '';
		return el;
	}

	// Implementation based on https://github.com/marcj/css-element-queries
	function createResizer(handler) {
		var maxSize = 1000000;

		// NOTE(SB) Don't use innerHTML because it could be considered unsafe.
		// https://github.com/chartjs/Chart.js/issues/5902
		var resizer = createDiv(CSS_SIZE_MONITOR);
		var expand = createDiv(CSS_SIZE_MONITOR + '-expand');
		var shrink = createDiv(CSS_SIZE_MONITOR + '-shrink');

		expand.appendChild(createDiv());
		shrink.appendChild(createDiv());

		resizer.appendChild(expand);
		resizer.appendChild(shrink);
		resizer._reset = function() {
			expand.scrollLeft = maxSize;
			expand.scrollTop = maxSize;
			shrink.scrollLeft = maxSize;
			shrink.scrollTop = maxSize;
		};

		var onScroll = function() {
			resizer._reset();
			handler();
		};

		addListener(expand, 'scroll', onScroll.bind(expand, 'expand'));
		addListener(shrink, 'scroll', onScroll.bind(shrink, 'shrink'));

		return resizer;
	}

	// https://davidwalsh.name/detect-node-insertion
	function watchForRender(node, handler) {
		var expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});
		var proxy = expando.renderProxy = function(e) {
			if (e.animationName === CSS_RENDER_ANIMATION) {
				handler();
			}
		};

		helpers$1.each(ANIMATION_START_EVENTS, function(type) {
			addListener(node, type, proxy);
		});

		// #4737: Chrome might skip the CSS animation when the CSS_RENDER_MONITOR class
		// is removed then added back immediately (same animation frame?). Accessing the
		// `offsetParent` property will force a reflow and re-evaluate the CSS animation.
		// https://gist.github.com/paulirish/5d52fb081b3570c81e3a#box-metrics
		// https://github.com/chartjs/Chart.js/issues/4737
		expando.reflow = !!node.offsetParent;

		node.classList.add(CSS_RENDER_MONITOR);
	}

	function unwatchForRender(node) {
		var expando = node[EXPANDO_KEY] || {};
		var proxy = expando.renderProxy;

		if (proxy) {
			helpers$1.each(ANIMATION_START_EVENTS, function(type) {
				removeListener(node, type, proxy);
			});

			delete expando.renderProxy;
		}

		node.classList.remove(CSS_RENDER_MONITOR);
	}

	function addResizeListener(node, listener, chart) {
		var expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});

		// Let's keep track of this added resizer and thus avoid DOM query when removing it.
		var resizer = expando.resizer = createResizer(throttled(function() {
			if (expando.resizer) {
				var container = chart.options.maintainAspectRatio && node.parentNode;
				var w = container ? container.clientWidth : 0;
				listener(createEvent('resize', chart));
				if (container && container.clientWidth < w && chart.canvas) {
					// If the container size shrank during chart resize, let's assume
					// scrollbar appeared. So we resize again with the scrollbar visible -
					// effectively making chart smaller and the scrollbar hidden again.
					// Because we are inside `throttled`, and currently `ticking`, scroll
					// events are ignored during this whole 2 resize process.
					// If we assumed wrong and something else happened, we are resizing
					// twice in a frame (potential performance issue)
					listener(createEvent('resize', chart));
				}
			}
		}));

		// The resizer needs to be attached to the node parent, so we first need to be
		// sure that `node` is attached to the DOM before injecting the resizer element.
		watchForRender(node, function() {
			if (expando.resizer) {
				var container = node.parentNode;
				if (container && container !== resizer.parentNode) {
					container.insertBefore(resizer, container.firstChild);
				}

				// The container size might have changed, let's reset the resizer state.
				resizer._reset();
			}
		});
	}

	function removeResizeListener(node) {
		var expando = node[EXPANDO_KEY] || {};
		var resizer = expando.resizer;

		delete expando.resizer;
		unwatchForRender(node);

		if (resizer && resizer.parentNode) {
			resizer.parentNode.removeChild(resizer);
		}
	}

	function injectCSS(platform, css) {
		// https://stackoverflow.com/q/3922139
		var style = platform._style || document.createElement('style');
		if (!platform._style) {
			platform._style = style;
			css = '/* Chart.js */\n' + css;
			style.setAttribute('type', 'text/css');
			document.getElementsByTagName('head')[0].appendChild(style);
		}

		style.appendChild(document.createTextNode(css));
	}

	var platform_dom$2 = {
		/**
		 * When `true`, prevents the automatic injection of the stylesheet required to
		 * correctly detect when the chart is added to the DOM and then resized. This
		 * switch has been added to allow external stylesheet (`dist/Chart(.min)?.js`)
		 * to be manually imported to make this library compatible with any CSP.
		 * See https://github.com/chartjs/Chart.js/issues/5208
		 */
		disableCSSInjection: false,

		/**
		 * This property holds whether this platform is enabled for the current environment.
		 * Currently used by platform.js to select the proper implementation.
		 * @private
		 */
		_enabled: typeof window !== 'undefined' && typeof document !== 'undefined',

		/**
		 * @private
		 */
		_ensureLoaded: function() {
			if (this._loaded) {
				return;
			}

			this._loaded = true;

			// https://github.com/chartjs/Chart.js/issues/5208
			if (!this.disableCSSInjection) {
				injectCSS(this, stylesheet);
			}
		},

		acquireContext: function(item, config) {
			if (typeof item === 'string') {
				item = document.getElementById(item);
			} else if (item.length) {
				// Support for array based queries (such as jQuery)
				item = item[0];
			}

			if (item && item.canvas) {
				// Support for any object associated to a canvas (including a context2d)
				item = item.canvas;
			}

			// To prevent canvas fingerprinting, some add-ons undefine the getContext
			// method, for example: https://github.com/kkapsner/CanvasBlocker
			// https://github.com/chartjs/Chart.js/issues/2807
			var context = item && item.getContext && item.getContext('2d');

			// Load platform resources on first chart creation, to make possible to change
			// platform options after importing the library (e.g. `disableCSSInjection`).
			this._ensureLoaded();

			// `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the item is
			// inside an iframe or when running in a protected environment. We could guess the
			// types from their toString() value but let's keep things flexible and assume it's
			// a sufficient condition if the item has a context2D which has item as `canvas`.
			// https://github.com/chartjs/Chart.js/issues/3887
			// https://github.com/chartjs/Chart.js/issues/4102
			// https://github.com/chartjs/Chart.js/issues/4152
			if (context && context.canvas === item) {
				initCanvas(item, config);
				return context;
			}

			return null;
		},

		releaseContext: function(context) {
			var canvas = context.canvas;
			if (!canvas[EXPANDO_KEY]) {
				return;
			}

			var initial = canvas[EXPANDO_KEY].initial;
			['height', 'width'].forEach(function(prop) {
				var value = initial[prop];
				if (helpers$1.isNullOrUndef(value)) {
					canvas.removeAttribute(prop);
				} else {
					canvas.setAttribute(prop, value);
				}
			});

			helpers$1.each(initial.style || {}, function(value, key) {
				canvas.style[key] = value;
			});

			// The canvas render size might have been changed (and thus the state stack discarded),
			// we can't use save() and restore() to restore the initial state. So make sure that at
			// least the canvas context is reset to the default state by setting the canvas width.
			// https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html
			// eslint-disable-next-line no-self-assign
			canvas.width = canvas.width;

			delete canvas[EXPANDO_KEY];
		},

		addEventListener: function(chart, type, listener) {
			var canvas = chart.canvas;
			if (type === 'resize') {
				// Note: the resize event is not supported on all browsers.
				addResizeListener(canvas, listener, chart);
				return;
			}

			var expando = listener[EXPANDO_KEY] || (listener[EXPANDO_KEY] = {});
			var proxies = expando.proxies || (expando.proxies = {});
			var proxy = proxies[chart.id + '_' + type] = function(event) {
				listener(fromNativeEvent(event, chart));
			};

			addListener(canvas, type, proxy);
		},

		removeEventListener: function(chart, type, listener) {
			var canvas = chart.canvas;
			if (type === 'resize') {
				// Note: the resize event is not supported on all browsers.
				removeResizeListener(canvas);
				return;
			}

			var expando = listener[EXPANDO_KEY] || {};
			var proxies = expando.proxies || {};
			var proxy = proxies[chart.id + '_' + type];
			if (!proxy) {
				return;
			}

			removeListener(canvas, type, proxy);
		}
	};

	// DEPRECATIONS

	/**
	 * Provided for backward compatibility, use EventTarget.addEventListener instead.
	 * EventTarget.addEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+
	 * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener
	 * @function Chart.helpers.addEvent
	 * @deprecated since version 2.7.0
	 * @todo remove at version 3
	 * @private
	 */
	helpers$1.addEvent = addListener;

	/**
	 * Provided for backward compatibility, use EventTarget.removeEventListener instead.
	 * EventTarget.removeEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+
	 * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/removeEventListener
	 * @function Chart.helpers.removeEvent
	 * @deprecated since version 2.7.0
	 * @todo remove at version 3
	 * @private
	 */
	helpers$1.removeEvent = removeListener;

	// @TODO Make possible to select another platform at build time.
	var implementation = platform_dom$2._enabled ? platform_dom$2 : platform_basic;

	/**
	 * @namespace Chart.platform
	 * @see https://chartjs.gitbooks.io/proposals/content/Platform.html
	 * @since 2.4.0
	 */
	var platform = helpers$1.extend({
		/**
		 * @since 2.7.0
		 */
		initialize: function() {},

		/**
		 * Called at chart construction time, returns a context2d instance implementing
		 * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.
		 * @param {*} item - The native item from which to acquire context (platform specific)
		 * @param {object} options - The chart options
		 * @returns {CanvasRenderingContext2D} context2d instance
		 */
		acquireContext: function() {},

		/**
		 * Called at chart destruction time, releases any resources associated to the context
		 * previously returned by the acquireContext() method.
		 * @param {CanvasRenderingContext2D} context - The context2d instance
		 * @returns {boolean} true if the method succeeded, else false
		 */
		releaseContext: function() {},

		/**
		 * Registers the specified listener on the given chart.
		 * @param {Chart} chart - Chart from which to listen for event
		 * @param {string} type - The ({@link IEvent}) type to listen for
		 * @param {function} listener - Receives a notification (an object that implements
		 * the {@link IEvent} interface) when an event of the specified type occurs.
		 */
		addEventListener: function() {},

		/**
		 * Removes the specified listener previously registered with addEventListener.
		 * @param {Chart} chart - Chart from which to remove the listener
		 * @param {string} type - The ({@link IEvent}) type to remove
		 * @param {function} listener - The listener function to remove from the event target.
		 */
		removeEventListener: function() {}

	}, implementation);

	core_defaults._set('global', {
		plugins: {}
	});

	/**
	 * The plugin service singleton
	 * @namespace Chart.plugins
	 * @since 2.1.0
	 */
	var core_plugins = {
		/**
		 * Globally registered plugins.
		 * @private
		 */
		_plugins: [],

		/**
		 * This identifier is used to invalidate the descriptors cache attached to each chart
		 * when a global plugin is registered or unregistered. In this case, the cache ID is
		 * incremented and descriptors are regenerated during following API calls.
		 * @private
		 */
		_cacheId: 0,

		/**
		 * Registers the given plugin(s) if not already registered.
		 * @param {IPlugin[]|IPlugin} plugins plugin instance(s).
		 */
		register: function(plugins) {
			var p = this._plugins;
			([]).concat(plugins).forEach(function(plugin) {
				if (p.indexOf(plugin) === -1) {
					p.push(plugin);
				}
			});

			this._cacheId++;
		},

		/**
		 * Unregisters the given plugin(s) only if registered.
		 * @param {IPlugin[]|IPlugin} plugins plugin instance(s).
		 */
		unregister: function(plugins) {
			var p = this._plugins;
			([]).concat(plugins).forEach(function(plugin) {
				var idx = p.indexOf(plugin);
				if (idx !== -1) {
					p.splice(idx, 1);
				}
			});

			this._cacheId++;
		},

		/**
		 * Remove all registered plugins.
		 * @since 2.1.5
		 */
		clear: function() {
			this._plugins = [];
			this._cacheId++;
		},

		/**
		 * Returns the number of registered plugins?
		 * @returns {number}
		 * @since 2.1.5
		 */
		count: function() {
			return this._plugins.length;
		},

		/**
		 * Returns all registered plugin instances.
		 * @returns {IPlugin[]} array of plugin objects.
		 * @since 2.1.5
		 */
		getAll: function() {
			return this._plugins;
		},

		/**
		 * Calls enabled plugins for `chart` on the specified hook and with the given args.
		 * This method immediately returns as soon as a plugin explicitly returns false. The
		 * returned value can be used, for instance, to interrupt the current action.
		 * @param {Chart} chart - The chart instance for which plugins should be called.
		 * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').
		 * @param {Array} [args] - Extra arguments to apply to the hook call.
		 * @returns {boolean} false if any of the plugins return false, else returns true.
		 */
		notify: function(chart, hook, args) {
			var descriptors = this.descriptors(chart);
			var ilen = descriptors.length;
			var i, descriptor, plugin, params, method;

			for (i = 0; i < ilen; ++i) {
				descriptor = descriptors[i];
				plugin = descriptor.plugin;
				method = plugin[hook];
				if (typeof method === 'function') {
					params = [chart].concat(args || []);
					params.push(descriptor.options);
					if (method.apply(plugin, params) === false) {
						return false;
					}
				}
			}

			return true;
		},

		/**
		 * Returns descriptors of enabled plugins for the given chart.
		 * @returns {object[]} [{ plugin, options }]
		 * @private
		 */
		descriptors: function(chart) {
			var cache = chart.$plugins || (chart.$plugins = {});
			if (cache.id === this._cacheId) {
				return cache.descriptors;
			}

			var plugins = [];
			var descriptors = [];
			var config = (chart && chart.config) || {};
			var options = (config.options && config.options.plugins) || {};

			this._plugins.concat(config.plugins || []).forEach(function(plugin) {
				var idx = plugins.indexOf(plugin);
				if (idx !== -1) {
					return;
				}

				var id = plugin.id;
				var opts = options[id];
				if (opts === false) {
					return;
				}

				if (opts === true) {
					opts = helpers$1.clone(core_defaults.global.plugins[id]);
				}

				plugins.push(plugin);
				descriptors.push({
					plugin: plugin,
					options: opts || {}
				});
			});

			cache.descriptors = descriptors;
			cache.id = this._cacheId;
			return descriptors;
		},

		/**
		 * Invalidates cache for the given chart: descriptors hold a reference on plugin option,
		 * but in some cases, this reference can be changed by the user when updating options.
		 * https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167
		 * @private
		 */
		_invalidate: function(chart) {
			delete chart.$plugins;
		}
	};

	var core_scaleService = {
		// Scale registration object. Extensions can register new scale types (such as log or DB scales) and then
		// use the new chart options to grab the correct scale
		constructors: {},
		// Use a registration function so that we can move to an ES6 map when we no longer need to support
		// old browsers

		// Scale config defaults
		defaults: {},
		registerScaleType: function(type, scaleConstructor, scaleDefaults) {
			this.constructors[type] = scaleConstructor;
			this.defaults[type] = helpers$1.clone(scaleDefaults);
		},
		getScaleConstructor: function(type) {
			return this.constructors.hasOwnProperty(type) ? this.constructors[type] : undefined;
		},
		getScaleDefaults: function(type) {
			// Return the scale defaults merged with the global settings so that we always use the latest ones
			return this.defaults.hasOwnProperty(type) ? helpers$1.merge({}, [core_defaults.scale, this.defaults[type]]) : {};
		},
		updateScaleDefaults: function(type, additions) {
			var me = this;
			if (me.defaults.hasOwnProperty(type)) {
				me.defaults[type] = helpers$1.extend(me.defaults[type], additions);
			}
		},
		addScalesToLayout: function(chart) {
			// Adds each scale to the chart.boxes array to be sized accordingly
			helpers$1.each(chart.scales, function(scale) {
				// Set ILayoutItem parameters for backwards compatibility
				scale.fullWidth = scale.options.fullWidth;
				scale.position = scale.options.position;
				scale.weight = scale.options.weight;
				core_layouts.addBox(chart, scale);
			});
		}
	};

	var valueOrDefault$7 = helpers$1.valueOrDefault;

	core_defaults._set('global', {
		tooltips: {
			enabled: true,
			custom: null,
			mode: 'nearest',
			position: 'average',
			intersect: true,
			backgroundColor: 'rgba(0,0,0,0.8)',
			titleFontStyle: 'bold',
			titleSpacing: 2,
			titleMarginBottom: 6,
			titleFontColor: '#fff',
			titleAlign: 'left',
			bodySpacing: 2,
			bodyFontColor: '#fff',
			bodyAlign: 'left',
			footerFontStyle: 'bold',
			footerSpacing: 2,
			footerMarginTop: 6,
			footerFontColor: '#fff',
			footerAlign: 'left',
			yPadding: 6,
			xPadding: 6,
			caretPadding: 2,
			caretSize: 5,
			cornerRadius: 6,
			multiKeyBackground: '#fff',
			displayColors: true,
			borderColor: 'rgba(0,0,0,0)',
			borderWidth: 0,
			callbacks: {
				// Args are: (tooltipItems, data)
				beforeTitle: helpers$1.noop,
				title: function(tooltipItems, data) {
					var title = '';
					var labels = data.labels;
					var labelCount = labels ? labels.length : 0;

					if (tooltipItems.length > 0) {
						var item = tooltipItems[0];
						if (item.label) {
							title = item.label;
						} else if (item.xLabel) {
							title = item.xLabel;
						} else if (labelCount > 0 && item.index < labelCount) {
							title = labels[item.index];
						}
					}

					return title;
				},
				afterTitle: helpers$1.noop,

				// Args are: (tooltipItems, data)
				beforeBody: helpers$1.noop,

				// Args are: (tooltipItem, data)
				beforeLabel: helpers$1.noop,
				label: function(tooltipItem, data) {
					var label = data.datasets[tooltipItem.datasetIndex].label || '';

					if (label) {
						label += ': ';
					}
					if (!helpers$1.isNullOrUndef(tooltipItem.value)) {
						label += tooltipItem.value;
					} else {
						label += tooltipItem.yLabel;
					}
					return label;
				},
				labelColor: function(tooltipItem, chart) {
					var meta = chart.getDatasetMeta(tooltipItem.datasetIndex);
					var activeElement = meta.data[tooltipItem.index];
					var view = activeElement._view;
					return {
						borderColor: view.borderColor,
						backgroundColor: view.backgroundColor
					};
				},
				labelTextColor: function() {
					return this._options.bodyFontColor;
				},
				afterLabel: helpers$1.noop,

				// Args are: (tooltipItems, data)
				afterBody: helpers$1.noop,

				// Args are: (tooltipItems, data)
				beforeFooter: helpers$1.noop,
				footer: helpers$1.noop,
				afterFooter: helpers$1.noop
			}
		}
	});

	var positioners = {
		/**
		 * Average mode places the tooltip at the average position of the elements shown
		 * @function Chart.Tooltip.positioners.average
		 * @param elements {ChartElement[]} the elements being displayed in the tooltip
		 * @returns {object} tooltip position
		 */
		average: function(elements) {
			if (!elements.length) {
				return false;
			}

			var i, len;
			var x = 0;
			var y = 0;
			var count = 0;

			for (i = 0, len = elements.length; i < len; ++i) {
				var el = elements[i];
				if (el && el.hasValue()) {
					var pos = el.tooltipPosition();
					x += pos.x;
					y += pos.y;
					++count;
				}
			}

			return {
				x: x / count,
				y: y / count
			};
		},

		/**
		 * Gets the tooltip position nearest of the item nearest to the event position
		 * @function Chart.Tooltip.positioners.nearest
		 * @param elements {Chart.Element[]} the tooltip elements
		 * @param eventPosition {object} the position of the event in canvas coordinates
		 * @returns {object} the tooltip position
		 */
		nearest: function(elements, eventPosition) {
			var x = eventPosition.x;
			var y = eventPosition.y;
			var minDistance = Number.POSITIVE_INFINITY;
			var i, len, nearestElement;

			for (i = 0, len = elements.length; i < len; ++i) {
				var el = elements[i];
				if (el && el.hasValue()) {
					var center = el.getCenterPoint();
					var d = helpers$1.distanceBetweenPoints(eventPosition, center);

					if (d < minDistance) {
						minDistance = d;
						nearestElement = el;
					}
				}
			}

			if (nearestElement) {
				var tp = nearestElement.tooltipPosition();
				x = tp.x;
				y = tp.y;
			}

			return {
				x: x,
				y: y
			};
		}
	};

	// Helper to push or concat based on if the 2nd parameter is an array or not
	function pushOrConcat(base, toPush) {
		if (toPush) {
			if (helpers$1.isArray(toPush)) {
				// base = base.concat(toPush);
				Array.prototype.push.apply(base, toPush);
			} else {
				base.push(toPush);
			}
		}

		return base;
	}

	/**
	 * Returns array of strings split by newline
	 * @param {string} value - The value to split by newline.
	 * @returns {string[]} value if newline present - Returned from String split() method
	 * @function
	 */
	function splitNewlines(str) {
		if ((typeof str === 'string' || str instanceof String) && str.indexOf('\n') > -1) {
			return str.split('\n');
		}
		return str;
	}


	/**
	 * Private helper to create a tooltip item model
	 * @param element - the chart element (point, arc, bar) to create the tooltip item for
	 * @return new tooltip item
	 */
	function createTooltipItem(element) {
		var xScale = element._xScale;
		var yScale = element._yScale || element._scale; // handle radar || polarArea charts
		var index = element._index;
		var datasetIndex = element._datasetIndex;
		var controller = element._chart.getDatasetMeta(datasetIndex).controller;
		var indexScale = controller._getIndexScale();
		var valueScale = controller._getValueScale();

		return {
			xLabel: xScale ? xScale.getLabelForIndex(index, datasetIndex) : '',
			yLabel: yScale ? yScale.getLabelForIndex(index, datasetIndex) : '',
			label: indexScale ? '' + indexScale.getLabelForIndex(index, datasetIndex) : '',
			value: valueScale ? '' + valueScale.getLabelForIndex(index, datasetIndex) : '',
			index: index,
			datasetIndex: datasetIndex,
			x: element._model.x,
			y: element._model.y
		};
	}

	/**
	 * Helper to get the reset model for the tooltip
	 * @param tooltipOpts {object} the tooltip options
	 */
	function getBaseModel(tooltipOpts) {
		var globalDefaults = core_defaults.global;

		return {
			// Positioning
			xPadding: tooltipOpts.xPadding,
			yPadding: tooltipOpts.yPadding,
			xAlign: tooltipOpts.xAlign,
			yAlign: tooltipOpts.yAlign,

			// Body
			bodyFontColor: tooltipOpts.bodyFontColor,
			_bodyFontFamily: valueOrDefault$7(tooltipOpts.bodyFontFamily, globalDefaults.defaultFontFamily),
			_bodyFontStyle: valueOrDefault$7(tooltipOpts.bodyFontStyle, globalDefaults.defaultFontStyle),
			_bodyAlign: tooltipOpts.bodyAlign,
			bodyFontSize: valueOrDefault$7(tooltipOpts.bodyFontSize, globalDefaults.defaultFontSize),
			bodySpacing: tooltipOpts.bodySpacing,

			// Title
			titleFontColor: tooltipOpts.titleFontColor,
			_titleFontFamily: valueOrDefault$7(tooltipOpts.titleFontFamily, globalDefaults.defaultFontFamily),
			_titleFontStyle: valueOrDefault$7(tooltipOpts.titleFontStyle, globalDefaults.defaultFontStyle),
			titleFontSize: valueOrDefault$7(tooltipOpts.titleFontSize, globalDefaults.defaultFontSize),
			_titleAlign: tooltipOpts.titleAlign,
			titleSpacing: tooltipOpts.titleSpacing,
			titleMarginBottom: tooltipOpts.titleMarginBottom,

			// Footer
			footerFontColor: tooltipOpts.footerFontColor,
			_footerFontFamily: valueOrDefault$7(tooltipOpts.footerFontFamily, globalDefaults.defaultFontFamily),
			_footerFontStyle: valueOrDefault$7(tooltipOpts.footerFontStyle, globalDefaults.defaultFontStyle),
			footerFontSize: valueOrDefault$7(tooltipOpts.footerFontSize, globalDefaults.defaultFontSize),
			_footerAlign: tooltipOpts.footerAlign,
			footerSpacing: tooltipOpts.footerSpacing,
			footerMarginTop: tooltipOpts.footerMarginTop,

			// Appearance
			caretSize: tooltipOpts.caretSize,
			cornerRadius: tooltipOpts.cornerRadius,
			backgroundColor: tooltipOpts.backgroundColor,
			opacity: 0,
			legendColorBackground: tooltipOpts.multiKeyBackground,
			displayColors: tooltipOpts.displayColors,
			borderColor: tooltipOpts.borderColor,
			borderWidth: tooltipOpts.borderWidth
		};
	}

	/**
	 * Get the size of the tooltip
	 */
	function getTooltipSize(tooltip, model) {
		var ctx = tooltip._chart.ctx;

		var height = model.yPadding * 2; // Tooltip Padding
		var width = 0;

		// Count of all lines in the body
		var body = model.body;
		var combinedBodyLength = body.reduce(function(count, bodyItem) {
			return count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length;
		}, 0);
		combinedBodyLength += model.beforeBody.length + model.afterBody.length;

		var titleLineCount = model.title.length;
		var footerLineCount = model.footer.length;
		var titleFontSize = model.titleFontSize;
		var bodyFontSize = model.bodyFontSize;
		var footerFontSize = model.footerFontSize;

		height += titleLineCount * titleFontSize; // Title Lines
		height += titleLineCount ? (titleLineCount - 1) * model.titleSpacing : 0; // Title Line Spacing
		height += titleLineCount ? model.titleMarginBottom : 0; // Title's bottom Margin
		height += combinedBodyLength * bodyFontSize; // Body Lines
		height += combinedBodyLength ? (combinedBodyLength - 1) * model.bodySpacing : 0; // Body Line Spacing
		height += footerLineCount ? model.footerMarginTop : 0; // Footer Margin
		height += footerLineCount * (footerFontSize); // Footer Lines
		height += footerLineCount ? (footerLineCount - 1) * model.footerSpacing : 0; // Footer Line Spacing

		// Title width
		var widthPadding = 0;
		var maxLineWidth = function(line) {
			width = Math.max(width, ctx.measureText(line).width + widthPadding);
		};

		ctx.font = helpers$1.fontString(titleFontSize, model._titleFontStyle, model._titleFontFamily);
		helpers$1.each(model.title, maxLineWidth);

		// Body width
		ctx.font = helpers$1.fontString(bodyFontSize, model._bodyFontStyle, model._bodyFontFamily);
		helpers$1.each(model.beforeBody.concat(model.afterBody), maxLineWidth);

		// Body lines may include some extra width due to the color box
		widthPadding = model.displayColors ? (bodyFontSize + 2) : 0;
		helpers$1.each(body, function(bodyItem) {
			helpers$1.each(bodyItem.before, maxLineWidth);
			helpers$1.each(bodyItem.lines, maxLineWidth);
			helpers$1.each(bodyItem.after, maxLineWidth);
		});

		// Reset back to 0
		widthPadding = 0;

		// Footer width
		ctx.font = helpers$1.fontString(footerFontSize, model._footerFontStyle, model._footerFontFamily);
		helpers$1.each(model.footer, maxLineWidth);

		// Add padding
		width += 2 * model.xPadding;

		return {
			width: width,
			height: height
		};
	}

	/**
	 * Helper to get the alignment of a tooltip given the size
	 */
	function determineAlignment(tooltip, size) {
		var model = tooltip._model;
		var chart = tooltip._chart;
		var chartArea = tooltip._chart.chartArea;
		var xAlign = 'center';
		var yAlign = 'center';

		if (model.y < size.height) {
			yAlign = 'top';
		} else if (model.y > (chart.height - size.height)) {
			yAlign = 'bottom';
		}

		var lf, rf; // functions to determine left, right alignment
		var olf, orf; // functions to determine if left/right alignment causes tooltip to go outside chart
		var yf; // function to get the y alignment if the tooltip goes outside of the left or right edges
		var midX = (chartArea.left + chartArea.right) / 2;
		var midY = (chartArea.top + chartArea.bottom) / 2;

		if (yAlign === 'center') {
			lf = function(x) {
				return x <= midX;
			};
			rf = function(x) {
				return x > midX;
			};
		} else {
			lf = function(x) {
				return x <= (size.width / 2);
			};
			rf = function(x) {
				return x >= (chart.width - (size.width / 2));
			};
		}

		olf = function(x) {
			return x + size.width + model.caretSize + model.caretPadding > chart.width;
		};
		orf = function(x) {
			return x - size.width - model.caretSize - model.caretPadding < 0;
		};
		yf = function(y) {
			return y <= midY ? 'top' : 'bottom';
		};

		if (lf(model.x)) {
			xAlign = 'left';

			// Is tooltip too wide and goes over the right side of the chart.?
			if (olf(model.x)) {
				xAlign = 'center';
				yAlign = yf(model.y);
			}
		} else if (rf(model.x)) {
			xAlign = 'right';

			// Is tooltip too wide and goes outside left edge of canvas?
			if (orf(model.x)) {
				xAlign = 'center';
				yAlign = yf(model.y);
			}
		}

		var opts = tooltip._options;
		return {
			xAlign: opts.xAlign ? opts.xAlign : xAlign,
			yAlign: opts.yAlign ? opts.yAlign : yAlign
		};
	}

	/**
	 * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment
	 */
	function getBackgroundPoint(vm, size, alignment, chart) {
		// Background Position
		var x = vm.x;
		var y = vm.y;

		var caretSize = vm.caretSize;
		var caretPadding = vm.caretPadding;
		var cornerRadius = vm.cornerRadius;
		var xAlign = alignment.xAlign;
		var yAlign = alignment.yAlign;
		var paddingAndSize = caretSize + caretPadding;
		var radiusAndPadding = cornerRadius + caretPadding;

		if (xAlign === 'right') {
			x -= size.width;
		} else if (xAlign === 'center') {
			x -= (size.width / 2);
			if (x + size.width > chart.width) {
				x = chart.width - size.width;
			}
			if (x < 0) {
				x = 0;
			}
		}

		if (yAlign === 'top') {
			y += paddingAndSize;
		} else if (yAlign === 'bottom') {
			y -= size.height + paddingAndSize;
		} else {
			y -= (size.height / 2);
		}

		if (yAlign === 'center') {
			if (xAlign === 'left') {
				x += paddingAndSize;
			} else if (xAlign === 'right') {
				x -= paddingAndSize;
			}
		} else if (xAlign === 'left') {
			x -= radiusAndPadding;
		} else if (xAlign === 'right') {
			x += radiusAndPadding;
		}

		return {
			x: x,
			y: y
		};
	}

	function getAlignedX(vm, align) {
		return align === 'center'
			? vm.x + vm.width / 2
			: align === 'right'
				? vm.x + vm.width - vm.xPadding
				: vm.x + vm.xPadding;
	}

	/**
	 * Helper to build before and after body lines
	 */
	function getBeforeAfterBodyLines(callback) {
		return pushOrConcat([], splitNewlines(callback));
	}

	var exports$3 = core_element.extend({
		initialize: function() {
			this._model = getBaseModel(this._options);
			this._lastActive = [];
		},

		// Get the title
		// Args are: (tooltipItem, data)
		getTitle: function() {
			var me = this;
			var opts = me._options;
			var callbacks = opts.callbacks;

			var beforeTitle = callbacks.beforeTitle.apply(me, arguments);
			var title = callbacks.title.apply(me, arguments);
			var afterTitle = callbacks.afterTitle.apply(me, arguments);

			var lines = [];
			lines = pushOrConcat(lines, splitNewlines(beforeTitle));
			lines = pushOrConcat(lines, splitNewlines(title));
			lines = pushOrConcat(lines, splitNewlines(afterTitle));

			return lines;
		},

		// Args are: (tooltipItem, data)
		getBeforeBody: function() {
			return getBeforeAfterBodyLines(this._options.callbacks.beforeBody.apply(this, arguments));
		},

		// Args are: (tooltipItem, data)
		getBody: function(tooltipItems, data) {
			var me = this;
			var callbacks = me._options.callbacks;
			var bodyItems = [];

			helpers$1.each(tooltipItems, function(tooltipItem) {
				var bodyItem = {
					before: [],
					lines: [],
					after: []
				};
				pushOrConcat(bodyItem.before, splitNewlines(callbacks.beforeLabel.call(me, tooltipItem, data)));
				pushOrConcat(bodyItem.lines, callbacks.label.call(me, tooltipItem, data));
				pushOrConcat(bodyItem.after, splitNewlines(callbacks.afterLabel.call(me, tooltipItem, data)));

				bodyItems.push(bodyItem);
			});

			return bodyItems;
		},

		// Args are: (tooltipItem, data)
		getAfterBody: function() {
			return getBeforeAfterBodyLines(this._options.callbacks.afterBody.apply(this, arguments));
		},

		// Get the footer and beforeFooter and afterFooter lines
		// Args are: (tooltipItem, data)
		getFooter: function() {
			var me = this;
			var callbacks = me._options.callbacks;

			var beforeFooter = callbacks.beforeFooter.apply(me, arguments);
			var footer = callbacks.footer.apply(me, arguments);
			var afterFooter = callbacks.afterFooter.apply(me, arguments);

			var lines = [];
			lines = pushOrConcat(lines, splitNewlines(beforeFooter));
			lines = pushOrConcat(lines, splitNewlines(footer));
			lines = pushOrConcat(lines, splitNewlines(afterFooter));

			return lines;
		},

		update: function(changed) {
			var me = this;
			var opts = me._options;

			// Need to regenerate the model because its faster than using extend and it is necessary due to the optimization in Chart.Element.transition
			// that does _view = _model if ease === 1. This causes the 2nd tooltip update to set properties in both the view and model at the same time
			// which breaks any animations.
			var existingModel = me._model;
			var model = me._model = getBaseModel(opts);
			var active = me._active;

			var data = me._data;

			// In the case where active.length === 0 we need to keep these at existing values for good animations
			var alignment = {
				xAlign: existingModel.xAlign,
				yAlign: existingModel.yAlign
			};
			var backgroundPoint = {
				x: existingModel.x,
				y: existingModel.y
			};
			var tooltipSize = {
				width: existingModel.width,
				height: existingModel.height
			};
			var tooltipPosition = {
				x: existingModel.caretX,
				y: existingModel.caretY
			};

			var i, len;

			if (active.length) {
				model.opacity = 1;

				var labelColors = [];
				var labelTextColors = [];
				tooltipPosition = positioners[opts.position].call(me, active, me._eventPosition);

				var tooltipItems = [];
				for (i = 0, len = active.length; i < len; ++i) {
					tooltipItems.push(createTooltipItem(active[i]));
				}

				// If the user provided a filter function, use it to modify the tooltip items
				if (opts.filter) {
					tooltipItems = tooltipItems.filter(function(a) {
						return opts.filter(a, data);
					});
				}

				// If the user provided a sorting function, use it to modify the tooltip items
				if (opts.itemSort) {
					tooltipItems = tooltipItems.sort(function(a, b) {
						return opts.itemSort(a, b, data);
					});
				}

				// Determine colors for boxes
				helpers$1.each(tooltipItems, function(tooltipItem) {
					labelColors.push(opts.callbacks.labelColor.call(me, tooltipItem, me._chart));
					labelTextColors.push(opts.callbacks.labelTextColor.call(me, tooltipItem, me._chart));
				});


				// Build the Text Lines
				model.title = me.getTitle(tooltipItems, data);
				model.beforeBody = me.getBeforeBody(tooltipItems, data);
				model.body = me.getBody(tooltipItems, data);
				model.afterBody = me.getAfterBody(tooltipItems, data);
				model.footer = me.getFooter(tooltipItems, data);

				// Initial positioning and colors
				model.x = tooltipPosition.x;
				model.y = tooltipPosition.y;
				model.caretPadding = opts.caretPadding;
				model.labelColors = labelColors;
				model.labelTextColors = labelTextColors;

				// data points
				model.dataPoints = tooltipItems;

				// We need to determine alignment of the tooltip
				tooltipSize = getTooltipSize(this, model);
				alignment = determineAlignment(this, tooltipSize);
				// Final Size and Position
				backgroundPoint = getBackgroundPoint(model, tooltipSize, alignment, me._chart);
			} else {
				model.opacity = 0;
			}

			model.xAlign = alignment.xAlign;
			model.yAlign = alignment.yAlign;
			model.x = backgroundPoint.x;
			model.y = backgroundPoint.y;
			model.width = tooltipSize.width;
			model.height = tooltipSize.height;

			// Point where the caret on the tooltip points to
			model.caretX = tooltipPosition.x;
			model.caretY = tooltipPosition.y;

			me._model = model;

			if (changed && opts.custom) {
				opts.custom.call(me, model);
			}

			return me;
		},

		drawCaret: function(tooltipPoint, size) {
			var ctx = this._chart.ctx;
			var vm = this._view;
			var caretPosition = this.getCaretPosition(tooltipPoint, size, vm);

			ctx.lineTo(caretPosition.x1, caretPosition.y1);
			ctx.lineTo(caretPosition.x2, caretPosition.y2);
			ctx.lineTo(caretPosition.x3, caretPosition.y3);
		},
		getCaretPosition: function(tooltipPoint, size, vm) {
			var x1, x2, x3, y1, y2, y3;
			var caretSize = vm.caretSize;
			var cornerRadius = vm.cornerRadius;
			var xAlign = vm.xAlign;
			var yAlign = vm.yAlign;
			var ptX = tooltipPoint.x;
			var ptY = tooltipPoint.y;
			var width = size.width;
			var height = size.height;

			if (yAlign === 'center') {
				y2 = ptY + (height / 2);

				if (xAlign === 'left') {
					x1 = ptX;
					x2 = x1 - caretSize;
					x3 = x1;

					y1 = y2 + caretSize;
					y3 = y2 - caretSize;
				} else {
					x1 = ptX + width;
					x2 = x1 + caretSize;
					x3 = x1;

					y1 = y2 - caretSize;
					y3 = y2 + caretSize;
				}
			} else {
				if (xAlign === 'left') {
					x2 = ptX + cornerRadius + (caretSize);
					x1 = x2 - caretSize;
					x3 = x2 + caretSize;
				} else if (xAlign === 'right') {
					x2 = ptX + width - cornerRadius - caretSize;
					x1 = x2 - caretSize;
					x3 = x2 + caretSize;
				} else {
					x2 = vm.caretX;
					x1 = x2 - caretSize;
					x3 = x2 + caretSize;
				}
				if (yAlign === 'top') {
					y1 = ptY;
					y2 = y1 - caretSize;
					y3 = y1;
				} else {
					y1 = ptY + height;
					y2 = y1 + caretSize;
					y3 = y1;
					// invert drawing order
					var tmp = x3;
					x3 = x1;
					x1 = tmp;
				}
			}
			return {x1: x1, x2: x2, x3: x3, y1: y1, y2: y2, y3: y3};
		},

		drawTitle: function(pt, vm, ctx) {
			var title = vm.title;

			if (title.length) {
				pt.x = getAlignedX(vm, vm._titleAlign);

				ctx.textAlign = vm._titleAlign;
				ctx.textBaseline = 'top';

				var titleFontSize = vm.titleFontSize;
				var titleSpacing = vm.titleSpacing;

				ctx.fillStyle = vm.titleFontColor;
				ctx.font = helpers$1.fontString(titleFontSize, vm._titleFontStyle, vm._titleFontFamily);

				var i, len;
				for (i = 0, len = title.length; i < len; ++i) {
					ctx.fillText(title[i], pt.x, pt.y);
					pt.y += titleFontSize + titleSpacing; // Line Height and spacing

					if (i + 1 === title.length) {
						pt.y += vm.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing
					}
				}
			}
		},

		drawBody: function(pt, vm, ctx) {
			var bodyFontSize = vm.bodyFontSize;
			var bodySpacing = vm.bodySpacing;
			var bodyAlign = vm._bodyAlign;
			var body = vm.body;
			var drawColorBoxes = vm.displayColors;
			var labelColors = vm.labelColors;
			var xLinePadding = 0;
			var colorX = drawColorBoxes ? getAlignedX(vm, 'left') : 0;
			var textColor;

			ctx.textAlign = bodyAlign;
			ctx.textBaseline = 'top';
			ctx.font = helpers$1.fontString(bodyFontSize, vm._bodyFontStyle, vm._bodyFontFamily);

			pt.x = getAlignedX(vm, bodyAlign);

			// Before Body
			var fillLineOfText = function(line) {
				ctx.fillText(line, pt.x + xLinePadding, pt.y);
				pt.y += bodyFontSize + bodySpacing;
			};

			// Before body lines
			ctx.fillStyle = vm.bodyFontColor;
			helpers$1.each(vm.beforeBody, fillLineOfText);

			xLinePadding = drawColorBoxes && bodyAlign !== 'right'
				? bodyAlign === 'center' ? (bodyFontSize / 2 + 1) : (bodyFontSize + 2)
				: 0;

			// Draw body lines now
			helpers$1.each(body, function(bodyItem, i) {
				textColor = vm.labelTextColors[i];
				ctx.fillStyle = textColor;
				helpers$1.each(bodyItem.before, fillLineOfText);

				helpers$1.each(bodyItem.lines, function(line) {
					// Draw Legend-like boxes if needed
					if (drawColorBoxes) {
						// Fill a white rect so that colours merge nicely if the opacity is < 1
						ctx.fillStyle = vm.legendColorBackground;
						ctx.fillRect(colorX, pt.y, bodyFontSize, bodyFontSize);

						// Border
						ctx.lineWidth = 1;
						ctx.strokeStyle = labelColors[i].borderColor;
						ctx.strokeRect(colorX, pt.y, bodyFontSize, bodyFontSize);

						// Inner square
						ctx.fillStyle = labelColors[i].backgroundColor;
						ctx.fillRect(colorX + 1, pt.y + 1, bodyFontSize - 2, bodyFontSize - 2);
						ctx.fillStyle = textColor;
					}

					fillLineOfText(line);
				});

				helpers$1.each(bodyItem.after, fillLineOfText);
			});

			// Reset back to 0 for after body
			xLinePadding = 0;

			// After body lines
			helpers$1.each(vm.afterBody, fillLineOfText);
			pt.y -= bodySpacing; // Remove last body spacing
		},

		drawFooter: function(pt, vm, ctx) {
			var footer = vm.footer;

			if (footer.length) {
				pt.x = getAlignedX(vm, vm._footerAlign);
				pt.y += vm.footerMarginTop;

				ctx.textAlign = vm._footerAlign;
				ctx.textBaseline = 'top';

				ctx.fillStyle = vm.footerFontColor;
				ctx.font = helpers$1.fontString(vm.footerFontSize, vm._footerFontStyle, vm._footerFontFamily);

				helpers$1.each(footer, function(line) {
					ctx.fillText(line, pt.x, pt.y);
					pt.y += vm.footerFontSize + vm.footerSpacing;
				});
			}
		},

		drawBackground: function(pt, vm, ctx, tooltipSize) {
			ctx.fillStyle = vm.backgroundColor;
			ctx.strokeStyle = vm.borderColor;
			ctx.lineWidth = vm.borderWidth;
			var xAlign = vm.xAlign;
			var yAlign = vm.yAlign;
			var x = pt.x;
			var y = pt.y;
			var width = tooltipSize.width;
			var height = tooltipSize.height;
			var radius = vm.cornerRadius;

			ctx.beginPath();
			ctx.moveTo(x + radius, y);
			if (yAlign === 'top') {
				this.drawCaret(pt, tooltipSize);
			}
			ctx.lineTo(x + width - radius, y);
			ctx.quadraticCurveTo(x + width, y, x + width, y + radius);
			if (yAlign === 'center' && xAlign === 'right') {
				this.drawCaret(pt, tooltipSize);
			}
			ctx.lineTo(x + width, y + height - radius);
			ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);
			if (yAlign === 'bottom') {
				this.drawCaret(pt, tooltipSize);
			}
			ctx.lineTo(x + radius, y + height);
			ctx.quadraticCurveTo(x, y + height, x, y + height - radius);
			if (yAlign === 'center' && xAlign === 'left') {
				this.drawCaret(pt, tooltipSize);
			}
			ctx.lineTo(x, y + radius);
			ctx.quadraticCurveTo(x, y, x + radius, y);
			ctx.closePath();

			ctx.fill();

			if (vm.borderWidth > 0) {
				ctx.stroke();
			}
		},

		draw: function() {
			var ctx = this._chart.ctx;
			var vm = this._view;

			if (vm.opacity === 0) {
				return;
			}

			var tooltipSize = {
				width: vm.width,
				height: vm.height
			};
			var pt = {
				x: vm.x,
				y: vm.y
			};

			// IE11/Edge does not like very small opacities, so snap to 0
			var opacity = Math.abs(vm.opacity < 1e-3) ? 0 : vm.opacity;

			// Truthy/falsey value for empty tooltip
			var hasTooltipContent = vm.title.length || vm.beforeBody.length || vm.body.length || vm.afterBody.length || vm.footer.length;

			if (this._options.enabled && hasTooltipContent) {
				ctx.save();
				ctx.globalAlpha = opacity;

				// Draw Background
				this.drawBackground(pt, vm, ctx, tooltipSize);

				// Draw Title, Body, and Footer
				pt.y += vm.yPadding;

				// Titles
				this.drawTitle(pt, vm, ctx);

				// Body
				this.drawBody(pt, vm, ctx);

				// Footer
				this.drawFooter(pt, vm, ctx);

				ctx.restore();
			}
		},

		/**
		 * Handle an event
		 * @private
		 * @param {IEvent} event - The event to handle
		 * @returns {boolean} true if the tooltip changed
		 */
		handleEvent: function(e) {
			var me = this;
			var options = me._options;
			var changed = false;

			me._lastActive = me._lastActive || [];

			// Find Active Elements for tooltips
			if (e.type === 'mouseout') {
				me._active = [];
			} else {
				me._active = me._chart.getElementsAtEventForMode(e, options.mode, options);
			}

			// Remember Last Actives
			changed = !helpers$1.arrayEquals(me._active, me._lastActive);

			// Only handle target event on tooltip change
			if (changed) {
				me._lastActive = me._active;

				if (options.enabled || options.custom) {
					me._eventPosition = {
						x: e.x,
						y: e.y
					};

					me.update(true);
					me.pivot();
				}
			}

			return changed;
		}
	});

	/**
	 * @namespace Chart.Tooltip.positioners
	 */
	var positioners_1 = positioners;

	var core_tooltip = exports$3;
	core_tooltip.positioners = positioners_1;

	var valueOrDefault$8 = helpers$1.valueOrDefault;

	core_defaults._set('global', {
		elements: {},
		events: [
			'mousemove',
			'mouseout',
			'click',
			'touchstart',
			'touchmove'
		],
		hover: {
			onHover: null,
			mode: 'nearest',
			intersect: true,
			animationDuration: 400
		},
		onClick: null,
		maintainAspectRatio: true,
		responsive: true,
		responsiveAnimationDuration: 0
	});

	/**
	 * Recursively merge the given config objects representing the `scales` option
	 * by incorporating scale defaults in `xAxes` and `yAxes` array items, then
	 * returns a deep copy of the result, thus doesn't alter inputs.
	 */
	function mergeScaleConfig(/* config objects ... */) {
		return helpers$1.merge({}, [].slice.call(arguments), {
			merger: function(key, target, source, options) {
				if (key === 'xAxes' || key === 'yAxes') {
					var slen = source[key].length;
					var i, type, scale;

					if (!target[key]) {
						target[key] = [];
					}

					for (i = 0; i < slen; ++i) {
						scale = source[key][i];
						type = valueOrDefault$8(scale.type, key === 'xAxes' ? 'category' : 'linear');

						if (i >= target[key].length) {
							target[key].push({});
						}

						if (!target[key][i].type || (scale.type && scale.type !== target[key][i].type)) {
							// new/untyped scale or type changed: let's apply the new defaults
							// then merge source scale to correctly overwrite the defaults.
							helpers$1.merge(target[key][i], [core_scaleService.getScaleDefaults(type), scale]);
						} else {
							// scales type are the same
							helpers$1.merge(target[key][i], scale);
						}
					}
				} else {
					helpers$1._merger(key, target, source, options);
				}
			}
		});
	}

	/**
	 * Recursively merge the given config objects as the root options by handling
	 * default scale options for the `scales` and `scale` properties, then returns
	 * a deep copy of the result, thus doesn't alter inputs.
	 */
	function mergeConfig(/* config objects ... */) {
		return helpers$1.merge({}, [].slice.call(arguments), {
			merger: function(key, target, source, options) {
				var tval = target[key] || {};
				var sval = source[key];

				if (key === 'scales') {
					// scale config merging is complex. Add our own function here for that
					target[key] = mergeScaleConfig(tval, sval);
				} else if (key === 'scale') {
					// used in polar area & radar charts since there is only one scale
					target[key] = helpers$1.merge(tval, [core_scaleService.getScaleDefaults(sval.type), sval]);
				} else {
					helpers$1._merger(key, target, source, options);
				}
			}
		});
	}

	function initConfig(config) {
		config = config || {};

		// Do NOT use mergeConfig for the data object because this method merges arrays
		// and so would change references to labels and datasets, preventing data updates.
		var data = config.data = config.data || {};
		data.datasets = data.datasets || [];
		data.labels = data.labels || [];

		config.options = mergeConfig(
			core_defaults.global,
			core_defaults[config.type],
			config.options || {});

		return config;
	}

	function updateConfig(chart) {
		var newOptions = chart.options;

		helpers$1.each(chart.scales, function(scale) {
			core_layouts.removeBox(chart, scale);
		});

		newOptions = mergeConfig(
			core_defaults.global,
			core_defaults[chart.config.type],
			newOptions);

		chart.options = chart.config.options = newOptions;
		chart.ensureScalesHaveIDs();
		chart.buildOrUpdateScales();

		// Tooltip
		chart.tooltip._options = newOptions.tooltips;
		chart.tooltip.initialize();
	}

	function positionIsHorizontal(position) {
		return position === 'top' || position === 'bottom';
	}

	var Chart = function(item, config) {
		this.construct(item, config);
		return this;
	};

	helpers$1.extend(Chart.prototype, /** @lends Chart */ {
		/**
		 * @private
		 */
		construct: function(item, config) {
			var me = this;

			config = initConfig(config);

			var context = platform.acquireContext(item, config);
			var canvas = context && context.canvas;
			var height = canvas && canvas.height;
			var width = canvas && canvas.width;

			me.id = helpers$1.uid();
			me.ctx = context;
			me.canvas = canvas;
			me.config = config;
			me.width = width;
			me.height = height;
			me.aspectRatio = height ? width / height : null;
			me.options = config.options;
			me._bufferedRender = false;

			/**
			 * Provided for backward compatibility, Chart and Chart.Controller have been merged,
			 * the "instance" still need to be defined since it might be called from plugins.
			 * @prop Chart#chart
			 * @deprecated since version 2.6.0
			 * @todo remove at version 3
			 * @private
			 */
			me.chart = me;
			me.controller = me; // chart.chart.controller #inception

			// Add the chart instance to the global namespace
			Chart.instances[me.id] = me;

			// Define alias to the config data: `chart.data === chart.config.data`
			Object.defineProperty(me, 'data', {
				get: function() {
					return me.config.data;
				},
				set: function(value) {
					me.config.data = value;
				}
			});

			if (!context || !canvas) {
				// The given item is not a compatible context2d element, let's return before finalizing
				// the chart initialization but after setting basic chart / controller properties that
				// can help to figure out that the chart is not valid (e.g chart.canvas !== null);
				// https://github.com/chartjs/Chart.js/issues/2807
				console.error("Failed to create chart: can't acquire context from the given item");
				return;
			}

			me.initialize();
			me.update();
		},

		/**
		 * @private
		 */
		initialize: function() {
			var me = this;

			// Before init plugin notification
			core_plugins.notify(me, 'beforeInit');

			helpers$1.retinaScale(me, me.options.devicePixelRatio);

			me.bindEvents();

			if (me.options.responsive) {
				// Initial resize before chart draws (must be silent to preserve initial animations).
				me.resize(true);
			}

			// Make sure scales have IDs and are built before we build any controllers.
			me.ensureScalesHaveIDs();
			me.buildOrUpdateScales();
			me.initToolTip();

			// After init plugin notification
			core_plugins.notify(me, 'afterInit');

			return me;
		},

		clear: function() {
			helpers$1.canvas.clear(this);
			return this;
		},

		stop: function() {
			// Stops any current animation loop occurring
			core_animations.cancelAnimation(this);
			return this;
		},

		resize: function(silent) {
			var me = this;
			var options = me.options;
			var canvas = me.canvas;
			var aspectRatio = (options.maintainAspectRatio && me.aspectRatio) || null;

			// the canvas render width and height will be casted to integers so make sure that
			// the canvas display style uses the same integer values to avoid blurring effect.

			// Set to 0 instead of canvas.size because the size defaults to 300x150 if the element is collapsed
			var newWidth = Math.max(0, Math.floor(helpers$1.getMaximumWidth(canvas)));
			var newHeight = Math.max(0, Math.floor(aspectRatio ? newWidth / aspectRatio : helpers$1.getMaximumHeight(canvas)));

			if (me.width === newWidth && me.height === newHeight) {
				return;
			}

			canvas.width = me.width = newWidth;
			canvas.height = me.height = newHeight;
			canvas.style.width = newWidth + 'px';
			canvas.style.height = newHeight + 'px';

			helpers$1.retinaScale(me, options.devicePixelRatio);

			if (!silent) {
				// Notify any plugins about the resize
				var newSize = {width: newWidth, height: newHeight};
				core_plugins.notify(me, 'resize', [newSize]);

				// Notify of resize
				if (options.onResize) {
					options.onResize(me, newSize);
				}

				me.stop();
				me.update({
					duration: options.responsiveAnimationDuration
				});
			}
		},

		ensureScalesHaveIDs: function() {
			var options = this.options;
			var scalesOptions = options.scales || {};
			var scaleOptions = options.scale;

			helpers$1.each(scalesOptions.xAxes, function(xAxisOptions, index) {
				xAxisOptions.id = xAxisOptions.id || ('x-axis-' + index);
			});

			helpers$1.each(scalesOptions.yAxes, function(yAxisOptions, index) {
				yAxisOptions.id = yAxisOptions.id || ('y-axis-' + index);
			});

			if (scaleOptions) {
				scaleOptions.id = scaleOptions.id || 'scale';
			}
		},

		/**
		 * Builds a map of scale ID to scale object for future lookup.
		 */
		buildOrUpdateScales: function() {
			var me = this;
			var options = me.options;
			var scales = me.scales || {};
			var items = [];
			var updated = Object.keys(scales).reduce(function(obj, id) {
				obj[id] = false;
				return obj;
			}, {});

			if (options.scales) {
				items = items.concat(
					(options.scales.xAxes || []).map(function(xAxisOptions) {
						return {options: xAxisOptions, dtype: 'category', dposition: 'bottom'};
					}),
					(options.scales.yAxes || []).map(function(yAxisOptions) {
						return {options: yAxisOptions, dtype: 'linear', dposition: 'left'};
					})
				);
			}

			if (options.scale) {
				items.push({
					options: options.scale,
					dtype: 'radialLinear',
					isDefault: true,
					dposition: 'chartArea'
				});
			}

			helpers$1.each(items, function(item) {
				var scaleOptions = item.options;
				var id = scaleOptions.id;
				var scaleType = valueOrDefault$8(scaleOptions.type, item.dtype);

				if (positionIsHorizontal(scaleOptions.position) !== positionIsHorizontal(item.dposition)) {
					scaleOptions.position = item.dposition;
				}

				updated[id] = true;
				var scale = null;
				if (id in scales && scales[id].type === scaleType) {
					scale = scales[id];
					scale.options = scaleOptions;
					scale.ctx = me.ctx;
					scale.chart = me;
				} else {
					var scaleClass = core_scaleService.getScaleConstructor(scaleType);
					if (!scaleClass) {
						return;
					}
					scale = new scaleClass({
						id: id,
						type: scaleType,
						options: scaleOptions,
						ctx: me.ctx,
						chart: me
					});
					scales[scale.id] = scale;
				}

				scale.mergeTicksOptions();

				// TODO(SB): I think we should be able to remove this custom case (options.scale)
				// and consider it as a regular scale part of the "scales"" map only! This would
				// make the logic easier and remove some useless? custom code.
				if (item.isDefault) {
					me.scale = scale;
				}
			});
			// clear up discarded scales
			helpers$1.each(updated, function(hasUpdated, id) {
				if (!hasUpdated) {
					delete scales[id];
				}
			});

			me.scales = scales;

			core_scaleService.addScalesToLayout(this);
		},

		buildOrUpdateControllers: function() {
			var me = this;
			var newControllers = [];

			helpers$1.each(me.data.datasets, function(dataset, datasetIndex) {
				var meta = me.getDatasetMeta(datasetIndex);
				var type = dataset.type || me.config.type;

				if (meta.type && meta.type !== type) {
					me.destroyDatasetMeta(datasetIndex);
					meta = me.getDatasetMeta(datasetIndex);
				}
				meta.type = type;

				if (meta.controller) {
					meta.controller.updateIndex(datasetIndex);
					meta.controller.linkScales();
				} else {
					var ControllerClass = controllers[meta.type];
					if (ControllerClass === undefined) {
						throw new Error('"' + meta.type + '" is not a chart type.');
					}

					meta.controller = new ControllerClass(me, datasetIndex);
					newControllers.push(meta.controller);
				}
			}, me);

			return newControllers;
		},

		/**
		 * Reset the elements of all datasets
		 * @private
		 */
		resetElements: function() {
			var me = this;
			helpers$1.each(me.data.datasets, function(dataset, datasetIndex) {
				me.getDatasetMeta(datasetIndex).controller.reset();
			}, me);
		},

		/**
		* Resets the chart back to it's state before the initial animation
		*/
		reset: function() {
			this.resetElements();
			this.tooltip.initialize();
		},

		update: function(config) {
			var me = this;

			if (!config || typeof config !== 'object') {
				// backwards compatibility
				config = {
					duration: config,
					lazy: arguments[1]
				};
			}

			updateConfig(me);

			// plugins options references might have change, let's invalidate the cache
			// https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167
			core_plugins._invalidate(me);

			if (core_plugins.notify(me, 'beforeUpdate') === false) {
				return;
			}

			// In case the entire data object changed
			me.tooltip._data = me.data;

			// Make sure dataset controllers are updated and new controllers are reset
			var newControllers = me.buildOrUpdateControllers();

			// Make sure all dataset controllers have correct meta data counts
			helpers$1.each(me.data.datasets, function(dataset, datasetIndex) {
				me.getDatasetMeta(datasetIndex).controller.buildOrUpdateElements();
			}, me);

			me.updateLayout();

			// Can only reset the new controllers after the scales have been updated
			if (me.options.animation && me.options.animation.duration) {
				helpers$1.each(newControllers, function(controller) {
					controller.reset();
				});
			}

			me.updateDatasets();

			// Need to reset tooltip in case it is displayed with elements that are removed
			// after update.
			me.tooltip.initialize();

			// Last active contains items that were previously in the tooltip.
			// When we reset the tooltip, we need to clear it
			me.lastActive = [];

			// Do this before render so that any plugins that need final scale updates can use it
			core_plugins.notify(me, 'afterUpdate');

			if (me._bufferedRender) {
				me._bufferedRequest = {
					duration: config.duration,
					easing: config.easing,
					lazy: config.lazy
				};
			} else {
				me.render(config);
			}
		},

		/**
		 * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`
		 * hook, in which case, plugins will not be called on `afterLayout`.
		 * @private
		 */
		updateLayout: function() {
			var me = this;

			if (core_plugins.notify(me, 'beforeLayout') === false) {
				return;
			}

			core_layouts.update(this, this.width, this.height);

			/**
			 * Provided for backward compatibility, use `afterLayout` instead.
			 * @method IPlugin#afterScaleUpdate
			 * @deprecated since version 2.5.0
			 * @todo remove at version 3
			 * @private
			 */
			core_plugins.notify(me, 'afterScaleUpdate');
			core_plugins.notify(me, 'afterLayout');
		},

		/**
		 * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`
		 * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.
		 * @private
		 */
		updateDatasets: function() {
			var me = this;

			if (core_plugins.notify(me, 'beforeDatasetsUpdate') === false) {
				return;
			}

			for (var i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {
				me.updateDataset(i);
			}

			core_plugins.notify(me, 'afterDatasetsUpdate');
		},

		/**
		 * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`
		 * hook, in which case, plugins will not be called on `afterDatasetUpdate`.
		 * @private
		 */
		updateDataset: function(index) {
			var me = this;
			var meta = me.getDatasetMeta(index);
			var args = {
				meta: meta,
				index: index
			};

			if (core_plugins.notify(me, 'beforeDatasetUpdate', [args]) === false) {
				return;
			}

			meta.controller.update();

			core_plugins.notify(me, 'afterDatasetUpdate', [args]);
		},

		render: function(config) {
			var me = this;

			if (!config || typeof config !== 'object') {
				// backwards compatibility
				config = {
					duration: config,
					lazy: arguments[1]
				};
			}

			var animationOptions = me.options.animation;
			var duration = valueOrDefault$8(config.duration, animationOptions && animationOptions.duration);
			var lazy = config.lazy;

			if (core_plugins.notify(me, 'beforeRender') === false) {
				return;
			}

			var onComplete = function(animation) {
				core_plugins.notify(me, 'afterRender');
				helpers$1.callback(animationOptions && animationOptions.onComplete, [animation], me);
			};

			if (animationOptions && duration) {
				var animation = new core_animation({
					numSteps: duration / 16.66, // 60 fps
					easing: config.easing || animationOptions.easing,

					render: function(chart, animationObject) {
						var easingFunction = helpers$1.easing.effects[animationObject.easing];
						var currentStep = animationObject.currentStep;
						var stepDecimal = currentStep / animationObject.numSteps;

						chart.draw(easingFunction(stepDecimal), stepDecimal, currentStep);
					},

					onAnimationProgress: animationOptions.onProgress,
					onAnimationComplete: onComplete
				});

				core_animations.addAnimation(me, animation, duration, lazy);
			} else {
				me.draw();

				// See https://github.com/chartjs/Chart.js/issues/3781
				onComplete(new core_animation({numSteps: 0, chart: me}));
			}

			return me;
		},

		draw: function(easingValue) {
			var me = this;

			me.clear();

			if (helpers$1.isNullOrUndef(easingValue)) {
				easingValue = 1;
			}

			me.transition(easingValue);

			if (me.width <= 0 || me.height <= 0) {
				return;
			}

			if (core_plugins.notify(me, 'beforeDraw', [easingValue]) === false) {
				return;
			}

			// Draw all the scales
			helpers$1.each(me.boxes, function(box) {
				box.draw(me.chartArea);
			}, me);

			me.drawDatasets(easingValue);
			me._drawTooltip(easingValue);

			core_plugins.notify(me, 'afterDraw', [easingValue]);
		},

		/**
		 * @private
		 */
		transition: function(easingValue) {
			var me = this;

			for (var i = 0, ilen = (me.data.datasets || []).length; i < ilen; ++i) {
				if (me.isDatasetVisible(i)) {
					me.getDatasetMeta(i).controller.transition(easingValue);
				}
			}

			me.tooltip.transition(easingValue);
		},

		/**
		 * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`
		 * hook, in which case, plugins will not be called on `afterDatasetsDraw`.
		 * @private
		 */
		drawDatasets: function(easingValue) {
			var me = this;

			if (core_plugins.notify(me, 'beforeDatasetsDraw', [easingValue]) === false) {
				return;
			}

			// Draw datasets reversed to support proper line stacking
			for (var i = (me.data.datasets || []).length - 1; i >= 0; --i) {
				if (me.isDatasetVisible(i)) {
					me.drawDataset(i, easingValue);
				}
			}

			core_plugins.notify(me, 'afterDatasetsDraw', [easingValue]);
		},

		/**
		 * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`
		 * hook, in which case, plugins will not be called on `afterDatasetDraw`.
		 * @private
		 */
		drawDataset: function(index, easingValue) {
			var me = this;
			var meta = me.getDatasetMeta(index);
			var args = {
				meta: meta,
				index: index,
				easingValue: easingValue
			};

			if (core_plugins.notify(me, 'beforeDatasetDraw', [args]) === false) {
				return;
			}

			meta.controller.draw(easingValue);

			core_plugins.notify(me, 'afterDatasetDraw', [args]);
		},

		/**
		 * Draws tooltip unless a plugin returns `false` to the `beforeTooltipDraw`
		 * hook, in which case, plugins will not be called on `afterTooltipDraw`.
		 * @private
		 */
		_drawTooltip: function(easingValue) {
			var me = this;
			var tooltip = me.tooltip;
			var args = {
				tooltip: tooltip,
				easingValue: easingValue
			};

			if (core_plugins.notify(me, 'beforeTooltipDraw', [args]) === false) {
				return;
			}

			tooltip.draw();

			core_plugins.notify(me, 'afterTooltipDraw', [args]);
		},

		/**
		 * Get the single element that was clicked on
		 * @return An object containing the dataset index and element index of the matching element. Also contains the rectangle that was draw
		 */
		getElementAtEvent: function(e) {
			return core_interaction.modes.single(this, e);
		},

		getElementsAtEvent: function(e) {
			return core_interaction.modes.label(this, e, {intersect: true});
		},

		getElementsAtXAxis: function(e) {
			return core_interaction.modes['x-axis'](this, e, {intersect: true});
		},

		getElementsAtEventForMode: function(e, mode, options) {
			var method = core_interaction.modes[mode];
			if (typeof method === 'function') {
				return method(this, e, options);
			}

			return [];
		},

		getDatasetAtEvent: function(e) {
			return core_interaction.modes.dataset(this, e, {intersect: true});
		},

		getDatasetMeta: function(datasetIndex) {
			var me = this;
			var dataset = me.data.datasets[datasetIndex];
			if (!dataset._meta) {
				dataset._meta = {};
			}

			var meta = dataset._meta[me.id];
			if (!meta) {
				meta = dataset._meta[me.id] = {
					type: null,
					data: [],
					dataset: null,
					controller: null,
					hidden: null,			// See isDatasetVisible() comment
					xAxisID: null,
					yAxisID: null
				};
			}

			return meta;
		},

		getVisibleDatasetCount: function() {
			var count = 0;
			for (var i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {
				if (this.isDatasetVisible(i)) {
					count++;
				}
			}
			return count;
		},

		isDatasetVisible: function(datasetIndex) {
			var meta = this.getDatasetMeta(datasetIndex);

			// meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,
			// the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.
			return typeof meta.hidden === 'boolean' ? !meta.hidden : !this.data.datasets[datasetIndex].hidden;
		},

		generateLegend: function() {
			return this.options.legendCallback(this);
		},

		/**
		 * @private
		 */
		destroyDatasetMeta: function(datasetIndex) {
			var id = this.id;
			var dataset = this.data.datasets[datasetIndex];
			var meta = dataset._meta && dataset._meta[id];

			if (meta) {
				meta.controller.destroy();
				delete dataset._meta[id];
			}
		},

		destroy: function() {
			var me = this;
			var canvas = me.canvas;
			var i, ilen;

			me.stop();

			// dataset controllers need to cleanup associated data
			for (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {
				me.destroyDatasetMeta(i);
			}

			if (canvas) {
				me.unbindEvents();
				helpers$1.canvas.clear(me);
				platform.releaseContext(me.ctx);
				me.canvas = null;
				me.ctx = null;
			}

			core_plugins.notify(me, 'destroy');

			delete Chart.instances[me.id];
		},

		toBase64Image: function() {
			return this.canvas.toDataURL.apply(this.canvas, arguments);
		},

		initToolTip: function() {
			var me = this;
			me.tooltip = new core_tooltip({
				_chart: me,
				_chartInstance: me, // deprecated, backward compatibility
				_data: me.data,
				_options: me.options.tooltips
			}, me);
		},

		/**
		 * @private
		 */
		bindEvents: function() {
			var me = this;
			var listeners = me._listeners = {};
			var listener = function() {
				me.eventHandler.apply(me, arguments);
			};

			helpers$1.each(me.options.events, function(type) {
				platform.addEventListener(me, type, listener);
				listeners[type] = listener;
			});

			// Elements used to detect size change should not be injected for non responsive charts.
			// See https://github.com/chartjs/Chart.js/issues/2210
			if (me.options.responsive) {
				listener = function() {
					me.resize();
				};

				platform.addEventListener(me, 'resize', listener);
				listeners.resize = listener;
			}
		},

		/**
		 * @private
		 */
		unbindEvents: function() {
			var me = this;
			var listeners = me._listeners;
			if (!listeners) {
				return;
			}

			delete me._listeners;
			helpers$1.each(listeners, function(listener, type) {
				platform.removeEventListener(me, type, listener);
			});
		},

		updateHoverStyle: function(elements, mode, enabled) {
			var method = enabled ? 'setHoverStyle' : 'removeHoverStyle';
			var element, i, ilen;

			for (i = 0, ilen = elements.length; i < ilen; ++i) {
				element = elements[i];
				if (element) {
					this.getDatasetMeta(element._datasetIndex).controller[method](element);
				}
			}
		},

		/**
		 * @private
		 */
		eventHandler: function(e) {
			var me = this;
			var tooltip = me.tooltip;

			if (core_plugins.notify(me, 'beforeEvent', [e]) === false) {
				return;
			}

			// Buffer any update calls so that renders do not occur
			me._bufferedRender = true;
			me._bufferedRequest = null;

			var changed = me.handleEvent(e);
			// for smooth tooltip animations issue #4989
			// the tooltip should be the source of change
			// Animation check workaround:
			// tooltip._start will be null when tooltip isn't animating
			if (tooltip) {
				changed = tooltip._start
					? tooltip.handleEvent(e)
					: changed | tooltip.handleEvent(e);
			}

			core_plugins.notify(me, 'afterEvent', [e]);

			var bufferedRequest = me._bufferedRequest;
			if (bufferedRequest) {
				// If we have an update that was triggered, we need to do a normal render
				me.render(bufferedRequest);
			} else if (changed && !me.animating) {
				// If entering, leaving, or changing elements, animate the change via pivot
				me.stop();

				// We only need to render at this point. Updating will cause scales to be
				// recomputed generating flicker & using more memory than necessary.
				me.render({
					duration: me.options.hover.animationDuration,
					lazy: true
				});
			}

			me._bufferedRender = false;
			me._bufferedRequest = null;

			return me;
		},

		/**
		 * Handle an event
		 * @private
		 * @param {IEvent} event the event to handle
		 * @return {boolean} true if the chart needs to re-render
		 */
		handleEvent: function(e) {
			var me = this;
			var options = me.options || {};
			var hoverOptions = options.hover;
			var changed = false;

			me.lastActive = me.lastActive || [];

			// Find Active Elements for hover and tooltips
			if (e.type === 'mouseout') {
				me.active = [];
			} else {
				me.active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions);
			}

			// Invoke onHover hook
			// Need to call with native event here to not break backwards compatibility
			helpers$1.callback(options.onHover || options.hover.onHover, [e.native, me.active], me);

			if (e.type === 'mouseup' || e.type === 'click') {
				if (options.onClick) {
					// Use e.native here for backwards compatibility
					options.onClick.call(me, e.native, me.active);
				}
			}

			// Remove styling for last active (even if it may still be active)
			if (me.lastActive.length) {
				me.updateHoverStyle(me.lastActive, hoverOptions.mode, false);
			}

			// Built in hover styling
			if (me.active.length && hoverOptions.mode) {
				me.updateHoverStyle(me.active, hoverOptions.mode, true);
			}

			changed = !helpers$1.arrayEquals(me.active, me.lastActive);

			// Remember Last Actives
			me.lastActive = me.active;

			return changed;
		}
	});

	/**
	 * NOTE(SB) We actually don't use this container anymore but we need to keep it
	 * for backward compatibility. Though, it can still be useful for plugins that
	 * would need to work on multiple charts?!
	 */
	Chart.instances = {};

	var core_controller = Chart;

	// DEPRECATIONS

	/**
	 * Provided for backward compatibility, use Chart instead.
	 * @class Chart.Controller
	 * @deprecated since version 2.6
	 * @todo remove at version 3
	 * @private
	 */
	Chart.Controller = Chart;

	/**
	 * Provided for backward compatibility, not available anymore.
	 * @namespace Chart
	 * @deprecated since version 2.8
	 * @todo remove at version 3
	 * @private
	 */
	Chart.types = {};

	/**
	 * Provided for backward compatibility, not available anymore.
	 * @namespace Chart.helpers.configMerge
	 * @deprecated since version 2.8.0
	 * @todo remove at version 3
	 * @private
	 */
	helpers$1.configMerge = mergeConfig;

	/**
	 * Provided for backward compatibility, not available anymore.
	 * @namespace Chart.helpers.scaleMerge
	 * @deprecated since version 2.8.0
	 * @todo remove at version 3
	 * @private
	 */
	helpers$1.scaleMerge = mergeScaleConfig;

	var core_helpers = function() {

		// -- Basic js utility methods

		helpers$1.where = function(collection, filterCallback) {
			if (helpers$1.isArray(collection) && Array.prototype.filter) {
				return collection.filter(filterCallback);
			}
			var filtered = [];

			helpers$1.each(collection, function(item) {
				if (filterCallback(item)) {
					filtered.push(item);
				}
			});

			return filtered;
		};
		helpers$1.findIndex = Array.prototype.findIndex ?
			function(array, callback, scope) {
				return array.findIndex(callback, scope);
			} :
			function(array, callback, scope) {
				scope = scope === undefined ? array : scope;
				for (var i = 0, ilen = array.length; i < ilen; ++i) {
					if (callback.call(scope, array[i], i, array)) {
						return i;
					}
				}
				return -1;
			};
		helpers$1.findNextWhere = function(arrayToSearch, filterCallback, startIndex) {
			// Default to start of the array
			if (helpers$1.isNullOrUndef(startIndex)) {
				startIndex = -1;
			}
			for (var i = startIndex + 1; i < arrayToSearch.length; i++) {
				var currentItem = arrayToSearch[i];
				if (filterCallback(currentItem)) {
					return currentItem;
				}
			}
		};
		helpers$1.findPreviousWhere = function(arrayToSearch, filterCallback, startIndex) {
			// Default to end of the array
			if (helpers$1.isNullOrUndef(startIndex)) {
				startIndex = arrayToSearch.length;
			}
			for (var i = startIndex - 1; i >= 0; i--) {
				var currentItem = arrayToSearch[i];
				if (filterCallback(currentItem)) {
					return currentItem;
				}
			}
		};

		// -- Math methods
		helpers$1.isNumber = function(n) {
			return !isNaN(parseFloat(n)) && isFinite(n);
		};
		helpers$1.almostEquals = function(x, y, epsilon) {
			return Math.abs(x - y) < epsilon;
		};
		helpers$1.almostWhole = function(x, epsilon) {
			var rounded = Math.round(x);
			return (((rounded - epsilon) < x) && ((rounded + epsilon) > x));
		};
		helpers$1.max = function(array) {
			return array.reduce(function(max, value) {
				if (!isNaN(value)) {
					return Math.max(max, value);
				}
				return max;
			}, Number.NEGATIVE_INFINITY);
		};
		helpers$1.min = function(array) {
			return array.reduce(function(min, value) {
				if (!isNaN(value)) {
					return Math.min(min, value);
				}
				return min;
			}, Number.POSITIVE_INFINITY);
		};
		helpers$1.sign = Math.sign ?
			function(x) {
				return Math.sign(x);
			} :
			function(x) {
				x = +x; // convert to a number
				if (x === 0 || isNaN(x)) {
					return x;
				}
				return x > 0 ? 1 : -1;
			};
		helpers$1.log10 = Math.log10 ?
			function(x) {
				return Math.log10(x);
			} :
			function(x) {
				var exponent = Math.log(x) * Math.LOG10E; // Math.LOG10E = 1 / Math.LN10.
				// Check for whole powers of 10,
				// which due to floating point rounding error should be corrected.
				var powerOf10 = Math.round(exponent);
				var isPowerOf10 = x === Math.pow(10, powerOf10);

				return isPowerOf10 ? powerOf10 : exponent;
			};
		helpers$1.toRadians = function(degrees) {
			return degrees * (Math.PI / 180);
		};
		helpers$1.toDegrees = function(radians) {
			return radians * (180 / Math.PI);
		};

		/**
		 * Returns the number of decimal places
		 * i.e. the number of digits after the decimal point, of the value of this Number.
		 * @param {number} x - A number.
		 * @returns {number} The number of decimal places.
		 * @private
		 */
		helpers$1._decimalPlaces = function(x) {
			if (!helpers$1.isFinite(x)) {
				return;
			}
			var e = 1;
			var p = 0;
			while (Math.round(x * e) / e !== x) {
				e *= 10;
				p++;
			}
			return p;
		};

		// Gets the angle from vertical upright to the point about a centre.
		helpers$1.getAngleFromPoint = function(centrePoint, anglePoint) {
			var distanceFromXCenter = anglePoint.x - centrePoint.x;
			var distanceFromYCenter = anglePoint.y - centrePoint.y;
			var radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);

			var angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);

			if (angle < (-0.5 * Math.PI)) {
				angle += 2.0 * Math.PI; // make sure the returned angle is in the range of (-PI/2, 3PI/2]
			}

			return {
				angle: angle,
				distance: radialDistanceFromCenter
			};
		};
		helpers$1.distanceBetweenPoints = function(pt1, pt2) {
			return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));
		};

		/**
		 * Provided for backward compatibility, not available anymore
		 * @function Chart.helpers.aliasPixel
		 * @deprecated since version 2.8.0
		 * @todo remove at version 3
		 */
		helpers$1.aliasPixel = function(pixelWidth) {
			return (pixelWidth % 2 === 0) ? 0 : 0.5;
		};

		/**
		 * Returns the aligned pixel value to avoid anti-aliasing blur
		 * @param {Chart} chart - The chart instance.
		 * @param {number} pixel - A pixel value.
		 * @param {number} width - The width of the element.
		 * @returns {number} The aligned pixel value.
		 * @private
		 */
		helpers$1._alignPixel = function(chart, pixel, width) {
			var devicePixelRatio = chart.currentDevicePixelRatio;
			var halfWidth = width / 2;
			return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;
		};

		helpers$1.splineCurve = function(firstPoint, middlePoint, afterPoint, t) {
			// Props to Rob Spencer at scaled innovation for his post on splining between points
			// http://scaledinnovation.com/analytics/splines/aboutSplines.html

			// This function must also respect "skipped" points

			var previous = firstPoint.skip ? middlePoint : firstPoint;
			var current = middlePoint;
			var next = afterPoint.skip ? middlePoint : afterPoint;

			var d01 = Math.sqrt(Math.pow(current.x - previous.x, 2) + Math.pow(current.y - previous.y, 2));
			var d12 = Math.sqrt(Math.pow(next.x - current.x, 2) + Math.pow(next.y - current.y, 2));

			var s01 = d01 / (d01 + d12);
			var s12 = d12 / (d01 + d12);

			// If all points are the same, s01 & s02 will be inf
			s01 = isNaN(s01) ? 0 : s01;
			s12 = isNaN(s12) ? 0 : s12;

			var fa = t * s01; // scaling factor for triangle Ta
			var fb = t * s12;

			return {
				previous: {
					x: current.x - fa * (next.x - previous.x),
					y: current.y - fa * (next.y - previous.y)
				},
				next: {
					x: current.x + fb * (next.x - previous.x),
					y: current.y + fb * (next.y - previous.y)
				}
			};
		};
		helpers$1.EPSILON = Number.EPSILON || 1e-14;
		helpers$1.splineCurveMonotone = function(points) {
			// This function calculates Bézier control points in a similar way than |splineCurve|,
			// but preserves monotonicity of the provided data and ensures no local extremums are added
			// between the dataset discrete points due to the interpolation.
			// See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation

			var pointsWithTangents = (points || []).map(function(point) {
				return {
					model: point._model,
					deltaK: 0,
					mK: 0
				};
			});

			// Calculate slopes (deltaK) and initialize tangents (mK)
			var pointsLen = pointsWithTangents.length;
			var i, pointBefore, pointCurrent, pointAfter;
			for (i = 0; i < pointsLen; ++i) {
				pointCurrent = pointsWithTangents[i];
				if (pointCurrent.model.skip) {
					continue;
				}

				pointBefore = i > 0 ? pointsWithTangents[i - 1] : null;
				pointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;
				if (pointAfter && !pointAfter.model.skip) {
					var slopeDeltaX = (pointAfter.model.x - pointCurrent.model.x);

					// In the case of two points that appear at the same x pixel, slopeDeltaX is 0
					pointCurrent.deltaK = slopeDeltaX !== 0 ? (pointAfter.model.y - pointCurrent.model.y) / slopeDeltaX : 0;
				}

				if (!pointBefore || pointBefore.model.skip) {
					pointCurrent.mK = pointCurrent.deltaK;
				} else if (!pointAfter || pointAfter.model.skip) {
					pointCurrent.mK = pointBefore.deltaK;
				} else if (this.sign(pointBefore.deltaK) !== this.sign(pointCurrent.deltaK)) {
					pointCurrent.mK = 0;
				} else {
					pointCurrent.mK = (pointBefore.deltaK + pointCurrent.deltaK) / 2;
				}
			}

			// Adjust tangents to ensure monotonic properties
			var alphaK, betaK, tauK, squaredMagnitude;
			for (i = 0; i < pointsLen - 1; ++i) {
				pointCurrent = pointsWithTangents[i];
				pointAfter = pointsWithTangents[i + 1];
				if (pointCurrent.model.skip || pointAfter.model.skip) {
					continue;
				}

				if (helpers$1.almostEquals(pointCurrent.deltaK, 0, this.EPSILON)) {
					pointCurrent.mK = pointAfter.mK = 0;
					continue;
				}

				alphaK = pointCurrent.mK / pointCurrent.deltaK;
				betaK = pointAfter.mK / pointCurrent.deltaK;
				squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);
				if (squaredMagnitude <= 9) {
					continue;
				}

				tauK = 3 / Math.sqrt(squaredMagnitude);
				pointCurrent.mK = alphaK * tauK * pointCurrent.deltaK;
				pointAfter.mK = betaK * tauK * pointCurrent.deltaK;
			}

			// Compute control points
			var deltaX;
			for (i = 0; i < pointsLen; ++i) {
				pointCurrent = pointsWithTangents[i];
				if (pointCurrent.model.skip) {
					continue;
				}

				pointBefore = i > 0 ? pointsWithTangents[i - 1] : null;
				pointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;
				if (pointBefore && !pointBefore.model.skip) {
					deltaX = (pointCurrent.model.x - pointBefore.model.x) / 3;
					pointCurrent.model.controlPointPreviousX = pointCurrent.model.x - deltaX;
					pointCurrent.model.controlPointPreviousY = pointCurrent.model.y - deltaX * pointCurrent.mK;
				}
				if (pointAfter && !pointAfter.model.skip) {
					deltaX = (pointAfter.model.x - pointCurrent.model.x) / 3;
					pointCurrent.model.controlPointNextX = pointCurrent.model.x + deltaX;
					pointCurrent.model.controlPointNextY = pointCurrent.model.y + deltaX * pointCurrent.mK;
				}
			}
		};
		helpers$1.nextItem = function(collection, index, loop) {
			if (loop) {
				return index >= collection.length - 1 ? collection[0] : collection[index + 1];
			}
			return index >= collection.length - 1 ? collection[collection.length - 1] : collection[index + 1];
		};
		helpers$1.previousItem = function(collection, index, loop) {
			if (loop) {
				return index <= 0 ? collection[collection.length - 1] : collection[index - 1];
			}
			return index <= 0 ? collection[0] : collection[index - 1];
		};
		// Implementation of the nice number algorithm used in determining where axis labels will go
		helpers$1.niceNum = function(range, round) {
			var exponent = Math.floor(helpers$1.log10(range));
			var fraction = range / Math.pow(10, exponent);
			var niceFraction;

			if (round) {
				if (fraction < 1.5) {
					niceFraction = 1;
				} else if (fraction < 3) {
					niceFraction = 2;
				} else if (fraction < 7) {
					niceFraction = 5;
				} else {
					niceFraction = 10;
				}
			} else if (fraction <= 1.0) {
				niceFraction = 1;
			} else if (fraction <= 2) {
				niceFraction = 2;
			} else if (fraction <= 5) {
				niceFraction = 5;
			} else {
				niceFraction = 10;
			}

			return niceFraction * Math.pow(10, exponent);
		};
		// Request animation polyfill - https://www.paulirish.com/2011/requestanimationframe-for-smart-animating/
		helpers$1.requestAnimFrame = (function() {
			if (typeof window === 'undefined') {
				return function(callback) {
					callback();
				};
			}
			return window.requestAnimationFrame ||
				window.webkitRequestAnimationFrame ||
				window.mozRequestAnimationFrame ||
				window.oRequestAnimationFrame ||
				window.msRequestAnimationFrame ||
				function(callback) {
					return window.setTimeout(callback, 1000 / 60);
				};
		}());
		// -- DOM methods
		helpers$1.getRelativePosition = function(evt, chart) {
			var mouseX, mouseY;
			var e = evt.originalEvent || evt;
			var canvas = evt.target || evt.srcElement;
			var boundingRect = canvas.getBoundingClientRect();

			var touches = e.touches;
			if (touches && touches.length > 0) {
				mouseX = touches[0].clientX;
				mouseY = touches[0].clientY;

			} else {
				mouseX = e.clientX;
				mouseY = e.clientY;
			}

			// Scale mouse coordinates into canvas coordinates
			// by following the pattern laid out by 'jerryj' in the comments of
			// https://www.html5canvastutorials.com/advanced/html5-canvas-mouse-coordinates/
			var paddingLeft = parseFloat(helpers$1.getStyle(canvas, 'padding-left'));
			var paddingTop = parseFloat(helpers$1.getStyle(canvas, 'padding-top'));
			var paddingRight = parseFloat(helpers$1.getStyle(canvas, 'padding-right'));
			var paddingBottom = parseFloat(helpers$1.getStyle(canvas, 'padding-bottom'));
			var width = boundingRect.right - boundingRect.left - paddingLeft - paddingRight;
			var height = boundingRect.bottom - boundingRect.top - paddingTop - paddingBottom;

			// We divide by the current device pixel ratio, because the canvas is scaled up by that amount in each direction. However
			// the backend model is in unscaled coordinates. Since we are going to deal with our model coordinates, we go back here
			mouseX = Math.round((mouseX - boundingRect.left - paddingLeft) / (width) * canvas.width / chart.currentDevicePixelRatio);
			mouseY = Math.round((mouseY - boundingRect.top - paddingTop) / (height) * canvas.height / chart.currentDevicePixelRatio);

			return {
				x: mouseX,
				y: mouseY
			};

		};

		// Private helper function to convert max-width/max-height values that may be percentages into a number
		function parseMaxStyle(styleValue, node, parentProperty) {
			var valueInPixels;
			if (typeof styleValue === 'string') {
				valueInPixels = parseInt(styleValue, 10);

				if (styleValue.indexOf('%') !== -1) {
					// percentage * size in dimension
					valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];
				}
			} else {
				valueInPixels = styleValue;
			}

			return valueInPixels;
		}

		/**
		 * Returns if the given value contains an effective constraint.
		 * @private
		 */
		function isConstrainedValue(value) {
			return value !== undefined && value !== null && value !== 'none';
		}

		/**
		 * Returns the max width or height of the given DOM node in a cross-browser compatible fashion
		 * @param {HTMLElement} domNode - the node to check the constraint on
		 * @param {string} maxStyle - the style that defines the maximum for the direction we are using ('max-width' / 'max-height')
		 * @param {string} percentageProperty - property of parent to use when calculating width as a percentage
		 * @see {@link https://www.nathanaeljones.com/blog/2013/reading-max-width-cross-browser}
		 */
		function getConstraintDimension(domNode, maxStyle, percentageProperty) {
			var view = document.defaultView;
			var parentNode = helpers$1._getParentNode(domNode);
			var constrainedNode = view.getComputedStyle(domNode)[maxStyle];
			var constrainedContainer = view.getComputedStyle(parentNode)[maxStyle];
			var hasCNode = isConstrainedValue(constrainedNode);
			var hasCContainer = isConstrainedValue(constrainedContainer);
			var infinity = Number.POSITIVE_INFINITY;

			if (hasCNode || hasCContainer) {
				return Math.min(
					hasCNode ? parseMaxStyle(constrainedNode, domNode, percentageProperty) : infinity,
					hasCContainer ? parseMaxStyle(constrainedContainer, parentNode, percentageProperty) : infinity);
			}

			return 'none';
		}
		// returns Number or undefined if no constraint
		helpers$1.getConstraintWidth = function(domNode) {
			return getConstraintDimension(domNode, 'max-width', 'clientWidth');
		};
		// returns Number or undefined if no constraint
		helpers$1.getConstraintHeight = function(domNode) {
			return getConstraintDimension(domNode, 'max-height', 'clientHeight');
		};
		/**
		 * @private
	 	 */
		helpers$1._calculatePadding = function(container, padding, parentDimension) {
			padding = helpers$1.getStyle(container, padding);

			return padding.indexOf('%') > -1 ? parentDimension * parseInt(padding, 10) / 100 : parseInt(padding, 10);
		};
		/**
		 * @private
		 */
		helpers$1._getParentNode = function(domNode) {
			var parent = domNode.parentNode;
			if (parent && parent.toString() === '[object ShadowRoot]') {
				parent = parent.host;
			}
			return parent;
		};
		helpers$1.getMaximumWidth = function(domNode) {
			var container = helpers$1._getParentNode(domNode);
			if (!container) {
				return domNode.clientWidth;
			}

			var clientWidth = container.clientWidth;
			var paddingLeft = helpers$1._calculatePadding(container, 'padding-left', clientWidth);
			var paddingRight = helpers$1._calculatePadding(container, 'padding-right', clientWidth);

			var w = clientWidth - paddingLeft - paddingRight;
			var cw = helpers$1.getConstraintWidth(domNode);
			return isNaN(cw) ? w : Math.min(w, cw);
		};
		helpers$1.getMaximumHeight = function(domNode) {
			var container = helpers$1._getParentNode(domNode);
			if (!container) {
				return domNode.clientHeight;
			}

			var clientHeight = container.clientHeight;
			var paddingTop = helpers$1._calculatePadding(container, 'padding-top', clientHeight);
			var paddingBottom = helpers$1._calculatePadding(container, 'padding-bottom', clientHeight);

			var h = clientHeight - paddingTop - paddingBottom;
			var ch = helpers$1.getConstraintHeight(domNode);
			return isNaN(ch) ? h : Math.min(h, ch);
		};
		helpers$1.getStyle = function(el, property) {
			return el.currentStyle ?
				el.currentStyle[property] :
				document.defaultView.getComputedStyle(el, null).getPropertyValue(property);
		};
		helpers$1.retinaScale = function(chart, forceRatio) {
			var pixelRatio = chart.currentDevicePixelRatio = forceRatio || (typeof window !== 'undefined' && window.devicePixelRatio) || 1;
			if (pixelRatio === 1) {
				return;
			}

			var canvas = chart.canvas;
			var height = chart.height;
			var width = chart.width;

			canvas.height = height * pixelRatio;
			canvas.width = width * pixelRatio;
			chart.ctx.scale(pixelRatio, pixelRatio);

			// If no style has been set on the canvas, the render size is used as display size,
			// making the chart visually bigger, so let's enforce it to the "correct" values.
			// See https://github.com/chartjs/Chart.js/issues/3575
			if (!canvas.style.height && !canvas.style.width) {
				canvas.style.height = height + 'px';
				canvas.style.width = width + 'px';
			}
		};
		// -- Canvas methods
		helpers$1.fontString = function(pixelSize, fontStyle, fontFamily) {
			return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;
		};
		helpers$1.longestText = function(ctx, font, arrayOfThings, cache) {
			cache = cache || {};
			var data = cache.data = cache.data || {};
			var gc = cache.garbageCollect = cache.garbageCollect || [];

			if (cache.font !== font) {
				data = cache.data = {};
				gc = cache.garbageCollect = [];
				cache.font = font;
			}

			ctx.font = font;
			var longest = 0;
			helpers$1.each(arrayOfThings, function(thing) {
				// Undefined strings and arrays should not be measured
				if (thing !== undefined && thing !== null && helpers$1.isArray(thing) !== true) {
					longest = helpers$1.measureText(ctx, data, gc, longest, thing);
				} else if (helpers$1.isArray(thing)) {
					// if it is an array lets measure each element
					// to do maybe simplify this function a bit so we can do this more recursively?
					helpers$1.each(thing, function(nestedThing) {
						// Undefined strings and arrays should not be measured
						if (nestedThing !== undefined && nestedThing !== null && !helpers$1.isArray(nestedThing)) {
							longest = helpers$1.measureText(ctx, data, gc, longest, nestedThing);
						}
					});
				}
			});

			var gcLen = gc.length / 2;
			if (gcLen > arrayOfThings.length) {
				for (var i = 0; i < gcLen; i++) {
					delete data[gc[i]];
				}
				gc.splice(0, gcLen);
			}
			return longest;
		};
		helpers$1.measureText = function(ctx, data, gc, longest, string) {
			var textWidth = data[string];
			if (!textWidth) {
				textWidth = data[string] = ctx.measureText(string).width;
				gc.push(string);
			}
			if (textWidth > longest) {
				longest = textWidth;
			}
			return longest;
		};
		helpers$1.numberOfLabelLines = function(arrayOfThings) {
			var numberOfLines = 1;
			helpers$1.each(arrayOfThings, function(thing) {
				if (helpers$1.isArray(thing)) {
					if (thing.length > numberOfLines) {
						numberOfLines = thing.length;
					}
				}
			});
			return numberOfLines;
		};

		helpers$1.color = !chartjsColor ?
			function(value) {
				console.error('Color.js not found!');
				return value;
			} :
			function(value) {
				/* global CanvasGradient */
				if (value instanceof CanvasGradient) {
					value = core_defaults.global.defaultColor;
				}

				return chartjsColor(value);
			};

		helpers$1.getHoverColor = function(colorValue) {
			/* global CanvasPattern */
			return (colorValue instanceof CanvasPattern || colorValue instanceof CanvasGradient) ?
				colorValue :
				helpers$1.color(colorValue).saturate(0.5).darken(0.1).rgbString();
		};
	};

	function abstract() {
		throw new Error(
			'This method is not implemented: either no adapter can ' +
			'be found or an incomplete integration was provided.'
		);
	}

	/**
	 * Date adapter (current used by the time scale)
	 * @namespace Chart._adapters._date
	 * @memberof Chart._adapters
	 * @private
	 */

	/**
	 * Currently supported unit string values.
	 * @typedef {('millisecond'|'second'|'minute'|'hour'|'day'|'week'|'month'|'quarter'|'year')}
	 * @memberof Chart._adapters._date
	 * @name Unit
	 */

	/**
	 * @class
	 */
	function DateAdapter(options) {
		this.options = options || {};
	}

	helpers$1.extend(DateAdapter.prototype, /** @lends DateAdapter */ {
		/**
		 * Returns a map of time formats for the supported formatting units defined
		 * in Unit as well as 'datetime' representing a detailed date/time string.
		 * @returns {{string: string}}
		 */
		formats: abstract,

		/**
		 * Parses the given `value` and return the associated timestamp.
		 * @param {any} value - the value to parse (usually comes from the data)
		 * @param {string} [format] - the expected data format
		 * @returns {(number|null)}
		 * @function
		 */
		parse: abstract,

		/**
		 * Returns the formatted date in the specified `format` for a given `timestamp`.
		 * @param {number} timestamp - the timestamp to format
		 * @param {string} format - the date/time token
		 * @return {string}
		 * @function
		 */
		format: abstract,

		/**
		 * Adds the specified `amount` of `unit` to the given `timestamp`.
		 * @param {number} timestamp - the input timestamp
		 * @param {number} amount - the amount to add
		 * @param {Unit} unit - the unit as string
		 * @return {number}
		 * @function
		 */
		add: abstract,

		/**
		 * Returns the number of `unit` between the given timestamps.
		 * @param {number} max - the input timestamp (reference)
		 * @param {number} min - the timestamp to substract
		 * @param {Unit} unit - the unit as string
		 * @return {number}
		 * @function
		 */
		diff: abstract,

		/**
		 * Returns start of `unit` for the given `timestamp`.
		 * @param {number} timestamp - the input timestamp
		 * @param {Unit} unit - the unit as string
		 * @param {number} [weekday] - the ISO day of the week with 1 being Monday
		 * and 7 being Sunday (only needed if param *unit* is `isoWeek`).
		 * @function
		 */
		startOf: abstract,

		/**
		 * Returns end of `unit` for the given `timestamp`.
		 * @param {number} timestamp - the input timestamp
		 * @param {Unit} unit - the unit as string
		 * @function
		 */
		endOf: abstract,

		// DEPRECATIONS

		/**
		 * Provided for backward compatibility for scale.getValueForPixel(),
		 * this method should be overridden only by the moment adapter.
		 * @deprecated since version 2.8.0
		 * @todo remove at version 3
		 * @private
		 */
		_create: function(value) {
			return value;
		}
	});

	DateAdapter.override = function(members) {
		helpers$1.extend(DateAdapter.prototype, members);
	};

	var _date = DateAdapter;

	var core_adapters = {
		_date: _date
	};

	/**
	 * Namespace to hold static tick generation functions
	 * @namespace Chart.Ticks
	 */
	var core_ticks = {
		/**
		 * Namespace to hold formatters for different types of ticks
		 * @namespace Chart.Ticks.formatters
		 */
		formatters: {
			/**
			 * Formatter for value labels
			 * @method Chart.Ticks.formatters.values
			 * @param value the value to display
			 * @return {string|string[]} the label to display
			 */
			values: function(value) {
				return helpers$1.isArray(value) ? value : '' + value;
			},

			/**
			 * Formatter for linear numeric ticks
			 * @method Chart.Ticks.formatters.linear
			 * @param tickValue {number} the value to be formatted
			 * @param index {number} the position of the tickValue parameter in the ticks array
			 * @param ticks {number[]} the list of ticks being converted
			 * @return {string} string representation of the tickValue parameter
			 */
			linear: function(tickValue, index, ticks) {
				// If we have lots of ticks, don't use the ones
				var delta = ticks.length > 3 ? ticks[2] - ticks[1] : ticks[1] - ticks[0];

				// If we have a number like 2.5 as the delta, figure out how many decimal places we need
				if (Math.abs(delta) > 1) {
					if (tickValue !== Math.floor(tickValue)) {
						// not an integer
						delta = tickValue - Math.floor(tickValue);
					}
				}

				var logDelta = helpers$1.log10(Math.abs(delta));
				var tickString = '';

				if (tickValue !== 0) {
					var maxTick = Math.max(Math.abs(ticks[0]), Math.abs(ticks[ticks.length - 1]));
					if (maxTick < 1e-4) { // all ticks are small numbers; use scientific notation
						var logTick = helpers$1.log10(Math.abs(tickValue));
						tickString = tickValue.toExponential(Math.floor(logTick) - Math.floor(logDelta));
					} else {
						var numDecimal = -1 * Math.floor(logDelta);
						numDecimal = Math.max(Math.min(numDecimal, 20), 0); // toFixed has a max of 20 decimal places
						tickString = tickValue.toFixed(numDecimal);
					}
				} else {
					tickString = '0'; // never show decimal places for 0
				}

				return tickString;
			},

			logarithmic: function(tickValue, index, ticks) {
				var remain = tickValue / (Math.pow(10, Math.floor(helpers$1.log10(tickValue))));

				if (tickValue === 0) {
					return '0';
				} else if (remain === 1 || remain === 2 || remain === 5 || index === 0 || index === ticks.length - 1) {
					return tickValue.toExponential();
				}
				return '';
			}
		}
	};

	var valueOrDefault$9 = helpers$1.valueOrDefault;
	var valueAtIndexOrDefault = helpers$1.valueAtIndexOrDefault;

	core_defaults._set('scale', {
		display: true,
		position: 'left',
		offset: false,

		// grid line settings
		gridLines: {
			display: true,
			color: 'rgba(0, 0, 0, 0.1)',
			lineWidth: 1,
			drawBorder: true,
			drawOnChartArea: true,
			drawTicks: true,
			tickMarkLength: 10,
			zeroLineWidth: 1,
			zeroLineColor: 'rgba(0,0,0,0.25)',
			zeroLineBorderDash: [],
			zeroLineBorderDashOffset: 0.0,
			offsetGridLines: false,
			borderDash: [],
			borderDashOffset: 0.0
		},

		// scale label
		scaleLabel: {
			// display property
			display: false,

			// actual label
			labelString: '',

			// top/bottom padding
			padding: {
				top: 4,
				bottom: 4
			}
		},

		// label settings
		ticks: {
			beginAtZero: false,
			minRotation: 0,
			maxRotation: 50,
			mirror: false,
			padding: 0,
			reverse: false,
			display: true,
			autoSkip: true,
			autoSkipPadding: 0,
			labelOffset: 0,
			// We pass through arrays to be rendered as multiline labels, we convert Others to strings here.
			callback: core_ticks.formatters.values,
			minor: {},
			major: {}
		}
	});

	function labelsFromTicks(ticks) {
		var labels = [];
		var i, ilen;

		for (i = 0, ilen = ticks.length; i < ilen; ++i) {
			labels.push(ticks[i].label);
		}

		return labels;
	}

	function getPixelForGridLine(scale, index, offsetGridLines) {
		var lineValue = scale.getPixelForTick(index);

		if (offsetGridLines) {
			if (scale.getTicks().length === 1) {
				lineValue -= scale.isHorizontal() ?
					Math.max(lineValue - scale.left, scale.right - lineValue) :
					Math.max(lineValue - scale.top, scale.bottom - lineValue);
			} else if (index === 0) {
				lineValue -= (scale.getPixelForTick(1) - lineValue) / 2;
			} else {
				lineValue -= (lineValue - scale.getPixelForTick(index - 1)) / 2;
			}
		}
		return lineValue;
	}

	function computeTextSize(context, tick, font) {
		return helpers$1.isArray(tick) ?
			helpers$1.longestText(context, font, tick) :
			context.measureText(tick).width;
	}

	var core_scale = core_element.extend({
		/**
		 * Get the padding needed for the scale
		 * @method getPadding
		 * @private
		 * @returns {Padding} the necessary padding
		 */
		getPadding: function() {
			var me = this;
			return {
				left: me.paddingLeft || 0,
				top: me.paddingTop || 0,
				right: me.paddingRight || 0,
				bottom: me.paddingBottom || 0
			};
		},

		/**
		 * Returns the scale tick objects ({label, major})
		 * @since 2.7
		 */
		getTicks: function() {
			return this._ticks;
		},

		// These methods are ordered by lifecyle. Utilities then follow.
		// Any function defined here is inherited by all scale types.
		// Any function can be extended by the scale type

		mergeTicksOptions: function() {
			var ticks = this.options.ticks;
			if (ticks.minor === false) {
				ticks.minor = {
					display: false
				};
			}
			if (ticks.major === false) {
				ticks.major = {
					display: false
				};
			}
			for (var key in ticks) {
				if (key !== 'major' && key !== 'minor') {
					if (typeof ticks.minor[key] === 'undefined') {
						ticks.minor[key] = ticks[key];
					}
					if (typeof ticks.major[key] === 'undefined') {
						ticks.major[key] = ticks[key];
					}
				}
			}
		},
		beforeUpdate: function() {
			helpers$1.callback(this.options.beforeUpdate, [this]);
		},

		update: function(maxWidth, maxHeight, margins) {
			var me = this;
			var i, ilen, labels, label, ticks, tick;

			// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)
			me.beforeUpdate();

			// Absorb the master measurements
			me.maxWidth = maxWidth;
			me.maxHeight = maxHeight;
			me.margins = helpers$1.extend({
				left: 0,
				right: 0,
				top: 0,
				bottom: 0
			}, margins);

			me._maxLabelLines = 0;
			me.longestLabelWidth = 0;
			me.longestTextCache = me.longestTextCache || {};

			// Dimensions
			me.beforeSetDimensions();
			me.setDimensions();
			me.afterSetDimensions();

			// Data min/max
			me.beforeDataLimits();
			me.determineDataLimits();
			me.afterDataLimits();

			// Ticks - `this.ticks` is now DEPRECATED!
			// Internal ticks are now stored as objects in the PRIVATE `this._ticks` member
			// and must not be accessed directly from outside this class. `this.ticks` being
			// around for long time and not marked as private, we can't change its structure
			// without unexpected breaking changes. If you need to access the scale ticks,
			// use scale.getTicks() instead.

			me.beforeBuildTicks();

			// New implementations should return an array of objects but for BACKWARD COMPAT,
			// we still support no return (`this.ticks` internally set by calling this method).
			ticks = me.buildTicks() || [];

			// Allow modification of ticks in callback.
			ticks = me.afterBuildTicks(ticks) || ticks;

			me.beforeTickToLabelConversion();

			// New implementations should return the formatted tick labels but for BACKWARD
			// COMPAT, we still support no return (`this.ticks` internally changed by calling
			// this method and supposed to contain only string values).
			labels = me.convertTicksToLabels(ticks) || me.ticks;

			me.afterTickToLabelConversion();

			me.ticks = labels;   // BACKWARD COMPATIBILITY

			// IMPORTANT: from this point, we consider that `this.ticks` will NEVER change!

			// BACKWARD COMPAT: synchronize `_ticks` with labels (so potentially `this.ticks`)
			for (i = 0, ilen = labels.length; i < ilen; ++i) {
				label = labels[i];
				tick = ticks[i];
				if (!tick) {
					ticks.push(tick = {
						label: label,
						major: false
					});
				} else {
					tick.label = label;
				}
			}

			me._ticks = ticks;

			// Tick Rotation
			me.beforeCalculateTickRotation();
			me.calculateTickRotation();
			me.afterCalculateTickRotation();
			// Fit
			me.beforeFit();
			me.fit();
			me.afterFit();
			//
			me.afterUpdate();

			return me.minSize;

		},
		afterUpdate: function() {
			helpers$1.callback(this.options.afterUpdate, [this]);
		},

		//

		beforeSetDimensions: function() {
			helpers$1.callback(this.options.beforeSetDimensions, [this]);
		},
		setDimensions: function() {
			var me = this;
			// Set the unconstrained dimension before label rotation
			if (me.isHorizontal()) {
				// Reset position before calculating rotation
				me.width = me.maxWidth;
				me.left = 0;
				me.right = me.width;
			} else {
				me.height = me.maxHeight;

				// Reset position before calculating rotation
				me.top = 0;
				me.bottom = me.height;
			}

			// Reset padding
			me.paddingLeft = 0;
			me.paddingTop = 0;
			me.paddingRight = 0;
			me.paddingBottom = 0;
		},
		afterSetDimensions: function() {
			helpers$1.callback(this.options.afterSetDimensions, [this]);
		},

		// Data limits
		beforeDataLimits: function() {
			helpers$1.callback(this.options.beforeDataLimits, [this]);
		},
		determineDataLimits: helpers$1.noop,
		afterDataLimits: function() {
			helpers$1.callback(this.options.afterDataLimits, [this]);
		},

		//
		beforeBuildTicks: function() {
			helpers$1.callback(this.options.beforeBuildTicks, [this]);
		},
		buildTicks: helpers$1.noop,
		afterBuildTicks: function(ticks) {
			var me = this;
			// ticks is empty for old axis implementations here
			if (helpers$1.isArray(ticks) && ticks.length) {
				return helpers$1.callback(me.options.afterBuildTicks, [me, ticks]);
			}
			// Support old implementations (that modified `this.ticks` directly in buildTicks)
			me.ticks = helpers$1.callback(me.options.afterBuildTicks, [me, me.ticks]) || me.ticks;
			return ticks;
		},

		beforeTickToLabelConversion: function() {
			helpers$1.callback(this.options.beforeTickToLabelConversion, [this]);
		},
		convertTicksToLabels: function() {
			var me = this;
			// Convert ticks to strings
			var tickOpts = me.options.ticks;
			me.ticks = me.ticks.map(tickOpts.userCallback || tickOpts.callback, this);
		},
		afterTickToLabelConversion: function() {
			helpers$1.callback(this.options.afterTickToLabelConversion, [this]);
		},

		//

		beforeCalculateTickRotation: function() {
			helpers$1.callback(this.options.beforeCalculateTickRotation, [this]);
		},
		calculateTickRotation: function() {
			var me = this;
			var context = me.ctx;
			var tickOpts = me.options.ticks;
			var labels = labelsFromTicks(me._ticks);

			// Get the width of each grid by calculating the difference
			// between x offsets between 0 and 1.
			var tickFont = helpers$1.options._parseFont(tickOpts);
			context.font = tickFont.string;

			var labelRotation = tickOpts.minRotation || 0;

			if (labels.length && me.options.display && me.isHorizontal()) {
				var originalLabelWidth = helpers$1.longestText(context, tickFont.string, labels, me.longestTextCache);
				var labelWidth = originalLabelWidth;
				var cosRotation, sinRotation;

				// Allow 3 pixels x2 padding either side for label readability
				var tickWidth = me.getPixelForTick(1) - me.getPixelForTick(0) - 6;

				// Max label rotation can be set or default to 90 - also act as a loop counter
				while (labelWidth > tickWidth && labelRotation < tickOpts.maxRotation) {
					var angleRadians = helpers$1.toRadians(labelRotation);
					cosRotation = Math.cos(angleRadians);
					sinRotation = Math.sin(angleRadians);

					if (sinRotation * originalLabelWidth > me.maxHeight) {
						// go back one step
						labelRotation--;
						break;
					}

					labelRotation++;
					labelWidth = cosRotation * originalLabelWidth;
				}
			}

			me.labelRotation = labelRotation;
		},
		afterCalculateTickRotation: function() {
			helpers$1.callback(this.options.afterCalculateTickRotation, [this]);
		},

		//

		beforeFit: function() {
			helpers$1.callback(this.options.beforeFit, [this]);
		},
		fit: function() {
			var me = this;
			// Reset
			var minSize = me.minSize = {
				width: 0,
				height: 0
			};

			var labels = labelsFromTicks(me._ticks);

			var opts = me.options;
			var tickOpts = opts.ticks;
			var scaleLabelOpts = opts.scaleLabel;
			var gridLineOpts = opts.gridLines;
			var display = me._isVisible();
			var position = opts.position;
			var isHorizontal = me.isHorizontal();

			var parseFont = helpers$1.options._parseFont;
			var tickFont = parseFont(tickOpts);
			var tickMarkLength = opts.gridLines.tickMarkLength;

			// Width
			if (isHorizontal) {
				// subtract the margins to line up with the chartArea if we are a full width scale
				minSize.width = me.isFullWidth() ? me.maxWidth - me.margins.left - me.margins.right : me.maxWidth;
			} else {
				minSize.width = display && gridLineOpts.drawTicks ? tickMarkLength : 0;
			}

			// height
			if (isHorizontal) {
				minSize.height = display && gridLineOpts.drawTicks ? tickMarkLength : 0;
			} else {
				minSize.height = me.maxHeight; // fill all the height
			}

			// Are we showing a title for the scale?
			if (scaleLabelOpts.display && display) {
				var scaleLabelFont = parseFont(scaleLabelOpts);
				var scaleLabelPadding = helpers$1.options.toPadding(scaleLabelOpts.padding);
				var deltaHeight = scaleLabelFont.lineHeight + scaleLabelPadding.height;

				if (isHorizontal) {
					minSize.height += deltaHeight;
				} else {
					minSize.width += deltaHeight;
				}
			}

			// Don't bother fitting the ticks if we are not showing the labels
			if (tickOpts.display && display) {
				var largestTextWidth = helpers$1.longestText(me.ctx, tickFont.string, labels, me.longestTextCache);
				var tallestLabelHeightInLines = helpers$1.numberOfLabelLines(labels);
				var lineSpace = tickFont.size * 0.5;
				var tickPadding = me.options.ticks.padding;

				// Store max number of lines and widest label for _autoSkip
				me._maxLabelLines = tallestLabelHeightInLines;
				me.longestLabelWidth = largestTextWidth;

				if (isHorizontal) {
					var angleRadians = helpers$1.toRadians(me.labelRotation);
					var cosRotation = Math.cos(angleRadians);
					var sinRotation = Math.sin(angleRadians);

					// TODO - improve this calculation
					var labelHeight = (sinRotation * largestTextWidth)
						+ (tickFont.lineHeight * tallestLabelHeightInLines)
						+ lineSpace; // padding

					minSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);

					me.ctx.font = tickFont.string;
					var firstLabelWidth = computeTextSize(me.ctx, labels[0], tickFont.string);
					var lastLabelWidth = computeTextSize(me.ctx, labels[labels.length - 1], tickFont.string);
					var offsetLeft = me.getPixelForTick(0) - me.left;
					var offsetRight = me.right - me.getPixelForTick(labels.length - 1);
					var paddingLeft, paddingRight;

					// Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned
					// which means that the right padding is dominated by the font height
					if (me.labelRotation !== 0) {
						paddingLeft = position === 'bottom' ? (cosRotation * firstLabelWidth) : (cosRotation * lineSpace);
						paddingRight = position === 'bottom' ? (cosRotation * lineSpace) : (cosRotation * lastLabelWidth);
					} else {
						paddingLeft = firstLabelWidth / 2;
						paddingRight = lastLabelWidth / 2;
					}
					me.paddingLeft = Math.max(paddingLeft - offsetLeft, 0) + 3; // add 3 px to move away from canvas edges
					me.paddingRight = Math.max(paddingRight - offsetRight, 0) + 3;
				} else {
					// A vertical axis is more constrained by the width. Labels are the
					// dominant factor here, so get that length first and account for padding
					if (tickOpts.mirror) {
						largestTextWidth = 0;
					} else {
						// use lineSpace for consistency with horizontal axis
						// tickPadding is not implemented for horizontal
						largestTextWidth += tickPadding + lineSpace;
					}

					minSize.width = Math.min(me.maxWidth, minSize.width + largestTextWidth);

					me.paddingTop = tickFont.size / 2;
					me.paddingBottom = tickFont.size / 2;
				}
			}

			me.handleMargins();

			me.width = minSize.width;
			me.height = minSize.height;
		},

		/**
		 * Handle margins and padding interactions
		 * @private
		 */
		handleMargins: function() {
			var me = this;
			if (me.margins) {
				me.paddingLeft = Math.max(me.paddingLeft - me.margins.left, 0);
				me.paddingTop = Math.max(me.paddingTop - me.margins.top, 0);
				me.paddingRight = Math.max(me.paddingRight - me.margins.right, 0);
				me.paddingBottom = Math.max(me.paddingBottom - me.margins.bottom, 0);
			}
		},

		afterFit: function() {
			helpers$1.callback(this.options.afterFit, [this]);
		},

		// Shared Methods
		isHorizontal: function() {
			return this.options.position === 'top' || this.options.position === 'bottom';
		},
		isFullWidth: function() {
			return (this.options.fullWidth);
		},

		// Get the correct value. NaN bad inputs, If the value type is object get the x or y based on whether we are horizontal or not
		getRightValue: function(rawValue) {
			// Null and undefined values first
			if (helpers$1.isNullOrUndef(rawValue)) {
				return NaN;
			}
			// isNaN(object) returns true, so make sure NaN is checking for a number; Discard Infinite values
			if ((typeof rawValue === 'number' || rawValue instanceof Number) && !isFinite(rawValue)) {
				return NaN;
			}
			// If it is in fact an object, dive in one more level
			if (rawValue) {
				if (this.isHorizontal()) {
					if (rawValue.x !== undefined) {
						return this.getRightValue(rawValue.x);
					}
				} else if (rawValue.y !== undefined) {
					return this.getRightValue(rawValue.y);
				}
			}

			// Value is good, return it
			return rawValue;
		},

		/**
		 * Used to get the value to display in the tooltip for the data at the given index
		 * @param index
		 * @param datasetIndex
		 */
		getLabelForIndex: helpers$1.noop,

		/**
		 * Returns the location of the given data point. Value can either be an index or a numerical value
		 * The coordinate (0, 0) is at the upper-left corner of the canvas
		 * @param value
		 * @param index
		 * @param datasetIndex
		 */
		getPixelForValue: helpers$1.noop,

		/**
		 * Used to get the data value from a given pixel. This is the inverse of getPixelForValue
		 * The coordinate (0, 0) is at the upper-left corner of the canvas
		 * @param pixel
		 */
		getValueForPixel: helpers$1.noop,

		/**
		 * Returns the location of the tick at the given index
		 * The coordinate (0, 0) is at the upper-left corner of the canvas
		 */
		getPixelForTick: function(index) {
			var me = this;
			var offset = me.options.offset;
			if (me.isHorizontal()) {
				var innerWidth = me.width - (me.paddingLeft + me.paddingRight);
				var tickWidth = innerWidth / Math.max((me._ticks.length - (offset ? 0 : 1)), 1);
				var pixel = (tickWidth * index) + me.paddingLeft;

				if (offset) {
					pixel += tickWidth / 2;
				}

				var finalVal = me.left + pixel;
				finalVal += me.isFullWidth() ? me.margins.left : 0;
				return finalVal;
			}
			var innerHeight = me.height - (me.paddingTop + me.paddingBottom);
			return me.top + (index * (innerHeight / (me._ticks.length - 1)));
		},

		/**
		 * Utility for getting the pixel location of a percentage of scale
		 * The coordinate (0, 0) is at the upper-left corner of the canvas
		 */
		getPixelForDecimal: function(decimal) {
			var me = this;
			if (me.isHorizontal()) {
				var innerWidth = me.width - (me.paddingLeft + me.paddingRight);
				var valueOffset = (innerWidth * decimal) + me.paddingLeft;

				var finalVal = me.left + valueOffset;
				finalVal += me.isFullWidth() ? me.margins.left : 0;
				return finalVal;
			}
			return me.top + (decimal * me.height);
		},

		/**
		 * Returns the pixel for the minimum chart value
		 * The coordinate (0, 0) is at the upper-left corner of the canvas
		 */
		getBasePixel: function() {
			return this.getPixelForValue(this.getBaseValue());
		},

		getBaseValue: function() {
			var me = this;
			var min = me.min;
			var max = me.max;

			return me.beginAtZero ? 0 :
				min < 0 && max < 0 ? max :
				min > 0 && max > 0 ? min :
				0;
		},

		/**
		 * Returns a subset of ticks to be plotted to avoid overlapping labels.
		 * @private
		 */
		_autoSkip: function(ticks) {
			var me = this;
			var isHorizontal = me.isHorizontal();
			var optionTicks = me.options.ticks.minor;
			var tickCount = ticks.length;
			var skipRatio = false;
			var maxTicks = optionTicks.maxTicksLimit;

			// Total space needed to display all ticks. First and last ticks are
			// drawn as their center at end of axis, so tickCount-1
			var ticksLength = me._tickSize() * (tickCount - 1);

			// Axis length
			var axisLength = isHorizontal
				? me.width - (me.paddingLeft + me.paddingRight)
				: me.height - (me.paddingTop + me.PaddingBottom);

			var result = [];
			var i, tick;

			if (ticksLength > axisLength) {
				skipRatio = 1 + Math.floor(ticksLength / axisLength);
			}

			// if they defined a max number of optionTicks,
			// increase skipRatio until that number is met
			if (tickCount > maxTicks) {
				skipRatio = Math.max(skipRatio, 1 + Math.floor(tickCount / maxTicks));
			}

			for (i = 0; i < tickCount; i++) {
				tick = ticks[i];

				if (skipRatio > 1 && i % skipRatio > 0) {
					// leave tick in place but make sure it's not displayed (#4635)
					delete tick.label;
				}
				result.push(tick);
			}
			return result;
		},

		/**
		 * @private
		 */
		_tickSize: function() {
			var me = this;
			var isHorizontal = me.isHorizontal();
			var optionTicks = me.options.ticks.minor;

			// Calculate space needed by label in axis direction.
			var rot = helpers$1.toRadians(me.labelRotation);
			var cos = Math.abs(Math.cos(rot));
			var sin = Math.abs(Math.sin(rot));

			var padding = optionTicks.autoSkipPadding || 0;
			var w = (me.longestLabelWidth + padding) || 0;

			var tickFont = helpers$1.options._parseFont(optionTicks);
			var h = (me._maxLabelLines * tickFont.lineHeight + padding) || 0;

			// Calculate space needed for 1 tick in axis direction.
			return isHorizontal
				? h * cos > w * sin ? w / cos : h / sin
				: h * sin < w * cos ? h / cos : w / sin;
		},

		/**
		 * @private
		 */
		_isVisible: function() {
			var me = this;
			var chart = me.chart;
			var display = me.options.display;
			var i, ilen, meta;

			if (display !== 'auto') {
				return !!display;
			}

			// When 'auto', the scale is visible if at least one associated dataset is visible.
			for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {
				if (chart.isDatasetVisible(i)) {
					meta = chart.getDatasetMeta(i);
					if (meta.xAxisID === me.id || meta.yAxisID === me.id) {
						return true;
					}
				}
			}

			return false;
		},

		/**
		 * Actually draw the scale on the canvas
		 * @param {object} chartArea - the area of the chart to draw full grid lines on
		 */
		draw: function(chartArea) {
			var me = this;
			var options = me.options;

			if (!me._isVisible()) {
				return;
			}

			var chart = me.chart;
			var context = me.ctx;
			var globalDefaults = core_defaults.global;
			var defaultFontColor = globalDefaults.defaultFontColor;
			var optionTicks = options.ticks.minor;
			var optionMajorTicks = options.ticks.major || optionTicks;
			var gridLines = options.gridLines;
			var scaleLabel = options.scaleLabel;
			var position = options.position;

			var isRotated = me.labelRotation !== 0;
			var isMirrored = optionTicks.mirror;
			var isHorizontal = me.isHorizontal();

			var parseFont = helpers$1.options._parseFont;
			var ticks = optionTicks.display && optionTicks.autoSkip ? me._autoSkip(me.getTicks()) : me.getTicks();
			var tickFontColor = valueOrDefault$9(optionTicks.fontColor, defaultFontColor);
			var tickFont = parseFont(optionTicks);
			var lineHeight = tickFont.lineHeight;
			var majorTickFontColor = valueOrDefault$9(optionMajorTicks.fontColor, defaultFontColor);
			var majorTickFont = parseFont(optionMajorTicks);
			var tickPadding = optionTicks.padding;
			var labelOffset = optionTicks.labelOffset;

			var tl = gridLines.drawTicks ? gridLines.tickMarkLength : 0;

			var scaleLabelFontColor = valueOrDefault$9(scaleLabel.fontColor, defaultFontColor);
			var scaleLabelFont = parseFont(scaleLabel);
			var scaleLabelPadding = helpers$1.options.toPadding(scaleLabel.padding);
			var labelRotationRadians = helpers$1.toRadians(me.labelRotation);

			var itemsToDraw = [];

			var axisWidth = gridLines.drawBorder ? valueAtIndexOrDefault(gridLines.lineWidth, 0, 0) : 0;
			var alignPixel = helpers$1._alignPixel;
			var borderValue, tickStart, tickEnd;

			if (position === 'top') {
				borderValue = alignPixel(chart, me.bottom, axisWidth);
				tickStart = me.bottom - tl;
				tickEnd = borderValue - axisWidth / 2;
			} else if (position === 'bottom') {
				borderValue = alignPixel(chart, me.top, axisWidth);
				tickStart = borderValue + axisWidth / 2;
				tickEnd = me.top + tl;
			} else if (position === 'left') {
				borderValue = alignPixel(chart, me.right, axisWidth);
				tickStart = me.right - tl;
				tickEnd = borderValue - axisWidth / 2;
			} else {
				borderValue = alignPixel(chart, me.left, axisWidth);
				tickStart = borderValue + axisWidth / 2;
				tickEnd = me.left + tl;
			}

			var epsilon = 0.0000001; // 0.0000001 is margin in pixels for Accumulated error.

			helpers$1.each(ticks, function(tick, index) {
				// autoskipper skipped this tick (#4635)
				if (helpers$1.isNullOrUndef(tick.label)) {
					return;
				}

				var label = tick.label;
				var lineWidth, lineColor, borderDash, borderDashOffset;
				if (index === me.zeroLineIndex && options.offset === gridLines.offsetGridLines) {
					// Draw the first index specially
					lineWidth = gridLines.zeroLineWidth;
					lineColor = gridLines.zeroLineColor;
					borderDash = gridLines.zeroLineBorderDash || [];
					borderDashOffset = gridLines.zeroLineBorderDashOffset || 0.0;
				} else {
					lineWidth = valueAtIndexOrDefault(gridLines.lineWidth, index);
					lineColor = valueAtIndexOrDefault(gridLines.color, index);
					borderDash = gridLines.borderDash || [];
					borderDashOffset = gridLines.borderDashOffset || 0.0;
				}

				// Common properties
				var tx1, ty1, tx2, ty2, x1, y1, x2, y2, labelX, labelY, textOffset, textAlign;
				var labelCount = helpers$1.isArray(label) ? label.length : 1;
				var lineValue = getPixelForGridLine(me, index, gridLines.offsetGridLines);

				if (isHorizontal) {
					var labelYOffset = tl + tickPadding;

					if (lineValue < me.left - epsilon) {
						lineColor = 'rgba(0,0,0,0)';
					}

					tx1 = tx2 = x1 = x2 = alignPixel(chart, lineValue, lineWidth);
					ty1 = tickStart;
					ty2 = tickEnd;
					labelX = me.getPixelForTick(index) + labelOffset; // x values for optionTicks (need to consider offsetLabel option)

					if (position === 'top') {
						y1 = alignPixel(chart, chartArea.top, axisWidth) + axisWidth / 2;
						y2 = chartArea.bottom;
						textOffset = ((!isRotated ? 0.5 : 1) - labelCount) * lineHeight;
						textAlign = !isRotated ? 'center' : 'left';
						labelY = me.bottom - labelYOffset;
					} else {
						y1 = chartArea.top;
						y2 = alignPixel(chart, chartArea.bottom, axisWidth) - axisWidth / 2;
						textOffset = (!isRotated ? 0.5 : 0) * lineHeight;
						textAlign = !isRotated ? 'center' : 'right';
						labelY = me.top + labelYOffset;
					}
				} else {
					var labelXOffset = (isMirrored ? 0 : tl) + tickPadding;

					if (lineValue < me.top - epsilon) {
						lineColor = 'rgba(0,0,0,0)';
					}

					tx1 = tickStart;
					tx2 = tickEnd;
					ty1 = ty2 = y1 = y2 = alignPixel(chart, lineValue, lineWidth);
					labelY = me.getPixelForTick(index) + labelOffset;
					textOffset = (1 - labelCount) * lineHeight / 2;

					if (position === 'left') {
						x1 = alignPixel(chart, chartArea.left, axisWidth) + axisWidth / 2;
						x2 = chartArea.right;
						textAlign = isMirrored ? 'left' : 'right';
						labelX = me.right - labelXOffset;
					} else {
						x1 = chartArea.left;
						x2 = alignPixel(chart, chartArea.right, axisWidth) - axisWidth / 2;
						textAlign = isMirrored ? 'right' : 'left';
						labelX = me.left + labelXOffset;
					}
				}

				itemsToDraw.push({
					tx1: tx1,
					ty1: ty1,
					tx2: tx2,
					ty2: ty2,
					x1: x1,
					y1: y1,
					x2: x2,
					y2: y2,
					labelX: labelX,
					labelY: labelY,
					glWidth: lineWidth,
					glColor: lineColor,
					glBorderDash: borderDash,
					glBorderDashOffset: borderDashOffset,
					rotation: -1 * labelRotationRadians,
					label: label,
					major: tick.major,
					textOffset: textOffset,
					textAlign: textAlign
				});
			});

			// Draw all of the tick labels, tick marks, and grid lines at the correct places
			helpers$1.each(itemsToDraw, function(itemToDraw) {
				var glWidth = itemToDraw.glWidth;
				var glColor = itemToDraw.glColor;

				if (gridLines.display && glWidth && glColor) {
					context.save();
					context.lineWidth = glWidth;
					context.strokeStyle = glColor;
					if (context.setLineDash) {
						context.setLineDash(itemToDraw.glBorderDash);
						context.lineDashOffset = itemToDraw.glBorderDashOffset;
					}

					context.beginPath();

					if (gridLines.drawTicks) {
						context.moveTo(itemToDraw.tx1, itemToDraw.ty1);
						context.lineTo(itemToDraw.tx2, itemToDraw.ty2);
					}

					if (gridLines.drawOnChartArea) {
						context.moveTo(itemToDraw.x1, itemToDraw.y1);
						context.lineTo(itemToDraw.x2, itemToDraw.y2);
					}

					context.stroke();
					context.restore();
				}

				if (optionTicks.display) {
					// Make sure we draw text in the correct color and font
					context.save();
					context.translate(itemToDraw.labelX, itemToDraw.labelY);
					context.rotate(itemToDraw.rotation);
					context.font = itemToDraw.major ? majorTickFont.string : tickFont.string;
					context.fillStyle = itemToDraw.major ? majorTickFontColor : tickFontColor;
					context.textBaseline = 'middle';
					context.textAlign = itemToDraw.textAlign;

					var label = itemToDraw.label;
					var y = itemToDraw.textOffset;
					if (helpers$1.isArray(label)) {
						for (var i = 0; i < label.length; ++i) {
							// We just make sure the multiline element is a string here..
							context.fillText('' + label[i], 0, y);
							y += lineHeight;
						}
					} else {
						context.fillText(label, 0, y);
					}
					context.restore();
				}
			});

			if (scaleLabel.display) {
				// Draw the scale label
				var scaleLabelX;
				var scaleLabelY;
				var rotation = 0;
				var halfLineHeight = scaleLabelFont.lineHeight / 2;

				if (isHorizontal) {
					scaleLabelX = me.left + ((me.right - me.left) / 2); // midpoint of the width
					scaleLabelY = position === 'bottom'
						? me.bottom - halfLineHeight - scaleLabelPadding.bottom
						: me.top + halfLineHeight + scaleLabelPadding.top;
				} else {
					var isLeft = position === 'left';
					scaleLabelX = isLeft
						? me.left + halfLineHeight + scaleLabelPadding.top
						: me.right - halfLineHeight - scaleLabelPadding.top;
					scaleLabelY = me.top + ((me.bottom - me.top) / 2);
					rotation = isLeft ? -0.5 * Math.PI : 0.5 * Math.PI;
				}

				context.save();
				context.translate(scaleLabelX, scaleLabelY);
				context.rotate(rotation);
				context.textAlign = 'center';
				context.textBaseline = 'middle';
				context.fillStyle = scaleLabelFontColor; // render in correct colour
				context.font = scaleLabelFont.string;
				context.fillText(scaleLabel.labelString, 0, 0);
				context.restore();
			}

			if (axisWidth) {
				// Draw the line at the edge of the axis
				var firstLineWidth = axisWidth;
				var lastLineWidth = valueAtIndexOrDefault(gridLines.lineWidth, ticks.length - 1, 0);
				var x1, x2, y1, y2;

				if (isHorizontal) {
					x1 = alignPixel(chart, me.left, firstLineWidth) - firstLineWidth / 2;
					x2 = alignPixel(chart, me.right, lastLineWidth) + lastLineWidth / 2;
					y1 = y2 = borderValue;
				} else {
					y1 = alignPixel(chart, me.top, firstLineWidth) - firstLineWidth / 2;
					y2 = alignPixel(chart, me.bottom, lastLineWidth) + lastLineWidth / 2;
					x1 = x2 = borderValue;
				}

				context.lineWidth = axisWidth;
				context.strokeStyle = valueAtIndexOrDefault(gridLines.color, 0);
				context.beginPath();
				context.moveTo(x1, y1);
				context.lineTo(x2, y2);
				context.stroke();
			}
		}
	});

	var defaultConfig = {
		position: 'bottom'
	};

	var scale_category = core_scale.extend({
		/**
		* Internal function to get the correct labels. If data.xLabels or data.yLabels are defined, use those
		* else fall back to data.labels
		* @private
		*/
		getLabels: function() {
			var data = this.chart.data;
			return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels;
		},

		determineDataLimits: function() {
			var me = this;
			var labels = me.getLabels();
			me.minIndex = 0;
			me.maxIndex = labels.length - 1;
			var findIndex;

			if (me.options.ticks.min !== undefined) {
				// user specified min value
				findIndex = labels.indexOf(me.options.ticks.min);
				me.minIndex = findIndex !== -1 ? findIndex : me.minIndex;
			}

			if (me.options.ticks.max !== undefined) {
				// user specified max value
				findIndex = labels.indexOf(me.options.ticks.max);
				me.maxIndex = findIndex !== -1 ? findIndex : me.maxIndex;
			}

			me.min = labels[me.minIndex];
			me.max = labels[me.maxIndex];
		},

		buildTicks: function() {
			var me = this;
			var labels = me.getLabels();
			// If we are viewing some subset of labels, slice the original array
			me.ticks = (me.minIndex === 0 && me.maxIndex === labels.length - 1) ? labels : labels.slice(me.minIndex, me.maxIndex + 1);
		},

		getLabelForIndex: function(index, datasetIndex) {
			var me = this;
			var chart = me.chart;

			if (chart.getDatasetMeta(datasetIndex).controller._getValueScaleId() === me.id) {
				return me.getRightValue(chart.data.datasets[datasetIndex].data[index]);
			}

			return me.ticks[index - me.minIndex];
		},

		// Used to get data value locations.  Value can either be an index or a numerical value
		getPixelForValue: function(value, index) {
			var me = this;
			var offset = me.options.offset;
			// 1 is added because we need the length but we have the indexes
			var offsetAmt = Math.max((me.maxIndex + 1 - me.minIndex - (offset ? 0 : 1)), 1);

			// If value is a data object, then index is the index in the data array,
			// not the index of the scale. We need to change that.
			var valueCategory;
			if (value !== undefined && value !== null) {
				valueCategory = me.isHorizontal() ? value.x : value.y;
			}
			if (valueCategory !== undefined || (value !== undefined && isNaN(index))) {
				var labels = me.getLabels();
				value = valueCategory || value;
				var idx = labels.indexOf(value);
				index = idx !== -1 ? idx : index;
			}

			if (me.isHorizontal()) {
				var valueWidth = me.width / offsetAmt;
				var widthOffset = (valueWidth * (index - me.minIndex));

				if (offset) {
					widthOffset += (valueWidth / 2);
				}

				return me.left + widthOffset;
			}
			var valueHeight = me.height / offsetAmt;
			var heightOffset = (valueHeight * (index - me.minIndex));

			if (offset) {
				heightOffset += (valueHeight / 2);
			}

			return me.top + heightOffset;
		},

		getPixelForTick: function(index) {
			return this.getPixelForValue(this.ticks[index], index + this.minIndex, null);
		},

		getValueForPixel: function(pixel) {
			var me = this;
			var offset = me.options.offset;
			var value;
			var offsetAmt = Math.max((me._ticks.length - (offset ? 0 : 1)), 1);
			var horz = me.isHorizontal();
			var valueDimension = (horz ? me.width : me.height) / offsetAmt;

			pixel -= horz ? me.left : me.top;

			if (offset) {
				pixel -= (valueDimension / 2);
			}

			if (pixel <= 0) {
				value = 0;
			} else {
				value = Math.round(pixel / valueDimension);
			}

			return value + me.minIndex;
		},

		getBasePixel: function() {
			return this.bottom;
		}
	});

	// INTERNAL: static default options, registered in src/index.js
	var _defaults = defaultConfig;
	scale_category._defaults = _defaults;

	var noop = helpers$1.noop;
	var isNullOrUndef = helpers$1.isNullOrUndef;

	/**
	 * Generate a set of linear ticks
	 * @param generationOptions the options used to generate the ticks
	 * @param dataRange the range of the data
	 * @returns {number[]} array of tick values
	 */
	function generateTicks(generationOptions, dataRange) {
		var ticks = [];
		// To get a "nice" value for the tick spacing, we will use the appropriately named
		// "nice number" algorithm. See https://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks
		// for details.

		var MIN_SPACING = 1e-14;
		var stepSize = generationOptions.stepSize;
		var unit = stepSize || 1;
		var maxNumSpaces = generationOptions.maxTicks - 1;
		var min = generationOptions.min;
		var max = generationOptions.max;
		var precision = generationOptions.precision;
		var rmin = dataRange.min;
		var rmax = dataRange.max;
		var spacing = helpers$1.niceNum((rmax - rmin) / maxNumSpaces / unit) * unit;
		var factor, niceMin, niceMax, numSpaces;

		// Beyond MIN_SPACING floating point numbers being to lose precision
		// such that we can't do the math necessary to generate ticks
		if (spacing < MIN_SPACING && isNullOrUndef(min) && isNullOrUndef(max)) {
			return [rmin, rmax];
		}

		numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);
		if (numSpaces > maxNumSpaces) {
			// If the calculated num of spaces exceeds maxNumSpaces, recalculate it
			spacing = helpers$1.niceNum(numSpaces * spacing / maxNumSpaces / unit) * unit;
		}

		if (stepSize || isNullOrUndef(precision)) {
			// If a precision is not specified, calculate factor based on spacing
			factor = Math.pow(10, helpers$1._decimalPlaces(spacing));
		} else {
			// If the user specified a precision, round to that number of decimal places
			factor = Math.pow(10, precision);
			spacing = Math.ceil(spacing * factor) / factor;
		}

		niceMin = Math.floor(rmin / spacing) * spacing;
		niceMax = Math.ceil(rmax / spacing) * spacing;

		// If min, max and stepSize is set and they make an evenly spaced scale use it.
		if (stepSize) {
			// If very close to our whole number, use it.
			if (!isNullOrUndef(min) && helpers$1.almostWhole(min / spacing, spacing / 1000)) {
				niceMin = min;
			}
			if (!isNullOrUndef(max) && helpers$1.almostWhole(max / spacing, spacing / 1000)) {
				niceMax = max;
			}
		}

		numSpaces = (niceMax - niceMin) / spacing;
		// If very close to our rounded value, use it.
		if (helpers$1.almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {
			numSpaces = Math.round(numSpaces);
		} else {
			numSpaces = Math.ceil(numSpaces);
		}

		niceMin = Math.round(niceMin * factor) / factor;
		niceMax = Math.round(niceMax * factor) / factor;
		ticks.push(isNullOrUndef(min) ? niceMin : min);
		for (var j = 1; j < numSpaces; ++j) {
			ticks.push(Math.round((niceMin + j * spacing) * factor) / factor);
		}
		ticks.push(isNullOrUndef(max) ? niceMax : max);

		return ticks;
	}

	var scale_linearbase = core_scale.extend({
		getRightValue: function(value) {
			if (typeof value === 'string') {
				return +value;
			}
			return core_scale.prototype.getRightValue.call(this, value);
		},

		handleTickRangeOptions: function() {
			var me = this;
			var opts = me.options;
			var tickOpts = opts.ticks;

			// If we are forcing it to begin at 0, but 0 will already be rendered on the chart,
			// do nothing since that would make the chart weird. If the user really wants a weird chart
			// axis, they can manually override it
			if (tickOpts.beginAtZero) {
				var minSign = helpers$1.sign(me.min);
				var maxSign = helpers$1.sign(me.max);

				if (minSign < 0 && maxSign < 0) {
					// move the top up to 0
					me.max = 0;
				} else if (minSign > 0 && maxSign > 0) {
					// move the bottom down to 0
					me.min = 0;
				}
			}

			var setMin = tickOpts.min !== undefined || tickOpts.suggestedMin !== undefined;
			var setMax = tickOpts.max !== undefined || tickOpts.suggestedMax !== undefined;

			if (tickOpts.min !== undefined) {
				me.min = tickOpts.min;
			} else if (tickOpts.suggestedMin !== undefined) {
				if (me.min === null) {
					me.min = tickOpts.suggestedMin;
				} else {
					me.min = Math.min(me.min, tickOpts.suggestedMin);
				}
			}

			if (tickOpts.max !== undefined) {
				me.max = tickOpts.max;
			} else if (tickOpts.suggestedMax !== undefined) {
				if (me.max === null) {
					me.max = tickOpts.suggestedMax;
				} else {
					me.max = Math.max(me.max, tickOpts.suggestedMax);
				}
			}

			if (setMin !== setMax) {
				// We set the min or the max but not both.
				// So ensure that our range is good
				// Inverted or 0 length range can happen when
				// ticks.min is set, and no datasets are visible
				if (me.min >= me.max) {
					if (setMin) {
						me.max = me.min + 1;
					} else {
						me.min = me.max - 1;
					}
				}
			}

			if (me.min === me.max) {
				me.max++;

				if (!tickOpts.beginAtZero) {
					me.min--;
				}
			}
		},

		getTickLimit: function() {
			var me = this;
			var tickOpts = me.options.ticks;
			var stepSize = tickOpts.stepSize;
			var maxTicksLimit = tickOpts.maxTicksLimit;
			var maxTicks;

			if (stepSize) {
				maxTicks = Math.ceil(me.max / stepSize) - Math.floor(me.min / stepSize) + 1;
			} else {
				maxTicks = me._computeTickLimit();
				maxTicksLimit = maxTicksLimit || 11;
			}

			if (maxTicksLimit) {
				maxTicks = Math.min(maxTicksLimit, maxTicks);
			}

			return maxTicks;
		},

		_computeTickLimit: function() {
			return Number.POSITIVE_INFINITY;
		},

		handleDirectionalChanges: noop,

		buildTicks: function() {
			var me = this;
			var opts = me.options;
			var tickOpts = opts.ticks;

			// Figure out what the max number of ticks we can support it is based on the size of
			// the axis area. For now, we say that the minimum tick spacing in pixels must be 40
			// We also limit the maximum number of ticks to 11 which gives a nice 10 squares on
			// the graph. Make sure we always have at least 2 ticks
			var maxTicks = me.getTickLimit();
			maxTicks = Math.max(2, maxTicks);

			var numericGeneratorOptions = {
				maxTicks: maxTicks,
				min: tickOpts.min,
				max: tickOpts.max,
				precision: tickOpts.precision,
				stepSize: helpers$1.valueOrDefault(tickOpts.fixedStepSize, tickOpts.stepSize)
			};
			var ticks = me.ticks = generateTicks(numericGeneratorOptions, me);

			me.handleDirectionalChanges();

			// At this point, we need to update our max and min given the tick values since we have expanded the
			// range of the scale
			me.max = helpers$1.max(ticks);
			me.min = helpers$1.min(ticks);

			if (tickOpts.reverse) {
				ticks.reverse();

				me.start = me.max;
				me.end = me.min;
			} else {
				me.start = me.min;
				me.end = me.max;
			}
		},

		convertTicksToLabels: function() {
			var me = this;
			me.ticksAsNumbers = me.ticks.slice();
			me.zeroLineIndex = me.ticks.indexOf(0);

			core_scale.prototype.convertTicksToLabels.call(me);
		}
	});

	var defaultConfig$1 = {
		position: 'left',
		ticks: {
			callback: core_ticks.formatters.linear
		}
	};

	var scale_linear = scale_linearbase.extend({
		determineDataLimits: function() {
			var me = this;
			var opts = me.options;
			var chart = me.chart;
			var data = chart.data;
			var datasets = data.datasets;
			var isHorizontal = me.isHorizontal();
			var DEFAULT_MIN = 0;
			var DEFAULT_MAX = 1;

			function IDMatches(meta) {
				return isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;
			}

			// First Calculate the range
			me.min = null;
			me.max = null;

			var hasStacks = opts.stacked;
			if (hasStacks === undefined) {
				helpers$1.each(datasets, function(dataset, datasetIndex) {
					if (hasStacks) {
						return;
					}

					var meta = chart.getDatasetMeta(datasetIndex);
					if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) &&
						meta.stack !== undefined) {
						hasStacks = true;
					}
				});
			}

			if (opts.stacked || hasStacks) {
				var valuesPerStack = {};

				helpers$1.each(datasets, function(dataset, datasetIndex) {
					var meta = chart.getDatasetMeta(datasetIndex);
					var key = [
						meta.type,
						// we have a separate stack for stack=undefined datasets when the opts.stacked is undefined
						((opts.stacked === undefined && meta.stack === undefined) ? datasetIndex : ''),
						meta.stack
					].join('.');

					if (valuesPerStack[key] === undefined) {
						valuesPerStack[key] = {
							positiveValues: [],
							negativeValues: []
						};
					}

					// Store these per type
					var positiveValues = valuesPerStack[key].positiveValues;
					var negativeValues = valuesPerStack[key].negativeValues;

					if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {
						helpers$1.each(dataset.data, function(rawValue, index) {
							var value = +me.getRightValue(rawValue);
							if (isNaN(value) || meta.data[index].hidden) {
								return;
							}

							positiveValues[index] = positiveValues[index] || 0;
							negativeValues[index] = negativeValues[index] || 0;

							if (opts.relativePoints) {
								positiveValues[index] = 100;
							} else if (value < 0) {
								negativeValues[index] += value;
							} else {
								positiveValues[index] += value;
							}
						});
					}
				});

				helpers$1.each(valuesPerStack, function(valuesForType) {
					var values = valuesForType.positiveValues.concat(valuesForType.negativeValues);
					var minVal = helpers$1.min(values);
					var maxVal = helpers$1.max(values);
					me.min = me.min === null ? minVal : Math.min(me.min, minVal);
					me.max = me.max === null ? maxVal : Math.max(me.max, maxVal);
				});

			} else {
				helpers$1.each(datasets, function(dataset, datasetIndex) {
					var meta = chart.getDatasetMeta(datasetIndex);
					if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {
						helpers$1.each(dataset.data, function(rawValue, index) {
							var value = +me.getRightValue(rawValue);
							if (isNaN(value) || meta.data[index].hidden) {
								return;
							}

							if (me.min === null) {
								me.min = value;
							} else if (value < me.min) {
								me.min = value;
							}

							if (me.max === null) {
								me.max = value;
							} else if (value > me.max) {
								me.max = value;
							}
						});
					}
				});
			}

			me.min = isFinite(me.min) && !isNaN(me.min) ? me.min : DEFAULT_MIN;
			me.max = isFinite(me.max) && !isNaN(me.max) ? me.max : DEFAULT_MAX;

			// Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero
			this.handleTickRangeOptions();
		},

		// Returns the maximum number of ticks based on the scale dimension
		_computeTickLimit: function() {
			var me = this;
			var tickFont;

			if (me.isHorizontal()) {
				return Math.ceil(me.width / 40);
			}
			tickFont = helpers$1.options._parseFont(me.options.ticks);
			return Math.ceil(me.height / tickFont.lineHeight);
		},

		// Called after the ticks are built. We need
		handleDirectionalChanges: function() {
			if (!this.isHorizontal()) {
				// We are in a vertical orientation. The top value is the highest. So reverse the array
				this.ticks.reverse();
			}
		},

		getLabelForIndex: function(index, datasetIndex) {
			return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);
		},

		// Utils
		getPixelForValue: function(value) {
			// This must be called after fit has been run so that
			// this.left, this.top, this.right, and this.bottom have been defined
			var me = this;
			var start = me.start;

			var rightValue = +me.getRightValue(value);
			var pixel;
			var range = me.end - start;

			if (me.isHorizontal()) {
				pixel = me.left + (me.width / range * (rightValue - start));
			} else {
				pixel = me.bottom - (me.height / range * (rightValue - start));
			}
			return pixel;
		},

		getValueForPixel: function(pixel) {
			var me = this;
			var isHorizontal = me.isHorizontal();
			var innerDimension = isHorizontal ? me.width : me.height;
			var offset = (isHorizontal ? pixel - me.left : me.bottom - pixel) / innerDimension;
			return me.start + ((me.end - me.start) * offset);
		},

		getPixelForTick: function(index) {
			return this.getPixelForValue(this.ticksAsNumbers[index]);
		}
	});

	// INTERNAL: static default options, registered in src/index.js
	var _defaults$1 = defaultConfig$1;
	scale_linear._defaults = _defaults$1;

	var valueOrDefault$a = helpers$1.valueOrDefault;

	/**
	 * Generate a set of logarithmic ticks
	 * @param generationOptions the options used to generate the ticks
	 * @param dataRange the range of the data
	 * @returns {number[]} array of tick values
	 */
	function generateTicks$1(generationOptions, dataRange) {
		var ticks = [];

		var tickVal = valueOrDefault$a(generationOptions.min, Math.pow(10, Math.floor(helpers$1.log10(dataRange.min))));

		var endExp = Math.floor(helpers$1.log10(dataRange.max));
		var endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));
		var exp, significand;

		if (tickVal === 0) {
			exp = Math.floor(helpers$1.log10(dataRange.minNotZero));
			significand = Math.floor(dataRange.minNotZero / Math.pow(10, exp));

			ticks.push(tickVal);
			tickVal = significand * Math.pow(10, exp);
		} else {
			exp = Math.floor(helpers$1.log10(tickVal));
			significand = Math.floor(tickVal / Math.pow(10, exp));
		}
		var precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;

		do {
			ticks.push(tickVal);

			++significand;
			if (significand === 10) {
				significand = 1;
				++exp;
				precision = exp >= 0 ? 1 : precision;
			}

			tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;
		} while (exp < endExp || (exp === endExp && significand < endSignificand));

		var lastTick = valueOrDefault$a(generationOptions.max, tickVal);
		ticks.push(lastTick);

		return ticks;
	}

	var defaultConfig$2 = {
		position: 'left',

		// label settings
		ticks: {
			callback: core_ticks.formatters.logarithmic
		}
	};

	// TODO(v3): change this to positiveOrDefault
	function nonNegativeOrDefault(value, defaultValue) {
		return helpers$1.isFinite(value) && value >= 0 ? value : defaultValue;
	}

	var scale_logarithmic = core_scale.extend({
		determineDataLimits: function() {
			var me = this;
			var opts = me.options;
			var chart = me.chart;
			var data = chart.data;
			var datasets = data.datasets;
			var isHorizontal = me.isHorizontal();
			function IDMatches(meta) {
				return isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;
			}

			// Calculate Range
			me.min = null;
			me.max = null;
			me.minNotZero = null;

			var hasStacks = opts.stacked;
			if (hasStacks === undefined) {
				helpers$1.each(datasets, function(dataset, datasetIndex) {
					if (hasStacks) {
						return;
					}

					var meta = chart.getDatasetMeta(datasetIndex);
					if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) &&
						meta.stack !== undefined) {
						hasStacks = true;
					}
				});
			}

			if (opts.stacked || hasStacks) {
				var valuesPerStack = {};

				helpers$1.each(datasets, function(dataset, datasetIndex) {
					var meta = chart.getDatasetMeta(datasetIndex);
					var key = [
						meta.type,
						// we have a separate stack for stack=undefined datasets when the opts.stacked is undefined
						((opts.stacked === undefined && meta.stack === undefined) ? datasetIndex : ''),
						meta.stack
					].join('.');

					if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {
						if (valuesPerStack[key] === undefined) {
							valuesPerStack[key] = [];
						}

						helpers$1.each(dataset.data, function(rawValue, index) {
							var values = valuesPerStack[key];
							var value = +me.getRightValue(rawValue);
							// invalid, hidden and negative values are ignored
							if (isNaN(value) || meta.data[index].hidden || value < 0) {
								return;
							}
							values[index] = values[index] || 0;
							values[index] += value;
						});
					}
				});

				helpers$1.each(valuesPerStack, function(valuesForType) {
					if (valuesForType.length > 0) {
						var minVal = helpers$1.min(valuesForType);
						var maxVal = helpers$1.max(valuesForType);
						me.min = me.min === null ? minVal : Math.min(me.min, minVal);
						me.max = me.max === null ? maxVal : Math.max(me.max, maxVal);
					}
				});

			} else {
				helpers$1.each(datasets, function(dataset, datasetIndex) {
					var meta = chart.getDatasetMeta(datasetIndex);
					if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {
						helpers$1.each(dataset.data, function(rawValue, index) {
							var value = +me.getRightValue(rawValue);
							// invalid, hidden and negative values are ignored
							if (isNaN(value) || meta.data[index].hidden || value < 0) {
								return;
							}

							if (me.min === null) {
								me.min = value;
							} else if (value < me.min) {
								me.min = value;
							}

							if (me.max === null) {
								me.max = value;
							} else if (value > me.max) {
								me.max = value;
							}

							if (value !== 0 && (me.minNotZero === null || value < me.minNotZero)) {
								me.minNotZero = value;
							}
						});
					}
				});
			}

			// Common base implementation to handle ticks.min, ticks.max
			this.handleTickRangeOptions();
		},

		handleTickRangeOptions: function() {
			var me = this;
			var tickOpts = me.options.ticks;
			var DEFAULT_MIN = 1;
			var DEFAULT_MAX = 10;

			me.min = nonNegativeOrDefault(tickOpts.min, me.min);
			me.max = nonNegativeOrDefault(tickOpts.max, me.max);

			if (me.min === me.max) {
				if (me.min !== 0 && me.min !== null) {
					me.min = Math.pow(10, Math.floor(helpers$1.log10(me.min)) - 1);
					me.max = Math.pow(10, Math.floor(helpers$1.log10(me.max)) + 1);
				} else {
					me.min = DEFAULT_MIN;
					me.max = DEFAULT_MAX;
				}
			}
			if (me.min === null) {
				me.min = Math.pow(10, Math.floor(helpers$1.log10(me.max)) - 1);
			}
			if (me.max === null) {
				me.max = me.min !== 0
					? Math.pow(10, Math.floor(helpers$1.log10(me.min)) + 1)
					: DEFAULT_MAX;
			}
			if (me.minNotZero === null) {
				if (me.min > 0) {
					me.minNotZero = me.min;
				} else if (me.max < 1) {
					me.minNotZero = Math.pow(10, Math.floor(helpers$1.log10(me.max)));
				} else {
					me.minNotZero = DEFAULT_MIN;
				}
			}
		},

		buildTicks: function() {
			var me = this;
			var tickOpts = me.options.ticks;
			var reverse = !me.isHorizontal();

			var generationOptions = {
				min: nonNegativeOrDefault(tickOpts.min),
				max: nonNegativeOrDefault(tickOpts.max)
			};
			var ticks = me.ticks = generateTicks$1(generationOptions, me);

			// At this point, we need to update our max and min given the tick values since we have expanded the
			// range of the scale
			me.max = helpers$1.max(ticks);
			me.min = helpers$1.min(ticks);

			if (tickOpts.reverse) {
				reverse = !reverse;
				me.start = me.max;
				me.end = me.min;
			} else {
				me.start = me.min;
				me.end = me.max;
			}
			if (reverse) {
				ticks.reverse();
			}
		},

		convertTicksToLabels: function() {
			this.tickValues = this.ticks.slice();

			core_scale.prototype.convertTicksToLabels.call(this);
		},

		// Get the correct tooltip label
		getLabelForIndex: function(index, datasetIndex) {
			return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);
		},

		getPixelForTick: function(index) {
			return this.getPixelForValue(this.tickValues[index]);
		},

		/**
		 * Returns the value of the first tick.
		 * @param {number} value - The minimum not zero value.
		 * @return {number} The first tick value.
		 * @private
		 */
		_getFirstTickValue: function(value) {
			var exp = Math.floor(helpers$1.log10(value));
			var significand = Math.floor(value / Math.pow(10, exp));

			return significand * Math.pow(10, exp);
		},

		getPixelForValue: function(value) {
			var me = this;
			var tickOpts = me.options.ticks;
			var reverse = tickOpts.reverse;
			var log10 = helpers$1.log10;
			var firstTickValue = me._getFirstTickValue(me.minNotZero);
			var offset = 0;
			var innerDimension, pixel, start, end, sign;

			value = +me.getRightValue(value);
			if (reverse) {
				start = me.end;
				end = me.start;
				sign = -1;
			} else {
				start = me.start;
				end = me.end;
				sign = 1;
			}
			if (me.isHorizontal()) {
				innerDimension = me.width;
				pixel = reverse ? me.right : me.left;
			} else {
				innerDimension = me.height;
				sign *= -1; // invert, since the upper-left corner of the canvas is at pixel (0, 0)
				pixel = reverse ? me.top : me.bottom;
			}
			if (value !== start) {
				if (start === 0) { // include zero tick
					offset = valueOrDefault$a(tickOpts.fontSize, core_defaults.global.defaultFontSize);
					innerDimension -= offset;
					start = firstTickValue;
				}
				if (value !== 0) {
					offset += innerDimension / (log10(end) - log10(start)) * (log10(value) - log10(start));
				}
				pixel += sign * offset;
			}
			return pixel;
		},

		getValueForPixel: function(pixel) {
			var me = this;
			var tickOpts = me.options.ticks;
			var reverse = tickOpts.reverse;
			var log10 = helpers$1.log10;
			var firstTickValue = me._getFirstTickValue(me.minNotZero);
			var innerDimension, start, end, value;

			if (reverse) {
				start = me.end;
				end = me.start;
			} else {
				start = me.start;
				end = me.end;
			}
			if (me.isHorizontal()) {
				innerDimension = me.width;
				value = reverse ? me.right - pixel : pixel - me.left;
			} else {
				innerDimension = me.height;
				value = reverse ? pixel - me.top : me.bottom - pixel;
			}
			if (value !== start) {
				if (start === 0) { // include zero tick
					var offset = valueOrDefault$a(tickOpts.fontSize, core_defaults.global.defaultFontSize);
					value -= offset;
					innerDimension -= offset;
					start = firstTickValue;
				}
				value *= log10(end) - log10(start);
				value /= innerDimension;
				value = Math.pow(10, log10(start) + value);
			}
			return value;
		}
	});

	// INTERNAL: static default options, registered in src/index.js
	var _defaults$2 = defaultConfig$2;
	scale_logarithmic._defaults = _defaults$2;

	var valueOrDefault$b = helpers$1.valueOrDefault;
	var valueAtIndexOrDefault$1 = helpers$1.valueAtIndexOrDefault;
	var resolve$7 = helpers$1.options.resolve;

	var defaultConfig$3 = {
		display: true,

		// Boolean - Whether to animate scaling the chart from the centre
		animate: true,
		position: 'chartArea',

		angleLines: {
			display: true,
			color: 'rgba(0, 0, 0, 0.1)',
			lineWidth: 1,
			borderDash: [],
			borderDashOffset: 0.0
		},

		gridLines: {
			circular: false
		},

		// label settings
		ticks: {
			// Boolean - Show a backdrop to the scale label
			showLabelBackdrop: true,

			// String - The colour of the label backdrop
			backdropColor: 'rgba(255,255,255,0.75)',

			// Number - The backdrop padding above & below the label in pixels
			backdropPaddingY: 2,

			// Number - The backdrop padding to the side of the label in pixels
			backdropPaddingX: 2,

			callback: core_ticks.formatters.linear
		},

		pointLabels: {
			// Boolean - if true, show point labels
			display: true,

			// Number - Point label font size in pixels
			fontSize: 10,

			// Function - Used to convert point labels
			callback: function(label) {
				return label;
			}
		}
	};

	function getValueCount(scale) {
		var opts = scale.options;
		return opts.angleLines.display || opts.pointLabels.display ? scale.chart.data.labels.length : 0;
	}

	function getTickBackdropHeight(opts) {
		var tickOpts = opts.ticks;

		if (tickOpts.display && opts.display) {
			return valueOrDefault$b(tickOpts.fontSize, core_defaults.global.defaultFontSize) + tickOpts.backdropPaddingY * 2;
		}
		return 0;
	}

	function measureLabelSize(ctx, lineHeight, label) {
		if (helpers$1.isArray(label)) {
			return {
				w: helpers$1.longestText(ctx, ctx.font, label),
				h: label.length * lineHeight
			};
		}

		return {
			w: ctx.measureText(label).width,
			h: lineHeight
		};
	}

	function determineLimits(angle, pos, size, min, max) {
		if (angle === min || angle === max) {
			return {
				start: pos - (size / 2),
				end: pos + (size / 2)
			};
		} else if (angle < min || angle > max) {
			return {
				start: pos - size,
				end: pos
			};
		}

		return {
			start: pos,
			end: pos + size
		};
	}

	/**
	 * Helper function to fit a radial linear scale with point labels
	 */
	function fitWithPointLabels(scale) {

		// Right, this is really confusing and there is a lot of maths going on here
		// The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9
		//
		// Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif
		//
		// Solution:
		//
		// We assume the radius of the polygon is half the size of the canvas at first
		// at each index we check if the text overlaps.
		//
		// Where it does, we store that angle and that index.
		//
		// After finding the largest index and angle we calculate how much we need to remove
		// from the shape radius to move the point inwards by that x.
		//
		// We average the left and right distances to get the maximum shape radius that can fit in the box
		// along with labels.
		//
		// Once we have that, we can find the centre point for the chart, by taking the x text protrusion
		// on each side, removing that from the size, halving it and adding the left x protrusion width.
		//
		// This will mean we have a shape fitted to the canvas, as large as it can be with the labels
		// and position it in the most space efficient manner
		//
		// https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif

		var plFont = helpers$1.options._parseFont(scale.options.pointLabels);

		// Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.
		// Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points
		var furthestLimits = {
			l: 0,
			r: scale.width,
			t: 0,
			b: scale.height - scale.paddingTop
		};
		var furthestAngles = {};
		var i, textSize, pointPosition;

		scale.ctx.font = plFont.string;
		scale._pointLabelSizes = [];

		var valueCount = getValueCount(scale);
		for (i = 0; i < valueCount; i++) {
			pointPosition = scale.getPointPosition(i, scale.drawingArea + 5);
			textSize = measureLabelSize(scale.ctx, plFont.lineHeight, scale.pointLabels[i] || '');
			scale._pointLabelSizes[i] = textSize;

			// Add quarter circle to make degree 0 mean top of circle
			var angleRadians = scale.getIndexAngle(i);
			var angle = helpers$1.toDegrees(angleRadians) % 360;
			var hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);
			var vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);

			if (hLimits.start < furthestLimits.l) {
				furthestLimits.l = hLimits.start;
				furthestAngles.l = angleRadians;
			}

			if (hLimits.end > furthestLimits.r) {
				furthestLimits.r = hLimits.end;
				furthestAngles.r = angleRadians;
			}

			if (vLimits.start < furthestLimits.t) {
				furthestLimits.t = vLimits.start;
				furthestAngles.t = angleRadians;
			}

			if (vLimits.end > furthestLimits.b) {
				furthestLimits.b = vLimits.end;
				furthestAngles.b = angleRadians;
			}
		}

		scale.setReductions(scale.drawingArea, furthestLimits, furthestAngles);
	}

	function getTextAlignForAngle(angle) {
		if (angle === 0 || angle === 180) {
			return 'center';
		} else if (angle < 180) {
			return 'left';
		}

		return 'right';
	}

	function fillText(ctx, text, position, lineHeight) {
		var y = position.y + lineHeight / 2;
		var i, ilen;

		if (helpers$1.isArray(text)) {
			for (i = 0, ilen = text.length; i < ilen; ++i) {
				ctx.fillText(text[i], position.x, y);
				y += lineHeight;
			}
		} else {
			ctx.fillText(text, position.x, y);
		}
	}

	function adjustPointPositionForLabelHeight(angle, textSize, position) {
		if (angle === 90 || angle === 270) {
			position.y -= (textSize.h / 2);
		} else if (angle > 270 || angle < 90) {
			position.y -= textSize.h;
		}
	}

	function drawPointLabels(scale) {
		var ctx = scale.ctx;
		var opts = scale.options;
		var angleLineOpts = opts.angleLines;
		var gridLineOpts = opts.gridLines;
		var pointLabelOpts = opts.pointLabels;
		var lineWidth = valueOrDefault$b(angleLineOpts.lineWidth, gridLineOpts.lineWidth);
		var lineColor = valueOrDefault$b(angleLineOpts.color, gridLineOpts.color);
		var tickBackdropHeight = getTickBackdropHeight(opts);

		ctx.save();
		ctx.lineWidth = lineWidth;
		ctx.strokeStyle = lineColor;
		if (ctx.setLineDash) {
			ctx.setLineDash(resolve$7([angleLineOpts.borderDash, gridLineOpts.borderDash, []]));
			ctx.lineDashOffset = resolve$7([angleLineOpts.borderDashOffset, gridLineOpts.borderDashOffset, 0.0]);
		}

		var outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max);

		// Point Label Font
		var plFont = helpers$1.options._parseFont(pointLabelOpts);

		ctx.font = plFont.string;
		ctx.textBaseline = 'middle';

		for (var i = getValueCount(scale) - 1; i >= 0; i--) {
			if (angleLineOpts.display && lineWidth && lineColor) {
				var outerPosition = scale.getPointPosition(i, outerDistance);
				ctx.beginPath();
				ctx.moveTo(scale.xCenter, scale.yCenter);
				ctx.lineTo(outerPosition.x, outerPosition.y);
				ctx.stroke();
			}

			if (pointLabelOpts.display) {
				// Extra pixels out for some label spacing
				var extra = (i === 0 ? tickBackdropHeight / 2 : 0);
				var pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + 5);

				// Keep this in loop since we may support array properties here
				var pointLabelFontColor = valueAtIndexOrDefault$1(pointLabelOpts.fontColor, i, core_defaults.global.defaultFontColor);
				ctx.fillStyle = pointLabelFontColor;

				var angleRadians = scale.getIndexAngle(i);
				var angle = helpers$1.toDegrees(angleRadians);
				ctx.textAlign = getTextAlignForAngle(angle);
				adjustPointPositionForLabelHeight(angle, scale._pointLabelSizes[i], pointLabelPosition);
				fillText(ctx, scale.pointLabels[i] || '', pointLabelPosition, plFont.lineHeight);
			}
		}
		ctx.restore();
	}

	function drawRadiusLine(scale, gridLineOpts, radius, index) {
		var ctx = scale.ctx;
		var circular = gridLineOpts.circular;
		var valueCount = getValueCount(scale);
		var lineColor = valueAtIndexOrDefault$1(gridLineOpts.color, index - 1);
		var lineWidth = valueAtIndexOrDefault$1(gridLineOpts.lineWidth, index - 1);
		var pointPosition;

		if ((!circular && !valueCount) || !lineColor || !lineWidth) {
			return;
		}

		ctx.save();
		ctx.strokeStyle = lineColor;
		ctx.lineWidth = lineWidth;
		if (ctx.setLineDash) {
			ctx.setLineDash(gridLineOpts.borderDash || []);
			ctx.lineDashOffset = gridLineOpts.borderDashOffset || 0.0;
		}

		ctx.beginPath();
		if (circular) {
			// Draw circular arcs between the points
			ctx.arc(scale.xCenter, scale.yCenter, radius, 0, Math.PI * 2);
		} else {
			// Draw straight lines connecting each index
			pointPosition = scale.getPointPosition(0, radius);
			ctx.moveTo(pointPosition.x, pointPosition.y);

			for (var i = 1; i < valueCount; i++) {
				pointPosition = scale.getPointPosition(i, radius);
				ctx.lineTo(pointPosition.x, pointPosition.y);
			}
		}
		ctx.closePath();
		ctx.stroke();
		ctx.restore();
	}

	function numberOrZero(param) {
		return helpers$1.isNumber(param) ? param : 0;
	}

	var scale_radialLinear = scale_linearbase.extend({
		setDimensions: function() {
			var me = this;

			// Set the unconstrained dimension before label rotation
			me.width = me.maxWidth;
			me.height = me.maxHeight;
			me.paddingTop = getTickBackdropHeight(me.options) / 2;
			me.xCenter = Math.floor(me.width / 2);
			me.yCenter = Math.floor((me.height - me.paddingTop) / 2);
			me.drawingArea = Math.min(me.height - me.paddingTop, me.width) / 2;
		},

		determineDataLimits: function() {
			var me = this;
			var chart = me.chart;
			var min = Number.POSITIVE_INFINITY;
			var max = Number.NEGATIVE_INFINITY;

			helpers$1.each(chart.data.datasets, function(dataset, datasetIndex) {
				if (chart.isDatasetVisible(datasetIndex)) {
					var meta = chart.getDatasetMeta(datasetIndex);

					helpers$1.each(dataset.data, function(rawValue, index) {
						var value = +me.getRightValue(rawValue);
						if (isNaN(value) || meta.data[index].hidden) {
							return;
						}

						min = Math.min(value, min);
						max = Math.max(value, max);
					});
				}
			});

			me.min = (min === Number.POSITIVE_INFINITY ? 0 : min);
			me.max = (max === Number.NEGATIVE_INFINITY ? 0 : max);

			// Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero
			me.handleTickRangeOptions();
		},

		// Returns the maximum number of ticks based on the scale dimension
		_computeTickLimit: function() {
			return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));
		},

		convertTicksToLabels: function() {
			var me = this;

			scale_linearbase.prototype.convertTicksToLabels.call(me);

			// Point labels
			me.pointLabels = me.chart.data.labels.map(me.options.pointLabels.callback, me);
		},

		getLabelForIndex: function(index, datasetIndex) {
			return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);
		},

		fit: function() {
			var me = this;
			var opts = me.options;

			if (opts.display && opts.pointLabels.display) {
				fitWithPointLabels(me);
			} else {
				me.setCenterPoint(0, 0, 0, 0);
			}
		},

		/**
		 * Set radius reductions and determine new radius and center point
		 * @private
		 */
		setReductions: function(largestPossibleRadius, furthestLimits, furthestAngles) {
			var me = this;
			var radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);
			var radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);
			var radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);
			var radiusReductionBottom = -Math.max(furthestLimits.b - (me.height - me.paddingTop), 0) / Math.cos(furthestAngles.b);

			radiusReductionLeft = numberOrZero(radiusReductionLeft);
			radiusReductionRight = numberOrZero(radiusReductionRight);
			radiusReductionTop = numberOrZero(radiusReductionTop);
			radiusReductionBottom = numberOrZero(radiusReductionBottom);

			me.drawingArea = Math.min(
				Math.floor(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2),
				Math.floor(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2));
			me.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);
		},

		setCenterPoint: function(leftMovement, rightMovement, topMovement, bottomMovement) {
			var me = this;
			var maxRight = me.width - rightMovement - me.drawingArea;
			var maxLeft = leftMovement + me.drawingArea;
			var maxTop = topMovement + me.drawingArea;
			var maxBottom = (me.height - me.paddingTop) - bottomMovement - me.drawingArea;

			me.xCenter = Math.floor(((maxLeft + maxRight) / 2) + me.left);
			me.yCenter = Math.floor(((maxTop + maxBottom) / 2) + me.top + me.paddingTop);
		},

		getIndexAngle: function(index) {
			var angleMultiplier = (Math.PI * 2) / getValueCount(this);
			var startAngle = this.chart.options && this.chart.options.startAngle ?
				this.chart.options.startAngle :
				0;

			var startAngleRadians = startAngle * Math.PI * 2 / 360;

			// Start from the top instead of right, so remove a quarter of the circle
			return index * angleMultiplier + startAngleRadians;
		},

		getDistanceFromCenterForValue: function(value) {
			var me = this;

			if (value === null) {
				return 0; // null always in center
			}

			// Take into account half font size + the yPadding of the top value
			var scalingFactor = me.drawingArea / (me.max - me.min);
			if (me.options.ticks.reverse) {
				return (me.max - value) * scalingFactor;
			}
			return (value - me.min) * scalingFactor;
		},

		getPointPosition: function(index, distanceFromCenter) {
			var me = this;
			var thisAngle = me.getIndexAngle(index) - (Math.PI / 2);
			return {
				x: Math.cos(thisAngle) * distanceFromCenter + me.xCenter,
				y: Math.sin(thisAngle) * distanceFromCenter + me.yCenter
			};
		},

		getPointPositionForValue: function(index, value) {
			return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));
		},

		getBasePosition: function() {
			var me = this;
			var min = me.min;
			var max = me.max;

			return me.getPointPositionForValue(0,
				me.beginAtZero ? 0 :
				min < 0 && max < 0 ? max :
				min > 0 && max > 0 ? min :
				0);
		},

		draw: function() {
			var me = this;
			var opts = me.options;
			var gridLineOpts = opts.gridLines;
			var tickOpts = opts.ticks;

			if (opts.display) {
				var ctx = me.ctx;
				var startAngle = this.getIndexAngle(0);
				var tickFont = helpers$1.options._parseFont(tickOpts);

				if (opts.angleLines.display || opts.pointLabels.display) {
					drawPointLabels(me);
				}

				helpers$1.each(me.ticks, function(label, index) {
					// Don't draw a centre value (if it is minimum)
					if (index > 0 || tickOpts.reverse) {
						var yCenterOffset = me.getDistanceFromCenterForValue(me.ticksAsNumbers[index]);

						// Draw circular lines around the scale
						if (gridLineOpts.display && index !== 0) {
							drawRadiusLine(me, gridLineOpts, yCenterOffset, index);
						}

						if (tickOpts.display) {
							var tickFontColor = valueOrDefault$b(tickOpts.fontColor, core_defaults.global.defaultFontColor);
							ctx.font = tickFont.string;

							ctx.save();
							ctx.translate(me.xCenter, me.yCenter);
							ctx.rotate(startAngle);

							if (tickOpts.showLabelBackdrop) {
								var labelWidth = ctx.measureText(label).width;
								ctx.fillStyle = tickOpts.backdropColor;
								ctx.fillRect(
									-labelWidth / 2 - tickOpts.backdropPaddingX,
									-yCenterOffset - tickFont.size / 2 - tickOpts.backdropPaddingY,
									labelWidth + tickOpts.backdropPaddingX * 2,
									tickFont.size + tickOpts.backdropPaddingY * 2
								);
							}

							ctx.textAlign = 'center';
							ctx.textBaseline = 'middle';
							ctx.fillStyle = tickFontColor;
							ctx.fillText(label, 0, -yCenterOffset);
							ctx.restore();
						}
					}
				});
			}
		}
	});

	// INTERNAL: static default options, registered in src/index.js
	var _defaults$3 = defaultConfig$3;
	scale_radialLinear._defaults = _defaults$3;

	var valueOrDefault$c = helpers$1.valueOrDefault;

	// Integer constants are from the ES6 spec.
	var MIN_INTEGER = Number.MIN_SAFE_INTEGER || -9007199254740991;
	var MAX_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;

	var INTERVALS = {
		millisecond: {
			common: true,
			size: 1,
			steps: [1, 2, 5, 10, 20, 50, 100, 250, 500]
		},
		second: {
			common: true,
			size: 1000,
			steps: [1, 2, 5, 10, 15, 30]
		},
		minute: {
			common: true,
			size: 60000,
			steps: [1, 2, 5, 10, 15, 30]
		},
		hour: {
			common: true,
			size: 3600000,
			steps: [1, 2, 3, 6, 12]
		},
		day: {
			common: true,
			size: 86400000,
			steps: [1, 2, 5]
		},
		week: {
			common: false,
			size: 604800000,
			steps: [1, 2, 3, 4]
		},
		month: {
			common: true,
			size: 2.628e9,
			steps: [1, 2, 3]
		},
		quarter: {
			common: false,
			size: 7.884e9,
			steps: [1, 2, 3, 4]
		},
		year: {
			common: true,
			size: 3.154e10
		}
	};

	var UNITS = Object.keys(INTERVALS);

	function sorter(a, b) {
		return a - b;
	}

	function arrayUnique(items) {
		var hash = {};
		var out = [];
		var i, ilen, item;

		for (i = 0, ilen = items.length; i < ilen; ++i) {
			item = items[i];
			if (!hash[item]) {
				hash[item] = true;
				out.push(item);
			}
		}

		return out;
	}

	/**
	 * Returns an array of {time, pos} objects used to interpolate a specific `time` or position
	 * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is
	 * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other
	 * extremity (left + width or top + height). Note that it would be more optimized to directly
	 * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need
	 * to create the lookup table. The table ALWAYS contains at least two items: min and max.
	 *
	 * @param {number[]} timestamps - timestamps sorted from lowest to highest.
	 * @param {string} distribution - If 'linear', timestamps will be spread linearly along the min
	 * and max range, so basically, the table will contains only two items: {min, 0} and {max, 1}.
	 * If 'series', timestamps will be positioned at the same distance from each other. In this
	 * case, only timestamps that break the time linearity are registered, meaning that in the
	 * best case, all timestamps are linear, the table contains only min and max.
	 */
	function buildLookupTable(timestamps, min, max, distribution) {
		if (distribution === 'linear' || !timestamps.length) {
			return [
				{time: min, pos: 0},
				{time: max, pos: 1}
			];
		}

		var table = [];
		var items = [min];
		var i, ilen, prev, curr, next;

		for (i = 0, ilen = timestamps.length; i < ilen; ++i) {
			curr = timestamps[i];
			if (curr > min && curr < max) {
				items.push(curr);
			}
		}

		items.push(max);

		for (i = 0, ilen = items.length; i < ilen; ++i) {
			next = items[i + 1];
			prev = items[i - 1];
			curr = items[i];

			// only add points that breaks the scale linearity
			if (prev === undefined || next === undefined || Math.round((next + prev) / 2) !== curr) {
				table.push({time: curr, pos: i / (ilen - 1)});
			}
		}

		return table;
	}

	// @see adapted from https://www.anujgakhar.com/2014/03/01/binary-search-in-javascript/
	function lookup(table, key, value) {
		var lo = 0;
		var hi = table.length - 1;
		var mid, i0, i1;

		while (lo >= 0 && lo <= hi) {
			mid = (lo + hi) >> 1;
			i0 = table[mid - 1] || null;
			i1 = table[mid];

			if (!i0) {
				// given value is outside table (before first item)
				return {lo: null, hi: i1};
			} else if (i1[key] < value) {
				lo = mid + 1;
			} else if (i0[key] > value) {
				hi = mid - 1;
			} else {
				return {lo: i0, hi: i1};
			}
		}

		// given value is outside table (after last item)
		return {lo: i1, hi: null};
	}

	/**
	 * Linearly interpolates the given source `value` using the table items `skey` values and
	 * returns the associated `tkey` value. For example, interpolate(table, 'time', 42, 'pos')
	 * returns the position for a timestamp equal to 42. If value is out of bounds, values at
	 * index [0, 1] or [n - 1, n] are used for the interpolation.
	 */
	function interpolate$1(table, skey, sval, tkey) {
		var range = lookup(table, skey, sval);

		// Note: the lookup table ALWAYS contains at least 2 items (min and max)
		var prev = !range.lo ? table[0] : !range.hi ? table[table.length - 2] : range.lo;
		var next = !range.lo ? table[1] : !range.hi ? table[table.length - 1] : range.hi;

		var span = next[skey] - prev[skey];
		var ratio = span ? (sval - prev[skey]) / span : 0;
		var offset = (next[tkey] - prev[tkey]) * ratio;

		return prev[tkey] + offset;
	}

	function toTimestamp(scale, input) {
		var adapter = scale._adapter;
		var options = scale.options.time;
		var parser = options.parser;
		var format = parser || options.format;
		var value = input;

		if (typeof parser === 'function') {
			value = parser(value);
		}

		// Only parse if its not a timestamp already
		if (!helpers$1.isFinite(value)) {
			value = typeof format === 'string'
				? adapter.parse(value, format)
				: adapter.parse(value);
		}

		if (value !== null) {
			return +value;
		}

		// Labels are in an incompatible format and no `parser` has been provided.
		// The user might still use the deprecated `format` option for parsing.
		if (!parser && typeof format === 'function') {
			value = format(input);

			// `format` could return something else than a timestamp, if so, parse it
			if (!helpers$1.isFinite(value)) {
				value = adapter.parse(value);
			}
		}

		return value;
	}

	function parse(scale, input) {
		if (helpers$1.isNullOrUndef(input)) {
			return null;
		}

		var options = scale.options.time;
		var value = toTimestamp(scale, scale.getRightValue(input));
		if (value === null) {
			return value;
		}

		if (options.round) {
			value = +scale._adapter.startOf(value, options.round);
		}

		return value;
	}

	/**
	 * Returns the number of unit to skip to be able to display up to `capacity` number of ticks
	 * in `unit` for the given `min` / `max` range and respecting the interval steps constraints.
	 */
	function determineStepSize(min, max, unit, capacity) {
		var range = max - min;
		var interval = INTERVALS[unit];
		var milliseconds = interval.size;
		var steps = interval.steps;
		var i, ilen, factor;

		if (!steps) {
			return Math.ceil(range / (capacity * milliseconds));
		}

		for (i = 0, ilen = steps.length; i < ilen; ++i) {
			factor = steps[i];
			if (Math.ceil(range / (milliseconds * factor)) <= capacity) {
				break;
			}
		}

		return factor;
	}

	/**
	 * Figures out what unit results in an appropriate number of auto-generated ticks
	 */
	function determineUnitForAutoTicks(minUnit, min, max, capacity) {
		var ilen = UNITS.length;
		var i, interval, factor;

		for (i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {
			interval = INTERVALS[UNITS[i]];
			factor = interval.steps ? interval.steps[interval.steps.length - 1] : MAX_INTEGER;

			if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {
				return UNITS[i];
			}
		}

		return UNITS[ilen - 1];
	}

	/**
	 * Figures out what unit to format a set of ticks with
	 */
	function determineUnitForFormatting(scale, ticks, minUnit, min, max) {
		var ilen = UNITS.length;
		var i, unit;

		for (i = ilen - 1; i >= UNITS.indexOf(minUnit); i--) {
			unit = UNITS[i];
			if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= ticks.length) {
				return unit;
			}
		}

		return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];
	}

	function determineMajorUnit(unit) {
		for (var i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {
			if (INTERVALS[UNITS[i]].common) {
				return UNITS[i];
			}
		}
	}

	/**
	 * Generates a maximum of `capacity` timestamps between min and max, rounded to the
	 * `minor` unit, aligned on the `major` unit and using the given scale time `options`.
	 * Important: this method can return ticks outside the min and max range, it's the
	 * responsibility of the calling code to clamp values if needed.
	 */
	function generate(scale, min, max, capacity) {
		var adapter = scale._adapter;
		var options = scale.options;
		var timeOpts = options.time;
		var minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, capacity);
		var major = determineMajorUnit(minor);
		var stepSize = valueOrDefault$c(timeOpts.stepSize, timeOpts.unitStepSize);
		var weekday = minor === 'week' ? timeOpts.isoWeekday : false;
		var majorTicksEnabled = options.ticks.major.enabled;
		var interval = INTERVALS[minor];
		var first = min;
		var last = max;
		var ticks = [];
		var time;

		if (!stepSize) {
			stepSize = determineStepSize(min, max, minor, capacity);
		}

		// For 'week' unit, handle the first day of week option
		if (weekday) {
			first = +adapter.startOf(first, 'isoWeek', weekday);
			last = +adapter.startOf(last, 'isoWeek', weekday);
		}

		// Align first/last ticks on unit
		first = +adapter.startOf(first, weekday ? 'day' : minor);
		last = +adapter.startOf(last, weekday ? 'day' : minor);

		// Make sure that the last tick include max
		if (last < max) {
			last = +adapter.add(last, 1, minor);
		}

		time = first;

		if (majorTicksEnabled && major && !weekday && !timeOpts.round) {
			// Align the first tick on the previous `minor` unit aligned on the `major` unit:
			// we first aligned time on the previous `major` unit then add the number of full
			// stepSize there is between first and the previous major time.
			time = +adapter.startOf(time, major);
			time = +adapter.add(time, ~~((first - time) / (interval.size * stepSize)) * stepSize, minor);
		}

		for (; time < last; time = +adapter.add(time, stepSize, minor)) {
			ticks.push(+time);
		}

		ticks.push(+time);

		return ticks;
	}

	/**
	 * Returns the start and end offsets from edges in the form of {start, end}
	 * where each value is a relative width to the scale and ranges between 0 and 1.
	 * They add extra margins on the both sides by scaling down the original scale.
	 * Offsets are added when the `offset` option is true.
	 */
	function computeOffsets(table, ticks, min, max, options) {
		var start = 0;
		var end = 0;
		var first, last;

		if (options.offset && ticks.length) {
			if (!options.time.min) {
				first = interpolate$1(table, 'time', ticks[0], 'pos');
				if (ticks.length === 1) {
					start = 1 - first;
				} else {
					start = (interpolate$1(table, 'time', ticks[1], 'pos') - first) / 2;
				}
			}
			if (!options.time.max) {
				last = interpolate$1(table, 'time', ticks[ticks.length - 1], 'pos');
				if (ticks.length === 1) {
					end = last;
				} else {
					end = (last - interpolate$1(table, 'time', ticks[ticks.length - 2], 'pos')) / 2;
				}
			}
		}

		return {start: start, end: end};
	}

	function ticksFromTimestamps(scale, values, majorUnit) {
		var ticks = [];
		var i, ilen, value, major;

		for (i = 0, ilen = values.length; i < ilen; ++i) {
			value = values[i];
			major = majorUnit ? value === +scale._adapter.startOf(value, majorUnit) : false;

			ticks.push({
				value: value,
				major: major
			});
		}

		return ticks;
	}

	var defaultConfig$4 = {
		position: 'bottom',

		/**
		 * Data distribution along the scale:
		 * - 'linear': data are spread according to their time (distances can vary),
		 * - 'series': data are spread at the same distance from each other.
		 * @see https://github.com/chartjs/Chart.js/pull/4507
		 * @since 2.7.0
		 */
		distribution: 'linear',

		/**
		 * Scale boundary strategy (bypassed by min/max time options)
		 * - `data`: make sure data are fully visible, ticks outside are removed
		 * - `ticks`: make sure ticks are fully visible, data outside are truncated
		 * @see https://github.com/chartjs/Chart.js/pull/4556
		 * @since 2.7.0
		 */
		bounds: 'data',

		adapters: {},
		time: {
			parser: false, // false == a pattern string from https://momentjs.com/docs/#/parsing/string-format/ or a custom callback that converts its argument to a moment
			format: false, // DEPRECATED false == date objects, moment object, callback or a pattern string from https://momentjs.com/docs/#/parsing/string-format/
			unit: false, // false == automatic or override with week, month, year, etc.
			round: false, // none, or override with week, month, year, etc.
			displayFormat: false, // DEPRECATED
			isoWeekday: false, // override week start day - see https://momentjs.com/docs/#/get-set/iso-weekday/
			minUnit: 'millisecond',
			displayFormats: {}
		},
		ticks: {
			autoSkip: false,

			/**
			 * Ticks generation input values:
			 * - 'auto': generates "optimal" ticks based on scale size and time options.
			 * - 'data': generates ticks from data (including labels from data {t|x|y} objects).
			 * - 'labels': generates ticks from user given `data.labels` values ONLY.
			 * @see https://github.com/chartjs/Chart.js/pull/4507
			 * @since 2.7.0
			 */
			source: 'auto',

			major: {
				enabled: false
			}
		}
	};

	var scale_time = core_scale.extend({
		initialize: function() {
			this.mergeTicksOptions();
			core_scale.prototype.initialize.call(this);
		},

		update: function() {
			var me = this;
			var options = me.options;
			var time = options.time || (options.time = {});
			var adapter = me._adapter = new core_adapters._date(options.adapters.date);

			// DEPRECATIONS: output a message only one time per update
			if (time.format) {
				console.warn('options.time.format is deprecated and replaced by options.time.parser.');
			}

			// Backward compatibility: before introducing adapter, `displayFormats` was
			// supposed to contain *all* unit/string pairs but this can't be resolved
			// when loading the scale (adapters are loaded afterward), so let's populate
			// missing formats on update
			helpers$1.mergeIf(time.displayFormats, adapter.formats());

			return core_scale.prototype.update.apply(me, arguments);
		},

		/**
		 * Allows data to be referenced via 't' attribute
		 */
		getRightValue: function(rawValue) {
			if (rawValue && rawValue.t !== undefined) {
				rawValue = rawValue.t;
			}
			return core_scale.prototype.getRightValue.call(this, rawValue);
		},

		determineDataLimits: function() {
			var me = this;
			var chart = me.chart;
			var adapter = me._adapter;
			var timeOpts = me.options.time;
			var unit = timeOpts.unit || 'day';
			var min = MAX_INTEGER;
			var max = MIN_INTEGER;
			var timestamps = [];
			var datasets = [];
			var labels = [];
			var i, j, ilen, jlen, data, timestamp;
			var dataLabels = chart.data.labels || [];

			// Convert labels to timestamps
			for (i = 0, ilen = dataLabels.length; i < ilen; ++i) {
				labels.push(parse(me, dataLabels[i]));
			}

			// Convert data to timestamps
			for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {
				if (chart.isDatasetVisible(i)) {
					data = chart.data.datasets[i].data;

					// Let's consider that all data have the same format.
					if (helpers$1.isObject(data[0])) {
						datasets[i] = [];

						for (j = 0, jlen = data.length; j < jlen; ++j) {
							timestamp = parse(me, data[j]);
							timestamps.push(timestamp);
							datasets[i][j] = timestamp;
						}
					} else {
						for (j = 0, jlen = labels.length; j < jlen; ++j) {
							timestamps.push(labels[j]);
						}
						datasets[i] = labels.slice(0);
					}
				} else {
					datasets[i] = [];
				}
			}

			if (labels.length) {
				// Sort labels **after** data have been converted
				labels = arrayUnique(labels).sort(sorter);
				min = Math.min(min, labels[0]);
				max = Math.max(max, labels[labels.length - 1]);
			}

			if (timestamps.length) {
				timestamps = arrayUnique(timestamps).sort(sorter);
				min = Math.min(min, timestamps[0]);
				max = Math.max(max, timestamps[timestamps.length - 1]);
			}

			min = parse(me, timeOpts.min) || min;
			max = parse(me, timeOpts.max) || max;

			// In case there is no valid min/max, set limits based on unit time option
			min = min === MAX_INTEGER ? +adapter.startOf(Date.now(), unit) : min;
			max = max === MIN_INTEGER ? +adapter.endOf(Date.now(), unit) + 1 : max;

			// Make sure that max is strictly higher than min (required by the lookup table)
			me.min = Math.min(min, max);
			me.max = Math.max(min + 1, max);

			// PRIVATE
			me._horizontal = me.isHorizontal();
			me._table = [];
			me._timestamps = {
				data: timestamps,
				datasets: datasets,
				labels: labels
			};
		},

		buildTicks: function() {
			var me = this;
			var min = me.min;
			var max = me.max;
			var options = me.options;
			var timeOpts = options.time;
			var timestamps = [];
			var ticks = [];
			var i, ilen, timestamp;

			switch (options.ticks.source) {
			case 'data':
				timestamps = me._timestamps.data;
				break;
			case 'labels':
				timestamps = me._timestamps.labels;
				break;
			case 'auto':
			default:
				timestamps = generate(me, min, max, me.getLabelCapacity(min), options);
			}

			if (options.bounds === 'ticks' && timestamps.length) {
				min = timestamps[0];
				max = timestamps[timestamps.length - 1];
			}

			// Enforce limits with user min/max options
			min = parse(me, timeOpts.min) || min;
			max = parse(me, timeOpts.max) || max;

			// Remove ticks outside the min/max range
			for (i = 0, ilen = timestamps.length; i < ilen; ++i) {
				timestamp = timestamps[i];
				if (timestamp >= min && timestamp <= max) {
					ticks.push(timestamp);
				}
			}

			me.min = min;
			me.max = max;

			// PRIVATE
			me._unit = timeOpts.unit || determineUnitForFormatting(me, ticks, timeOpts.minUnit, me.min, me.max);
			me._majorUnit = determineMajorUnit(me._unit);
			me._table = buildLookupTable(me._timestamps.data, min, max, options.distribution);
			me._offsets = computeOffsets(me._table, ticks, min, max, options);

			if (options.ticks.reverse) {
				ticks.reverse();
			}

			return ticksFromTimestamps(me, ticks, me._majorUnit);
		},

		getLabelForIndex: function(index, datasetIndex) {
			var me = this;
			var adapter = me._adapter;
			var data = me.chart.data;
			var timeOpts = me.options.time;
			var label = data.labels && index < data.labels.length ? data.labels[index] : '';
			var value = data.datasets[datasetIndex].data[index];

			if (helpers$1.isObject(value)) {
				label = me.getRightValue(value);
			}
			if (timeOpts.tooltipFormat) {
				return adapter.format(toTimestamp(me, label), timeOpts.tooltipFormat);
			}
			if (typeof label === 'string') {
				return label;
			}
			return adapter.format(toTimestamp(me, label), timeOpts.displayFormats.datetime);
		},

		/**
		 * Function to format an individual tick mark
		 * @private
		 */
		tickFormatFunction: function(time, index, ticks, format) {
			var me = this;
			var adapter = me._adapter;
			var options = me.options;
			var formats = options.time.displayFormats;
			var minorFormat = formats[me._unit];
			var majorUnit = me._majorUnit;
			var majorFormat = formats[majorUnit];
			var majorTime = +adapter.startOf(time, majorUnit);
			var majorTickOpts = options.ticks.major;
			var major = majorTickOpts.enabled && majorUnit && majorFormat && time === majorTime;
			var label = adapter.format(time, format ? format : major ? majorFormat : minorFormat);
			var tickOpts = major ? majorTickOpts : options.ticks.minor;
			var formatter = valueOrDefault$c(tickOpts.callback, tickOpts.userCallback);

			return formatter ? formatter(label, index, ticks) : label;
		},

		convertTicksToLabels: function(ticks) {
			var labels = [];
			var i, ilen;

			for (i = 0, ilen = ticks.length; i < ilen; ++i) {
				labels.push(this.tickFormatFunction(ticks[i].value, i, ticks));
			}

			return labels;
		},

		/**
		 * @private
		 */
		getPixelForOffset: function(time) {
			var me = this;
			var isReverse = me.options.ticks.reverse;
			var size = me._horizontal ? me.width : me.height;
			var start = me._horizontal ? isReverse ? me.right : me.left : isReverse ? me.bottom : me.top;
			var pos = interpolate$1(me._table, 'time', time, 'pos');
			var offset = size * (me._offsets.start + pos) / (me._offsets.start + 1 + me._offsets.end);

			return isReverse ? start - offset : start + offset;
		},

		getPixelForValue: function(value, index, datasetIndex) {
			var me = this;
			var time = null;

			if (index !== undefined && datasetIndex !== undefined) {
				time = me._timestamps.datasets[datasetIndex][index];
			}

			if (time === null) {
				time = parse(me, value);
			}

			if (time !== null) {
				return me.getPixelForOffset(time);
			}
		},

		getPixelForTick: function(index) {
			var ticks = this.getTicks();
			return index >= 0 && index < ticks.length ?
				this.getPixelForOffset(ticks[index].value) :
				null;
		},

		getValueForPixel: function(pixel) {
			var me = this;
			var size = me._horizontal ? me.width : me.height;
			var start = me._horizontal ? me.left : me.top;
			var pos = (size ? (pixel - start) / size : 0) * (me._offsets.start + 1 + me._offsets.start) - me._offsets.end;
			var time = interpolate$1(me._table, 'pos', pos, 'time');

			// DEPRECATION, we should return time directly
			return me._adapter._create(time);
		},

		/**
		 * Crude approximation of what the label width might be
		 * @private
		 */
		getLabelWidth: function(label) {
			var me = this;
			var ticksOpts = me.options.ticks;
			var tickLabelWidth = me.ctx.measureText(label).width;
			var angle = helpers$1.toRadians(ticksOpts.maxRotation);
			var cosRotation = Math.cos(angle);
			var sinRotation = Math.sin(angle);
			var tickFontSize = valueOrDefault$c(ticksOpts.fontSize, core_defaults.global.defaultFontSize);

			return (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation);
		},

		/**
		 * @private
		 */
		getLabelCapacity: function(exampleTime) {
			var me = this;

			// pick the longest format (milliseconds) for guestimation
			var format = me.options.time.displayFormats.millisecond;
			var exampleLabel = me.tickFormatFunction(exampleTime, 0, [], format);
			var tickLabelWidth = me.getLabelWidth(exampleLabel);
			var innerWidth = me.isHorizontal() ? me.width : me.height;
			var capacity = Math.floor(innerWidth / tickLabelWidth);

			return capacity > 0 ? capacity : 1;
		}
	});

	// INTERNAL: static default options, registered in src/index.js
	var _defaults$4 = defaultConfig$4;
	scale_time._defaults = _defaults$4;

	var scales = {
		category: scale_category,
		linear: scale_linear,
		logarithmic: scale_logarithmic,
		radialLinear: scale_radialLinear,
		time: scale_time
	};

	var FORMATS = {
		datetime: 'MMM D, YYYY, h:mm:ss a',
		millisecond: 'h:mm:ss.SSS a',
		second: 'h:mm:ss a',
		minute: 'h:mm a',
		hour: 'hA',
		day: 'MMM D',
		week: 'll',
		month: 'MMM YYYY',
		quarter: '[Q]Q - YYYY',
		year: 'YYYY'
	};

	core_adapters._date.override(typeof moment === 'function' ? {
		_id: 'moment', // DEBUG ONLY

		formats: function() {
			return FORMATS;
		},

		parse: function(value, format) {
			if (typeof value === 'string' && typeof format === 'string') {
				value = moment(value, format);
			} else if (!(value instanceof moment)) {
				value = moment(value);
			}
			return value.isValid() ? value.valueOf() : null;
		},

		format: function(time, format) {
			return moment(time).format(format);
		},

		add: function(time, amount, unit) {
			return moment(time).add(amount, unit).valueOf();
		},

		diff: function(max, min, unit) {
			return moment.duration(moment(max).diff(moment(min))).as(unit);
		},

		startOf: function(time, unit, weekday) {
			time = moment(time);
			if (unit === 'isoWeek') {
				return time.isoWeekday(weekday).valueOf();
			}
			return time.startOf(unit).valueOf();
		},

		endOf: function(time, unit) {
			return moment(time).endOf(unit).valueOf();
		},

		// DEPRECATIONS

		/**
		 * Provided for backward compatibility with scale.getValueForPixel().
		 * @deprecated since version 2.8.0
		 * @todo remove at version 3
		 * @private
		 */
		_create: function(time) {
			return moment(time);
		},
	} : {});

	core_defaults._set('global', {
		plugins: {
			filler: {
				propagate: true
			}
		}
	});

	var mappers = {
		dataset: function(source) {
			var index = source.fill;
			var chart = source.chart;
			var meta = chart.getDatasetMeta(index);
			var visible = meta && chart.isDatasetVisible(index);
			var points = (visible && meta.dataset._children) || [];
			var length = points.length || 0;

			return !length ? null : function(point, i) {
				return (i < length && points[i]._view) || null;
			};
		},

		boundary: function(source) {
			var boundary = source.boundary;
			var x = boundary ? boundary.x : null;
			var y = boundary ? boundary.y : null;

			return function(point) {
				return {
					x: x === null ? point.x : x,
					y: y === null ? point.y : y,
				};
			};
		}
	};

	// @todo if (fill[0] === '#')
	function decodeFill(el, index, count) {
		var model = el._model || {};
		var fill = model.fill;
		var target;

		if (fill === undefined) {
			fill = !!model.backgroundColor;
		}

		if (fill === false || fill === null) {
			return false;
		}

		if (fill === true) {
			return 'origin';
		}

		target = parseFloat(fill, 10);
		if (isFinite(target) && Math.floor(target) === target) {
			if (fill[0] === '-' || fill[0] === '+') {
				target = index + target;
			}

			if (target === index || target < 0 || target >= count) {
				return false;
			}

			return target;
		}

		switch (fill) {
		// compatibility
		case 'bottom':
			return 'start';
		case 'top':
			return 'end';
		case 'zero':
			return 'origin';
		// supported boundaries
		case 'origin':
		case 'start':
		case 'end':
			return fill;
		// invalid fill values
		default:
			return false;
		}
	}

	function computeBoundary(source) {
		var model = source.el._model || {};
		var scale = source.el._scale || {};
		var fill = source.fill;
		var target = null;
		var horizontal;

		if (isFinite(fill)) {
			return null;
		}

		// Backward compatibility: until v3, we still need to support boundary values set on
		// the model (scaleTop, scaleBottom and scaleZero) because some external plugins and
		// controllers might still use it (e.g. the Smith chart).

		if (fill === 'start') {
			target = model.scaleBottom === undefined ? scale.bottom : model.scaleBottom;
		} else if (fill === 'end') {
			target = model.scaleTop === undefined ? scale.top : model.scaleTop;
		} else if (model.scaleZero !== undefined) {
			target = model.scaleZero;
		} else if (scale.getBasePosition) {
			target = scale.getBasePosition();
		} else if (scale.getBasePixel) {
			target = scale.getBasePixel();
		}

		if (target !== undefined && target !== null) {
			if (target.x !== undefined && target.y !== undefined) {
				return target;
			}

			if (helpers$1.isFinite(target)) {
				horizontal = scale.isHorizontal();
				return {
					x: horizontal ? target : null,
					y: horizontal ? null : target
				};
			}
		}

		return null;
	}

	function resolveTarget(sources, index, propagate) {
		var source = sources[index];
		var fill = source.fill;
		var visited = [index];
		var target;

		if (!propagate) {
			return fill;
		}

		while (fill !== false && visited.indexOf(fill) === -1) {
			if (!isFinite(fill)) {
				return fill;
			}

			target = sources[fill];
			if (!target) {
				return false;
			}

			if (target.visible) {
				return fill;
			}

			visited.push(fill);
			fill = target.fill;
		}

		return false;
	}

	function createMapper(source) {
		var fill = source.fill;
		var type = 'dataset';

		if (fill === false) {
			return null;
		}

		if (!isFinite(fill)) {
			type = 'boundary';
		}

		return mappers[type](source);
	}

	function isDrawable(point) {
		return point && !point.skip;
	}

	function drawArea(ctx, curve0, curve1, len0, len1) {
		var i;

		if (!len0 || !len1) {
			return;
		}

		// building first area curve (normal)
		ctx.moveTo(curve0[0].x, curve0[0].y);
		for (i = 1; i < len0; ++i) {
			helpers$1.canvas.lineTo(ctx, curve0[i - 1], curve0[i]);
		}

		// joining the two area curves
		ctx.lineTo(curve1[len1 - 1].x, curve1[len1 - 1].y);

		// building opposite area curve (reverse)
		for (i = len1 - 1; i > 0; --i) {
			helpers$1.canvas.lineTo(ctx, curve1[i], curve1[i - 1], true);
		}
	}

	function doFill(ctx, points, mapper, view, color, loop) {
		var count = points.length;
		var span = view.spanGaps;
		var curve0 = [];
		var curve1 = [];
		var len0 = 0;
		var len1 = 0;
		var i, ilen, index, p0, p1, d0, d1;

		ctx.beginPath();

		for (i = 0, ilen = (count + !!loop); i < ilen; ++i) {
			index = i % count;
			p0 = points[index]._view;
			p1 = mapper(p0, index, view);
			d0 = isDrawable(p0);
			d1 = isDrawable(p1);

			if (d0 && d1) {
				len0 = curve0.push(p0);
				len1 = curve1.push(p1);
			} else if (len0 && len1) {
				if (!span) {
					drawArea(ctx, curve0, curve1, len0, len1);
					len0 = len1 = 0;
					curve0 = [];
					curve1 = [];
				} else {
					if (d0) {
						curve0.push(p0);
					}
					if (d1) {
						curve1.push(p1);
					}
				}
			}
		}

		drawArea(ctx, curve0, curve1, len0, len1);

		ctx.closePath();
		ctx.fillStyle = color;
		ctx.fill();
	}

	var plugin_filler = {
		id: 'filler',

		afterDatasetsUpdate: function(chart, options) {
			var count = (chart.data.datasets || []).length;
			var propagate = options.propagate;
			var sources = [];
			var meta, i, el, source;

			for (i = 0; i < count; ++i) {
				meta = chart.getDatasetMeta(i);
				el = meta.dataset;
				source = null;

				if (el && el._model && el instanceof elements.Line) {
					source = {
						visible: chart.isDatasetVisible(i),
						fill: decodeFill(el, i, count),
						chart: chart,
						el: el
					};
				}

				meta.$filler = source;
				sources.push(source);
			}

			for (i = 0; i < count; ++i) {
				source = sources[i];
				if (!source) {
					continue;
				}

				source.fill = resolveTarget(sources, i, propagate);
				source.boundary = computeBoundary(source);
				source.mapper = createMapper(source);
			}
		},

		beforeDatasetDraw: function(chart, args) {
			var meta = args.meta.$filler;
			if (!meta) {
				return;
			}

			var ctx = chart.ctx;
			var el = meta.el;
			var view = el._view;
			var points = el._children || [];
			var mapper = meta.mapper;
			var color = view.backgroundColor || core_defaults.global.defaultColor;

			if (mapper && color && points.length) {
				helpers$1.canvas.clipArea(ctx, chart.chartArea);
				doFill(ctx, points, mapper, view, color, el._loop);
				helpers$1.canvas.unclipArea(ctx);
			}
		}
	};

	var noop$1 = helpers$1.noop;
	var valueOrDefault$d = helpers$1.valueOrDefault;

	core_defaults._set('global', {
		legend: {
			display: true,
			position: 'top',
			fullWidth: true,
			reverse: false,
			weight: 1000,

			// a callback that will handle
			onClick: function(e, legendItem) {
				var index = legendItem.datasetIndex;
				var ci = this.chart;
				var meta = ci.getDatasetMeta(index);

				// See controller.isDatasetVisible comment
				meta.hidden = meta.hidden === null ? !ci.data.datasets[index].hidden : null;

				// We hid a dataset ... rerender the chart
				ci.update();
			},

			onHover: null,
			onLeave: null,

			labels: {
				boxWidth: 40,
				padding: 10,
				// Generates labels shown in the legend
				// Valid properties to return:
				// text : text to display
				// fillStyle : fill of coloured box
				// strokeStyle: stroke of coloured box
				// hidden : if this legend item refers to a hidden item
				// lineCap : cap style for line
				// lineDash
				// lineDashOffset :
				// lineJoin :
				// lineWidth :
				generateLabels: function(chart) {
					var data = chart.data;
					return helpers$1.isArray(data.datasets) ? data.datasets.map(function(dataset, i) {
						return {
							text: dataset.label,
							fillStyle: (!helpers$1.isArray(dataset.backgroundColor) ? dataset.backgroundColor : dataset.backgroundColor[0]),
							hidden: !chart.isDatasetVisible(i),
							lineCap: dataset.borderCapStyle,
							lineDash: dataset.borderDash,
							lineDashOffset: dataset.borderDashOffset,
							lineJoin: dataset.borderJoinStyle,
							lineWidth: dataset.borderWidth,
							strokeStyle: dataset.borderColor,
							pointStyle: dataset.pointStyle,

							// Below is extra data used for toggling the datasets
							datasetIndex: i
						};
					}, this) : [];
				}
			}
		},

		legendCallback: function(chart) {
			var text = [];
			text.push('<ul class="' + chart.id + '-legend">');
			for (var i = 0; i < chart.data.datasets.length; i++) {
				text.push('<li><span style="background-color:' + chart.data.datasets[i].backgroundColor + '"></span>');
				if (chart.data.datasets[i].label) {
					text.push(chart.data.datasets[i].label);
				}
				text.push('</li>');
			}
			text.push('</ul>');
			return text.join('');
		}
	});

	/**
	 * Helper function to get the box width based on the usePointStyle option
	 * @param {object} labelopts - the label options on the legend
	 * @param {number} fontSize - the label font size
	 * @return {number} width of the color box area
	 */
	function getBoxWidth(labelOpts, fontSize) {
		return labelOpts.usePointStyle && labelOpts.boxWidth > fontSize ?
			fontSize :
			labelOpts.boxWidth;
	}

	/**
	 * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!
	 */
	var Legend = core_element.extend({

		initialize: function(config) {
			helpers$1.extend(this, config);

			// Contains hit boxes for each dataset (in dataset order)
			this.legendHitBoxes = [];

			/**
	 		 * @private
	 		 */
			this._hoveredItem = null;

			// Are we in doughnut mode which has a different data type
			this.doughnutMode = false;
		},

		// These methods are ordered by lifecycle. Utilities then follow.
		// Any function defined here is inherited by all legend types.
		// Any function can be extended by the legend type

		beforeUpdate: noop$1,
		update: function(maxWidth, maxHeight, margins) {
			var me = this;

			// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)
			me.beforeUpdate();

			// Absorb the master measurements
			me.maxWidth = maxWidth;
			me.maxHeight = maxHeight;
			me.margins = margins;

			// Dimensions
			me.beforeSetDimensions();
			me.setDimensions();
			me.afterSetDimensions();
			// Labels
			me.beforeBuildLabels();
			me.buildLabels();
			me.afterBuildLabels();

			// Fit
			me.beforeFit();
			me.fit();
			me.afterFit();
			//
			me.afterUpdate();

			return me.minSize;
		},
		afterUpdate: noop$1,

		//

		beforeSetDimensions: noop$1,
		setDimensions: function() {
			var me = this;
			// Set the unconstrained dimension before label rotation
			if (me.isHorizontal()) {
				// Reset position before calculating rotation
				me.width = me.maxWidth;
				me.left = 0;
				me.right = me.width;
			} else {
				me.height = me.maxHeight;

				// Reset position before calculating rotation
				me.top = 0;
				me.bottom = me.height;
			}

			// Reset padding
			me.paddingLeft = 0;
			me.paddingTop = 0;
			me.paddingRight = 0;
			me.paddingBottom = 0;

			// Reset minSize
			me.minSize = {
				width: 0,
				height: 0
			};
		},
		afterSetDimensions: noop$1,

		//

		beforeBuildLabels: noop$1,
		buildLabels: function() {
			var me = this;
			var labelOpts = me.options.labels || {};
			var legendItems = helpers$1.callback(labelOpts.generateLabels, [me.chart], me) || [];

			if (labelOpts.filter) {
				legendItems = legendItems.filter(function(item) {
					return labelOpts.filter(item, me.chart.data);
				});
			}

			if (me.options.reverse) {
				legendItems.reverse();
			}

			me.legendItems = legendItems;
		},
		afterBuildLabels: noop$1,

		//

		beforeFit: noop$1,
		fit: function() {
			var me = this;
			var opts = me.options;
			var labelOpts = opts.labels;
			var display = opts.display;

			var ctx = me.ctx;

			var labelFont = helpers$1.options._parseFont(labelOpts);
			var fontSize = labelFont.size;

			// Reset hit boxes
			var hitboxes = me.legendHitBoxes = [];

			var minSize = me.minSize;
			var isHorizontal = me.isHorizontal();

			if (isHorizontal) {
				minSize.width = me.maxWidth; // fill all the width
				minSize.height = display ? 10 : 0;
			} else {
				minSize.width = display ? 10 : 0;
				minSize.height = me.maxHeight; // fill all the height
			}

			// Increase sizes here
			if (display) {
				ctx.font = labelFont.string;

				if (isHorizontal) {
					// Labels

					// Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one
					var lineWidths = me.lineWidths = [0];
					var totalHeight = 0;

					ctx.textAlign = 'left';
					ctx.textBaseline = 'top';

					helpers$1.each(me.legendItems, function(legendItem, i) {
						var boxWidth = getBoxWidth(labelOpts, fontSize);
						var width = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;

						if (i === 0 || lineWidths[lineWidths.length - 1] + width + labelOpts.padding > minSize.width) {
							totalHeight += fontSize + labelOpts.padding;
							lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = labelOpts.padding;
						}

						// Store the hitbox width and height here. Final position will be updated in `draw`
						hitboxes[i] = {
							left: 0,
							top: 0,
							width: width,
							height: fontSize
						};

						lineWidths[lineWidths.length - 1] += width + labelOpts.padding;
					});

					minSize.height += totalHeight;

				} else {
					var vPadding = labelOpts.padding;
					var columnWidths = me.columnWidths = [];
					var totalWidth = labelOpts.padding;
					var currentColWidth = 0;
					var currentColHeight = 0;
					var itemHeight = fontSize + vPadding;

					helpers$1.each(me.legendItems, function(legendItem, i) {
						var boxWidth = getBoxWidth(labelOpts, fontSize);
						var itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;

						// If too tall, go to new column
						if (i > 0 && currentColHeight + itemHeight > minSize.height - vPadding) {
							totalWidth += currentColWidth + labelOpts.padding;
							columnWidths.push(currentColWidth); // previous column width

							currentColWidth = 0;
							currentColHeight = 0;
						}

						// Get max width
						currentColWidth = Math.max(currentColWidth, itemWidth);
						currentColHeight += itemHeight;

						// Store the hitbox width and height here. Final position will be updated in `draw`
						hitboxes[i] = {
							left: 0,
							top: 0,
							width: itemWidth,
							height: fontSize
						};
					});

					totalWidth += currentColWidth;
					columnWidths.push(currentColWidth);
					minSize.width += totalWidth;
				}
			}

			me.width = minSize.width;
			me.height = minSize.height;
		},
		afterFit: noop$1,

		// Shared Methods
		isHorizontal: function() {
			return this.options.position === 'top' || this.options.position === 'bottom';
		},

		// Actually draw the legend on the canvas
		draw: function() {
			var me = this;
			var opts = me.options;
			var labelOpts = opts.labels;
			var globalDefaults = core_defaults.global;
			var defaultColor = globalDefaults.defaultColor;
			var lineDefault = globalDefaults.elements.line;
			var legendWidth = me.width;
			var lineWidths = me.lineWidths;

			if (opts.display) {
				var ctx = me.ctx;
				var fontColor = valueOrDefault$d(labelOpts.fontColor, globalDefaults.defaultFontColor);
				var labelFont = helpers$1.options._parseFont(labelOpts);
				var fontSize = labelFont.size;
				var cursor;

				// Canvas setup
				ctx.textAlign = 'left';
				ctx.textBaseline = 'middle';
				ctx.lineWidth = 0.5;
				ctx.strokeStyle = fontColor; // for strikethrough effect
				ctx.fillStyle = fontColor; // render in correct colour
				ctx.font = labelFont.string;

				var boxWidth = getBoxWidth(labelOpts, fontSize);
				var hitboxes = me.legendHitBoxes;

				// current position
				var drawLegendBox = function(x, y, legendItem) {
					if (isNaN(boxWidth) || boxWidth <= 0) {
						return;
					}

					// Set the ctx for the box
					ctx.save();

					var lineWidth = valueOrDefault$d(legendItem.lineWidth, lineDefault.borderWidth);
					ctx.fillStyle = valueOrDefault$d(legendItem.fillStyle, defaultColor);
					ctx.lineCap = valueOrDefault$d(legendItem.lineCap, lineDefault.borderCapStyle);
					ctx.lineDashOffset = valueOrDefault$d(legendItem.lineDashOffset, lineDefault.borderDashOffset);
					ctx.lineJoin = valueOrDefault$d(legendItem.lineJoin, lineDefault.borderJoinStyle);
					ctx.lineWidth = lineWidth;
					ctx.strokeStyle = valueOrDefault$d(legendItem.strokeStyle, defaultColor);

					if (ctx.setLineDash) {
						// IE 9 and 10 do not support line dash
						ctx.setLineDash(valueOrDefault$d(legendItem.lineDash, lineDefault.borderDash));
					}

					if (opts.labels && opts.labels.usePointStyle) {
						// Recalculate x and y for drawPoint() because its expecting
						// x and y to be center of figure (instead of top left)
						var radius = boxWidth * Math.SQRT2 / 2;
						var centerX = x + boxWidth / 2;
						var centerY = y + fontSize / 2;

						// Draw pointStyle as legend symbol
						helpers$1.canvas.drawPoint(ctx, legendItem.pointStyle, radius, centerX, centerY);
					} else {
						// Draw box as legend symbol
						if (lineWidth !== 0) {
							ctx.strokeRect(x, y, boxWidth, fontSize);
						}
						ctx.fillRect(x, y, boxWidth, fontSize);
					}

					ctx.restore();
				};
				var fillText = function(x, y, legendItem, textWidth) {
					var halfFontSize = fontSize / 2;
					var xLeft = boxWidth + halfFontSize + x;
					var yMiddle = y + halfFontSize;

					ctx.fillText(legendItem.text, xLeft, yMiddle);

					if (legendItem.hidden) {
						// Strikethrough the text if hidden
						ctx.beginPath();
						ctx.lineWidth = 2;
						ctx.moveTo(xLeft, yMiddle);
						ctx.lineTo(xLeft + textWidth, yMiddle);
						ctx.stroke();
					}
				};

				// Horizontal
				var isHorizontal = me.isHorizontal();
				if (isHorizontal) {
					cursor = {
						x: me.left + ((legendWidth - lineWidths[0]) / 2) + labelOpts.padding,
						y: me.top + labelOpts.padding,
						line: 0
					};
				} else {
					cursor = {
						x: me.left + labelOpts.padding,
						y: me.top + labelOpts.padding,
						line: 0
					};
				}

				var itemHeight = fontSize + labelOpts.padding;
				helpers$1.each(me.legendItems, function(legendItem, i) {
					var textWidth = ctx.measureText(legendItem.text).width;
					var width = boxWidth + (fontSize / 2) + textWidth;
					var x = cursor.x;
					var y = cursor.y;

					// Use (me.left + me.minSize.width) and (me.top + me.minSize.height)
					// instead of me.right and me.bottom because me.width and me.height
					// may have been changed since me.minSize was calculated
					if (isHorizontal) {
						if (i > 0 && x + width + labelOpts.padding > me.left + me.minSize.width) {
							y = cursor.y += itemHeight;
							cursor.line++;
							x = cursor.x = me.left + ((legendWidth - lineWidths[cursor.line]) / 2) + labelOpts.padding;
						}
					} else if (i > 0 && y + itemHeight > me.top + me.minSize.height) {
						x = cursor.x = x + me.columnWidths[cursor.line] + labelOpts.padding;
						y = cursor.y = me.top + labelOpts.padding;
						cursor.line++;
					}

					drawLegendBox(x, y, legendItem);

					hitboxes[i].left = x;
					hitboxes[i].top = y;

					// Fill the actual label
					fillText(x, y, legendItem, textWidth);

					if (isHorizontal) {
						cursor.x += width + labelOpts.padding;
					} else {
						cursor.y += itemHeight;
					}

				});
			}
		},

		/**
		 * @private
		 */
		_getLegendItemAt: function(x, y) {
			var me = this;
			var i, hitBox, lh;

			if (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {
				// See if we are touching one of the dataset boxes
				lh = me.legendHitBoxes;
				for (i = 0; i < lh.length; ++i) {
					hitBox = lh[i];

					if (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {
						// Touching an element
						return me.legendItems[i];
					}
				}
			}

			return null;
		},

		/**
		 * Handle an event
		 * @private
		 * @param {IEvent} event - The event to handle
		 */
		handleEvent: function(e) {
			var me = this;
			var opts = me.options;
			var type = e.type === 'mouseup' ? 'click' : e.type;
			var hoveredItem;

			if (type === 'mousemove') {
				if (!opts.onHover && !opts.onLeave) {
					return;
				}
			} else if (type === 'click') {
				if (!opts.onClick) {
					return;
				}
			} else {
				return;
			}

			// Chart event already has relative position in it
			hoveredItem = me._getLegendItemAt(e.x, e.y);

			if (type === 'click') {
				if (hoveredItem && opts.onClick) {
					// use e.native for backwards compatibility
					opts.onClick.call(me, e.native, hoveredItem);
				}
			} else {
				if (opts.onLeave && hoveredItem !== me._hoveredItem) {
					if (me._hoveredItem) {
						opts.onLeave.call(me, e.native, me._hoveredItem);
					}
					me._hoveredItem = hoveredItem;
				}

				if (opts.onHover && hoveredItem) {
					// use e.native for backwards compatibility
					opts.onHover.call(me, e.native, hoveredItem);
				}
			}
		}
	});

	function createNewLegendAndAttach(chart, legendOpts) {
		var legend = new Legend({
			ctx: chart.ctx,
			options: legendOpts,
			chart: chart
		});

		core_layouts.configure(chart, legend, legendOpts);
		core_layouts.addBox(chart, legend);
		chart.legend = legend;
	}

	var plugin_legend = {
		id: 'legend',

		/**
		 * Backward compatibility: since 2.1.5, the legend is registered as a plugin, making
		 * Chart.Legend obsolete. To avoid a breaking change, we export the Legend as part of
		 * the plugin, which one will be re-exposed in the chart.js file.
		 * https://github.com/chartjs/Chart.js/pull/2640
		 * @private
		 */
		_element: Legend,

		beforeInit: function(chart) {
			var legendOpts = chart.options.legend;

			if (legendOpts) {
				createNewLegendAndAttach(chart, legendOpts);
			}
		},

		beforeUpdate: function(chart) {
			var legendOpts = chart.options.legend;
			var legend = chart.legend;

			if (legendOpts) {
				helpers$1.mergeIf(legendOpts, core_defaults.global.legend);

				if (legend) {
					core_layouts.configure(chart, legend, legendOpts);
					legend.options = legendOpts;
				} else {
					createNewLegendAndAttach(chart, legendOpts);
				}
			} else if (legend) {
				core_layouts.removeBox(chart, legend);
				delete chart.legend;
			}
		},

		afterEvent: function(chart, e) {
			var legend = chart.legend;
			if (legend) {
				legend.handleEvent(e);
			}
		}
	};

	var noop$2 = helpers$1.noop;

	core_defaults._set('global', {
		title: {
			display: false,
			fontStyle: 'bold',
			fullWidth: true,
			padding: 10,
			position: 'top',
			text: '',
			weight: 2000         // by default greater than legend (1000) to be above
		}
	});

	/**
	 * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!
	 */
	var Title = core_element.extend({
		initialize: function(config) {
			var me = this;
			helpers$1.extend(me, config);

			// Contains hit boxes for each dataset (in dataset order)
			me.legendHitBoxes = [];
		},

		// These methods are ordered by lifecycle. Utilities then follow.

		beforeUpdate: noop$2,
		update: function(maxWidth, maxHeight, margins) {
			var me = this;

			// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)
			me.beforeUpdate();

			// Absorb the master measurements
			me.maxWidth = maxWidth;
			me.maxHeight = maxHeight;
			me.margins = margins;

			// Dimensions
			me.beforeSetDimensions();
			me.setDimensions();
			me.afterSetDimensions();
			// Labels
			me.beforeBuildLabels();
			me.buildLabels();
			me.afterBuildLabels();

			// Fit
			me.beforeFit();
			me.fit();
			me.afterFit();
			//
			me.afterUpdate();

			return me.minSize;

		},
		afterUpdate: noop$2,

		//

		beforeSetDimensions: noop$2,
		setDimensions: function() {
			var me = this;
			// Set the unconstrained dimension before label rotation
			if (me.isHorizontal()) {
				// Reset position before calculating rotation
				me.width = me.maxWidth;
				me.left = 0;
				me.right = me.width;
			} else {
				me.height = me.maxHeight;

				// Reset position before calculating rotation
				me.top = 0;
				me.bottom = me.height;
			}

			// Reset padding
			me.paddingLeft = 0;
			me.paddingTop = 0;
			me.paddingRight = 0;
			me.paddingBottom = 0;

			// Reset minSize
			me.minSize = {
				width: 0,
				height: 0
			};
		},
		afterSetDimensions: noop$2,

		//

		beforeBuildLabels: noop$2,
		buildLabels: noop$2,
		afterBuildLabels: noop$2,

		//

		beforeFit: noop$2,
		fit: function() {
			var me = this;
			var opts = me.options;
			var display = opts.display;
			var minSize = me.minSize;
			var lineCount = helpers$1.isArray(opts.text) ? opts.text.length : 1;
			var fontOpts = helpers$1.options._parseFont(opts);
			var textSize = display ? (lineCount * fontOpts.lineHeight) + (opts.padding * 2) : 0;

			if (me.isHorizontal()) {
				minSize.width = me.maxWidth; // fill all the width
				minSize.height = textSize;
			} else {
				minSize.width = textSize;
				minSize.height = me.maxHeight; // fill all the height
			}

			me.width = minSize.width;
			me.height = minSize.height;

		},
		afterFit: noop$2,

		// Shared Methods
		isHorizontal: function() {
			var pos = this.options.position;
			return pos === 'top' || pos === 'bottom';
		},

		// Actually draw the title block on the canvas
		draw: function() {
			var me = this;
			var ctx = me.ctx;
			var opts = me.options;

			if (opts.display) {
				var fontOpts = helpers$1.options._parseFont(opts);
				var lineHeight = fontOpts.lineHeight;
				var offset = lineHeight / 2 + opts.padding;
				var rotation = 0;
				var top = me.top;
				var left = me.left;
				var bottom = me.bottom;
				var right = me.right;
				var maxWidth, titleX, titleY;

				ctx.fillStyle = helpers$1.valueOrDefault(opts.fontColor, core_defaults.global.defaultFontColor); // render in correct colour
				ctx.font = fontOpts.string;

				// Horizontal
				if (me.isHorizontal()) {
					titleX = left + ((right - left) / 2); // midpoint of the width
					titleY = top + offset;
					maxWidth = right - left;
				} else {
					titleX = opts.position === 'left' ? left + offset : right - offset;
					titleY = top + ((bottom - top) / 2);
					maxWidth = bottom - top;
					rotation = Math.PI * (opts.position === 'left' ? -0.5 : 0.5);
				}

				ctx.save();
				ctx.translate(titleX, titleY);
				ctx.rotate(rotation);
				ctx.textAlign = 'center';
				ctx.textBaseline = 'middle';

				var text = opts.text;
				if (helpers$1.isArray(text)) {
					var y = 0;
					for (var i = 0; i < text.length; ++i) {
						ctx.fillText(text[i], 0, y, maxWidth);
						y += lineHeight;
					}
				} else {
					ctx.fillText(text, 0, 0, maxWidth);
				}

				ctx.restore();
			}
		}
	});

	function createNewTitleBlockAndAttach(chart, titleOpts) {
		var title = new Title({
			ctx: chart.ctx,
			options: titleOpts,
			chart: chart
		});

		core_layouts.configure(chart, title, titleOpts);
		core_layouts.addBox(chart, title);
		chart.titleBlock = title;
	}

	var plugin_title = {
		id: 'title',

		/**
		 * Backward compatibility: since 2.1.5, the title is registered as a plugin, making
		 * Chart.Title obsolete. To avoid a breaking change, we export the Title as part of
		 * the plugin, which one will be re-exposed in the chart.js file.
		 * https://github.com/chartjs/Chart.js/pull/2640
		 * @private
		 */
		_element: Title,

		beforeInit: function(chart) {
			var titleOpts = chart.options.title;

			if (titleOpts) {
				createNewTitleBlockAndAttach(chart, titleOpts);
			}
		},

		beforeUpdate: function(chart) {
			var titleOpts = chart.options.title;
			var titleBlock = chart.titleBlock;

			if (titleOpts) {
				helpers$1.mergeIf(titleOpts, core_defaults.global.title);

				if (titleBlock) {
					core_layouts.configure(chart, titleBlock, titleOpts);
					titleBlock.options = titleOpts;
				} else {
					createNewTitleBlockAndAttach(chart, titleOpts);
				}
			} else if (titleBlock) {
				core_layouts.removeBox(chart, titleBlock);
				delete chart.titleBlock;
			}
		}
	};

	var plugins = {};
	var filler = plugin_filler;
	var legend = plugin_legend;
	var title = plugin_title;
	plugins.filler = filler;
	plugins.legend = legend;
	plugins.title = title;

	/**
	 * @namespace Chart
	 */


	core_controller.helpers = helpers$1;

	// @todo dispatch these helpers into appropriated helpers/helpers.* file and write unit tests!
	core_helpers(core_controller);

	core_controller._adapters = core_adapters;
	core_controller.Animation = core_animation;
	core_controller.animationService = core_animations;
	core_controller.controllers = controllers;
	core_controller.DatasetController = core_datasetController;
	core_controller.defaults = core_defaults;
	core_controller.Element = core_element;
	core_controller.elements = elements;
	core_controller.Interaction = core_interaction;
	core_controller.layouts = core_layouts;
	core_controller.platform = platform;
	core_controller.plugins = core_plugins;
	core_controller.Scale = core_scale;
	core_controller.scaleService = core_scaleService;
	core_controller.Ticks = core_ticks;
	core_controller.Tooltip = core_tooltip;

	// Register built-in scales

	core_controller.helpers.each(scales, function(scale, type) {
		core_controller.scaleService.registerScaleType(type, scale, scale._defaults);
	});

	// Load to register built-in adapters (as side effects)


	// Loading built-in plugins

	for (var k in plugins) {
		if (plugins.hasOwnProperty(k)) {
			core_controller.plugins.register(plugins[k]);
		}
	}

	core_controller.platform.initialize();

	var src = core_controller;
	if (typeof window !== 'undefined') {
		window.Chart = core_controller;
	}

	// DEPRECATIONS

	/**
	 * Provided for backward compatibility, not available anymore
	 * @namespace Chart.Chart
	 * @deprecated since version 2.8.0
	 * @todo remove at version 3
	 * @private
	 */
	core_controller.Chart = core_controller;

	/**
	 * Provided for backward compatibility, not available anymore
	 * @namespace Chart.Legend
	 * @deprecated since version 2.1.5
	 * @todo remove at version 3
	 * @private
	 */
	core_controller.Legend = plugins.legend._element;

	/**
	 * Provided for backward compatibility, not available anymore
	 * @namespace Chart.Title
	 * @deprecated since version 2.1.5
	 * @todo remove at version 3
	 * @private
	 */
	core_controller.Title = plugins.title._element;

	/**
	 * Provided for backward compatibility, use Chart.plugins instead
	 * @namespace Chart.pluginService
	 * @deprecated since version 2.1.5
	 * @todo remove at version 3
	 * @private
	 */
	core_controller.pluginService = core_controller.plugins;

	/**
	 * Provided for backward compatibility, inheriting from Chart.PlugingBase has no
	 * effect, instead simply create/register plugins via plain JavaScript objects.
	 * @interface Chart.PluginBase
	 * @deprecated since version 2.5.0
	 * @todo remove at version 3
	 * @private
	 */
	core_controller.PluginBase = core_controller.Element.extend({});

	/**
	 * Provided for backward compatibility, use Chart.helpers.canvas instead.
	 * @namespace Chart.canvasHelpers
	 * @deprecated since version 2.6.0
	 * @todo remove at version 3
	 * @private
	 */
	core_controller.canvasHelpers = core_controller.helpers.canvas;

	/**
	 * Provided for backward compatibility, use Chart.layouts instead.
	 * @namespace Chart.layoutService
	 * @deprecated since version 2.7.3
	 * @todo remove at version 3
	 * @private
	 */
	core_controller.layoutService = core_controller.layouts;

	/**
	 * Provided for backward compatibility, not available anymore.
	 * @namespace Chart.LinearScaleBase
	 * @deprecated since version 2.8
	 * @todo remove at version 3
	 * @private
	 */
	core_controller.LinearScaleBase = scale_linearbase;

	/**
	 * Provided for backward compatibility, instead we should create a new Chart
	 * by setting the type in the config (`new Chart(id, {type: '{chart-type}'}`).
	 * @deprecated since version 2.8.0
	 * @todo remove at version 3
	 */
	core_controller.helpers.each(
		[
			'Bar',
			'Bubble',
			'Doughnut',
			'Line',
			'PolarArea',
			'Radar',
			'Scatter'
		],
		function(klass) {
			core_controller[klass] = function(ctx, cfg) {
				return new core_controller(ctx, core_controller.helpers.merge(cfg || {}, {
					type: klass.charAt(0).toLowerCase() + klass.slice(1)
				}));
			};
		}
	);

	return src;

	})));


/***/ }),
/* 24 */,
/* 25 */,
/* 26 */,
/* 27 */,
/* 28 */,
/* 29 */,
/* 30 */,
/* 31 */,
/* 32 */,
/* 33 */,
/* 34 */,
/* 35 */,
/* 36 */,
/* 37 */,
/* 38 */,
/* 39 */,
/* 40 */,
/* 41 */,
/* 42 */,
/* 43 */,
/* 44 */,
/* 45 */,
/* 46 */,
/* 47 */,
/* 48 */,
/* 49 */,
/* 50 */,
/* 51 */,
/* 52 */,
/* 53 */,
/* 54 */,
/* 55 */,
/* 56 */,
/* 57 */,
/* 58 */,
/* 59 */,
/* 60 */,
/* 61 */,
/* 62 */,
/* 63 */,
/* 64 */,
/* 65 */,
/* 66 */,
/* 67 */,
/* 68 */,
/* 69 */,
/* 70 */,
/* 71 */,
/* 72 */,
/* 73 */,
/* 74 */,
/* 75 */,
/* 76 */,
/* 77 */,
/* 78 */,
/* 79 */,
/* 80 */,
/* 81 */,
/* 82 */,
/* 83 */,
/* 84 */,
/* 85 */,
/* 86 */,
/* 87 */,
/* 88 */,
/* 89 */,
/* 90 */,
/* 91 */,
/* 92 */,
/* 93 */,
/* 94 */,
/* 95 */,
/* 96 */,
/* 97 */,
/* 98 */,
/* 99 */,
/* 100 */,
/* 101 */,
/* 102 */,
/* 103 */,
/* 104 */,
/* 105 */,
/* 106 */,
/* 107 */,
/* 108 */,
/* 109 */,
/* 110 */,
/* 111 */,
/* 112 */,
/* 113 */,
/* 114 */,
/* 115 */,
/* 116 */,
/* 117 */,
/* 118 */,
/* 119 */,
/* 120 */,
/* 121 */,
/* 122 */,
/* 123 */,
/* 124 */,
/* 125 */,
/* 126 */,
/* 127 */,
/* 128 */,
/* 129 */,
/* 130 */,
/* 131 */,
/* 132 */,
/* 133 */,
/* 134 */,
/* 135 */,
/* 136 */,
/* 137 */,
/* 138 */,
/* 139 */,
/* 140 */,
/* 141 */,
/* 142 */,
/* 143 */,
/* 144 */,
/* 145 */,
/* 146 */,
/* 147 */,
/* 148 */,
/* 149 */,
/* 150 */,
/* 151 */,
/* 152 */,
/* 153 */,
/* 154 */
/***/ (function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	var getColor = function getColor(color, opacity) {
	  opacity = opacity || 1;

	  return 'rgba(' + color[0] + ', ' + color[1] + ', ' + color[2] + ', ' + opacity + ')';
	};

	var formatProfileDropdown = function formatProfileDropdown(values) {
	  var options = [];

	  values.map(function (_ref) {
	    var slug = _ref.slug,
	        name = _ref.name;

	    options.push({
	      key: slug,
	      text: name,
	      value: slug
	    });
	  });

	  return options;
	};

	var getDateRangeForPeriod = function getDateRangeForPeriod(period) {
	  var currentDate = new Date();
	  var pastDate = new Date(currentDate.getTime());

	  switch (period) {
	    case 'day':
	      pastDate.setDate(pastDate.getDate() - 1);

	      break;

	    case 'week':
	      pastDate.setDate(pastDate.getDate() - 7);

	      break;

	    case 'month':
	      pastDate.setMonth(pastDate.getMonth() - 1);

	      break;

	    case 'year':
	      pastDate.setFullYear(pastDate.getFullYear() - 1);

	      break;
	  }

	  return {
	    from: pastDate,
	    to: currentDate
	  };
	};

	var getVideoFrameURL = function getVideoFrameURL(baseURL, id, frame) {
	  baseURL = baseURL || 'https://www.webpagetest.org';

	  var filename = frame._i || 'frame_' + leftPad(frame._t / 100, 4) + '.jpg';

	  return baseURL + '/getfile.php?test=' + id + '&video=video_1&file=' + filename;
	};

	var leftPad = function leftPad(input, length, pad) {
	  pad = pad || '0';

	  var inputStr = input.toString();
	  var lengthDiff = length - inputStr.length;

	  if (lengthDiff > 0) {
	    return pad.repeat(lengthDiff) + inputStr;
	  }

	  return inputStr;
	};

	var traverseObject = function traverseObject(obj, callback, path) {
	  path = path || [];

	  if ((typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) === 'object' && !(obj instanceof Array)) {
	    Object.keys(obj).forEach(function (key) {
	      traverseObject(obj[key], callback, path.concat(key));
	    });
	  } else {
	    callback(obj, path);
	  }
	};

	var getTimestampsByInterval = function getTimestampsByInterval(timestamps, dateFrom, dateTo) {
	  return Object.keys(timestamps).filter(function (timestamp) {
	    var timestampMillis = timestamp * 1000;

	    return timestampMillis >= dateFrom && timestampMillis <= dateTo;
	  });
	};

	exports.getColor = getColor;
	exports.getDateRangeForPeriod = getDateRangeForPeriod;
	exports.getVideoFrameURL = getVideoFrameURL;
	exports.getTimestampsByInterval = getTimestampsByInterval;
	exports.traverseObject = traverseObject;
	exports.formatProfileDropdown = formatProfileDropdown;

/***/ }),
/* 155 */,
/* 156 */,
/* 157 */
/***/ (function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (root, factory){
	  'use strict';

	  /*istanbul ignore next:cant test*/
	  if (typeof module === 'object' && typeof module.exports === 'object') {
	    module.exports = factory();
	  } else if (true) {
	    // AMD. Register as an anonymous module.
	    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	  } else {
	    // Browser globals
	    root.objectPath = factory();
	  }
	})(this, function(){
	  'use strict';

	  var toStr = Object.prototype.toString;
	  function hasOwnProperty(obj, prop) {
	    if(obj == null) {
	      return false
	    }
	    //to handle objects with null prototypes (too edge case?)
	    return Object.prototype.hasOwnProperty.call(obj, prop)
	  }

	  function isEmpty(value){
	    if (!value) {
	      return true;
	    }
	    if (isArray(value) && value.length === 0) {
	        return true;
	    } else if (typeof value !== 'string') {
	        for (var i in value) {
	            if (hasOwnProperty(value, i)) {
	                return false;
	            }
	        }
	        return true;
	    }
	    return false;
	  }

	  function toString(type){
	    return toStr.call(type);
	  }

	  function isObject(obj){
	    return typeof obj === 'object' && toString(obj) === "[object Object]";
	  }

	  var isArray = Array.isArray || function(obj){
	    /*istanbul ignore next:cant test*/
	    return toStr.call(obj) === '[object Array]';
	  }

	  function isBoolean(obj){
	    return typeof obj === 'boolean' || toString(obj) === '[object Boolean]';
	  }

	  function getKey(key){
	    var intKey = parseInt(key);
	    if (intKey.toString() === key) {
	      return intKey;
	    }
	    return key;
	  }

	  function factory(options) {
	    options = options || {}

	    var objectPath = function(obj) {
	      return Object.keys(objectPath).reduce(function(proxy, prop) {
	        if(prop === 'create') {
	          return proxy;
	        }

	        /*istanbul ignore else*/
	        if (typeof objectPath[prop] === 'function') {
	          proxy[prop] = objectPath[prop].bind(objectPath, obj);
	        }

	        return proxy;
	      }, {});
	    };

	    function hasShallowProperty(obj, prop) {
	      return (options.includeInheritedProps || (typeof prop === 'number' && Array.isArray(obj)) || hasOwnProperty(obj, prop))
	    }

	    function getShallowProperty(obj, prop) {
	      if (hasShallowProperty(obj, prop)) {
	        return obj[prop];
	      }
	    }

	    function set(obj, path, value, doNotReplace){
	      if (typeof path === 'number') {
	        path = [path];
	      }
	      if (!path || path.length === 0) {
	        return obj;
	      }
	      if (typeof path === 'string') {
	        return set(obj, path.split('.').map(getKey), value, doNotReplace);
	      }
	      var currentPath = path[0];
	      var currentValue = getShallowProperty(obj, currentPath);
	      if (path.length === 1) {
	        if (currentValue === void 0 || !doNotReplace) {
	          obj[currentPath] = value;
	        }
	        return currentValue;
	      }

	      if (currentValue === void 0) {
	        //check if we assume an array
	        if(typeof path[1] === 'number') {
	          obj[currentPath] = [];
	        } else {
	          obj[currentPath] = {};
	        }
	      }

	      return set(obj[currentPath], path.slice(1), value, doNotReplace);
	    }

	    objectPath.has = function (obj, path) {
	      if (typeof path === 'number') {
	        path = [path];
	      } else if (typeof path === 'string') {
	        path = path.split('.');
	      }

	      if (!path || path.length === 0) {
	        return !!obj;
	      }

	      for (var i = 0; i < path.length; i++) {
	        var j = getKey(path[i]);

	        if((typeof j === 'number' && isArray(obj) && j < obj.length) ||
	          (options.includeInheritedProps ? (j in Object(obj)) : hasOwnProperty(obj, j))) {
	          obj = obj[j];
	        } else {
	          return false;
	        }
	      }

	      return true;
	    };

	    objectPath.ensureExists = function (obj, path, value){
	      return set(obj, path, value, true);
	    };

	    objectPath.set = function (obj, path, value, doNotReplace){
	      return set(obj, path, value, doNotReplace);
	    };

	    objectPath.insert = function (obj, path, value, at){
	      var arr = objectPath.get(obj, path);
	      at = ~~at;
	      if (!isArray(arr)) {
	        arr = [];
	        objectPath.set(obj, path, arr);
	      }
	      arr.splice(at, 0, value);
	    };

	    objectPath.empty = function(obj, path) {
	      if (isEmpty(path)) {
	        return void 0;
	      }
	      if (obj == null) {
	        return void 0;
	      }

	      var value, i;
	      if (!(value = objectPath.get(obj, path))) {
	        return void 0;
	      }

	      if (typeof value === 'string') {
	        return objectPath.set(obj, path, '');
	      } else if (isBoolean(value)) {
	        return objectPath.set(obj, path, false);
	      } else if (typeof value === 'number') {
	        return objectPath.set(obj, path, 0);
	      } else if (isArray(value)) {
	        value.length = 0;
	      } else if (isObject(value)) {
	        for (i in value) {
	          if (hasShallowProperty(value, i)) {
	            delete value[i];
	          }
	        }
	      } else {
	        return objectPath.set(obj, path, null);
	      }
	    };

	    objectPath.push = function (obj, path /*, values */){
	      var arr = objectPath.get(obj, path);
	      if (!isArray(arr)) {
	        arr = [];
	        objectPath.set(obj, path, arr);
	      }

	      arr.push.apply(arr, Array.prototype.slice.call(arguments, 2));
	    };

	    objectPath.coalesce = function (obj, paths, defaultValue) {
	      var value;

	      for (var i = 0, len = paths.length; i < len; i++) {
	        if ((value = objectPath.get(obj, paths[i])) !== void 0) {
	          return value;
	        }
	      }

	      return defaultValue;
	    };

	    objectPath.get = function (obj, path, defaultValue){
	      if (typeof path === 'number') {
	        path = [path];
	      }
	      if (!path || path.length === 0) {
	        return obj;
	      }
	      if (obj == null) {
	        return defaultValue;
	      }
	      if (typeof path === 'string') {
	        return objectPath.get(obj, path.split('.'), defaultValue);
	      }

	      var currentPath = getKey(path[0]);
	      var nextObj = getShallowProperty(obj, currentPath)
	      if (nextObj === void 0) {
	        return defaultValue;
	      }

	      if (path.length === 1) {
	        return nextObj;
	      }

	      return objectPath.get(obj[currentPath], path.slice(1), defaultValue);
	    };

	    objectPath.del = function del(obj, path) {
	      if (typeof path === 'number') {
	        path = [path];
	      }

	      if (obj == null) {
	        return obj;
	      }

	      if (isEmpty(path)) {
	        return obj;
	      }
	      if(typeof path === 'string') {
	        return objectPath.del(obj, path.split('.'));
	      }

	      var currentPath = getKey(path[0]);
	      if (!hasShallowProperty(obj, currentPath)) {
	        return obj;
	      }

	      if(path.length === 1) {
	        if (isArray(obj)) {
	          obj.splice(currentPath, 1);
	        } else {
	          delete obj[currentPath];
	        }
	      } else {
	        return objectPath.del(obj[currentPath], path.slice(1));
	      }

	      return obj;
	    }

	    return objectPath;
	  }

	  var mod = factory();
	  mod.create = factory;
	  mod.withInheritedProps = factory({includeInheritedProps: true})
	  return mod;
	});


/***/ }),
/* 158 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var _reactDom = __webpack_require__(10);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	// eslint-disable-line no-unused-vars

	var Info = function (_React$Component) {
	  _inherits(Info, _React$Component);

	  function Info() {
	    _classCallCheck(this, Info);

	    return _possibleConstructorReturn(this, (Info.__proto__ || Object.getPrototypeOf(Info)).apply(this, arguments));
	  }

	  _createClass(Info, [{
	    key: 'render',
	    value: function render() {
	      return _react2.default.createElement(
	        'span',
	        { className: 'c-Info',
	          'data-balloon': this.props.text,
	          'data-balloon-pos': this.props.position,
	          'data-balloon-length': 'medium' },
	        _react2.default.createElement(
	          'svg',
	          { xmlns: 'http://www.w3.org/2000/svg',
	            width: '24',
	            height: '24',
	            viewBox: '0 0 24 24' },
	          _react2.default.createElement('path', { d: 'M12 2c5.514 0 10 4.486 10 10s-4.486 10-10 10-10-4.486-10-10 4.486-10 10-10zm0-2c-6.627 0-12 5.373-12 12s5.373 12 12 12 12-5.373 12-12-5.373-12-12-12zm-2.033 16.01c.564-1.789 1.632-3.932 1.821-4.474.273-.787-.211-1.136-1.74.209l-.34-.64c1.744-1.897 5.335-2.326 4.113.613-.763 1.835-1.309 3.074-1.621 4.03-.455 1.393.694.828 1.819-.211.153.25.203.331.356.619-2.498 2.378-5.271 2.588-4.408-.146zm4.742-8.169c-.532.453-1.32.443-1.761-.022-.441-.465-.367-1.208.164-1.661.532-.453 1.32-.442 1.761.022.439.466.367 1.209-.164 1.661z' })
	        )
	      );
	    }
	  }], [{
	    key: 'defaultProps',
	    get: function get() {
	      return {
	        position: 'up'
	      };
	    }
	  }]);

	  return Info;
	}(_react2.default.Component);

	exports.default = Info;

/***/ }),
/* 159 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var _reactDom = __webpack_require__(10);

	var _Logo = __webpack_require__(160);

	var _Logo2 = _interopRequireDefault(_Logo);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // eslint-disable-line no-unused-vars

	var Footer = function (_React$Component) {
	  _inherits(Footer, _React$Component);

	  function Footer() {
	    _classCallCheck(this, Footer);

	    return _possibleConstructorReturn(this, (Footer.__proto__ || Object.getPrototypeOf(Footer)).apply(this, arguments));
	  }

	  _createClass(Footer, [{
	    key: 'render',
	    value: function render() {
	      return _react2.default.createElement(
	        'footer',
	        { className: 'c-Footer' },
	        _react2.default.createElement(
	          'div',
	          { className: 'c-Footer__inner' },
	          _react2.default.createElement(
	            'a',
	            { href: 'https://adaptagency.com' },
	            'https://adaptagency.com'
	          )
	        )
	      );
	    }
	  }]);

	  return Footer;
	}(_react2.default.Component);

	exports.default = Footer;

/***/ }),
/* 160 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var _reactDom = __webpack_require__(10);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	// eslint-disable-line no-unused-vars

	var Logo = function (_React$Component) {
	  _inherits(Logo, _React$Component);

	  function Logo() {
	    _classCallCheck(this, Logo);

	    return _possibleConstructorReturn(this, (Logo.__proto__ || Object.getPrototypeOf(Logo)).apply(this, arguments));
	  }

	  _createClass(Logo, [{
	    key: 'render',
	    value: function render() {
	      return _react2.default.createElement(
	        'svg',
	        { width: '70px', height: '70px', viewBox: '0 0 65 65', version: '1.1', xmlns: 'http://www.w3.org/2000/svg', xmlnsXlink: 'http://www.w3.org/1999/xlink', className: 'c-Logo' },
	        _react2.default.createElement(
	          'g',
	          null,
	          _react2.default.createElement(
	            'g',
	            { id: 'adapt_square_gradientone' },
	            _react2.default.createElement('path', { fill: '#866EF7', id: 'Shape', d: 'm13.743321,28.358779c-2.62977,0 -4.78817,2.28244 -4.78817,5.03626c0,2.75381 2.1584,5.03626 4.78817,5.03626c1.01718,0 1.93512,-0.32252 2.72901,-0.89313l0,0.76908l2.05916,0l0,-4.91221c0,-2.75382 -2.1584,-5.03626 -4.78817,-5.03626zm0,7.8645c-1.51336,0 -2.72901,-1.26526 -2.72901,-2.82824c0,-1.58779 1.21565,-2.82825 2.72901,-2.82825c1.51336,0 2.72901,1.26527 2.72901,2.82825c-0.02481,1.53817 -1.24046,2.82824 -2.72901,2.82824zm20.69084,-7.8645c-2.62977,0 -4.78817,2.23282 -4.78817,5.03626c0,2.75381 2.1584,5.03626 4.78817,5.03626c1.01718,0 1.93511,-0.32252 2.72901,-0.89313l0,0.76908l2.05916,0l0,-4.91221c0,-2.75382 -2.1584,-5.03626 -4.78817,-5.03626zm0,7.8645c-1.51336,0 -2.72901,-1.26526 -2.72901,-2.82824c0,-1.58779 1.21565,-2.82825 2.72901,-2.82825c1.51336,0 2.72901,1.26527 2.72901,2.82825c-0.04962,1.53817 -1.26527,2.82824 -2.72901,2.82824zm-7.64122,-6.97137c-0.76908,-0.57061 -1.71183,-0.89313 -2.72901,-0.89313c-2.62977,0 -4.78817,2.23282 -4.78817,5.03626c0,2.75381 2.1584,5.03626 4.78817,5.03626c2.62977,0 4.78817,-2.23283 4.78817,-5.03626l0,-8.85687l-2.05916,0l0,4.71374zm-2.7042,6.97137c-1.51336,0 -2.72901,-1.26526 -2.72901,-2.82824c0,-1.56298 1.21565,-2.82825 2.72901,-2.82825c1.51336,0 2.72901,1.26527 2.72901,2.82825c-0.02481,1.53817 -1.24046,2.82824 -2.72901,2.82824zm20.64122,-7.8645c-2.62977,0 -4.78817,2.23282 -4.78817,5.03626l0,7.39313l2.05916,0l0,-3.25c0.76909,0.57061 1.71184,0.89313 2.72901,0.89313c2.62977,0 4.78817,-2.23283 4.78817,-5.03626c0,-2.75382 -2.1584,-5.03626 -4.78817,-5.03626zm0,7.8645c-1.51336,0 -2.72901,-1.26526 -2.72901,-2.82824c0,-1.58779 1.21565,-2.82825 2.72901,-2.82825c1.51336,0 2.72901,1.26527 2.72901,2.82825c0,1.53817 -1.21565,2.82824 -2.72901,2.82824zm10.34542,0c0,0 -0.71946,0 -1.41412,-0.37213c-0.89313,-0.44657 -1.29008,-1.26527 -1.29008,-2.48092l0,-2.82825l1.78626,0l0,-2.1832l-1.78626,0l0,-3.82061l-2.05916,0l0,8.85687c0,2.03435 0.84351,3.57252 2.4313,4.41603c1.14122,0.62023 2.23283,0.62023 2.35687,0.62023l0.94275,0l0,-2.20802l-0.96756,0z' }),
	            _react2.default.createElement('rect', { stroke: 'null', id: 'svg_2', height: '0.749997', width: '65.374695', y: '0.12515', x: '-0.437344', strokeWidth: 'null', fill: '#866EF7' }),
	            _react2.default.createElement('rect', { stroke: 'null', id: 'svg_3', height: '64.749701', width: '1.124995', y: '-0.124846', x: '-0.062351', fillOpacity: 'null', strokeOpacity: 'null', strokeWidth: 'null', fill: '#866EF7' }),
	            _react2.default.createElement('rect', { stroke: 'null', id: 'svg_4', height: '0.749997', width: '64.624695', y: '64.124857', x: '0.125153', fillOpacity: 'null', strokeOpacity: 'null', strokeWidth: 'null', fill: '#866EF7' }),
	            _react2.default.createElement('rect', { id: 'svg_5', height: '62.874712', width: '0.874996', y: '1.250143', x: '63.999856', fillOpacity: 'null', strokeOpacity: 'null', strokeWidth: 'null', stroke: 'null', fill: '#866EF7' })
	          )
	        )
	      );
	    }
	  }]);

	  return Logo;
	}(_react2.default.Component);

	exports.default = Logo;

/***/ }),
/* 161 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var _reactDom = __webpack_require__(10);

	var _Logo = __webpack_require__(160);

	var _Logo2 = _interopRequireDefault(_Logo);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // eslint-disable-line no-unused-vars

	var Loader = function (_React$Component) {
	  _inherits(Loader, _React$Component);

	  function Loader() {
	    _classCallCheck(this, Loader);

	    return _possibleConstructorReturn(this, (Loader.__proto__ || Object.getPrototypeOf(Loader)).apply(this, arguments));
	  }

	  _createClass(Loader, [{
	    key: 'render',
	    value: function render() {
	      return _react2.default.createElement(
	        'div',
	        { className: 'c-Loader' },
	        _react2.default.createElement(
	          'div',
	          { className: 'c-Loader__content' },
	          _react2.default.createElement(_Logo2.default, { animate: true, width: 80 })
	        )
	      );
	    }
	  }]);

	  return Loader;
	}(_react2.default.Component);

	exports.default = Loader;

/***/ }),
/* 162 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var _reactDom = __webpack_require__(10);

	var _semanticUiReact = __webpack_require__(163);

	var _Constants = __webpack_require__(19);

	var _Utils = __webpack_require__(154);

	var _Logo = __webpack_require__(160);

	var _Logo2 = _interopRequireDefault(_Logo);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // eslint-disable-line no-unused-vars


	var TopBar = function (_React$Component) {
	  _inherits(TopBar, _React$Component);

	  function TopBar() {
	    _classCallCheck(this, TopBar);

	    return _possibleConstructorReturn(this, (TopBar.__proto__ || Object.getPrototypeOf(TopBar)).apply(this, arguments));
	  }

	  _createClass(TopBar, [{
	    key: 'render',
	    value: function render() {
	      var _props = this.props,
	          period = _props.period,
	          profiles = _props.profiles,
	          slug = _props.profile.slug;


	      return _react2.default.createElement(
	        'div',
	        { className: 'c-TopBar' },
	        _react2.default.createElement(
	          'div',
	          { className: 'c-TopBar__inner' },
	          _react2.default.createElement(_Logo2.default, { width: 40 }),
	          _react2.default.createElement(
	            'div',
	            { className: 'c-TopBar__nav' },
	            'Viewing'
	          )
	        )
	      );
	    }
	  }]);

	  return TopBar;
	}(_react2.default.Component);

	exports.default = TopBar;

/***/ }),
/* 163 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	Object.defineProperty(exports, "Confirm", {
	  enumerable: true,
	  get: function get() {
	    return _Confirm2["default"];
	  }
	});
	Object.defineProperty(exports, "MountNode", {
	  enumerable: true,
	  get: function get() {
	    return _MountNode2["default"];
	  }
	});
	Object.defineProperty(exports, "Pagination", {
	  enumerable: true,
	  get: function get() {
	    return _Pagination2["default"];
	  }
	});
	Object.defineProperty(exports, "PaginationItem", {
	  enumerable: true,
	  get: function get() {
	    return _PaginationItem2["default"];
	  }
	});
	Object.defineProperty(exports, "Portal", {
	  enumerable: true,
	  get: function get() {
	    return _Portal2["default"];
	  }
	});
	Object.defineProperty(exports, "PortalInner", {
	  enumerable: true,
	  get: function get() {
	    return _PortalInner2["default"];
	  }
	});
	Object.defineProperty(exports, "Radio", {
	  enumerable: true,
	  get: function get() {
	    return _Radio2["default"];
	  }
	});
	Object.defineProperty(exports, "Ref", {
	  enumerable: true,
	  get: function get() {
	    return _Ref2["default"];
	  }
	});
	Object.defineProperty(exports, "RefFindNode", {
	  enumerable: true,
	  get: function get() {
	    return _RefFindNode2["default"];
	  }
	});
	Object.defineProperty(exports, "RefForward", {
	  enumerable: true,
	  get: function get() {
	    return _RefForward2["default"];
	  }
	});
	Object.defineProperty(exports, "Responsive", {
	  enumerable: true,
	  get: function get() {
	    return _Responsive2["default"];
	  }
	});
	Object.defineProperty(exports, "Select", {
	  enumerable: true,
	  get: function get() {
	    return _Select2["default"];
	  }
	});
	Object.defineProperty(exports, "TextArea", {
	  enumerable: true,
	  get: function get() {
	    return _TextArea2["default"];
	  }
	});
	Object.defineProperty(exports, "TransitionablePortal", {
	  enumerable: true,
	  get: function get() {
	    return _TransitionablePortal2["default"];
	  }
	});
	Object.defineProperty(exports, "Visibility", {
	  enumerable: true,
	  get: function get() {
	    return _Visibility2["default"];
	  }
	});
	Object.defineProperty(exports, "Breadcrumb", {
	  enumerable: true,
	  get: function get() {
	    return _Breadcrumb2["default"];
	  }
	});
	Object.defineProperty(exports, "BreadcrumbDivider", {
	  enumerable: true,
	  get: function get() {
	    return _BreadcrumbDivider2["default"];
	  }
	});
	Object.defineProperty(exports, "BreadcrumbSection", {
	  enumerable: true,
	  get: function get() {
	    return _BreadcrumbSection2["default"];
	  }
	});
	Object.defineProperty(exports, "Form", {
	  enumerable: true,
	  get: function get() {
	    return _Form2["default"];
	  }
	});
	Object.defineProperty(exports, "FormButton", {
	  enumerable: true,
	  get: function get() {
	    return _FormButton2["default"];
	  }
	});
	Object.defineProperty(exports, "FormCheckbox", {
	  enumerable: true,
	  get: function get() {
	    return _FormCheckbox2["default"];
	  }
	});
	Object.defineProperty(exports, "FormDropdown", {
	  enumerable: true,
	  get: function get() {
	    return _FormDropdown2["default"];
	  }
	});
	Object.defineProperty(exports, "FormField", {
	  enumerable: true,
	  get: function get() {
	    return _FormField2["default"];
	  }
	});
	Object.defineProperty(exports, "FormGroup", {
	  enumerable: true,
	  get: function get() {
	    return _FormGroup2["default"];
	  }
	});
	Object.defineProperty(exports, "FormInput", {
	  enumerable: true,
	  get: function get() {
	    return _FormInput2["default"];
	  }
	});
	Object.defineProperty(exports, "FormRadio", {
	  enumerable: true,
	  get: function get() {
	    return _FormRadio2["default"];
	  }
	});
	Object.defineProperty(exports, "FormSelect", {
	  enumerable: true,
	  get: function get() {
	    return _FormSelect2["default"];
	  }
	});
	Object.defineProperty(exports, "FormTextArea", {
	  enumerable: true,
	  get: function get() {
	    return _FormTextArea2["default"];
	  }
	});
	Object.defineProperty(exports, "Grid", {
	  enumerable: true,
	  get: function get() {
	    return _Grid2["default"];
	  }
	});
	Object.defineProperty(exports, "GridColumn", {
	  enumerable: true,
	  get: function get() {
	    return _GridColumn2["default"];
	  }
	});
	Object.defineProperty(exports, "GridRow", {
	  enumerable: true,
	  get: function get() {
	    return _GridRow2["default"];
	  }
	});
	Object.defineProperty(exports, "Menu", {
	  enumerable: true,
	  get: function get() {
	    return _Menu2["default"];
	  }
	});
	Object.defineProperty(exports, "MenuHeader", {
	  enumerable: true,
	  get: function get() {
	    return _MenuHeader2["default"];
	  }
	});
	Object.defineProperty(exports, "MenuItem", {
	  enumerable: true,
	  get: function get() {
	    return _MenuItem2["default"];
	  }
	});
	Object.defineProperty(exports, "MenuMenu", {
	  enumerable: true,
	  get: function get() {
	    return _MenuMenu2["default"];
	  }
	});
	Object.defineProperty(exports, "Message", {
	  enumerable: true,
	  get: function get() {
	    return _Message2["default"];
	  }
	});
	Object.defineProperty(exports, "MessageContent", {
	  enumerable: true,
	  get: function get() {
	    return _MessageContent2["default"];
	  }
	});
	Object.defineProperty(exports, "MessageHeader", {
	  enumerable: true,
	  get: function get() {
	    return _MessageHeader2["default"];
	  }
	});
	Object.defineProperty(exports, "MessageItem", {
	  enumerable: true,
	  get: function get() {
	    return _MessageItem2["default"];
	  }
	});
	Object.defineProperty(exports, "MessageList", {
	  enumerable: true,
	  get: function get() {
	    return _MessageList2["default"];
	  }
	});
	Object.defineProperty(exports, "Table", {
	  enumerable: true,
	  get: function get() {
	    return _Table2["default"];
	  }
	});
	Object.defineProperty(exports, "TableBody", {
	  enumerable: true,
	  get: function get() {
	    return _TableBody2["default"];
	  }
	});
	Object.defineProperty(exports, "TableCell", {
	  enumerable: true,
	  get: function get() {
	    return _TableCell2["default"];
	  }
	});
	Object.defineProperty(exports, "TableFooter", {
	  enumerable: true,
	  get: function get() {
	    return _TableFooter2["default"];
	  }
	});
	Object.defineProperty(exports, "TableHeader", {
	  enumerable: true,
	  get: function get() {
	    return _TableHeader2["default"];
	  }
	});
	Object.defineProperty(exports, "TableHeaderCell", {
	  enumerable: true,
	  get: function get() {
	    return _TableHeaderCell2["default"];
	  }
	});
	Object.defineProperty(exports, "TableRow", {
	  enumerable: true,
	  get: function get() {
	    return _TableRow2["default"];
	  }
	});
	Object.defineProperty(exports, "Button", {
	  enumerable: true,
	  get: function get() {
	    return _Button2["default"];
	  }
	});
	Object.defineProperty(exports, "ButtonContent", {
	  enumerable: true,
	  get: function get() {
	    return _ButtonContent2["default"];
	  }
	});
	Object.defineProperty(exports, "ButtonGroup", {
	  enumerable: true,
	  get: function get() {
	    return _ButtonGroup2["default"];
	  }
	});
	Object.defineProperty(exports, "ButtonOr", {
	  enumerable: true,
	  get: function get() {
	    return _ButtonOr2["default"];
	  }
	});
	Object.defineProperty(exports, "Container", {
	  enumerable: true,
	  get: function get() {
	    return _Container2["default"];
	  }
	});
	Object.defineProperty(exports, "Divider", {
	  enumerable: true,
	  get: function get() {
	    return _Divider2["default"];
	  }
	});
	Object.defineProperty(exports, "Flag", {
	  enumerable: true,
	  get: function get() {
	    return _Flag2["default"];
	  }
	});
	Object.defineProperty(exports, "Header", {
	  enumerable: true,
	  get: function get() {
	    return _Header2["default"];
	  }
	});
	Object.defineProperty(exports, "HeaderContent", {
	  enumerable: true,
	  get: function get() {
	    return _HeaderContent2["default"];
	  }
	});
	Object.defineProperty(exports, "HeaderSubheader", {
	  enumerable: true,
	  get: function get() {
	    return _HeaderSubheader2["default"];
	  }
	});
	Object.defineProperty(exports, "Icon", {
	  enumerable: true,
	  get: function get() {
	    return _Icon2["default"];
	  }
	});
	Object.defineProperty(exports, "IconGroup", {
	  enumerable: true,
	  get: function get() {
	    return _IconGroup2["default"];
	  }
	});
	Object.defineProperty(exports, "Image", {
	  enumerable: true,
	  get: function get() {
	    return _Image2["default"];
	  }
	});
	Object.defineProperty(exports, "ImageGroup", {
	  enumerable: true,
	  get: function get() {
	    return _ImageGroup2["default"];
	  }
	});
	Object.defineProperty(exports, "Input", {
	  enumerable: true,
	  get: function get() {
	    return _Input2["default"];
	  }
	});
	Object.defineProperty(exports, "Label", {
	  enumerable: true,
	  get: function get() {
	    return _Label2["default"];
	  }
	});
	Object.defineProperty(exports, "LabelDetail", {
	  enumerable: true,
	  get: function get() {
	    return _LabelDetail2["default"];
	  }
	});
	Object.defineProperty(exports, "LabelGroup", {
	  enumerable: true,
	  get: function get() {
	    return _LabelGroup2["default"];
	  }
	});
	Object.defineProperty(exports, "List", {
	  enumerable: true,
	  get: function get() {
	    return _List2["default"];
	  }
	});
	Object.defineProperty(exports, "ListContent", {
	  enumerable: true,
	  get: function get() {
	    return _ListContent2["default"];
	  }
	});
	Object.defineProperty(exports, "ListDescription", {
	  enumerable: true,
	  get: function get() {
	    return _ListDescription2["default"];
	  }
	});
	Object.defineProperty(exports, "ListHeader", {
	  enumerable: true,
	  get: function get() {
	    return _ListHeader2["default"];
	  }
	});
	Object.defineProperty(exports, "ListIcon", {
	  enumerable: true,
	  get: function get() {
	    return _ListIcon2["default"];
	  }
	});
	Object.defineProperty(exports, "ListItem", {
	  enumerable: true,
	  get: function get() {
	    return _ListItem2["default"];
	  }
	});
	Object.defineProperty(exports, "ListList", {
	  enumerable: true,
	  get: function get() {
	    return _ListList2["default"];
	  }
	});
	Object.defineProperty(exports, "Loader", {
	  enumerable: true,
	  get: function get() {
	    return _Loader2["default"];
	  }
	});
	Object.defineProperty(exports, "Placeholder", {
	  enumerable: true,
	  get: function get() {
	    return _Placeholder2["default"];
	  }
	});
	Object.defineProperty(exports, "PlaceholderHeader", {
	  enumerable: true,
	  get: function get() {
	    return _PlaceholderHeader2["default"];
	  }
	});
	Object.defineProperty(exports, "PlaceholderImage", {
	  enumerable: true,
	  get: function get() {
	    return _PlaceholderImage2["default"];
	  }
	});
	Object.defineProperty(exports, "PlaceholderLine", {
	  enumerable: true,
	  get: function get() {
	    return _PlaceholderLine2["default"];
	  }
	});
	Object.defineProperty(exports, "PlaceholderParagraph", {
	  enumerable: true,
	  get: function get() {
	    return _PlaceholderParagraph2["default"];
	  }
	});
	Object.defineProperty(exports, "Rail", {
	  enumerable: true,
	  get: function get() {
	    return _Rail2["default"];
	  }
	});
	Object.defineProperty(exports, "Reveal", {
	  enumerable: true,
	  get: function get() {
	    return _Reveal2["default"];
	  }
	});
	Object.defineProperty(exports, "RevealContent", {
	  enumerable: true,
	  get: function get() {
	    return _RevealContent2["default"];
	  }
	});
	Object.defineProperty(exports, "Segment", {
	  enumerable: true,
	  get: function get() {
	    return _Segment2["default"];
	  }
	});
	Object.defineProperty(exports, "SegmentGroup", {
	  enumerable: true,
	  get: function get() {
	    return _SegmentGroup2["default"];
	  }
	});
	Object.defineProperty(exports, "SegmentInline", {
	  enumerable: true,
	  get: function get() {
	    return _SegmentInline2["default"];
	  }
	});
	Object.defineProperty(exports, "Step", {
	  enumerable: true,
	  get: function get() {
	    return _Step2["default"];
	  }
	});
	Object.defineProperty(exports, "StepContent", {
	  enumerable: true,
	  get: function get() {
	    return _StepContent2["default"];
	  }
	});
	Object.defineProperty(exports, "StepDescription", {
	  enumerable: true,
	  get: function get() {
	    return _StepDescription2["default"];
	  }
	});
	Object.defineProperty(exports, "StepGroup", {
	  enumerable: true,
	  get: function get() {
	    return _StepGroup2["default"];
	  }
	});
	Object.defineProperty(exports, "StepTitle", {
	  enumerable: true,
	  get: function get() {
	    return _StepTitle2["default"];
	  }
	});
	Object.defineProperty(exports, "Accordion", {
	  enumerable: true,
	  get: function get() {
	    return _Accordion2["default"];
	  }
	});
	Object.defineProperty(exports, "AccordionAccordion", {
	  enumerable: true,
	  get: function get() {
	    return _AccordionAccordion2["default"];
	  }
	});
	Object.defineProperty(exports, "AccordionContent", {
	  enumerable: true,
	  get: function get() {
	    return _AccordionContent2["default"];
	  }
	});
	Object.defineProperty(exports, "AccordionPanel", {
	  enumerable: true,
	  get: function get() {
	    return _AccordionPanel2["default"];
	  }
	});
	Object.defineProperty(exports, "AccordionTitle", {
	  enumerable: true,
	  get: function get() {
	    return _AccordionTitle2["default"];
	  }
	});
	Object.defineProperty(exports, "Checkbox", {
	  enumerable: true,
	  get: function get() {
	    return _Checkbox2["default"];
	  }
	});
	Object.defineProperty(exports, "Dimmer", {
	  enumerable: true,
	  get: function get() {
	    return _Dimmer2["default"];
	  }
	});
	Object.defineProperty(exports, "DimmerDimmable", {
	  enumerable: true,
	  get: function get() {
	    return _DimmerDimmable2["default"];
	  }
	});
	Object.defineProperty(exports, "DimmerInner", {
	  enumerable: true,
	  get: function get() {
	    return _DimmerInner2["default"];
	  }
	});
	Object.defineProperty(exports, "Dropdown", {
	  enumerable: true,
	  get: function get() {
	    return _Dropdown2["default"];
	  }
	});
	Object.defineProperty(exports, "DropdownDivider", {
	  enumerable: true,
	  get: function get() {
	    return _DropdownDivider2["default"];
	  }
	});
	Object.defineProperty(exports, "DropdownHeader", {
	  enumerable: true,
	  get: function get() {
	    return _DropdownHeader2["default"];
	  }
	});
	Object.defineProperty(exports, "DropdownItem", {
	  enumerable: true,
	  get: function get() {
	    return _DropdownItem2["default"];
	  }
	});
	Object.defineProperty(exports, "DropdownMenu", {
	  enumerable: true,
	  get: function get() {
	    return _DropdownMenu2["default"];
	  }
	});
	Object.defineProperty(exports, "DropdownSearchInput", {
	  enumerable: true,
	  get: function get() {
	    return _DropdownSearchInput2["default"];
	  }
	});
	Object.defineProperty(exports, "Embed", {
	  enumerable: true,
	  get: function get() {
	    return _Embed2["default"];
	  }
	});
	Object.defineProperty(exports, "Modal", {
	  enumerable: true,
	  get: function get() {
	    return _Modal2["default"];
	  }
	});
	Object.defineProperty(exports, "ModalActions", {
	  enumerable: true,
	  get: function get() {
	    return _ModalActions2["default"];
	  }
	});
	Object.defineProperty(exports, "ModalContent", {
	  enumerable: true,
	  get: function get() {
	    return _ModalContent2["default"];
	  }
	});
	Object.defineProperty(exports, "ModalDescription", {
	  enumerable: true,
	  get: function get() {
	    return _ModalDescription2["default"];
	  }
	});
	Object.defineProperty(exports, "ModalHeader", {
	  enumerable: true,
	  get: function get() {
	    return _ModalHeader2["default"];
	  }
	});
	Object.defineProperty(exports, "Popup", {
	  enumerable: true,
	  get: function get() {
	    return _Popup2["default"];
	  }
	});
	Object.defineProperty(exports, "PopupContent", {
	  enumerable: true,
	  get: function get() {
	    return _PopupContent2["default"];
	  }
	});
	Object.defineProperty(exports, "PopupHeader", {
	  enumerable: true,
	  get: function get() {
	    return _PopupHeader2["default"];
	  }
	});
	Object.defineProperty(exports, "Progress", {
	  enumerable: true,
	  get: function get() {
	    return _Progress2["default"];
	  }
	});
	Object.defineProperty(exports, "Rating", {
	  enumerable: true,
	  get: function get() {
	    return _Rating2["default"];
	  }
	});
	Object.defineProperty(exports, "RatingIcon", {
	  enumerable: true,
	  get: function get() {
	    return _RatingIcon2["default"];
	  }
	});
	Object.defineProperty(exports, "Search", {
	  enumerable: true,
	  get: function get() {
	    return _Search2["default"];
	  }
	});
	Object.defineProperty(exports, "SearchCategory", {
	  enumerable: true,
	  get: function get() {
	    return _SearchCategory2["default"];
	  }
	});
	Object.defineProperty(exports, "SearchResult", {
	  enumerable: true,
	  get: function get() {
	    return _SearchResult2["default"];
	  }
	});
	Object.defineProperty(exports, "SearchResults", {
	  enumerable: true,
	  get: function get() {
	    return _SearchResults2["default"];
	  }
	});
	Object.defineProperty(exports, "Sidebar", {
	  enumerable: true,
	  get: function get() {
	    return _Sidebar2["default"];
	  }
	});
	Object.defineProperty(exports, "SidebarPushable", {
	  enumerable: true,
	  get: function get() {
	    return _SidebarPushable2["default"];
	  }
	});
	Object.defineProperty(exports, "SidebarPusher", {
	  enumerable: true,
	  get: function get() {
	    return _SidebarPusher2["default"];
	  }
	});
	Object.defineProperty(exports, "Sticky", {
	  enumerable: true,
	  get: function get() {
	    return _Sticky2["default"];
	  }
	});
	Object.defineProperty(exports, "Tab", {
	  enumerable: true,
	  get: function get() {
	    return _Tab2["default"];
	  }
	});
	Object.defineProperty(exports, "TabPane", {
	  enumerable: true,
	  get: function get() {
	    return _TabPane2["default"];
	  }
	});
	Object.defineProperty(exports, "Transition", {
	  enumerable: true,
	  get: function get() {
	    return _Transition2["default"];
	  }
	});
	Object.defineProperty(exports, "TransitionGroup", {
	  enumerable: true,
	  get: function get() {
	    return _TransitionGroup2["default"];
	  }
	});
	Object.defineProperty(exports, "Advertisement", {
	  enumerable: true,
	  get: function get() {
	    return _Advertisement2["default"];
	  }
	});
	Object.defineProperty(exports, "Card", {
	  enumerable: true,
	  get: function get() {
	    return _Card2["default"];
	  }
	});
	Object.defineProperty(exports, "CardContent", {
	  enumerable: true,
	  get: function get() {
	    return _CardContent2["default"];
	  }
	});
	Object.defineProperty(exports, "CardDescription", {
	  enumerable: true,
	  get: function get() {
	    return _CardDescription2["default"];
	  }
	});
	Object.defineProperty(exports, "CardGroup", {
	  enumerable: true,
	  get: function get() {
	    return _CardGroup2["default"];
	  }
	});
	Object.defineProperty(exports, "CardHeader", {
	  enumerable: true,
	  get: function get() {
	    return _CardHeader2["default"];
	  }
	});
	Object.defineProperty(exports, "CardMeta", {
	  enumerable: true,
	  get: function get() {
	    return _CardMeta2["default"];
	  }
	});
	Object.defineProperty(exports, "Comment", {
	  enumerable: true,
	  get: function get() {
	    return _Comment2["default"];
	  }
	});
	Object.defineProperty(exports, "CommentAction", {
	  enumerable: true,
	  get: function get() {
	    return _CommentAction2["default"];
	  }
	});
	Object.defineProperty(exports, "CommentActions", {
	  enumerable: true,
	  get: function get() {
	    return _CommentActions2["default"];
	  }
	});
	Object.defineProperty(exports, "CommentAuthor", {
	  enumerable: true,
	  get: function get() {
	    return _CommentAuthor2["default"];
	  }
	});
	Object.defineProperty(exports, "CommentAvatar", {
	  enumerable: true,
	  get: function get() {
	    return _CommentAvatar2["default"];
	  }
	});
	Object.defineProperty(exports, "CommentContent", {
	  enumerable: true,
	  get: function get() {
	    return _CommentContent2["default"];
	  }
	});
	Object.defineProperty(exports, "CommentGroup", {
	  enumerable: true,
	  get: function get() {
	    return _CommentGroup2["default"];
	  }
	});
	Object.defineProperty(exports, "CommentMetadata", {
	  enumerable: true,
	  get: function get() {
	    return _CommentMetadata2["default"];
	  }
	});
	Object.defineProperty(exports, "CommentText", {
	  enumerable: true,
	  get: function get() {
	    return _CommentText2["default"];
	  }
	});
	Object.defineProperty(exports, "Feed", {
	  enumerable: true,
	  get: function get() {
	    return _Feed2["default"];
	  }
	});
	Object.defineProperty(exports, "FeedContent", {
	  enumerable: true,
	  get: function get() {
	    return _FeedContent2["default"];
	  }
	});
	Object.defineProperty(exports, "FeedDate", {
	  enumerable: true,
	  get: function get() {
	    return _FeedDate2["default"];
	  }
	});
	Object.defineProperty(exports, "FeedEvent", {
	  enumerable: true,
	  get: function get() {
	    return _FeedEvent2["default"];
	  }
	});
	Object.defineProperty(exports, "FeedExtra", {
	  enumerable: true,
	  get: function get() {
	    return _FeedExtra2["default"];
	  }
	});
	Object.defineProperty(exports, "FeedLabel", {
	  enumerable: true,
	  get: function get() {
	    return _FeedLabel2["default"];
	  }
	});
	Object.defineProperty(exports, "FeedLike", {
	  enumerable: true,
	  get: function get() {
	    return _FeedLike2["default"];
	  }
	});
	Object.defineProperty(exports, "FeedMeta", {
	  enumerable: true,
	  get: function get() {
	    return _FeedMeta2["default"];
	  }
	});
	Object.defineProperty(exports, "FeedSummary", {
	  enumerable: true,
	  get: function get() {
	    return _FeedSummary2["default"];
	  }
	});
	Object.defineProperty(exports, "FeedUser", {
	  enumerable: true,
	  get: function get() {
	    return _FeedUser2["default"];
	  }
	});
	Object.defineProperty(exports, "Item", {
	  enumerable: true,
	  get: function get() {
	    return _Item2["default"];
	  }
	});
	Object.defineProperty(exports, "ItemContent", {
	  enumerable: true,
	  get: function get() {
	    return _ItemContent2["default"];
	  }
	});
	Object.defineProperty(exports, "ItemDescription", {
	  enumerable: true,
	  get: function get() {
	    return _ItemDescription2["default"];
	  }
	});
	Object.defineProperty(exports, "ItemExtra", {
	  enumerable: true,
	  get: function get() {
	    return _ItemExtra2["default"];
	  }
	});
	Object.defineProperty(exports, "ItemGroup", {
	  enumerable: true,
	  get: function get() {
	    return _ItemGroup2["default"];
	  }
	});
	Object.defineProperty(exports, "ItemHeader", {
	  enumerable: true,
	  get: function get() {
	    return _ItemHeader2["default"];
	  }
	});
	Object.defineProperty(exports, "ItemImage", {
	  enumerable: true,
	  get: function get() {
	    return _ItemImage2["default"];
	  }
	});
	Object.defineProperty(exports, "ItemMeta", {
	  enumerable: true,
	  get: function get() {
	    return _ItemMeta2["default"];
	  }
	});
	Object.defineProperty(exports, "Statistic", {
	  enumerable: true,
	  get: function get() {
	    return _Statistic2["default"];
	  }
	});
	Object.defineProperty(exports, "StatisticGroup", {
	  enumerable: true,
	  get: function get() {
	    return _StatisticGroup2["default"];
	  }
	});
	Object.defineProperty(exports, "StatisticLabel", {
	  enumerable: true,
	  get: function get() {
	    return _StatisticLabel2["default"];
	  }
	});
	Object.defineProperty(exports, "StatisticValue", {
	  enumerable: true,
	  get: function get() {
	    return _StatisticValue2["default"];
	  }
	});

	var _Confirm2 = _interopRequireDefault(__webpack_require__(165));

	var _MountNode2 = _interopRequireDefault(__webpack_require__(567));

	var _Pagination2 = _interopRequireDefault(__webpack_require__(591));

	var _PaginationItem2 = _interopRequireDefault(__webpack_require__(609));

	var _Portal2 = _interopRequireDefault(__webpack_require__(548));

	var _PortalInner2 = _interopRequireDefault(__webpack_require__(551));

	var _Radio2 = _interopRequireDefault(__webpack_require__(610));

	var _Ref2 = _interopRequireDefault(__webpack_require__(537));

	var _RefFindNode2 = _interopRequireDefault(__webpack_require__(539));

	var _RefForward2 = _interopRequireDefault(__webpack_require__(540));

	var _Responsive2 = _interopRequireDefault(__webpack_require__(615));

	var _Select2 = _interopRequireDefault(__webpack_require__(618));

	var _TextArea2 = _interopRequireDefault(__webpack_require__(643));

	var _TransitionablePortal2 = _interopRequireDefault(__webpack_require__(645));

	var _Visibility2 = _interopRequireDefault(__webpack_require__(651));

	var _Breadcrumb2 = _interopRequireDefault(__webpack_require__(653));

	var _BreadcrumbDivider2 = _interopRequireDefault(__webpack_require__(655));

	var _BreadcrumbSection2 = _interopRequireDefault(__webpack_require__(656));

	var _Form2 = _interopRequireDefault(__webpack_require__(657));

	var _FormButton2 = _interopRequireDefault(__webpack_require__(659));

	var _FormCheckbox2 = _interopRequireDefault(__webpack_require__(661));

	var _FormDropdown2 = _interopRequireDefault(__webpack_require__(662));

	var _FormField2 = _interopRequireDefault(__webpack_require__(660));

	var _FormGroup2 = _interopRequireDefault(__webpack_require__(663));

	var _FormInput2 = _interopRequireDefault(__webpack_require__(664));

	var _FormRadio2 = _interopRequireDefault(__webpack_require__(667));

	var _FormSelect2 = _interopRequireDefault(__webpack_require__(668));

	var _FormTextArea2 = _interopRequireDefault(__webpack_require__(669));

	var _Grid2 = _interopRequireDefault(__webpack_require__(670));

	var _GridColumn2 = _interopRequireDefault(__webpack_require__(672));

	var _GridRow2 = _interopRequireDefault(__webpack_require__(673));

	var _Menu2 = _interopRequireDefault(__webpack_require__(593));

	var _MenuHeader2 = _interopRequireDefault(__webpack_require__(595));

	var _MenuItem2 = _interopRequireDefault(__webpack_require__(596));

	var _MenuMenu2 = _interopRequireDefault(__webpack_require__(608));

	var _Message2 = _interopRequireDefault(__webpack_require__(674));

	var _MessageContent2 = _interopRequireDefault(__webpack_require__(676));

	var _MessageHeader2 = _interopRequireDefault(__webpack_require__(677));

	var _MessageItem2 = _interopRequireDefault(__webpack_require__(679));

	var _MessageList2 = _interopRequireDefault(__webpack_require__(678));

	var _Table2 = _interopRequireDefault(__webpack_require__(680));

	var _TableBody2 = _interopRequireDefault(__webpack_require__(682));

	var _TableCell2 = _interopRequireDefault(__webpack_require__(683));

	var _TableFooter2 = _interopRequireDefault(__webpack_require__(684));

	var _TableHeader2 = _interopRequireDefault(__webpack_require__(685));

	var _TableHeaderCell2 = _interopRequireDefault(__webpack_require__(686));

	var _TableRow2 = _interopRequireDefault(__webpack_require__(687));

	var _Button2 = _interopRequireDefault(__webpack_require__(536));

	var _ButtonContent2 = _interopRequireDefault(__webpack_require__(557));

	var _ButtonGroup2 = _interopRequireDefault(__webpack_require__(558));

	var _ButtonOr2 = _interopRequireDefault(__webpack_require__(559));

	var _Container2 = _interopRequireDefault(__webpack_require__(688));

	var _Divider2 = _interopRequireDefault(__webpack_require__(690));

	var _Flag2 = _interopRequireDefault(__webpack_require__(637));

	var _Header2 = _interopRequireDefault(__webpack_require__(692));

	var _HeaderContent2 = _interopRequireDefault(__webpack_require__(695));

	var _HeaderSubheader2 = _interopRequireDefault(__webpack_require__(694));

	var _Icon2 = _interopRequireDefault(__webpack_require__(566));

	var _IconGroup2 = _interopRequireDefault(__webpack_require__(543));

	var _Image2 = _interopRequireDefault(__webpack_require__(639));

	var _ImageGroup2 = _interopRequireDefault(__webpack_require__(554));

	var _Input2 = _interopRequireDefault(__webpack_require__(665));

	var _Label2 = _interopRequireDefault(__webpack_require__(634));

	var _LabelDetail2 = _interopRequireDefault(__webpack_require__(555));

	var _LabelGroup2 = _interopRequireDefault(__webpack_require__(556));

	var _List2 = _interopRequireDefault(__webpack_require__(696));

	var _ListContent2 = _interopRequireDefault(__webpack_require__(698));

	var _ListDescription2 = _interopRequireDefault(__webpack_require__(699));

	var _ListHeader2 = _interopRequireDefault(__webpack_require__(700));

	var _ListIcon2 = _interopRequireDefault(__webpack_require__(701));

	var _ListItem2 = _interopRequireDefault(__webpack_require__(702));

	var _ListList2 = _interopRequireDefault(__webpack_require__(703));

	var _Loader2 = _interopRequireDefault(__webpack_require__(704));

	var _Placeholder2 = _interopRequireDefault(__webpack_require__(706));

	var _PlaceholderHeader2 = _interopRequireDefault(__webpack_require__(708));

	var _PlaceholderImage2 = _interopRequireDefault(__webpack_require__(709));

	var _PlaceholderLine2 = _interopRequireDefault(__webpack_require__(710));

	var _PlaceholderParagraph2 = _interopRequireDefault(__webpack_require__(711));

	var _Rail2 = _interopRequireDefault(__webpack_require__(712));

	var _Reveal2 = _interopRequireDefault(__webpack_require__(714));

	var _RevealContent2 = _interopRequireDefault(__webpack_require__(716));

	var _Segment2 = _interopRequireDefault(__webpack_require__(717));

	var _SegmentGroup2 = _interopRequireDefault(__webpack_require__(719));

	var _SegmentInline2 = _interopRequireDefault(__webpack_require__(720));

	var _Step2 = _interopRequireDefault(__webpack_require__(721));

	var _StepContent2 = _interopRequireDefault(__webpack_require__(723));

	var _StepDescription2 = _interopRequireDefault(__webpack_require__(724));

	var _StepGroup2 = _interopRequireDefault(__webpack_require__(726));

	var _StepTitle2 = _interopRequireDefault(__webpack_require__(725));

	var _Accordion2 = _interopRequireDefault(__webpack_require__(728));

	var _AccordionAccordion2 = _interopRequireDefault(__webpack_require__(729));

	var _AccordionContent2 = _interopRequireDefault(__webpack_require__(732));

	var _AccordionPanel2 = _interopRequireDefault(__webpack_require__(730));

	var _AccordionTitle2 = _interopRequireDefault(__webpack_require__(731));

	var _Checkbox2 = _interopRequireDefault(__webpack_require__(612));

	var _Dimmer2 = _interopRequireDefault(__webpack_require__(546));

	var _DimmerDimmable2 = _interopRequireDefault(__webpack_require__(552));

	var _DimmerInner2 = _interopRequireDefault(__webpack_require__(553));

	var _Dropdown2 = _interopRequireDefault(__webpack_require__(620));

	var _DropdownDivider2 = _interopRequireDefault(__webpack_require__(635));

	var _DropdownHeader2 = _interopRequireDefault(__webpack_require__(640));

	var _DropdownItem2 = _interopRequireDefault(__webpack_require__(636));

	var _DropdownMenu2 = _interopRequireDefault(__webpack_require__(641));

	var _DropdownSearchInput2 = _interopRequireDefault(__webpack_require__(642));

	var _Embed2 = _interopRequireDefault(__webpack_require__(733));

	var _Modal2 = _interopRequireDefault(__webpack_require__(560));

	var _ModalActions2 = _interopRequireDefault(__webpack_require__(588));

	var _ModalContent2 = _interopRequireDefault(__webpack_require__(587));

	var _ModalDescription2 = _interopRequireDefault(__webpack_require__(589));

	var _ModalHeader2 = _interopRequireDefault(__webpack_require__(586));

	var _Popup2 = _interopRequireDefault(__webpack_require__(735));

	var _PopupContent2 = _interopRequireDefault(__webpack_require__(763));

	var _PopupHeader2 = _interopRequireDefault(__webpack_require__(764));

	var _Progress2 = _interopRequireDefault(__webpack_require__(765));

	var _Rating2 = _interopRequireDefault(__webpack_require__(770));

	var _RatingIcon2 = _interopRequireDefault(__webpack_require__(773));

	var _Search2 = _interopRequireDefault(__webpack_require__(774));

	var _SearchCategory2 = _interopRequireDefault(__webpack_require__(778));

	var _SearchResult2 = _interopRequireDefault(__webpack_require__(779));

	var _SearchResults2 = _interopRequireDefault(__webpack_require__(780));

	var _Sidebar2 = _interopRequireDefault(__webpack_require__(781));

	var _SidebarPushable2 = _interopRequireDefault(__webpack_require__(783));

	var _SidebarPusher2 = _interopRequireDefault(__webpack_require__(784));

	var _Sticky2 = _interopRequireDefault(__webpack_require__(785));

	var _Tab2 = _interopRequireDefault(__webpack_require__(787));

	var _TabPane2 = _interopRequireDefault(__webpack_require__(789));

	var _Transition2 = _interopRequireDefault(__webpack_require__(647));

	var _TransitionGroup2 = _interopRequireDefault(__webpack_require__(649));

	var _Advertisement2 = _interopRequireDefault(__webpack_require__(790));

	var _Card2 = _interopRequireDefault(__webpack_require__(792));

	var _CardContent2 = _interopRequireDefault(__webpack_require__(793));

	var _CardDescription2 = _interopRequireDefault(__webpack_require__(794));

	var _CardGroup2 = _interopRequireDefault(__webpack_require__(797));

	var _CardHeader2 = _interopRequireDefault(__webpack_require__(795));

	var _CardMeta2 = _interopRequireDefault(__webpack_require__(796));

	var _Comment2 = _interopRequireDefault(__webpack_require__(798));

	var _CommentAction2 = _interopRequireDefault(__webpack_require__(800));

	var _CommentActions2 = _interopRequireDefault(__webpack_require__(801));

	var _CommentAuthor2 = _interopRequireDefault(__webpack_require__(802));

	var _CommentAvatar2 = _interopRequireDefault(__webpack_require__(803));

	var _CommentContent2 = _interopRequireDefault(__webpack_require__(804));

	var _CommentGroup2 = _interopRequireDefault(__webpack_require__(805));

	var _CommentMetadata2 = _interopRequireDefault(__webpack_require__(806));

	var _CommentText2 = _interopRequireDefault(__webpack_require__(807));

	var _Feed2 = _interopRequireDefault(__webpack_require__(808));

	var _FeedContent2 = _interopRequireDefault(__webpack_require__(810));

	var _FeedDate2 = _interopRequireDefault(__webpack_require__(811));

	var _FeedEvent2 = _interopRequireDefault(__webpack_require__(817));

	var _FeedExtra2 = _interopRequireDefault(__webpack_require__(812));

	var _FeedLabel2 = _interopRequireDefault(__webpack_require__(818));

	var _FeedLike2 = _interopRequireDefault(__webpack_require__(814));

	var _FeedMeta2 = _interopRequireDefault(__webpack_require__(813));

	var _FeedSummary2 = _interopRequireDefault(__webpack_require__(815));

	var _FeedUser2 = _interopRequireDefault(__webpack_require__(816));

	var _Item2 = _interopRequireDefault(__webpack_require__(819));

	var _ItemContent2 = _interopRequireDefault(__webpack_require__(821));

	var _ItemDescription2 = _interopRequireDefault(__webpack_require__(823));

	var _ItemExtra2 = _interopRequireDefault(__webpack_require__(824));

	var _ItemGroup2 = _interopRequireDefault(__webpack_require__(826));

	var _ItemHeader2 = _interopRequireDefault(__webpack_require__(822));

	var _ItemImage2 = _interopRequireDefault(__webpack_require__(827));

	var _ItemMeta2 = _interopRequireDefault(__webpack_require__(825));

	var _Statistic2 = _interopRequireDefault(__webpack_require__(828));

	var _StatisticGroup2 = _interopRequireDefault(__webpack_require__(830));

	var _StatisticLabel2 = _interopRequireDefault(__webpack_require__(831));

	var _StatisticValue2 = _interopRequireDefault(__webpack_require__(832));

/***/ }),
/* 164 */,
/* 165 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	Object.defineProperty(exports, "default", {
	  enumerable: true,
	  get: function get() {
	    return _Confirm["default"];
	  }
	});

	var _Confirm = _interopRequireDefault(__webpack_require__(166));

/***/ }),
/* 166 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";

	var _interopRequireWildcard = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireWildcard\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _extends2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/extends\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _classCallCheck2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/classCallCheck\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _createClass2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/createClass\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/possibleConstructorReturn\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _getPrototypeOf3 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/getPrototypeOf\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _assertThisInitialized2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/assertThisInitialized\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _inherits2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/inherits\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _defineProperty2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/defineProperty\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _has2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/has\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _invoke2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/invoke\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _propTypes = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"prop-types\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _react = _interopRequireWildcard(__webpack_require__(3));

	var _lib = __webpack_require__(256);

	var _Button = _interopRequireDefault(__webpack_require__(535));

	var _Modal = _interopRequireDefault(__webpack_require__(560));

	/**
	 * A Confirm modal gives the user a choice to confirm or cancel an action/
	 * @see Modal
	 */
	var Confirm =
	/*#__PURE__*/
	function (_Component) {
	  (0, _inherits2["default"])(Confirm, _Component);

	  function Confirm() {
	    var _getPrototypeOf2;

	    var _this;

	    (0, _classCallCheck2["default"])(this, Confirm);

	    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    _this = (0, _possibleConstructorReturn2["default"])(this, (_getPrototypeOf2 = (0, _getPrototypeOf3["default"])(Confirm)).call.apply(_getPrototypeOf2, [this].concat(args)));
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "handleCancel", function (e) {
	      (0, _invoke2["default"])(_this.props, 'onCancel', e, _this.props);
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "handleCancelOverrides", function (predefinedProps) {
	      return {
	        onClick: function onClick(e, buttonProps) {
	          (0, _invoke2["default"])(predefinedProps, 'onClick', e, buttonProps);

	          _this.handleCancel(e);
	        }
	      };
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "handleConfirmOverrides", function (predefinedProps) {
	      return {
	        onClick: function onClick(e, buttonProps) {
	          (0, _invoke2["default"])(predefinedProps, 'onClick', e, buttonProps);
	          (0, _invoke2["default"])(_this.props, 'onConfirm', e, _this.props);
	        }
	      };
	    });
	    return _this;
	  }

	  (0, _createClass2["default"])(Confirm, [{
	    key: "render",
	    value: function render() {
	      var _this$props = this.props,
	          cancelButton = _this$props.cancelButton,
	          confirmButton = _this$props.confirmButton,
	          content = _this$props.content,
	          header = _this$props.header,
	          open = _this$props.open,
	          size = _this$props.size;
	      var rest = (0, _lib.getUnhandledProps)(Confirm, this.props); // `open` is auto controlled by the Modal
	      // It cannot be present (even undefined) with `defaultOpen`
	      // only apply it if the user provided an open prop

	      var openProp = {};
	      if ((0, _has2["default"])(this.props, 'open')) openProp.open = open;
	      return _react["default"].createElement(_Modal["default"], (0, _extends2["default"])({}, rest, openProp, {
	        size: size,
	        onClose: this.handleCancel
	      }), _Modal["default"].Header.create(header, {
	        autoGenerateKey: false
	      }), _Modal["default"].Content.create(content, {
	        autoGenerateKey: false
	      }), _react["default"].createElement(_Modal["default"].Actions, null, _Button["default"].create(cancelButton, {
	        autoGenerateKey: false,
	        overrideProps: this.handleCancelOverrides
	      }), _Button["default"].create(confirmButton, {
	        autoGenerateKey: false,
	        defaultProps: {
	          primary: true
	        },
	        overrideProps: this.handleConfirmOverrides
	      })));
	    }
	  }]);
	  return Confirm;
	}(_react.Component);

	(0, _defineProperty2["default"])(Confirm, "defaultProps", {
	  cancelButton: 'Cancel',
	  confirmButton: 'OK',
	  content: 'Are you sure?',
	  size: 'small'
	});
	(0, _defineProperty2["default"])(Confirm, "handledProps", ["cancelButton", "confirmButton", "content", "header", "onCancel", "onConfirm", "open", "size"]);
	Confirm.propTypes = process.env.NODE_ENV !== "production" ? {
	  /** The cancel button text. */
	  cancelButton: _lib.customPropTypes.itemShorthand,

	  /** The OK button text. */
	  confirmButton: _lib.customPropTypes.itemShorthand,

	  /** The ModalContent text. */
	  content: _lib.customPropTypes.itemShorthand,

	  /** The ModalHeader text. */
	  header: _lib.customPropTypes.itemShorthand,

	  /**
	   * Called when the Modal is closed without clicking confirm.
	   *
	   * @param {SyntheticEvent} event - React's original SyntheticEvent.
	   * @param {object} data - All props.
	   */
	  onCancel: _propTypes["default"].func,

	  /**
	   * Called when the OK button is clicked.
	   *
	   * @param {SyntheticEvent} event - React's original SyntheticEvent.
	   * @param {object} data - All props.
	   */
	  onConfirm: _propTypes["default"].func,

	  /** Whether or not the modal is visible. */
	  open: _propTypes["default"].bool,

	  /** A Confirm can vary in size */
	  size: _propTypes["default"].oneOf(['mini', 'tiny', 'small', 'large', 'fullscreen'])
	} : {};
	var _default = Confirm;
	exports["default"] = _default;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 167 */,
/* 168 */,
/* 169 */,
/* 170 */,
/* 171 */,
/* 172 */,
/* 173 */,
/* 174 */,
/* 175 */,
/* 176 */,
/* 177 */,
/* 178 */,
/* 179 */,
/* 180 */,
/* 181 */,
/* 182 */,
/* 183 */,
/* 184 */,
/* 185 */,
/* 186 */,
/* 187 */,
/* 188 */,
/* 189 */,
/* 190 */,
/* 191 */,
/* 192 */,
/* 193 */,
/* 194 */
/***/ (function(module, exports, __webpack_require__) {

	var MapCache = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"./_MapCache\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	/** Error message constants. */
	var FUNC_ERROR_TEXT = 'Expected a function';

	/**
	 * Creates a function that memoizes the result of `func`. If `resolver` is
	 * provided, it determines the cache key for storing the result based on the
	 * arguments provided to the memoized function. By default, the first argument
	 * provided to the memoized function is used as the map cache key. The `func`
	 * is invoked with the `this` binding of the memoized function.
	 *
	 * **Note:** The cache is exposed as the `cache` property on the memoized
	 * function. Its creation may be customized by replacing the `_.memoize.Cache`
	 * constructor with one whose instances implement the
	 * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)
	 * method interface of `clear`, `delete`, `get`, `has`, and `set`.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Function
	 * @param {Function} func The function to have its output memoized.
	 * @param {Function} [resolver] The function to resolve the cache key.
	 * @returns {Function} Returns the new memoized function.
	 * @example
	 *
	 * var object = { 'a': 1, 'b': 2 };
	 * var other = { 'c': 3, 'd': 4 };
	 *
	 * var values = _.memoize(_.values);
	 * values(object);
	 * // => [1, 2]
	 *
	 * values(other);
	 * // => [3, 4]
	 *
	 * object.a = 2;
	 * values(object);
	 * // => [1, 2]
	 *
	 * // Modify the result cache.
	 * values.cache.set(object, ['a', 'b']);
	 * values(object);
	 * // => ['a', 'b']
	 *
	 * // Replace `_.memoize.Cache`.
	 * _.memoize.Cache = WeakMap;
	 */
	function memoize(func, resolver) {
	  if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {
	    throw new TypeError(FUNC_ERROR_TEXT);
	  }
	  var memoized = function() {
	    var args = arguments,
	        key = resolver ? resolver.apply(this, args) : args[0],
	        cache = memoized.cache;

	    if (cache.has(key)) {
	      return cache.get(key);
	    }
	    var result = func.apply(this, args);
	    memoized.cache = cache.set(key, result) || cache;
	    return result;
	  };
	  memoized.cache = new (memoize.Cache || MapCache);
	  return memoized;
	}

	// Expose `MapCache`.
	memoize.Cache = MapCache;

	module.exports = memoize;


/***/ }),
/* 195 */,
/* 196 */,
/* 197 */,
/* 198 */,
/* 199 */,
/* 200 */,
/* 201 */,
/* 202 */,
/* 203 */,
/* 204 */,
/* 205 */,
/* 206 */,
/* 207 */,
/* 208 */,
/* 209 */,
/* 210 */,
/* 211 */,
/* 212 */,
/* 213 */,
/* 214 */,
/* 215 */,
/* 216 */,
/* 217 */,
/* 218 */,
/* 219 */,
/* 220 */,
/* 221 */,
/* 222 */,
/* 223 */,
/* 224 */,
/* 225 */,
/* 226 */,
/* 227 */
/***/ (function(module, exports, __webpack_require__) {

	var baseToString = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"./_baseToString\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	/**
	 * Converts `value` to a string. An empty string is returned for `null`
	 * and `undefined` values. The sign of `-0` is preserved.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to convert.
	 * @returns {string} Returns the converted string.
	 * @example
	 *
	 * _.toString(null);
	 * // => ''
	 *
	 * _.toString(-0);
	 * // => '-0'
	 *
	 * _.toString([1, 2, 3]);
	 * // => '1,2,3'
	 */
	function toString(value) {
	  return value == null ? '' : baseToString(value);
	}

	module.exports = toString;


/***/ }),
/* 228 */,
/* 229 */,
/* 230 */,
/* 231 */,
/* 232 */,
/* 233 */,
/* 234 */,
/* 235 */,
/* 236 */,
/* 237 */,
/* 238 */,
/* 239 */,
/* 240 */,
/* 241 */,
/* 242 */,
/* 243 */,
/* 244 */,
/* 245 */,
/* 246 */,
/* 247 */,
/* 248 */,
/* 249 */,
/* 250 */,
/* 251 */,
/* 252 */,
/* 253 */,
/* 254 */,
/* 255 */,
/* 256 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	var _interopRequireWildcard = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireWildcard\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	var _exportNames = {
	  AutoControlledComponent: true,
	  getChildMapping: true,
	  mergeChildMappings: true,
	  childrenUtils: true,
	  useKeyOnly: true,
	  useKeyOrValueAndKey: true,
	  useValueAndKey: true,
	  useMultipleProp: true,
	  useTextAlignProp: true,
	  useVerticalAlignProp: true,
	  useWidthProp: true,
	  customPropTypes: true,
	  eventStack: true,
	  getUnhandledProps: true,
	  getElementType: true,
	  htmlInputAttrs: true,
	  htmlInputEvents: true,
	  htmlInputProps: true,
	  htmlImageProps: true,
	  partitionHTMLProps: true,
	  isBrowser: true,
	  doesNodeContainClick: true,
	  leven: true,
	  createPaginationItems: true,
	  SUI: true,
	  numberToWordMap: true,
	  numberToWord: true,
	  normalizeOffset: true,
	  normalizeTransitionDuration: true,
	  objectDiff: true,
	  handleRef: true,
	  isRefObject: true
	};
	Object.defineProperty(exports, "AutoControlledComponent", {
	  enumerable: true,
	  get: function get() {
	    return _AutoControlledComponent2["default"];
	  }
	});
	Object.defineProperty(exports, "getChildMapping", {
	  enumerable: true,
	  get: function get() {
	    return _childMapping.getChildMapping;
	  }
	});
	Object.defineProperty(exports, "mergeChildMappings", {
	  enumerable: true,
	  get: function get() {
	    return _childMapping.mergeChildMappings;
	  }
	});
	Object.defineProperty(exports, "useKeyOnly", {
	  enumerable: true,
	  get: function get() {
	    return _classNameBuilders.useKeyOnly;
	  }
	});
	Object.defineProperty(exports, "useKeyOrValueAndKey", {
	  enumerable: true,
	  get: function get() {
	    return _classNameBuilders.useKeyOrValueAndKey;
	  }
	});
	Object.defineProperty(exports, "useValueAndKey", {
	  enumerable: true,
	  get: function get() {
	    return _classNameBuilders.useValueAndKey;
	  }
	});
	Object.defineProperty(exports, "useMultipleProp", {
	  enumerable: true,
	  get: function get() {
	    return _classNameBuilders.useMultipleProp;
	  }
	});
	Object.defineProperty(exports, "useTextAlignProp", {
	  enumerable: true,
	  get: function get() {
	    return _classNameBuilders.useTextAlignProp;
	  }
	});
	Object.defineProperty(exports, "useVerticalAlignProp", {
	  enumerable: true,
	  get: function get() {
	    return _classNameBuilders.useVerticalAlignProp;
	  }
	});
	Object.defineProperty(exports, "useWidthProp", {
	  enumerable: true,
	  get: function get() {
	    return _classNameBuilders.useWidthProp;
	  }
	});
	Object.defineProperty(exports, "eventStack", {
	  enumerable: true,
	  get: function get() {
	    return _eventStack2["default"];
	  }
	});
	Object.defineProperty(exports, "getUnhandledProps", {
	  enumerable: true,
	  get: function get() {
	    return _getUnhandledProps2["default"];
	  }
	});
	Object.defineProperty(exports, "getElementType", {
	  enumerable: true,
	  get: function get() {
	    return _getElementType2["default"];
	  }
	});
	Object.defineProperty(exports, "htmlInputAttrs", {
	  enumerable: true,
	  get: function get() {
	    return _htmlPropsUtils.htmlInputAttrs;
	  }
	});
	Object.defineProperty(exports, "htmlInputEvents", {
	  enumerable: true,
	  get: function get() {
	    return _htmlPropsUtils.htmlInputEvents;
	  }
	});
	Object.defineProperty(exports, "htmlInputProps", {
	  enumerable: true,
	  get: function get() {
	    return _htmlPropsUtils.htmlInputProps;
	  }
	});
	Object.defineProperty(exports, "htmlImageProps", {
	  enumerable: true,
	  get: function get() {
	    return _htmlPropsUtils.htmlImageProps;
	  }
	});
	Object.defineProperty(exports, "partitionHTMLProps", {
	  enumerable: true,
	  get: function get() {
	    return _htmlPropsUtils.partitionHTMLProps;
	  }
	});
	Object.defineProperty(exports, "isBrowser", {
	  enumerable: true,
	  get: function get() {
	    return _isBrowser2["default"];
	  }
	});
	Object.defineProperty(exports, "doesNodeContainClick", {
	  enumerable: true,
	  get: function get() {
	    return _doesNodeContainClick2["default"];
	  }
	});
	Object.defineProperty(exports, "leven", {
	  enumerable: true,
	  get: function get() {
	    return _leven2["default"];
	  }
	});
	Object.defineProperty(exports, "createPaginationItems", {
	  enumerable: true,
	  get: function get() {
	    return _createPaginationItems2["default"];
	  }
	});
	Object.defineProperty(exports, "numberToWordMap", {
	  enumerable: true,
	  get: function get() {
	    return _numberToWord.numberToWordMap;
	  }
	});
	Object.defineProperty(exports, "numberToWord", {
	  enumerable: true,
	  get: function get() {
	    return _numberToWord.numberToWord;
	  }
	});
	Object.defineProperty(exports, "normalizeOffset", {
	  enumerable: true,
	  get: function get() {
	    return _normalizeOffset2["default"];
	  }
	});
	Object.defineProperty(exports, "normalizeTransitionDuration", {
	  enumerable: true,
	  get: function get() {
	    return _normalizeTransitionDuration2["default"];
	  }
	});
	Object.defineProperty(exports, "objectDiff", {
	  enumerable: true,
	  get: function get() {
	    return _objectDiff2["default"];
	  }
	});
	Object.defineProperty(exports, "handleRef", {
	  enumerable: true,
	  get: function get() {
	    return _refUtils.handleRef;
	  }
	});
	Object.defineProperty(exports, "isRefObject", {
	  enumerable: true,
	  get: function get() {
	    return _refUtils.isRefObject;
	  }
	});
	exports.SUI = exports.customPropTypes = exports.childrenUtils = void 0;

	var _AutoControlledComponent2 = _interopRequireDefault(__webpack_require__(257));

	var _childMapping = __webpack_require__(348);

	var _childrenUtils = _interopRequireWildcard(__webpack_require__(358));

	exports.childrenUtils = _childrenUtils;

	var _classNameBuilders = __webpack_require__(365);

	var _customPropTypes = _interopRequireWildcard(__webpack_require__(367));

	exports.customPropTypes = _customPropTypes;

	var _eventStack2 = _interopRequireDefault(__webpack_require__(494));

	var _factories = __webpack_require__(499);

	Object.keys(_factories).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _factories[key];
	    }
	  });
	});

	var _getUnhandledProps2 = _interopRequireDefault(__webpack_require__(507));

	var _getElementType2 = _interopRequireDefault(__webpack_require__(508));

	var _htmlPropsUtils = __webpack_require__(509);

	var _isBrowser2 = _interopRequireDefault(__webpack_require__(513));

	var _doesNodeContainClick2 = _interopRequireDefault(__webpack_require__(514));

	var _leven2 = _interopRequireDefault(__webpack_require__(493));

	var _createPaginationItems2 = _interopRequireDefault(__webpack_require__(519));

	var _SUI = _interopRequireWildcard(__webpack_require__(528));

	exports.SUI = _SUI;

	var _numberToWord = __webpack_require__(366);

	var _normalizeOffset2 = _interopRequireDefault(__webpack_require__(529));

	var _normalizeTransitionDuration2 = _interopRequireDefault(__webpack_require__(530));

	var _objectDiff2 = _interopRequireDefault(__webpack_require__(531));

	var _refUtils = __webpack_require__(534);

/***/ }),
/* 257 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = exports.getAutoControlledStateValue = void 0;

	var _objectSpread2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/objectSpread\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _classCallCheck2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/classCallCheck\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _createClass2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/createClass\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/possibleConstructorReturn\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _getPrototypeOf3 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/getPrototypeOf\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _assertThisInitialized2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/assertThisInitialized\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _inherits2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/inherits\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _defineProperty2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/defineProperty\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _difference2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/difference\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _isUndefined2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/isUndefined\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _startsWith2 = _interopRequireDefault(__webpack_require__(278));

	var _filter2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/filter\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _isEmpty2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/isEmpty\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _keys2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/keys\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _intersection2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/intersection\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _has2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/has\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _each2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/each\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _invoke2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/invoke\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _react = __webpack_require__(3);

	var getDefaultPropName = function getDefaultPropName(prop) {
	  return "default".concat(prop[0].toUpperCase() + prop.slice(1));
	};
	/**
	 * Return the auto controlled state value for a give prop. The initial value is chosen in this order:
	 *  - regular props
	 *  - then, default props
	 *  - then, initial state
	 *  - then, `checked` defaults to false
	 *  - then, `value` defaults to '' or [] if props.multiple
	 *  - else, undefined
	 *
	 *  @param {string} propName A prop name
	 *  @param {object} [props] A props object
	 *  @param {object} [state] A state object
	 *  @param {boolean} [includeDefaults=false] Whether or not to heed the default props or initial state
	 */


	var getAutoControlledStateValue = function getAutoControlledStateValue(propName, props, state) {
	  var includeDefaults = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;
	  // regular props
	  var propValue = props[propName];
	  if (propValue !== undefined) return propValue;

	  if (includeDefaults) {
	    // defaultProps
	    var defaultProp = props[getDefaultPropName(propName)];
	    if (defaultProp !== undefined) return defaultProp; // initial state - state may be null or undefined

	    if (state) {
	      var initialState = state[propName];
	      if (initialState !== undefined) return initialState;
	    }
	  } // React doesn't allow changing from uncontrolled to controlled components,
	  // default checked/value if they were not present.


	  if (propName === 'checked') return false;
	  if (propName === 'value') return props.multiple ? [] : ''; // otherwise, undefined
	};

	exports.getAutoControlledStateValue = getAutoControlledStateValue;

	var AutoControlledComponent =
	/*#__PURE__*/
	function (_Component) {
	  (0, _inherits2["default"])(AutoControlledComponent, _Component);

	  function AutoControlledComponent() {
	    var _getPrototypeOf2;

	    var _this;

	    (0, _classCallCheck2["default"])(this, AutoControlledComponent);

	    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    _this = (0, _possibleConstructorReturn2["default"])(this, (_getPrototypeOf2 = (0, _getPrototypeOf3["default"])(AutoControlledComponent)).call.apply(_getPrototypeOf2, [this].concat(args)));
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "trySetState", function (maybeState, state) {
	      var autoControlledProps = _this.constructor.autoControlledProps;

	      if (process.env.NODE_ENV !== 'production') {
	        var name = _this.constructor.name; // warn about failed attempts to setState for keys not listed in autoControlledProps

	        var illegalKeys = (0, _difference2["default"])((0, _keys2["default"])(maybeState), autoControlledProps);

	        if (!(0, _isEmpty2["default"])(illegalKeys)) {
	          console.error(["".concat(name, " called trySetState() with controlled props: \"").concat(illegalKeys, "\"."), 'State will not be set.', 'Only props in static autoControlledProps will be set on state.'].join(' '));
	        }
	      }

	      var newState = Object.keys(maybeState).reduce(function (acc, prop) {
	        // ignore props defined by the parent
	        if (_this.props[prop] !== undefined) return acc; // ignore props not listed in auto controlled props

	        if (autoControlledProps.indexOf(prop) === -1) return acc;
	        acc[prop] = maybeState[prop];
	        return acc;
	      }, {});
	      if (state) newState = (0, _objectSpread2["default"])({}, newState, state);
	      if (Object.keys(newState).length > 0) _this.setState(newState);
	    });
	    var _autoControlledProps = _this.constructor.autoControlledProps;

	    var _state = (0, _invoke2["default"])((0, _assertThisInitialized2["default"])(_this), 'getInitialAutoControlledState', _this.props) || {};

	    if (process.env.NODE_ENV !== 'production') {
	      var _this$constructor = _this.constructor,
	          defaultProps = _this$constructor.defaultProps,
	          name = _this$constructor.name,
	          propTypes = _this$constructor.propTypes; // require static autoControlledProps

	      if (!_autoControlledProps) {
	        console.error("Auto controlled ".concat(name, " must specify a static autoControlledProps array."));
	      } // require propTypes


	      (0, _each2["default"])(_autoControlledProps, function (prop) {
	        var defaultProp = getDefaultPropName(prop); // regular prop

	        if (!(0, _has2["default"])(propTypes, defaultProp)) {
	          console.error("".concat(name, " is missing \"").concat(defaultProp, "\" propTypes validation for auto controlled prop \"").concat(prop, "\"."));
	        } // its default prop


	        if (!(0, _has2["default"])(propTypes, prop)) {
	          console.error("".concat(name, " is missing propTypes validation for auto controlled prop \"").concat(prop, "\"."));
	        }
	      }); // prevent autoControlledProps in defaultProps
	      //
	      // When setting state, auto controlled props values always win (so the parent can manage them).
	      // It is not reasonable to decipher the difference between props from the parent and defaultProps.
	      // Allowing defaultProps results in trySetState always deferring to the defaultProp value.
	      // Auto controlled props also listed in defaultProps can never be updated.
	      //
	      // To set defaults for an AutoControlled prop, you can set the initial state in the
	      // constructor or by using an ES7 property initializer:
	      // https://babeljs.io/blog/2015/06/07/react-on-es6-plus#property-initializers

	      var illegalDefaults = (0, _intersection2["default"])(_autoControlledProps, (0, _keys2["default"])(defaultProps));

	      if (!(0, _isEmpty2["default"])(illegalDefaults)) {
	        console.error(['Do not set defaultProps for autoControlledProps. You can set defaults by', 'setting state in the constructor or using an ES7 property initializer', '(https://babeljs.io/blog/2015/06/07/react-on-es6-plus#property-initializers)', "See ".concat(name, " props: \"").concat(illegalDefaults, "\".")].join(' '));
	      } // prevent listing defaultProps in autoControlledProps
	      //
	      // Default props are automatically handled.
	      // Listing defaults in autoControlledProps would result in allowing defaultDefaultValue props.


	      var illegalAutoControlled = (0, _filter2["default"])(_autoControlledProps, function (prop) {
	        return (0, _startsWith2["default"])(prop, 'default');
	      });

	      if (!(0, _isEmpty2["default"])(illegalAutoControlled)) {
	        console.error(['Do not add default props to autoControlledProps.', 'Default props are automatically handled.', "See ".concat(name, " autoControlledProps: \"").concat(illegalAutoControlled, "\".")].join(' '));
	      }
	    } // Auto controlled props are copied to state.
	    // Set initial state by copying auto controlled props to state.
	    // Also look for the default prop for any auto controlled props (foo => defaultFoo)
	    // so we can set initial values from defaults.


	    var initialAutoControlledState = _autoControlledProps.reduce(function (acc, prop) {
	      acc[prop] = getAutoControlledStateValue(prop, _this.props, _state, true);

	      if (process.env.NODE_ENV !== 'production') {
	        var defaultPropName = getDefaultPropName(prop);
	        var _name = _this.constructor.name; // prevent defaultFoo={} along side foo={}

	        if (!(0, _isUndefined2["default"])(_this.props[defaultPropName]) && !(0, _isUndefined2["default"])(_this.props[prop])) {
	          console.error("".concat(_name, " prop \"").concat(prop, "\" is auto controlled. Specify either ").concat(defaultPropName, " or ").concat(prop, ", but not both."));
	        }
	      }

	      return acc;
	    }, {});

	    _this.state = (0, _objectSpread2["default"])({}, _state, initialAutoControlledState);
	    return _this;
	  }

	  (0, _createClass2["default"])(AutoControlledComponent, [{
	    key: "componentWillReceiveProps",
	    value: function componentWillReceiveProps(nextProps) {
	      var autoControlledProps = this.constructor.autoControlledProps; // Solve the next state for autoControlledProps

	      var newState = autoControlledProps.reduce(function (acc, prop) {
	        var isNextDefined = !(0, _isUndefined2["default"])(nextProps[prop]); // if next is defined then use its value

	        if (isNextDefined) acc[prop] = nextProps[prop];
	        return acc;
	      }, {});
	      if (Object.keys(newState).length > 0) this.setState(newState);
	    }
	    /**
	     * Safely attempt to set state for props that might be controlled by the user.
	     * Second argument is a state object that is always passed to setState.
	     * @param {object} maybeState State that corresponds to controlled props.
	     * @param {object} [state] Actual state, useful when you also need to setState.
	     */

	  }]);
	  return AutoControlledComponent;
	}(_react.Component);

	exports["default"] = AutoControlledComponent;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 258 */,
/* 259 */,
/* 260 */,
/* 261 */,
/* 262 */,
/* 263 */,
/* 264 */,
/* 265 */,
/* 266 */,
/* 267 */,
/* 268 */,
/* 269 */,
/* 270 */,
/* 271 */,
/* 272 */,
/* 273 */,
/* 274 */,
/* 275 */,
/* 276 */,
/* 277 */,
/* 278 */
/***/ (function(module, exports, __webpack_require__) {

	var baseClamp = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"./_baseClamp\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())),
	    baseToString = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"./_baseToString\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())),
	    toInteger = __webpack_require__(280),
	    toString = __webpack_require__(227);

	/**
	 * Checks if `string` starts with the given target string.
	 *
	 * @static
	 * @memberOf _
	 * @since 3.0.0
	 * @category String
	 * @param {string} [string=''] The string to inspect.
	 * @param {string} [target] The string to search for.
	 * @param {number} [position=0] The position to search from.
	 * @returns {boolean} Returns `true` if `string` starts with `target`,
	 *  else `false`.
	 * @example
	 *
	 * _.startsWith('abc', 'a');
	 * // => true
	 *
	 * _.startsWith('abc', 'b');
	 * // => false
	 *
	 * _.startsWith('abc', 'b', 1);
	 * // => true
	 */
	function startsWith(string, target, position) {
	  string = toString(string);
	  position = position == null
	    ? 0
	    : baseClamp(toInteger(position), 0, string.length);

	  target = baseToString(target);
	  return string.slice(position, position + target.length) == target;
	}

	module.exports = startsWith;


/***/ }),
/* 279 */,
/* 280 */
/***/ (function(module, exports, __webpack_require__) {

	var toFinite = __webpack_require__(281);

	/**
	 * Converts `value` to an integer.
	 *
	 * **Note:** This method is loosely based on
	 * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to convert.
	 * @returns {number} Returns the converted integer.
	 * @example
	 *
	 * _.toInteger(3.2);
	 * // => 3
	 *
	 * _.toInteger(Number.MIN_VALUE);
	 * // => 0
	 *
	 * _.toInteger(Infinity);
	 * // => 1.7976931348623157e+308
	 *
	 * _.toInteger('3.2');
	 * // => 3
	 */
	function toInteger(value) {
	  var result = toFinite(value),
	      remainder = result % 1;

	  return result === result ? (remainder ? result - remainder : result) : 0;
	}

	module.exports = toInteger;


/***/ }),
/* 281 */
/***/ (function(module, exports, __webpack_require__) {

	var toNumber = __webpack_require__(282);

	/** Used as references for various `Number` constants. */
	var INFINITY = 1 / 0,
	    MAX_INTEGER = 1.7976931348623157e+308;

	/**
	 * Converts `value` to a finite number.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.12.0
	 * @category Lang
	 * @param {*} value The value to convert.
	 * @returns {number} Returns the converted number.
	 * @example
	 *
	 * _.toFinite(3.2);
	 * // => 3.2
	 *
	 * _.toFinite(Number.MIN_VALUE);
	 * // => 5e-324
	 *
	 * _.toFinite(Infinity);
	 * // => 1.7976931348623157e+308
	 *
	 * _.toFinite('3.2');
	 * // => 3.2
	 */
	function toFinite(value) {
	  if (!value) {
	    return value === 0 ? value : 0;
	  }
	  value = toNumber(value);
	  if (value === INFINITY || value === -INFINITY) {
	    var sign = (value < 0 ? -1 : 1);
	    return sign * MAX_INTEGER;
	  }
	  return value === value ? value : 0;
	}

	module.exports = toFinite;


/***/ }),
/* 282 */
/***/ (function(module, exports, __webpack_require__) {

	var isObject = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"./isObject\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())),
	    isSymbol = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"./isSymbol\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	/** Used as references for various `Number` constants. */
	var NAN = 0 / 0;

	/** Used to match leading and trailing whitespace. */
	var reTrim = /^\s+|\s+$/g;

	/** Used to detect bad signed hexadecimal string values. */
	var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;

	/** Used to detect binary string values. */
	var reIsBinary = /^0b[01]+$/i;

	/** Used to detect octal string values. */
	var reIsOctal = /^0o[0-7]+$/i;

	/** Built-in method references without a dependency on `root`. */
	var freeParseInt = parseInt;

	/**
	 * Converts `value` to a number.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to process.
	 * @returns {number} Returns the number.
	 * @example
	 *
	 * _.toNumber(3.2);
	 * // => 3.2
	 *
	 * _.toNumber(Number.MIN_VALUE);
	 * // => 5e-324
	 *
	 * _.toNumber(Infinity);
	 * // => Infinity
	 *
	 * _.toNumber('3.2');
	 * // => 3.2
	 */
	function toNumber(value) {
	  if (typeof value == 'number') {
	    return value;
	  }
	  if (isSymbol(value)) {
	    return NAN;
	  }
	  if (isObject(value)) {
	    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;
	    value = isObject(other) ? (other + '') : other;
	  }
	  if (typeof value != 'string') {
	    return value === 0 ? value : +value;
	  }
	  value = value.replace(reTrim, '');
	  var isBinary = reIsBinary.test(value);
	  return (isBinary || reIsOctal.test(value))
	    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)
	    : (reIsBadHex.test(value) ? NAN : +value);
	}

	module.exports = toNumber;


/***/ }),
/* 283 */,
/* 284 */,
/* 285 */,
/* 286 */,
/* 287 */,
/* 288 */,
/* 289 */,
/* 290 */,
/* 291 */,
/* 292 */,
/* 293 */,
/* 294 */,
/* 295 */,
/* 296 */,
/* 297 */,
/* 298 */,
/* 299 */,
/* 300 */,
/* 301 */,
/* 302 */,
/* 303 */,
/* 304 */,
/* 305 */,
/* 306 */,
/* 307 */,
/* 308 */,
/* 309 */,
/* 310 */,
/* 311 */,
/* 312 */,
/* 313 */,
/* 314 */,
/* 315 */,
/* 316 */,
/* 317 */,
/* 318 */,
/* 319 */,
/* 320 */,
/* 321 */,
/* 322 */,
/* 323 */,
/* 324 */,
/* 325 */,
/* 326 */,
/* 327 */,
/* 328 */,
/* 329 */,
/* 330 */,
/* 331 */,
/* 332 */,
/* 333 */,
/* 334 */,
/* 335 */,
/* 336 */,
/* 337 */,
/* 338 */,
/* 339 */,
/* 340 */,
/* 341 */,
/* 342 */,
/* 343 */,
/* 344 */,
/* 345 */,
/* 346 */,
/* 347 */,
/* 348 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.mergeChildMappings = exports.getChildMapping = void 0;

	var _slicedToArray2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/slicedToArray\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _has2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/has\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _keys2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/keys\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _forEach2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/forEach\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _filter2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/filter\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _keyBy2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/keyBy\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _react = __webpack_require__(3);

	/**
	 * Given `this.props.children`, return an object mapping key to child.
	 *
	 * @param {object} children Element's children
	 * @return {object} Mapping of key to child
	 */
	var getChildMapping = function getChildMapping(children) {
	  return (0, _keyBy2["default"])((0, _filter2["default"])(_react.Children.toArray(children), _react.isValidElement), 'key');
	};

	exports.getChildMapping = getChildMapping;

	var getPendingKeys = function getPendingKeys(prev, next) {
	  var nextKeysPending = {};
	  var pendingKeys = [];
	  (0, _forEach2["default"])((0, _keys2["default"])(prev), function (prevKey) {
	    if (!(0, _has2["default"])(next, prevKey)) {
	      pendingKeys.push(prevKey);
	      return;
	    }

	    if (pendingKeys.length) {
	      nextKeysPending[prevKey] = pendingKeys;
	      pendingKeys = [];
	    }
	  });
	  return [nextKeysPending, pendingKeys];
	};

	var getValue = function getValue(key, prev, next) {
	  return (0, _has2["default"])(next, key) ? next[key] : prev[key];
	};
	/**
	 * When you're adding or removing children some may be added or removed in the same render pass. We want to show *both*
	 * since we want to simultaneously animate elements in and out. This function takes a previous set of keys and a new set
	 * of keys and merges them with its best guess of the correct ordering.
	 *
	 * @param {object} prev Prev children as returned from `getChildMapping()`
	 * @param {object} next Next children as returned from `getChildMapping()`
	 * @return {object} A key set that contains all keys in `prev` and all keys in `next` in a reasonable order
	 */


	var mergeChildMappings = function mergeChildMappings() {
	  var prev = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	  var next = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
	  var childMapping = {};

	  var _getPendingKeys = getPendingKeys(prev, next),
	      _getPendingKeys2 = (0, _slicedToArray2["default"])(_getPendingKeys, 2),
	      nextKeysPending = _getPendingKeys2[0],
	      pendingKeys = _getPendingKeys2[1];

	  (0, _forEach2["default"])((0, _keys2["default"])(next), function (nextKey) {
	    if ((0, _has2["default"])(nextKeysPending, nextKey)) {
	      (0, _forEach2["default"])(nextKeysPending[nextKey], function (pendingKey) {
	        childMapping[pendingKey] = getValue(pendingKey, prev, next);
	      });
	    }

	    childMapping[nextKey] = getValue(nextKey, prev, next);
	  });
	  (0, _forEach2["default"])(pendingKeys, function (pendingKey) {
	    childMapping[pendingKey] = getValue(pendingKey, prev, next);
	  });
	  return childMapping;
	};

	exports.mergeChildMappings = mergeChildMappings;

/***/ }),
/* 349 */,
/* 350 */,
/* 351 */,
/* 352 */,
/* 353 */,
/* 354 */,
/* 355 */,
/* 356 */,
/* 357 */,
/* 358 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.isNil = exports.findByType = exports.someByType = void 0;

	var _find2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/find\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _some2 = _interopRequireDefault(__webpack_require__(362));

	var _react = __webpack_require__(3);

	/**
	 * Determine if child by type exists in children.
	 * @param {Object} children The children prop of a component.
	 * @param {string|Function} type An html tag name string or React component.
	 * @returns {Boolean}
	 */
	var someByType = function someByType(children, type) {
	  return (0, _some2["default"])(_react.Children.toArray(children), {
	    type: type
	  });
	};
	/**
	 * Find child by type.
	 * @param {Object} children The children prop of a component.
	 * @param {string|Function} type An html tag name string or React component.
	 * @returns {undefined|Object}
	 */


	exports.someByType = someByType;

	var findByType = function findByType(children, type) {
	  return (0, _find2["default"])(_react.Children.toArray(children), {
	    type: type
	  });
	};
	/**
	 * Tests if children are nil in React and Preact.
	 * @param {Object} children The children prop of a component.
	 * @returns {Boolean}
	 */


	exports.findByType = findByType;

	var isNil = function isNil(children) {
	  return children === null || children === undefined || Array.isArray(children) && children.length === 0;
	};

	exports.isNil = isNil;

/***/ }),
/* 359 */,
/* 360 */,
/* 361 */,
/* 362 */
/***/ (function(module, exports, __webpack_require__) {

	var arraySome = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"./_arraySome\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())),
	    baseIteratee = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"./_baseIteratee\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())),
	    baseSome = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"./_baseSome\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())),
	    isArray = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"./isArray\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())),
	    isIterateeCall = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"./_isIterateeCall\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	/**
	 * Checks if `predicate` returns truthy for **any** element of `collection`.
	 * Iteration is stopped once `predicate` returns truthy. The predicate is
	 * invoked with three arguments: (value, index|key, collection).
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Collection
	 * @param {Array|Object} collection The collection to iterate over.
	 * @param {Function} [predicate=_.identity] The function invoked per iteration.
	 * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	 * @returns {boolean} Returns `true` if any element passes the predicate check,
	 *  else `false`.
	 * @example
	 *
	 * _.some([null, 0, 'yes', false], Boolean);
	 * // => true
	 *
	 * var users = [
	 *   { 'user': 'barney', 'active': true },
	 *   { 'user': 'fred',   'active': false }
	 * ];
	 *
	 * // The `_.matches` iteratee shorthand.
	 * _.some(users, { 'user': 'barney', 'active': false });
	 * // => false
	 *
	 * // The `_.matchesProperty` iteratee shorthand.
	 * _.some(users, ['active', false]);
	 * // => true
	 *
	 * // The `_.property` iteratee shorthand.
	 * _.some(users, 'active');
	 * // => true
	 */
	function some(collection, predicate, guard) {
	  var func = isArray(collection) ? arraySome : baseSome;
	  if (guard && isIterateeCall(collection, predicate, guard)) {
	    predicate = undefined;
	  }
	  return func(collection, baseIteratee(predicate, 3));
	}

	module.exports = some;


/***/ }),
/* 363 */,
/* 364 */,
/* 365 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.useWidthProp = exports.useVerticalAlignProp = exports.useTextAlignProp = exports.useMultipleProp = exports.useKeyOrValueAndKey = exports.useValueAndKey = exports.useKeyOnly = void 0;

	var _typeof2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/typeof\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _numberToWord = __webpack_require__(366);

	/*
	 * There are 3 prop patterns used to build up the className for a component.
	 * Each utility here is meant for use in a classnames() argument.
	 *
	 * There is no util for valueOnly() because it would simply return val.
	 * Use the prop value inline instead.
	 *   <Label size='big' />
	 *   <div class="ui big label"></div>
	 */

	/**
	 * Props where only the prop key is used in the className.
	 * @param {*} val A props value
	 * @param {string} key A props key
	 *
	 * @example
	 * <Label tag />
	 * <div class="ui tag label"></div>
	 */
	var useKeyOnly = function useKeyOnly(val, key) {
	  return val && key;
	};
	/**
	 * Props that require both a key and value to create a className.
	 * @param {*} val A props value
	 * @param {string} key A props key
	 *
	 * @example
	 * <Label corner='left' />
	 * <div class="ui left corner label"></div>
	 */


	exports.useKeyOnly = useKeyOnly;

	var useValueAndKey = function useValueAndKey(val, key) {
	  return val && val !== true && "".concat(val, " ").concat(key);
	};
	/**
	 * Props whose key will be used in className, or value and key.
	 * @param {*} val A props value
	 * @param {string} key A props key
	 *
	 * @example Key Only
	 * <Label pointing />
	 * <div class="ui pointing label"></div>
	 *
	 * @example Key and Value
	 * <Label pointing='left' />
	 * <div class="ui left pointing label"></div>
	 */


	exports.useValueAndKey = useValueAndKey;

	var useKeyOrValueAndKey = function useKeyOrValueAndKey(val, key) {
	  return val && (val === true ? key : "".concat(val, " ").concat(key));
	}; //
	// Prop to className exceptions
	//

	/**
	 * The "multiple" prop implements control of visibility and reserved classes for Grid subcomponents.
	 *
	 * @param {*} val The value of the "multiple" prop
	 * @param {*} key A props key
	 *
	 * @example
	 * <Grid.Row only='mobile' />
	 * <Grid.Row only='mobile tablet' />
	 * <div class="mobile only row"></div>
	 * <div class="mobile only tablet only row"></div>
	 */


	exports.useKeyOrValueAndKey = useKeyOrValueAndKey;

	var useMultipleProp = function useMultipleProp(val, key) {
	  if (!val || val === true) return null;
	  return val.replace('large screen', 'large-screen').replace(/ vertically/g, '-vertically').split(' ').map(function (prop) {
	    return "".concat(prop.replace('-', ' '), " ").concat(key);
	  }).join(' ');
	};
	/**
	 * The "textAlign" prop follows the useValueAndKey except when the value is "justified'.
	 * In this case, only the class "justified" is used, ignoring the "aligned" class.
	 * @param {*} val The value of the "textAlign" prop
	 *
	 * @example
	 * <Container textAlign='justified' />
	 * <div class="ui justified container"></div>
	 *
	 * @example
	 * <Container textAlign='left' />
	 * <div class="ui left aligned container"></div>
	 */


	exports.useMultipleProp = useMultipleProp;

	var useTextAlignProp = function useTextAlignProp(val) {
	  return val === 'justified' ? 'justified' : useValueAndKey(val, 'aligned');
	};
	/**
	 * The "verticalAlign" prop follows the useValueAndKey.
	 *
	 * @param {*} val The value of the "verticalAlign" prop
	 *
	 * @example
	 * <Grid verticalAlign='middle' />
	 * <div class="ui middle aligned grid"></div>
	 */


	exports.useTextAlignProp = useTextAlignProp;

	var useVerticalAlignProp = function useVerticalAlignProp(val) {
	  return useValueAndKey(val, 'aligned');
	};
	/**
	 * Create "X", "X wide" and "equal width" classNames.
	 * "X" is a numberToWord value and "wide" is configurable.
	 * @param {*} val The prop value
	 * @param {string} [widthClass=''] The class
	 * @param {boolean} [canEqual=false] Flag that indicates possibility of "equal" value
	 *
	 * @example
	 * <Grid columns='equal' />
	 * <div class="ui equal width grid"></div>
	 *
	 * <Form widths='equal' />
	 * <div class="ui equal width form"></div>
	 *
	 * <FieldGroup widths='equal' />
	 * <div class="equal width fields"></div>
	 *
	 * @example
	 * <Grid columns={4} />
	 * <div class="ui four column grid"></div>
	 */


	exports.useVerticalAlignProp = useVerticalAlignProp;

	var useWidthProp = function useWidthProp(val) {
	  var widthClass = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';
	  var canEqual = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;

	  if (canEqual && val === 'equal') {
	    return 'equal width';
	  }

	  var valType = (0, _typeof2["default"])(val);

	  if ((valType === 'string' || valType === 'number') && widthClass) {
	    return "".concat((0, _numberToWord.numberToWord)(val), " ").concat(widthClass);
	  }

	  return (0, _numberToWord.numberToWord)(val);
	};

	exports.useWidthProp = useWidthProp;

/***/ }),
/* 366 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.numberToWord = numberToWord;
	exports.numberToWordMap = void 0;

	var _typeof2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/typeof\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var numberToWordMap = {
	  1: 'one',
	  2: 'two',
	  3: 'three',
	  4: 'four',
	  5: 'five',
	  6: 'six',
	  7: 'seven',
	  8: 'eight',
	  9: 'nine',
	  10: 'ten',
	  11: 'eleven',
	  12: 'twelve',
	  13: 'thirteen',
	  14: 'fourteen',
	  15: 'fifteen',
	  16: 'sixteen'
	  /**
	   * Return the number word for numbers 1-16.
	   * Returns strings or numbers as is if there is no corresponding word.
	   * Returns an empty string if value is not a string or number.
	   * @param {string|number} value The value to convert to a word.
	   * @returns {string}
	   */

	};
	exports.numberToWordMap = numberToWordMap;

	function numberToWord(value) {
	  var type = (0, _typeof2["default"])(value);

	  if (type === 'string' || type === 'number') {
	    return numberToWordMap[value] || value;
	  }

	  return '';
	}

/***/ }),
/* 367 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.ref = exports.refObject = exports.deprecate = exports.collectionShorthand = exports.itemShorthand = exports.contentShorthand = exports.multipleProp = exports.demand = exports.givenProps = exports.some = exports.every = exports.disallow = exports.suggest = exports.domNode = exports.as = void 0;

	var _toConsumableArray2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/toConsumableArray\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _difference2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/fp/difference\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _trim2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/fp/trim\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _isObject2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/fp/isObject\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _pick2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/fp/pick\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _keys2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/fp/keys\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _isPlainObject2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/fp/isPlainObject\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _isFunction2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/fp/isFunction\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _compact2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/fp/compact\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _isNil2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/fp/isNil\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _take2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/fp/take\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _sortBy2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/fp/sortBy\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _sum2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/fp/sum\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _min2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/fp/min\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _map2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/fp/map\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _flow2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/fp/flow\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _memoize2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/fp/memoize\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _propTypes = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"prop-types\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _leven = _interopRequireDefault(__webpack_require__(493));

	var typeOf = function typeOf() {
	  var _Object$prototype$toS;

	  return (_Object$prototype$toS = Object.prototype.toString).call.apply(_Object$prototype$toS, arguments);
	};
	/**
	 * Ensure a component can render as a give prop value.
	 */


	var as = function as() {
	  return _propTypes["default"].oneOfType([_propTypes["default"].func, _propTypes["default"].object, _propTypes["default"].string, _propTypes["default"].symbol]).apply(void 0, arguments);
	};
	/**
	 * Ensure a prop is a valid DOM node.
	 */


	exports.as = as;

	var domNode = function domNode(props, propName) {
	  // skip if prop is undefined
	  if (props[propName] === undefined) return; // skip if prop is valid

	  if (props[propName] instanceof Element) return;
	  return new Error("Invalid prop \"".concat(propName, "\" supplied, expected a DOM node."));
	};
	/**
	 * Similar to PropTypes.oneOf but shows closest matches.
	 * Word order is ignored allowing `left chevron` to match `chevron left`.
	 * Useful for very large lists of options (e.g. Icon name, Flag name, etc.)
	 * @param {string[]} suggestions An array of allowed values.
	 */


	exports.domNode = domNode;

	var suggest = function suggest(suggestions) {
	  if (!Array.isArray(suggestions)) {
	    throw new Error('Invalid argument supplied to suggest, expected an instance of array.');
	  }
	  /* eslint-disable max-nested-callbacks */


	  var findBestSuggestions = (0, _memoize2["default"])(function (str) {
	    var propValueWords = str.split(' ');
	    return (0, _flow2["default"])((0, _map2["default"])(function (suggestion) {
	      var suggestionWords = suggestion.split(' ');
	      var propValueScore = (0, _flow2["default"])((0, _map2["default"])(function (x) {
	        return (0, _map2["default"])(function (y) {
	          return (0, _leven["default"])(x, y);
	        }, suggestionWords);
	      }), (0, _map2["default"])(_min2["default"]), _sum2["default"])(propValueWords);
	      var suggestionScore = (0, _flow2["default"])((0, _map2["default"])(function (x) {
	        return (0, _map2["default"])(function (y) {
	          return (0, _leven["default"])(x, y);
	        }, propValueWords);
	      }), (0, _map2["default"])(_min2["default"]), _sum2["default"])(suggestionWords);
	      return {
	        suggestion: suggestion,
	        score: propValueScore + suggestionScore
	      };
	    }), (0, _sortBy2["default"])(['score', 'suggestion']), (0, _take2["default"])(3))(suggestions);
	  });
	  /* eslint-enable max-nested-callbacks */
	  // Convert the suggestions list into a hash map for O(n) lookup times. Ensure
	  // the words in each key are sorted alphabetically so that we have a consistent
	  // way of looking up a value in the map, i.e. we can sort the words in the
	  // incoming propValue and look that up without having to check all permutations.

	  var suggestionsLookup = suggestions.reduce(function (acc, key) {
	    acc[key.split(' ').sort().join(' ')] = true;
	    return acc;
	  }, {});
	  return function (props, propName, componentName) {
	    var propValue = props[propName]; // skip if prop is undefined or is included in the suggestions

	    if (!propValue || suggestionsLookup[propValue]) return; // check if the words were correct but ordered differently.
	    // Since we're matching for classNames we need to allow any word order
	    // to pass validation, e.g. `left chevron` vs `chevron left`.

	    var propValueSorted = propValue.split(' ').sort().join(' ');
	    if (suggestionsLookup[propValueSorted]) return; // find best suggestions

	    var bestMatches = findBestSuggestions(propValue); // skip if a match scored 0

	    if (bestMatches.some(function (x) {
	      return x.score === 0;
	    })) return;
	    return new Error(["Invalid prop `".concat(propName, "` of value `").concat(propValue, "` supplied to `").concat(componentName, "`."), "\n\nInstead of `".concat(propValue, "`, did you mean:"), bestMatches.map(function (x) {
	      return "\n  - ".concat(x.suggestion);
	    }).join(''), '\n'].join(''));
	  };
	};
	/**
	 * Disallow other props from being defined with this prop.
	 * @param {string[]} disallowedProps An array of props that cannot be used with this prop.
	 */


	exports.suggest = suggest;

	var disallow = function disallow(disallowedProps) {
	  return function (props, propName, componentName) {
	    if (!Array.isArray(disallowedProps)) {
	      throw new Error(['Invalid argument supplied to disallow, expected an instance of array.', " See `".concat(propName, "` prop in `").concat(componentName, "`.")].join(''));
	    } // skip if prop is undefined


	    if ((0, _isNil2["default"])(props[propName]) || props[propName] === false) return; // find disallowed props with values

	    var disallowed = disallowedProps.reduce(function (acc, disallowedProp) {
	      if (!(0, _isNil2["default"])(props[disallowedProp]) && props[disallowedProp] !== false) {
	        return [].concat((0, _toConsumableArray2["default"])(acc), [disallowedProp]);
	      }

	      return acc;
	    }, []);

	    if (disallowed.length > 0) {
	      return new Error(["Prop `".concat(propName, "` in `").concat(componentName, "` conflicts with props: `").concat(disallowed.join('`, `'), "`."), 'They cannot be defined together, choose one or the other.'].join(' '));
	    }
	  };
	};
	/**
	 * Ensure a prop adherers to multiple prop type validators.
	 * @param {function[]} validators An array of propType functions.
	 */


	exports.disallow = disallow;

	var every = function every(validators) {
	  return function (props, propName, componentName) {
	    for (var _len = arguments.length, rest = new Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {
	      rest[_key - 3] = arguments[_key];
	    }

	    if (!Array.isArray(validators)) {
	      throw new Error(['Invalid argument supplied to every, expected an instance of array.', "See `".concat(propName, "` prop in `").concat(componentName, "`.")].join(' '));
	    }

	    var errors = (0, _flow2["default"])((0, _map2["default"])(function (validator) {
	      if (typeof validator !== 'function') {
	        throw new Error("every() argument \"validators\" should contain functions, found: ".concat(typeOf(validator), "."));
	      }

	      return validator.apply(void 0, [props, propName, componentName].concat(rest));
	    }), _compact2["default"])(validators); // we can only return one error at a time

	    return errors[0];
	  };
	};
	/**
	 * Ensure a prop adherers to at least one of the given prop type validators.
	 * @param {function[]} validators An array of propType functions.
	 */


	exports.every = every;

	var some = function some(validators) {
	  return function (props, propName, componentName) {
	    for (var _len2 = arguments.length, rest = new Array(_len2 > 3 ? _len2 - 3 : 0), _key2 = 3; _key2 < _len2; _key2++) {
	      rest[_key2 - 3] = arguments[_key2];
	    }

	    if (!Array.isArray(validators)) {
	      throw new Error(['Invalid argument supplied to some, expected an instance of array.', "See `".concat(propName, "` prop in `").concat(componentName, "`.")].join(' '));
	    }

	    var errors = (0, _compact2["default"])((0, _map2["default"])(validators, function (validator) {
	      if (!(0, _isFunction2["default"])(validator)) {
	        throw new Error("some() argument \"validators\" should contain functions, found: ".concat(typeOf(validator), "."));
	      }

	      return validator.apply(void 0, [props, propName, componentName].concat(rest));
	    })); // fail only if all validators failed

	    if (errors.length === validators.length) {
	      var error = new Error('One of these validators must pass:');
	      error.message += "\n".concat((0, _map2["default"])(errors, function (err, i) {
	        return "[".concat(i + 1, "]: ").concat(err.message);
	      }).join('\n'));
	      return error;
	    }
	  };
	};
	/**
	 * Ensure a validator passes only when a component has a given propsShape.
	 * @param {object} propsShape An object describing the prop shape.
	 * @param {function} validator A propType function.
	 */


	exports.some = some;

	var givenProps = function givenProps(propsShape, validator) {
	  return function (props, propName, componentName) {
	    for (var _len3 = arguments.length, rest = new Array(_len3 > 3 ? _len3 - 3 : 0), _key3 = 3; _key3 < _len3; _key3++) {
	      rest[_key3 - 3] = arguments[_key3];
	    }

	    if (!(0, _isPlainObject2["default"])(propsShape)) {
	      throw new Error(['Invalid argument supplied to givenProps, expected an object.', "See `".concat(propName, "` prop in `").concat(componentName, "`.")].join(' '));
	    }

	    if (typeof validator !== 'function') {
	      throw new Error(['Invalid argument supplied to givenProps, expected a function.', "See `".concat(propName, "` prop in `").concat(componentName, "`.")].join(' '));
	    }

	    var shouldValidate = (0, _keys2["default"])(propsShape).every(function (key) {
	      var val = propsShape[key]; // require propShape validators to pass or prop values to match

	      return typeof val === 'function' ? !val.apply(void 0, [props, key, componentName].concat(rest)) : val === props[propName];
	    });
	    if (!shouldValidate) return;
	    var error = validator.apply(void 0, [props, propName, componentName].concat(rest));

	    if (error) {
	      // poor mans shallow pretty print, prevents JSON circular reference errors
	      var prettyProps = "{ ".concat((0, _keys2["default"])((0, _pick2["default"])((0, _keys2["default"])(propsShape), props)).map(function (key) {
	        var val = props[key];
	        var renderedValue = val;
	        if (typeof val === 'string') renderedValue = "\"".concat(val, "\"");else if (Array.isArray(val)) renderedValue = "[".concat(val.join(', '), "]");else if ((0, _isObject2["default"])(val)) renderedValue = '{...}';
	        return "".concat(key, ": ").concat(renderedValue);
	      }).join(', '), " }");
	      error.message = "Given props ".concat(prettyProps, ": ").concat(error.message);
	      return error;
	    }
	  };
	};
	/**
	 * Define prop dependencies by requiring other props.
	 * @param {string[]} requiredProps An array of required prop names.
	 */


	exports.givenProps = givenProps;

	var demand = function demand(requiredProps) {
	  return function (props, propName, componentName) {
	    if (!Array.isArray(requiredProps)) {
	      throw new Error(['Invalid `requiredProps` argument supplied to require, expected an instance of array.', " See `".concat(propName, "` prop in `").concat(componentName, "`.")].join(''));
	    } // skip if prop is undefined


	    if (props[propName] === undefined) return;
	    var missingRequired = requiredProps.filter(function (requiredProp) {
	      return props[requiredProp] === undefined;
	    });

	    if (missingRequired.length > 0) {
	      return new Error("`".concat(propName, "` prop in `").concat(componentName, "` requires props: `").concat(missingRequired.join('`, `'), "`."));
	    }
	  };
	};
	/**
	 * Ensure an multiple prop contains a string with only possible values.
	 * @param {string[]} possible An array of possible values to prop.
	 */


	exports.demand = demand;

	var multipleProp = function multipleProp(possible) {
	  return function (props, propName, componentName) {
	    if (!Array.isArray(possible)) {
	      throw new Error(['Invalid argument supplied to some, expected an instance of array.', "See `".concat(propName, "` prop in `").concat(componentName, "`.")].join(' '));
	    }

	    var propValue = props[propName]; // skip if prop is undefined

	    if ((0, _isNil2["default"])(propValue) || propValue === false) return;
	    var values = propValue.replace('large screen', 'large-screen').replace(/ vertically/g, '-vertically').split(' ').map(function (val) {
	      return (0, _trim2["default"])(val).replace('-', ' ');
	    });
	    var invalid = (0, _difference2["default"])(values, possible); // fail only if there are invalid values

	    if (invalid.length > 0) {
	      return new Error("`".concat(propName, "` prop in `").concat(componentName, "` has invalid values: `").concat(invalid.join('`, `'), "`."));
	    }
	  };
	};
	/**
	 * Ensure a component can render as a node passed as a prop value in place of children.
	 */


	exports.multipleProp = multipleProp;

	var contentShorthand = function contentShorthand() {
	  return every([disallow(['children']), _propTypes["default"].node]).apply(void 0, arguments);
	};
	/**
	 * Item shorthand is a description of a component that can be a literal,
	 * a props object, or an element.
	 */


	exports.contentShorthand = contentShorthand;

	var itemShorthand = function itemShorthand() {
	  return every([disallow(['children']), _propTypes["default"].oneOfType([_propTypes["default"].func, _propTypes["default"].node, _propTypes["default"].object, _propTypes["default"].arrayOf(_propTypes["default"].oneOfType([_propTypes["default"].node, _propTypes["default"].object]))])]).apply(void 0, arguments);
	};
	/**
	 * Collection shorthand ensures a prop is an array of item shorthand.
	 */


	exports.itemShorthand = itemShorthand;

	var collectionShorthand = function collectionShorthand() {
	  return every([disallow(['children']), _propTypes["default"].arrayOf(itemShorthand)]).apply(void 0, arguments);
	};
	/**
	 * Show a deprecated warning for component props with a help message and optional validator.
	 * @param {string} help A help message to display with the deprecation warning.
	 * @param {function} [validator] A propType function.
	 */


	exports.collectionShorthand = collectionShorthand;

	var deprecate = function deprecate(help, validator) {
	  return function (props, propName, componentName) {
	    if (typeof help !== 'string') {
	      throw new Error(['Invalid `help` argument supplied to deprecate, expected a string.', "See `".concat(propName, "` prop in `").concat(componentName, "`.")].join(' '));
	    } // skip if prop is undefined


	    if (props[propName] === undefined) return; // deprecation error and help

	    var error = new Error("The `".concat(propName, "` prop in `").concat(componentName, "` is deprecated."));
	    if (help) error.message += " ".concat(help); // add optional validation error message

	    if (validator) {
	      if (typeof validator === 'function') {
	        for (var _len4 = arguments.length, args = new Array(_len4 > 3 ? _len4 - 3 : 0), _key4 = 3; _key4 < _len4; _key4++) {
	          args[_key4 - 3] = arguments[_key4];
	        }

	        var validationError = validator.apply(void 0, [props, propName, componentName].concat(args));

	        if (validationError) {
	          error.message = "".concat(error.message, " ").concat(validationError.message);
	        }
	      } else {
	        throw new Error(['Invalid argument supplied to deprecate, expected a function.', "See `".concat(propName, "` prop in `").concat(componentName, "`.")].join(' '));
	      }
	    }

	    return error;
	  };
	};
	/** A checker that matches the React.RefObject type. */


	exports.deprecate = deprecate;

	var refObject = _propTypes["default"].shape({
	  current: _propTypes["default"].object
	});
	/** A checker that matches the React.Ref type. */


	exports.refObject = refObject;

	var ref = _propTypes["default"].oneOfType([_propTypes["default"].func, refObject]);

	exports.ref = ref;

/***/ }),
/* 368 */,
/* 369 */,
/* 370 */,
/* 371 */,
/* 372 */,
/* 373 */,
/* 374 */,
/* 375 */,
/* 376 */,
/* 377 */,
/* 378 */,
/* 379 */,
/* 380 */,
/* 381 */,
/* 382 */,
/* 383 */,
/* 384 */,
/* 385 */,
/* 386 */,
/* 387 */,
/* 388 */,
/* 389 */,
/* 390 */,
/* 391 */,
/* 392 */,
/* 393 */,
/* 394 */,
/* 395 */,
/* 396 */,
/* 397 */,
/* 398 */,
/* 399 */,
/* 400 */,
/* 401 */,
/* 402 */,
/* 403 */,
/* 404 */,
/* 405 */,
/* 406 */,
/* 407 */,
/* 408 */,
/* 409 */,
/* 410 */,
/* 411 */,
/* 412 */,
/* 413 */,
/* 414 */,
/* 415 */,
/* 416 */,
/* 417 */,
/* 418 */,
/* 419 */,
/* 420 */,
/* 421 */,
/* 422 */,
/* 423 */,
/* 424 */,
/* 425 */,
/* 426 */,
/* 427 */,
/* 428 */,
/* 429 */,
/* 430 */,
/* 431 */,
/* 432 */,
/* 433 */,
/* 434 */,
/* 435 */,
/* 436 */,
/* 437 */,
/* 438 */,
/* 439 */,
/* 440 */,
/* 441 */,
/* 442 */,
/* 443 */,
/* 444 */,
/* 445 */,
/* 446 */,
/* 447 */,
/* 448 */,
/* 449 */,
/* 450 */,
/* 451 */,
/* 452 */,
/* 453 */,
/* 454 */,
/* 455 */,
/* 456 */,
/* 457 */,
/* 458 */,
/* 459 */,
/* 460 */
/***/ (function(module, exports, __webpack_require__) {

	var basePick = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"./_basePick\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())),
	    flatRest = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"./_flatRest\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	/**
	 * Creates an object composed of the picked `object` properties.
	 *
	 * @static
	 * @since 0.1.0
	 * @memberOf _
	 * @category Object
	 * @param {Object} object The source object.
	 * @param {...(string|string[])} [paths] The property paths to pick.
	 * @returns {Object} Returns the new object.
	 * @example
	 *
	 * var object = { 'a': 1, 'b': '2', 'c': 3 };
	 *
	 * _.pick(object, ['a', 'c']);
	 * // => { 'a': 1, 'c': 3 }
	 */
	var pick = flatRest(function(object, paths) {
	  return object == null ? {} : basePick(object, paths);
	});

	module.exports = pick;


/***/ }),
/* 461 */,
/* 462 */,
/* 463 */,
/* 464 */,
/* 465 */,
/* 466 */,
/* 467 */,
/* 468 */,
/* 469 */,
/* 470 */,
/* 471 */,
/* 472 */,
/* 473 */,
/* 474 */,
/* 475 */,
/* 476 */,
/* 477 */,
/* 478 */,
/* 479 */,
/* 480 */,
/* 481 */,
/* 482 */,
/* 483 */,
/* 484 */,
/* 485 */,
/* 486 */,
/* 487 */,
/* 488 */,
/* 489 */,
/* 490 */,
/* 491 */,
/* 492 */,
/* 493 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	// Copy of sindre's leven, wrapped in dead code elimination for production
	// https://github.com/sindresorhus/leven/blob/master/index.js

	/* eslint-disable complexity, import/no-mutable-exports, no-multi-assign, no-nested-ternary, no-plusplus */
	var leven = function leven() {
	  return 0;
	};

	if (process.env.NODE_ENV !== 'production') {
	  var arr = [];
	  var charCodeCache = [];

	  leven = function leven(a, b) {
	    if (a === b) return 0;
	    var aLen = a.length;
	    var bLen = b.length;
	    if (aLen === 0) return bLen;
	    if (bLen === 0) return aLen;
	    var bCharCode;
	    var ret;
	    var tmp;
	    var tmp2;
	    var i = 0;
	    var j = 0;

	    while (i < aLen) {
	      charCodeCache[i] = a.charCodeAt(i);
	      arr[i] = ++i;
	    }

	    while (j < bLen) {
	      bCharCode = b.charCodeAt(j);
	      tmp = j++;
	      ret = j;

	      for (i = 0; i < aLen; i++) {
	        tmp2 = bCharCode === charCodeCache[i] ? tmp : tmp + 1;
	        tmp = arr[i];
	        ret = arr[i] = tmp > ret ? tmp2 > ret ? ret + 1 : tmp2 : tmp2 > tmp ? tmp + 1 : tmp2;
	      }
	    }

	    return ret;
	  };
	}

	var _default = leven;
	exports["default"] = _default;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 494 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _eventStack = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@semantic-ui-react/event-stack\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	var _default = _eventStack.instance;
	exports["default"] = _default;

/***/ }),
/* 495 */,
/* 496 */,
/* 497 */,
/* 498 */,
/* 499 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";

	var _interopRequireWildcard = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireWildcard\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.createShorthand = createShorthand;
	exports.createShorthandFactory = createShorthandFactory;
	exports.createHTMLParagraph = exports.createHTMLLabel = exports.createHTMLInput = exports.createHTMLImage = exports.createHTMLIframe = exports.createHTMLDivision = void 0;

	var _objectSpread2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/objectSpread\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _typeof2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/typeof\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _uniq2 = _interopRequireDefault(__webpack_require__(500));

	var _isArray2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/isArray\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _isPlainObject2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/isPlainObject\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _isFunction2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/isFunction\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _isNumber2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/isNumber\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _isString2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/isString\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _isBoolean2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/isBoolean\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _isNil2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/isNil\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _classnames = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"classnames\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _react = _interopRequireWildcard(__webpack_require__(3));

	// ============================================================
	// Factories
	// ============================================================

	/**
	 * A more robust React.createElement. It can create elements from primitive values.
	 *
	 * @param {function|string} Component A ReactClass or string
	 * @param {function} mapValueToProps A function that maps a primitive value to the Component props
	 * @param {string|object|function} val The value to create a ReactElement from
	 * @param {Object} [options={}]
	 * @param {object} [options.defaultProps={}] Default props object
	 * @param {object|function} [options.overrideProps={}] Override props object or function (called with regular props)
	 * @param {boolean} [options.autoGenerateKey=true] Whether or not automatic key generation is allowed
	 * @returns {object|null}
	 */
	function createShorthand(Component, mapValueToProps, val) {
	  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};

	  if (typeof Component !== 'function' && typeof Component !== 'string') {
	    throw new Error('createShorthand() Component must be a string or function.');
	  } // short circuit noop values


	  if ((0, _isNil2["default"])(val) || (0, _isBoolean2["default"])(val)) return null;
	  var valIsString = (0, _isString2["default"])(val);
	  var valIsNumber = (0, _isNumber2["default"])(val);
	  var valIsFunction = (0, _isFunction2["default"])(val);
	  var valIsReactElement = (0, _react.isValidElement)(val);
	  var valIsPropsObject = (0, _isPlainObject2["default"])(val);
	  var valIsPrimitiveValue = valIsString || valIsNumber || (0, _isArray2["default"])(val); // unhandled type return null

	  /* eslint-disable no-console */

	  if (!valIsFunction && !valIsReactElement && !valIsPropsObject && !valIsPrimitiveValue) {
	    if (process.env.NODE_ENV !== 'production') {
	      console.error(['Shorthand value must be a string|number|array|object|ReactElement|function.', ' Use null|undefined|boolean for none', " Received ".concat((0, _typeof2["default"])(val), ".")].join(''));
	    }

	    return null;
	  }
	  /* eslint-enable no-console */
	  // ----------------------------------------
	  // Build up props
	  // ----------------------------------------


	  var _options$defaultProps = options.defaultProps,
	      defaultProps = _options$defaultProps === void 0 ? {} : _options$defaultProps; // User's props

	  var usersProps = valIsReactElement && val.props || valIsPropsObject && val || valIsPrimitiveValue && mapValueToProps(val); // Override props

	  var _options$overrideProp = options.overrideProps,
	      overrideProps = _options$overrideProp === void 0 ? {} : _options$overrideProp;
	  overrideProps = (0, _isFunction2["default"])(overrideProps) ? overrideProps((0, _objectSpread2["default"])({}, defaultProps, usersProps)) : overrideProps; // Merge props

	  /* eslint-disable react/prop-types */

	  var props = (0, _objectSpread2["default"])({}, defaultProps, usersProps, overrideProps); // Merge className

	  if (defaultProps.className || overrideProps.className || usersProps.className) {
	    var mergedClassesNames = (0, _classnames["default"])(defaultProps.className, overrideProps.className, usersProps.className);
	    props.className = (0, _uniq2["default"])(mergedClassesNames.split(' ')).join(' ');
	  } // Merge style


	  if (defaultProps.style || overrideProps.style || usersProps.style) {
	    props.style = (0, _objectSpread2["default"])({}, defaultProps.style, usersProps.style, overrideProps.style);
	  } // ----------------------------------------
	  // Get key
	  // ----------------------------------------
	  // Use key, childKey, or generate key


	  if ((0, _isNil2["default"])(props.key)) {
	    var childKey = props.childKey;
	    var _options$autoGenerate = options.autoGenerateKey,
	        autoGenerateKey = _options$autoGenerate === void 0 ? true : _options$autoGenerate;

	    if (!(0, _isNil2["default"])(childKey)) {
	      // apply and consume the childKey
	      props.key = typeof childKey === 'function' ? childKey(props) : childKey;
	      delete props.childKey;
	    } else if (autoGenerateKey && (valIsString || valIsNumber)) {
	      // use string/number shorthand values as the key
	      props.key = val;
	    }
	  } // ----------------------------------------
	  // Create Element
	  // ----------------------------------------
	  // Clone ReactElements


	  if (valIsReactElement) return (0, _react.cloneElement)(val, props); // Create ReactElements from built up props

	  if (valIsPrimitiveValue || valIsPropsObject) return _react["default"].createElement(Component, props); // Call functions with args similar to createElement()

	  if (valIsFunction) return val(Component, props, props.children);
	  /* eslint-enable react/prop-types */
	} // ============================================================
	// Factory Creators
	// ============================================================

	/**
	 * Creates a `createShorthand` function that is waiting for a value and options.
	 *
	 * @param {function|string} Component A ReactClass or string
	 * @param {function} mapValueToProps A function that maps a primitive value to the Component props
	 * @returns {function} A shorthand factory function waiting for `val` and `defaultProps`.
	 */


	createShorthand.handledProps = [];

	function createShorthandFactory(Component, mapValueToProps) {
	  if (typeof Component !== 'function' && typeof Component !== 'string') {
	    throw new Error('createShorthandFactory() Component must be a string or function.');
	  }

	  return function (val, options) {
	    return createShorthand(Component, mapValueToProps, val, options);
	  };
	} // ============================================================
	// HTML Factories
	// ============================================================


	var createHTMLDivision = createShorthandFactory('div', function (val) {
	  return {
	    children: val
	  };
	});
	exports.createHTMLDivision = createHTMLDivision;
	var createHTMLIframe = createShorthandFactory('iframe', function (src) {
	  return {
	    src: src
	  };
	});
	exports.createHTMLIframe = createHTMLIframe;
	var createHTMLImage = createShorthandFactory('img', function (val) {
	  return {
	    src: val
	  };
	});
	exports.createHTMLImage = createHTMLImage;
	var createHTMLInput = createShorthandFactory('input', function (val) {
	  return {
	    type: val
	  };
	});
	exports.createHTMLInput = createHTMLInput;
	var createHTMLLabel = createShorthandFactory('label', function (val) {
	  return {
	    children: val
	  };
	});
	exports.createHTMLLabel = createHTMLLabel;
	var createHTMLParagraph = createShorthandFactory('p', function (val) {
	  return {
	    children: val
	  };
	});
	exports.createHTMLParagraph = createHTMLParagraph;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 500 */
/***/ (function(module, exports, __webpack_require__) {

	var baseUniq = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"./_baseUniq\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	/**
	 * Creates a duplicate-free version of an array, using
	 * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
	 * for equality comparisons, in which only the first occurrence of each element
	 * is kept. The order of result values is determined by the order they occur
	 * in the array.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Array
	 * @param {Array} array The array to inspect.
	 * @returns {Array} Returns the new duplicate free array.
	 * @example
	 *
	 * _.uniq([2, 1, 2]);
	 * // => [2, 1]
	 */
	function uniq(array) {
	  return (array && array.length) ? baseUniq(array) : [];
	}

	module.exports = uniq;


/***/ }),
/* 501 */,
/* 502 */,
/* 503 */,
/* 504 */,
/* 505 */,
/* 506 */,
/* 507 */
/***/ (function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	/**
	 * Returns an object consisting of props beyond the scope of the Component.
	 * Useful for getting and spreading unknown props from the user.
	 * @param {function} Component A function or ReactClass.
	 * @param {object} props A ReactElement props object
	 * @returns {{}} A shallow copy of the prop object
	 */
	var getUnhandledProps = function getUnhandledProps(Component, props) {
	  // Note that `handledProps` are generated automatically during build with `babel-plugin-transform-react-handled-props`
	  var _Component$handledPro = Component.handledProps,
	      handledProps = _Component$handledPro === void 0 ? [] : _Component$handledPro;
	  return Object.keys(props).reduce(function (acc, prop) {
	    if (prop === 'childKey') return acc;
	    if (handledProps.indexOf(prop) === -1) acc[prop] = props[prop];
	    return acc;
	  }, {});
	};

	var _default = getUnhandledProps;
	exports["default"] = _default;

/***/ }),
/* 508 */
/***/ (function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	/**
	 * Returns a createElement() type based on the props of the Component.
	 * Useful for calculating what type a component should render as.
	 *
	 * @param {function} Component A function or ReactClass.
	 * @param {object} props A ReactElement props object
	 * @param {function} [getDefault] A function that returns a default element type.
	 * @returns {string|function} A ReactElement type
	 */
	function getElementType(Component, props, getDefault) {
	  var _Component$defaultPro = Component.defaultProps,
	      defaultProps = _Component$defaultPro === void 0 ? {} : _Component$defaultPro; // ----------------------------------------
	  // user defined "as" element type

	  if (props.as && props.as !== defaultProps.as) return props.as; // ----------------------------------------
	  // computed default element type

	  if (getDefault) {
	    var computedDefault = getDefault();
	    if (computedDefault) return computedDefault;
	  } // ----------------------------------------
	  // infer anchor links


	  if (props.href) return 'a'; // ----------------------------------------
	  // use defaultProp or 'div'

	  return defaultProps.as || 'div';
	}

	var _default = getElementType;
	exports["default"] = _default;

/***/ }),
/* 509 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.partitionHTMLProps = exports.htmlImageProps = exports.htmlInputProps = exports.htmlInputEvents = exports.htmlInputAttrs = void 0;

	var _includes2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/includes\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _forEach2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/forEach\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var htmlInputAttrs = [// REACT
	'selected', 'defaultValue', 'defaultChecked', // LIMITED HTML PROPS
	'accept', 'autoCapitalize', 'autoComplete', 'autoCorrect', 'autoFocus', 'checked', 'disabled', 'form', 'id', 'lang', 'list', 'max', 'maxLength', 'min', 'minLength', 'multiple', 'name', 'pattern', 'placeholder', 'readOnly', 'required', 'step', 'title', 'type', 'value'];
	exports.htmlInputAttrs = htmlInputAttrs;
	var htmlInputEvents = [// EVENTS
	// keyboard
	'onKeyDown', 'onKeyPress', 'onKeyUp', // focus
	'onFocus', 'onBlur', // form
	'onChange', 'onInput', // mouse
	'onClick', 'onContextMenu', 'onDrag', 'onDragEnd', 'onDragEnter', 'onDragExit', 'onDragLeave', 'onDragOver', 'onDragStart', 'onDrop', 'onMouseDown', 'onMouseEnter', 'onMouseLeave', 'onMouseMove', 'onMouseOut', 'onMouseOver', 'onMouseUp', // selection
	'onSelect', // touch
	'onTouchCancel', 'onTouchEnd', 'onTouchMove', 'onTouchStart'];
	exports.htmlInputEvents = htmlInputEvents;
	var htmlInputProps = [].concat(htmlInputAttrs, htmlInputEvents);
	exports.htmlInputProps = htmlInputProps;
	var htmlImageProps = ['alt', 'height', 'src', 'srcSet', 'width'];
	/**
	 * Returns an array of objects consisting of: props of html input element and rest.
	 * @param {object} props A ReactElement props object
	 * @param {Object} [options={}]
	 * @param {Array} [options.htmlProps] An array of html input props
	 * @param {boolean} [options.includeAria] Includes all input props that starts with "aria-"
	 * @returns {[{}, {}]} An array of objects
	 */

	exports.htmlImageProps = htmlImageProps;

	var partitionHTMLProps = function partitionHTMLProps(props) {
	  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
	  var _options$htmlProps = options.htmlProps,
	      htmlProps = _options$htmlProps === void 0 ? htmlInputProps : _options$htmlProps,
	      _options$includeAria = options.includeAria,
	      includeAria = _options$includeAria === void 0 ? true : _options$includeAria;
	  var inputProps = {};
	  var rest = {};
	  (0, _forEach2["default"])(props, function (val, prop) {
	    var possibleAria = includeAria && (/^aria-.*$/.test(prop) || prop === 'role');
	    var target = (0, _includes2["default"])(htmlProps, prop) || possibleAria ? inputProps : rest;
	    target[prop] = val;
	  });
	  return [inputProps, rest];
	};

	exports.partitionHTMLProps = partitionHTMLProps;

/***/ }),
/* 510 */,
/* 511 */
/***/ (function(module, exports, __webpack_require__) {

	var baseValues = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"./_baseValues\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())),
	    keys = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"./keys\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	/**
	 * Creates an array of the own enumerable string keyed property values of `object`.
	 *
	 * **Note:** Non-object values are coerced to objects.
	 *
	 * @static
	 * @since 0.1.0
	 * @memberOf _
	 * @category Object
	 * @param {Object} object The object to query.
	 * @returns {Array} Returns the array of property values.
	 * @example
	 *
	 * function Foo() {
	 *   this.a = 1;
	 *   this.b = 2;
	 * }
	 *
	 * Foo.prototype.c = 3;
	 *
	 * _.values(new Foo);
	 * // => [1, 2] (iteration order is not guaranteed)
	 *
	 * _.values('hi');
	 * // => ['h', 'i']
	 */
	function values(object) {
	  return object == null ? [] : baseValues(object, keys(object));
	}

	module.exports = values;


/***/ }),
/* 512 */,
/* 513 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _typeof2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/typeof\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _isNil2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/isNil\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var hasDocument = (typeof document === "undefined" ? "undefined" : (0, _typeof2["default"])(document)) === 'object' && document !== null;
	var hasWindow = (typeof window === "undefined" ? "undefined" : (0, _typeof2["default"])(window)) === 'object' && window !== null && window.self === window; // eslint-disable-next-line no-confusing-arrow

	var isBrowser = function isBrowser() {
	  return !(0, _isNil2["default"])(isBrowser.override) ? isBrowser.override : hasDocument && hasWindow;
	};

	var _default = isBrowser;
	exports["default"] = _default;

/***/ }),
/* 514 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _inRange2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/inRange\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _first3 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/first\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _invoke2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/invoke\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _isNil2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/isNil\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _some2 = _interopRequireDefault(__webpack_require__(362));

	/**
	 * Determines if a click's coordinates are within the bounds of a node.
	 *
	 * @see https://github.com/Semantic-Org/Semantic-UI-React/pull/2384
	 *
	 * @param {object} node - A DOM node.
	 * @param {object} e - A SyntheticEvent or DOM Event.
	 * @returns {boolean}
	 */
	var doesNodeContainClick = function doesNodeContainClick(node, e) {
	  if ((0, _some2["default"])([e, node], _isNil2["default"])) return false; // if there is an e.target and it is in the document, use a simple node.contains() check

	  if (e.target) {
	    (0, _invoke2["default"])(e.target, 'setAttribute', 'data-suir-click-target', true);

	    if (document.querySelector('[data-suir-click-target=true]')) {
	      (0, _invoke2["default"])(e.target, 'removeAttribute', 'data-suir-click-target');
	      return node.contains(e.target);
	    }
	  } // Below logic handles cases where the e.target is no longer in the document.
	  // The result of the click likely has removed the e.target node.
	  // Instead of node.contains(), we'll identify the click by X/Y position.
	  // return early if the event properties aren't available
	  // prevent measuring the node and repainting if we don't need to


	  var clientX = e.clientX,
	      clientY = e.clientY;
	  if ((0, _some2["default"])([clientX, clientY], _isNil2["default"])) return false; // false if the node is not visible

	  var clientRects = node.getClientRects(); // Heads Up!
	  // getClientRects returns a DOMRectList, not an array nor a plain object
	  // We explicitly avoid _.isEmpty and check .length to cover all possible shapes

	  if (!node.offsetWidth || !node.offsetHeight || !clientRects || !clientRects.length) return false; // false if the node doesn't have a valid bounding rect

	  var _first2 = (0, _first3["default"])(clientRects),
	      top = _first2.top,
	      bottom = _first2.bottom,
	      left = _first2.left,
	      right = _first2.right;

	  if ((0, _some2["default"])([top, bottom, left, right], _isNil2["default"])) return false; // we add a small decimal to the upper bound just to make it inclusive
	  // don't add an whole pixel (1) as the event/node values may be decimal sensitive

	  return (0, _inRange2["default"])(clientY, top, bottom + 0.001) && (0, _inRange2["default"])(clientX, left, right + 0.001);
	};

	var _default = doesNodeContainClick;
	exports["default"] = _default;

/***/ }),
/* 515 */,
/* 516 */,
/* 517 */,
/* 518 */,
/* 519 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	Object.defineProperty(exports, "default", {
	  enumerable: true,
	  get: function get() {
	    return _createPaginationItems["default"];
	  }
	});

	var _createPaginationItems = _interopRequireDefault(__webpack_require__(520));

/***/ }),
/* 520 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _toConsumableArray2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/toConsumableArray\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _itemFactories = __webpack_require__(521);

	var _rangeFactories = __webpack_require__(522);

	var _paginationUtils = __webpack_require__(527);

	/**
	 * @param {object} rawOptions
	 * @param {number|string} rawOptions.activePage
	 * @param {number|string} rawOptions.boundaryRange Number of always visible pages at the beginning and end.
	 * @param {boolean} rawOptions.hideEllipsis Marks if ellipsis should be hidden.
	 * @param {number|string} rawOptions.siblingRange Number of always visible pages before and after the current one.
	 * @param {number|string} rawOptions.totalPages Total number of pages.
	 */
	var createPaginationItems = function createPaginationItems(rawOptions) {
	  var options = (0, _paginationUtils.typifyOptions)(rawOptions);
	  var activePage = options.activePage,
	      totalPages = options.totalPages;
	  var pageFactory = (0, _itemFactories.createPageFactory)(activePage);
	  var innerRange = (0, _paginationUtils.isSimplePagination)(options) ? (0, _rangeFactories.createSimpleRange)(1, totalPages, pageFactory) : (0, _rangeFactories.createComplexRange)(options, pageFactory);
	  return [(0, _itemFactories.createFirstPage)(), (0, _itemFactories.createPrevItem)(activePage)].concat((0, _toConsumableArray2["default"])(innerRange), [(0, _itemFactories.createNextItem)(activePage, totalPages), (0, _itemFactories.createLastItem)(totalPages)]);
	};

	var _default = createPaginationItems;
	exports["default"] = _default;

/***/ }),
/* 521 */
/***/ (function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.createLastItem = exports.createNextItem = exports.createPageFactory = exports.createPrevItem = exports.createFirstPage = exports.createEllipsisItem = void 0;

	/**
	 * @param {number} pageNumber
	 * @return {Object}
	 */
	var createEllipsisItem = function createEllipsisItem(pageNumber) {
	  return {
	    active: false,
	    type: 'ellipsisItem',
	    value: pageNumber
	  };
	};
	/**
	 * @return {Object}
	 */


	exports.createEllipsisItem = createEllipsisItem;

	var createFirstPage = function createFirstPage() {
	  return {
	    active: false,
	    type: 'firstItem',
	    value: 1
	  };
	};
	/**
	 * @param {number} activePage
	 * @return {Object}
	 */


	exports.createFirstPage = createFirstPage;

	var createPrevItem = function createPrevItem(activePage) {
	  return {
	    active: false,
	    type: 'prevItem',
	    value: Math.max(1, activePage - 1)
	  };
	};
	/**
	 * @param {number} activePage
	 * @return {function}
	 */


	exports.createPrevItem = createPrevItem;

	var createPageFactory = function createPageFactory(activePage) {
	  return function (pageNumber) {
	    return {
	      active: activePage === pageNumber,
	      type: 'pageItem',
	      value: pageNumber
	    };
	  };
	};
	/**
	 * @param {number} activePage
	 * @param {number} totalPages
	 * @return {Object}
	 */


	exports.createPageFactory = createPageFactory;

	var createNextItem = function createNextItem(activePage, totalPages) {
	  return {
	    active: false,
	    type: 'nextItem',
	    value: Math.min(activePage + 1, totalPages)
	  };
	};
	/**
	 * @param {number} totalPages
	 * @return {Object}
	 */


	exports.createNextItem = createNextItem;

	var createLastItem = function createLastItem(totalPages) {
	  return {
	    active: false,
	    type: 'lastItem',
	    value: totalPages
	  };
	};

	exports.createLastItem = createLastItem;

/***/ }),
/* 522 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.createComplexRange = exports.createSimpleRange = void 0;

	var _toConsumableArray2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/toConsumableArray\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _range2 = _interopRequireDefault(__webpack_require__(523));

	var _map2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/map\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _suffixFactories = __webpack_require__(526);

	var createSimpleRange = function createSimpleRange(start, end, pageFactory) {
	  return (0, _map2["default"])((0, _range2["default"])(start, end + 1), pageFactory);
	};

	exports.createSimpleRange = createSimpleRange;

	var createComplexRange = function createComplexRange(options, pageFactory) {
	  var activePage = options.activePage,
	      boundaryRange = options.boundaryRange,
	      hideEllipsis = options.hideEllipsis,
	      siblingRange = options.siblingRange,
	      totalPages = options.totalPages;
	  var ellipsisSize = hideEllipsis ? 0 : 1;
	  var firstGroupEnd = boundaryRange;
	  var firstGroup = createSimpleRange(1, firstGroupEnd, pageFactory);
	  var lastGroupStart = totalPages + 1 - boundaryRange;
	  var lastGroup = createSimpleRange(lastGroupStart, totalPages, pageFactory);
	  var innerGroupStart = Math.min(Math.max(activePage - siblingRange, firstGroupEnd + ellipsisSize + 1), lastGroupStart - ellipsisSize - 2 * siblingRange - 1);
	  var innerGroupEnd = innerGroupStart + 2 * siblingRange;
	  var innerGroup = createSimpleRange(innerGroupStart, innerGroupEnd, pageFactory);
	  return [].concat((0, _toConsumableArray2["default"])(firstGroup), [!hideEllipsis && (0, _suffixFactories.createInnerPrefix)(firstGroupEnd, innerGroupStart, pageFactory)], (0, _toConsumableArray2["default"])(innerGroup), [!hideEllipsis && (0, _suffixFactories.createInnerSuffix)(innerGroupEnd, lastGroupStart, pageFactory)], (0, _toConsumableArray2["default"])(lastGroup)).filter(Boolean);
	};

	exports.createComplexRange = createComplexRange;

/***/ }),
/* 523 */
/***/ (function(module, exports, __webpack_require__) {

	var createRange = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"./_createRange\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	/**
	 * Creates an array of numbers (positive and/or negative) progressing from
	 * `start` up to, but not including, `end`. A step of `-1` is used if a negative
	 * `start` is specified without an `end` or `step`. If `end` is not specified,
	 * it's set to `start` with `start` then set to `0`.
	 *
	 * **Note:** JavaScript follows the IEEE-754 standard for resolving
	 * floating-point values which can produce unexpected results.
	 *
	 * @static
	 * @since 0.1.0
	 * @memberOf _
	 * @category Util
	 * @param {number} [start=0] The start of the range.
	 * @param {number} end The end of the range.
	 * @param {number} [step=1] The value to increment or decrement by.
	 * @returns {Array} Returns the range of numbers.
	 * @see _.inRange, _.rangeRight
	 * @example
	 *
	 * _.range(4);
	 * // => [0, 1, 2, 3]
	 *
	 * _.range(-4);
	 * // => [0, -1, -2, -3]
	 *
	 * _.range(1, 5);
	 * // => [1, 2, 3, 4]
	 *
	 * _.range(0, 20, 5);
	 * // => [0, 5, 10, 15]
	 *
	 * _.range(0, -4, -1);
	 * // => [0, -1, -2, -3]
	 *
	 * _.range(1, 4, 0);
	 * // => [1, 1, 1]
	 *
	 * _.range(0);
	 * // => []
	 */
	var range = createRange();

	module.exports = range;


/***/ }),
/* 524 */,
/* 525 */,
/* 526 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.createInnerSuffix = exports.createInnerPrefix = void 0;

	var _itemFactories = __webpack_require__(521);

	var createInnerPrefix = function createInnerPrefix(firstGroupEnd, innerGroupStart, pageFactory) {
	  var prefixPage = innerGroupStart - 1;
	  var showEllipsis = prefixPage !== firstGroupEnd + 1;
	  var prefixFactory = showEllipsis ? _itemFactories.createEllipsisItem : pageFactory;
	  return prefixFactory(prefixPage);
	};

	exports.createInnerPrefix = createInnerPrefix;

	var createInnerSuffix = function createInnerSuffix(innerGroupEnd, lastGroupStart, pageFactory) {
	  var suffixPage = innerGroupEnd + 1;
	  var showEllipsis = suffixPage !== lastGroupStart - 1;
	  var suffixFactory = showEllipsis ? _itemFactories.createEllipsisItem : pageFactory;
	  return suffixFactory(suffixPage);
	};

	exports.createInnerSuffix = createInnerSuffix;

/***/ }),
/* 527 */
/***/ (function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.typifyOptions = exports.isSimplePagination = void 0;

	/**
	 * Checks the possibility of using simple range generation, if number of generated pages is equal
	 * or greater than total pages to show.
	 *
	 * @param {object} options
	 * @param {number} options.boundaryRange Number of always visible pages at the beginning and end.
	 * @param {number} options.siblingRange Number of always visible pages before and after the current one.
	 * @param {number} options.totalPages Total number of pages.
	 * @return {boolean}
	 */
	var isSimplePagination = function isSimplePagination(_ref) {
	  var boundaryRange = _ref.boundaryRange,
	      hideEllipsis = _ref.hideEllipsis,
	      siblingRange = _ref.siblingRange,
	      totalPages = _ref.totalPages;
	  var boundaryRangeSize = 2 * boundaryRange;
	  var ellipsisSize = hideEllipsis ? 0 : 2;
	  var siblingRangeSize = 2 * siblingRange;
	  return 1 + ellipsisSize + siblingRangeSize + boundaryRangeSize >= totalPages;
	};

	exports.isSimplePagination = isSimplePagination;

	var typifyOptions = function typifyOptions(_ref2) {
	  var activePage = _ref2.activePage,
	      boundaryRange = _ref2.boundaryRange,
	      hideEllipsis = _ref2.hideEllipsis,
	      siblingRange = _ref2.siblingRange,
	      totalPages = _ref2.totalPages;
	  return {
	    activePage: +activePage,
	    boundaryRange: +boundaryRange,
	    hideEllipsis: !!hideEllipsis,
	    siblingRange: +siblingRange,
	    totalPages: +totalPages
	  };
	};

	exports.typifyOptions = typifyOptions;

/***/ }),
/* 528 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.ALL_ICONS_IN_ALL_CONTEXTS = exports.COMPONENT_CONTEXT_SPECIFIC_ICONS = exports.ICONS_AND_ALIASES = exports.ICON_ALIASES = exports.ICONS = exports.BRANDS = exports.WRITING = exports.VEHICLES = exports.USERS_PEOPLE = exports.STATUS = exports.SPORTS = exports.SPINNERS = exports.SHAPES = exports.PAYMENTS_SHOPPING = exports.OBJECTS = exports.MEDICAL = exports.MAPS = exports.LOGISTICS = exports.INTERFACES = exports.IMAGES = exports.HEALTH = exports.HANDS_GESTURES = exports.GENDERS = exports.FILES = exports.EDITORS = exports.DESIGN = exports.DATE_TIME = exports.CURRENCY = exports.COMPUTERS = exports.COMMUNICATION = exports.CODE = exports.CHESS = exports.BUSINESS = exports.AUDIO_VIDEO = exports.ARROWS = exports.ACCESSIBILITY = exports.TRANSITIONS = exports.STATIC_TRANSITIONS = exports.DIRECTIONAL_TRANSITIONS = exports.WIDTHS = exports.VISIBILITY = exports.VERTICAL_ALIGNMENTS = exports.TEXT_ALIGNMENTS = exports.SIZES = exports.FLOATS = exports.COLORS = void 0;

	var _toConsumableArray2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/toConsumableArray\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _uniq2 = _interopRequireDefault(__webpack_require__(500));

	var _values2 = _interopRequireDefault(__webpack_require__(511));

	var _keys2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/keys\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _numberToWord = __webpack_require__(366);

	var COLORS = ['red', 'orange', 'yellow', 'olive', 'green', 'teal', 'blue', 'violet', 'purple', 'pink', 'brown', 'grey', 'black'];
	exports.COLORS = COLORS;
	var FLOATS = ['left', 'right'];
	exports.FLOATS = FLOATS;
	var SIZES = ['mini', 'tiny', 'small', 'medium', 'large', 'big', 'huge', 'massive'];
	exports.SIZES = SIZES;
	var TEXT_ALIGNMENTS = ['left', 'center', 'right', 'justified'];
	exports.TEXT_ALIGNMENTS = TEXT_ALIGNMENTS;
	var VERTICAL_ALIGNMENTS = ['bottom', 'middle', 'top'];
	exports.VERTICAL_ALIGNMENTS = VERTICAL_ALIGNMENTS;
	var VISIBILITY = ['mobile', 'tablet', 'computer', 'large screen', 'widescreen'];
	exports.VISIBILITY = VISIBILITY;
	var WIDTHS = [].concat((0, _toConsumableArray2["default"])((0, _keys2["default"])(_numberToWord.numberToWordMap)), (0, _toConsumableArray2["default"])((0, _keys2["default"])(_numberToWord.numberToWordMap).map(Number)), (0, _toConsumableArray2["default"])((0, _values2["default"])(_numberToWord.numberToWordMap)));
	exports.WIDTHS = WIDTHS;
	var DIRECTIONAL_TRANSITIONS = ['browse', 'browse right', 'drop', 'fade', 'fade up', 'fade down', 'fade left', 'fade right', 'fly up', 'fly down', 'fly left', 'fly right', 'horizontal flip', 'vertical flip', 'scale', 'slide up', 'slide down', 'slide left', 'slide right', 'swing up', 'swing down', 'swing left', 'swing right', 'zoom'];
	exports.DIRECTIONAL_TRANSITIONS = DIRECTIONAL_TRANSITIONS;
	var STATIC_TRANSITIONS = ['jiggle', 'flash', 'shake', 'pulse', 'tada', 'bounce', 'glow'];
	exports.STATIC_TRANSITIONS = STATIC_TRANSITIONS;
	var TRANSITIONS = [].concat(DIRECTIONAL_TRANSITIONS, STATIC_TRANSITIONS); // Generated from:
	// https://github.com/Semantic-Org/Semantic-UI/blob/master/dist/components/icon.css

	exports.TRANSITIONS = TRANSITIONS;
	var ACCESSIBILITY = ['american sign language interpreting', 'assistive listening systems', 'audio description', 'blind', 'braille', 'closed captioning', 'closed captioning outline', 'deaf', 'low vision', 'phone volume', 'question circle', 'question circle outline', 'sign language', 'tty', 'universal access', 'wheelchair'];
	exports.ACCESSIBILITY = ACCESSIBILITY;
	var ARROWS = ['angle double down', 'angle double left', 'angle double right', 'angle double up', 'angle down', 'angle left', 'angle right', 'angle up', 'arrow alternate circle down', 'arrow alternate circle down outline', 'arrow alternate circle left', 'arrow alternate circle left outline', 'arrow alternate circle right', 'arrow alternate circle right outline', 'arrow alternate circle up', 'arrow alternate circle up outline', 'arrow circle down', 'arrow circle left', 'arrow circle right', 'arrow circle up', 'arrow down', 'arrow left', 'arrow right', 'arrow up', 'arrows alternate', 'arrows alternate horizontal', 'arrows alternate vertical', 'caret down', 'caret left', 'caret right', 'caret square down', 'caret square down outline', 'caret square left', 'caret square left outline', 'caret square right', 'caret square right outline', 'caret square up', 'caret square up outline', 'caret up', 'cart arrow down', 'chart line', 'chevron circle down', 'chevron circle left', 'chevron circle right', 'chevron circle up', 'chevron down', 'chevron left', 'chevron right', 'chevron up', 'cloud download', 'cloud upload', 'download', 'exchange', 'expand arrows alternate', 'external alternate', 'external square alternate', 'hand point down', 'hand point down outline', 'hand point left', 'hand point left outline', 'hand point right', 'hand point right outline', 'hand point up', 'hand point up outline', 'hand pointer', 'hand pointer outline', 'history', 'level down alternate', 'level up alternate', 'location arrow', 'long arrow alternate down', 'long arrow alternate left', 'long arrow alternate right', 'long arrow alternate up', 'mouse pointer', 'play', 'random', 'recycle', 'redo', 'redo alternate', 'reply', 'reply all', 'retweet', 'share', 'share square', 'share square outline', 'sign-in', 'sign-out', 'sign-in alternate', 'sign-out alternate', 'sort', 'sort alphabet down', 'sort alphabet up', 'sort amount down', 'sort amount up', 'sort down', 'sort numeric down', 'sort numeric up', 'sort up', 'sync', 'sync alternate', 'text height', 'text width', 'undo', 'undo alternate', 'upload', 'zoom-in', 'zoom-out'];
	exports.ARROWS = ARROWS;
	var AUDIO_VIDEO = ['audio description', 'backward', 'circle', 'circle outline', 'closed captioning', 'closed captioning outline', 'compress', 'eject', 'expand', 'expand arrows alternate', 'fast backward', 'fast forward', 'file audio', 'file audio outline', 'file video', 'file video outline', 'film', 'forward', 'headphones', 'microphone', 'microphone slash', 'music', 'pause', 'pause circle', 'pause circle outline', 'phone volume', 'play', 'play circle', 'play circle outline', 'podcast', 'random', 'redo', 'redo alternate', 'rss', 'rss square', 'step backward', 'step forward', 'stop', 'stop circle', 'stop circle outline', 'sync', 'sync alternate', 'undo', 'undo alternate', 'video', 'volume down', 'volume off', 'volume up'];
	exports.AUDIO_VIDEO = AUDIO_VIDEO;
	var BUSINESS = ['address book', 'address book outline', 'address card', 'address card outline', 'archive', 'balance scale', 'birthday cake', 'book', 'briefcase', 'building', 'building outline', 'bullhorn', 'bullseye', 'calculator', 'calendar', 'calendar outline', 'calendar alternate', 'calendar alternate outline', 'certificate', 'chart area', 'chart bar', 'chart bar outline', 'chart line', 'chart pie', 'clipboard', 'clipboard outline', 'coffee', 'columns', 'compass', 'compass outline', 'copy', 'copy outline', 'copyright', 'copyright outline', 'cut', 'edit', 'edit outline', 'envelope', 'envelope outline', 'envelope open', 'envelope open outline', 'envelope square', 'eraser', 'fax', 'file', 'file outline', 'file alternate', 'file alternate outline', 'folder', 'folder outline', 'folder open', 'folder open outline', 'globe', 'industry', 'paperclip', 'paste', 'pen square', 'pencil alternate', 'percent', 'phone', 'phone square', 'phone volume', 'registered', 'registered outline', 'save', 'save outline', 'sitemap', 'sticky note', 'sticky note outline', 'suitcase', 'table', 'tag', 'tags', 'tasks', 'thumbtack', 'trademark'];
	exports.BUSINESS = BUSINESS;
	var CHESS = ['chess', 'chess bishop', 'chess board', 'chess king', 'chess knight', 'chess pawn', 'chess queen', 'chess rook', 'square full'];
	exports.CHESS = CHESS;
	var CODE = ['archive', 'barcode', 'bath', 'bug', 'code', 'code branch', 'coffee', 'file', 'file outline', 'file alternate', 'file alternate outline', 'file code', 'file code outline', 'filter', 'fire extinguisher', 'folder', 'folder outline', 'folder open', 'folder open outline', 'keyboard', 'keyboard outline', 'microchip', 'qrcode', 'shield alternate', 'sitemap', 'terminal', 'user secret', 'window close', 'window close outline', 'window maximize', 'window maximize outline', 'window minimize', 'window minimize outline', 'window restore', 'window restore outline'];
	exports.CODE = CODE;
	var COMMUNICATION = ['address book', 'address book outline', 'address card', 'address card outline', 'american sign language interpreting', 'assistive listening systems', 'at', 'bell', 'bell outline', 'bell slash', 'bell slash outline', 'bullhorn', 'comment', 'comment outline', 'comment alternate', 'comment alternate outline', 'comments', 'comments outline', 'envelope', 'envelope outline', 'envelope open', 'envelope open outline', 'envelope square', 'fax', 'inbox', 'language', 'microphone', 'microphone slash', 'mobile', 'mobile alternate', 'paper plane', 'paper plane outline', 'phone', 'phone square', 'phone volume', 'rss', 'rss square', 'tty', 'wifi'];
	exports.COMMUNICATION = COMMUNICATION;
	var COMPUTERS = ['desktop', 'download', 'hdd', 'hdd outline', 'headphones', 'keyboard', 'keyboard outline', 'laptop', 'microchip', 'mobile', 'mobile alternate', 'plug', 'power off', 'print', 'save', 'save outline', 'server', 'tablet', 'tablet alternate', 'tv', 'upload'];
	exports.COMPUTERS = COMPUTERS;
	var CURRENCY = ['dollar sign', 'euro sign', 'lira sign', 'money bill alternate', 'money bill alternate outline', 'pound sign', 'ruble sign', 'rupee sign', 'shekel sign', 'won sign', 'yen sign'];
	exports.CURRENCY = CURRENCY;
	var DATE_TIME = ['bell', 'bell outline', 'bell slash', 'bell slash outline', 'calendar', 'calendar outline', 'calendar alternate', 'calendar alternate outline', 'calendar check', 'calendar check outline', 'calendar minus', 'calendar minus outline', 'calendar plus', 'calendar plus outline', 'calendar times', 'calendar times outline', 'clock', 'clock outline', 'hourglass', 'hourglass outline', 'hourglass end', 'hourglass half', 'hourglass start', 'stopwatch'];
	exports.DATE_TIME = DATE_TIME;
	var DESIGN = ['adjust', 'clone', 'clone outline', 'copy', 'copy outline', 'crop', 'crosshairs', 'cut', 'edit', 'edit outline', 'eraser', 'eye', 'eye dropper', 'eye slash', 'eye slash outline', 'object group', 'object group outline', 'object ungroup', 'object ungroup outline', 'paint brush', 'paste', 'pencil alternate', 'save', 'save outline', 'tint'];
	exports.DESIGN = DESIGN;
	var EDITORS = ['align center', 'align justify', 'align left', 'align right', 'bold', 'clipboard', 'clipboard outline', 'clone', 'clone outline', 'columns', 'copy', 'copy outline', 'cut', 'edit', 'edit outline', 'eraser', 'file', 'file outline', 'file alternate', 'file alternate outline', 'font', 'heading', 'i cursor', 'indent', 'italic', 'linkify', 'list', 'list alternate', 'list alternate outline', 'list ol', 'list ul', 'outdent', 'paper plane', 'paper plane outline', 'paperclip', 'paragraph', 'paste', 'pencil alternate', 'print', 'quote left', 'quote right', 'redo', 'redo alternate', 'reply', 'reply all', 'share', 'strikethrough', 'subscript', 'superscript', 'sync', 'sync alternate', 'table', 'tasks', 'text height', 'text width', 'th', 'th large', 'th list', 'trash', 'trash alternate', 'trash alternate outline', 'underline', 'undo', 'undo alternate', 'unlink'];
	exports.EDITORS = EDITORS;
	var FILES = ['archive', 'clone', 'clone outline', 'copy', 'copy outline', 'cut', 'file', 'file outline', 'file alternate', 'file alternate outline', 'file archive', 'file archive outline', 'file audio', 'file audio outline', 'file code', 'file code outline', 'file excel', 'file excel outline', 'file image', 'file image outline', 'file pdf', 'file pdf outline', 'file powerpoint', 'file powerpoint outline', 'file video', 'file video outline', 'file word', 'file word outline', 'folder', 'folder outline', 'folder open', 'folder open outline', 'paste', 'save', 'save outline', 'sticky note', 'sticky note outline'];
	exports.FILES = FILES;
	var GENDERS = ['genderless', 'mars', 'mars double', 'mars stroke', 'mars stroke horizontal', 'mars stroke vertical', 'mercury', 'neuter', 'transgender', 'transgender alternate', 'venus', 'venus double', 'venus mars'];
	exports.GENDERS = GENDERS;
	var HANDS_GESTURES = ['hand lizard', 'hand lizard outline', 'hand paper', 'hand paper outline', 'hand peace', 'hand peace outline', 'hand point down', 'hand point down outline', 'hand point left', 'hand point left outline', 'hand point right', 'hand point right outline', 'hand point up', 'hand point up outline', 'hand pointer', 'hand pointer outline', 'hand rock', 'hand rock outline', 'hand scissors', 'hand scissors outline', 'hand spock', 'hand spock outline', 'handshake', 'handshake outline', 'thumbs down', 'thumbs down outline', 'thumbs up', 'thumbs up outline'];
	exports.HANDS_GESTURES = HANDS_GESTURES;
	var HEALTH = ['ambulance', 'h square', 'heart', 'heart outline', 'heartbeat', 'hospital', 'hospital outline', 'medkit', 'plus square', 'plus square outline', 'stethoscope', 'user md', 'wheelchair'];
	exports.HEALTH = HEALTH;
	var IMAGES = ['adjust', 'bolt', 'camera', 'camera retro', 'clone', 'clone outline', 'compress', 'expand', 'eye', 'eye dropper', 'eye slash', 'eye slash outline', 'file image', 'file image outline', 'film', 'id badge', 'id badge outline', 'id card', 'id card outline', 'image', 'image outline', 'images', 'images outline', 'sliders horizontal', 'tint'];
	exports.IMAGES = IMAGES;
	var INTERFACES = ['ban', 'barcode', 'bars', 'beer', 'bell', 'bell outline', 'bell slash', 'bell slash outline', 'bug', 'bullhorn', 'bullseye', 'calculator', 'calendar', 'calendar outline', 'calendar alternate', 'calendar alternate outline', 'calendar check', 'calendar check outline', 'calendar minus', 'calendar minus outline', 'calendar plus', 'calendar plus outline', 'calendar times', 'calendar times outline', 'certificate', 'check', 'check circle', 'check circle outline', 'check square', 'check square outline', 'circle', 'circle outline', 'clipboard', 'clipboard outline', 'clone', 'clone outline', 'cloud', 'cloud download', 'cloud upload', 'coffee', 'cog', 'cogs', 'copy', 'copy outline', 'cut', 'database', 'dot circle', 'dot circle outline', 'download', 'edit', 'edit outline', 'ellipsis horizontal', 'ellipsis vertical', 'envelope', 'envelope outline', 'envelope open', 'envelope open outline', 'eraser', 'exclamation', 'exclamation circle', 'exclamation triangle', 'external alternate', 'external square alternate', 'eye', 'eye slash', 'eye slash outline', 'file', 'file outline', 'file alternate', 'file alternate outline', 'filter', 'flag', 'flag outline', 'flag checkered', 'folder', 'folder outline', 'folder open', 'folder open outline', 'frown', 'frown outline', 'hashtag', 'heart', 'heart outline', 'history', 'home', 'i cursor', 'info', 'info circle', 'language', 'magic', 'meh', 'meh outline', 'microphone', 'microphone slash', 'minus', 'minus circle', 'minus square', 'minus square outline', 'paste', 'pencil alternate', 'plus', 'plus circle', 'plus square', 'plus square outline', 'qrcode', 'question', 'question circle', 'question circle outline', 'quote left', 'quote right', 'redo', 'redo alternate', 'reply', 'reply all', 'rss', 'rss square', 'save', 'save outline', 'search', 'search minus', 'search plus', 'share', 'share alternate', 'share alternate square', 'share square', 'share square outline', 'shield alternate', 'sign-in', 'sign-out', 'signal', 'sitemap', 'sliders horizontal', 'smile', 'smile outline', 'sort', 'sort alphabet down', 'sort alphabet up', 'sort amount down', 'sort amount up', 'sort down', 'sort numeric down', 'sort numeric up', 'sort up', 'star', 'star outline', 'star half', 'star half outline', 'sync', 'sync alternate', 'thumbs down', 'thumbs down outline', 'thumbs up', 'thumbs up outline', 'times', 'times circle', 'times circle outline', 'toggle off', 'toggle on', 'trash', 'trash alternate', 'trash alternate outline', 'trophy', 'undo', 'undo alternate', 'upload', 'user', 'user outline', 'user circle', 'user circle outline', 'wifi'];
	exports.INTERFACES = INTERFACES;
	var LOGISTICS = ['box', 'boxes', 'clipboard check', 'clipboard list', 'dolly', 'dolly flatbed', 'pallet', 'shipping fast', 'truck', 'warehouse'];
	exports.LOGISTICS = LOGISTICS;
	var MAPS = ['ambulance', 'anchor', 'balance scale', 'bath', 'bed', 'beer', 'bell', 'bell outline', 'bell slash', 'bell slash outline', 'bicycle', 'binoculars', 'birthday cake', 'blind', 'bomb', 'book', 'bookmark', 'bookmark outline', 'briefcase', 'building', 'building outline', 'car', 'coffee', 'crosshairs', 'dollar sign', 'eye', 'eye slash', 'eye slash outline', 'fighter jet', 'fire', 'fire extinguisher', 'flag', 'flag outline', 'flag checkered', 'flask', 'gamepad', 'gavel', 'gift', 'glass martini', 'globe', 'graduation cap', 'h square', 'heart', 'heart outline', 'heartbeat', 'home', 'hospital', 'hospital outline', 'image', 'image outline', 'images', 'images outline', 'industry', 'info', 'info circle', 'key', 'leaf', 'lemon', 'lemon outline', 'life ring', 'life ring outline', 'lightbulb', 'lightbulb outline', 'location arrow', 'low vision', 'magnet', 'male', 'map', 'map outline', 'map marker', 'map marker alternate', 'map pin', 'map signs', 'medkit', 'money bill alternate', 'money bill alternate outline', 'motorcycle', 'music', 'newspaper', 'newspaper outline', 'paw', 'phone', 'phone square', 'phone volume', 'plane', 'plug', 'plus', 'plus square', 'plus square outline', 'print', 'recycle', 'road', 'rocket', 'search', 'search minus', 'search plus', 'ship', 'shopping bag', 'shopping basket', 'shopping cart', 'shower', 'street view', 'subway', 'suitcase', 'tag', 'tags', 'taxi', 'thumbtack', 'ticket alternate', 'tint', 'train', 'tree', 'trophy', 'truck', 'tty', 'umbrella', 'university', 'utensil spoon', 'utensils', 'wheelchair', 'wifi', 'wrench'];
	exports.MAPS = MAPS;
	var MEDICAL = ['ambulance', 'band aid', 'dna', 'first aid', 'heart', 'heart outline', 'heartbeat', 'hospital', 'hospital outline', 'hospital symbol', 'pills', 'plus', 'stethoscope', 'syringe', 'thermometer', 'user md', 'weight'];
	exports.MEDICAL = MEDICAL;
	var OBJECTS = ['ambulance', 'anchor', 'archive', 'balance scale', 'bath', 'bed', 'beer', 'bell', 'bell outline', 'bicycle', 'binoculars', 'birthday cake', 'bomb', 'book', 'bookmark', 'bookmark outline', 'briefcase', 'bug', 'building', 'building outline', 'bullhorn', 'bullseye', 'bus', 'calculator', 'calendar', 'calendar outline', 'calendar alternate', 'calendar alternate outline', 'camera', 'camera retro', 'car', 'clipboard', 'clipboard outline', 'cloud', 'coffee', 'cog', 'cogs', 'compass', 'compass outline', 'copy', 'copy outline', 'cube', 'cubes', 'cut', 'envelope', 'envelope outline', 'envelope open', 'envelope open outline', 'eraser', 'eye', 'eye dropper', 'fax', 'fighter jet', 'file', 'file outline', 'file alternate', 'file alternate outline', 'film', 'fire', 'fire extinguisher', 'flag', 'flag outline', 'flag checkered', 'flask', 'futbol', 'futbol outline', 'gamepad', 'gavel', 'gem', 'gem outline', 'gift', 'glass martini', 'globe', 'graduation cap', 'hdd', 'hdd outline', 'headphones', 'heart', 'heart outline', 'home', 'hospital', 'hospital outline', 'hourglass', 'hourglass outline', 'image', 'image outline', 'images', 'images outline', 'industry', 'key', 'keyboard', 'keyboard outline', 'laptop', 'leaf', 'lemon', 'lemon outline', 'life ring', 'life ring outline', 'lightbulb', 'lightbulb outline', 'lock', 'lock open', 'magic', 'magnet', 'map', 'map outline', 'map marker', 'map marker alternate', 'map pin', 'map signs', 'medkit', 'microchip', 'microphone', 'mobile', 'mobile alternate', 'money bill alternate', 'money bill alternate outline', 'moon', 'moon outline', 'motorcycle', 'newspaper', 'newspaper outline', 'paint brush', 'paper plane', 'paper plane outline', 'paperclip', 'paste', 'paw', 'pencil alternate', 'phone', 'plane', 'plug', 'print', 'puzzle piece', 'road', 'rocket', 'save', 'save outline', 'search', 'shield alternate', 'shopping bag', 'shopping basket', 'shopping cart', 'shower', 'snowflake', 'snowflake outline', 'space shuttle', 'star', 'star outline', 'sticky note', 'sticky note outline', 'stopwatch', 'subway', 'suitcase', 'sun', 'sun outline', 'tablet', 'tablet alternate', 'tachometer alternate', 'tag', 'tags', 'taxi', 'thumbtack', 'ticket alternate', 'train', 'trash', 'trash alternate', 'trash alternate outline', 'tree', 'trophy', 'truck', 'tv', 'umbrella', 'university', 'unlock', 'unlock alternate', 'utensil spoon', 'utensils', 'wheelchair', 'wrench'];
	exports.OBJECTS = OBJECTS;
	var PAYMENTS_SHOPPING = ['bell', 'bell outline', 'bookmark', 'bookmark outline', 'bullhorn', 'camera', 'camera retro', 'cart arrow down', 'cart plus', 'certificate', 'credit card', 'credit card outline', 'gem', 'gem outline', 'gift', 'handshake', 'handshake outline', 'heart', 'heart outline', 'key', 'shopping bag', 'shopping basket', 'shopping cart', 'star', 'star outline', 'tag', 'tags', 'thumbs down', 'thumbs down outline', 'thumbs up', 'thumbs up outline', 'trophy'];
	exports.PAYMENTS_SHOPPING = PAYMENTS_SHOPPING;
	var SHAPES = ['bookmark', 'bookmark outline', 'calendar', 'calendar outline', 'certificate', 'circle', 'circle outline', 'cloud', 'comment', 'comment outline', 'file', 'file outline', 'folder', 'folder outline', 'heart', 'heart outline', 'map marker', 'play', 'square', 'square outline', 'star', 'star outline'];
	exports.SHAPES = SHAPES;
	var SPINNERS = ['asterisk', 'certificate', 'circle notch', 'cog', 'compass', 'compass outline', 'crosshairs', 'life ring', 'life ring outline', 'snowflake', 'snowflake outline', 'spinner', 'sun', 'sun outline', 'sync'];
	exports.SPINNERS = SPINNERS;
	var SPORTS = ['baseball ball', 'basketball ball', 'bowling ball', 'football ball', 'futbol', 'futbol outline', 'golf ball', 'hockey puck', 'quidditch', 'table tennis', 'volleyball ball'];
	exports.SPORTS = SPORTS;
	var STATUS = ['ban', 'battery empty', 'battery full', 'battery half', 'battery quarter', 'battery three quarters', 'bell', 'bell outline', 'bell slash', 'bell slash outline', 'calendar', 'calendar outline', 'calendar alternate', 'calendar alternate outline', 'calendar check', 'calendar check outline', 'calendar minus', 'calendar minus outline', 'calendar plus', 'calendar plus outline', 'calendar times', 'calendar times outline', 'cart arrow down', 'cart plus', 'exclamation', 'exclamation circle', 'exclamation triangle', 'eye', 'eye slash', 'eye slash outline', 'file', 'file outline', 'file alternate', 'file alternate outline', 'folder', 'folder outline', 'folder open', 'folder open outline', 'info', 'info circle', 'lock', 'lock open', 'minus', 'minus circle', 'minus square', 'minus square outline', 'plus', 'plus circle', 'plus square', 'plus square outline', 'question', 'question circle', 'question circle outline', 'shield alternate', 'shopping cart', 'sign in alternate', 'sign out alternate', 'thermometer empty', 'thermometer full', 'thermometer half', 'thermometer quarter', 'thermometer three quarters', 'thumbs down', 'thumbs down outline', 'thumbs up', 'thumbs up outline', 'toggle off', 'toggle on', 'unlock', 'unlock alternate'];
	exports.STATUS = STATUS;
	var USERS_PEOPLE = ['address book', 'address book outline', 'address card', 'address card outline', 'bed', 'blind', 'child', 'female', 'frown', 'frown outline', 'id badge', 'id badge outline', 'id card', 'id card outline', 'male', 'meh', 'meh outline', 'power off', 'smile', 'smile outline', 'street view', 'user', 'user outline', 'user circle', 'user circle outline', 'user md', 'user plus', 'user secret', 'user times', 'users', 'wheelchair'];
	exports.USERS_PEOPLE = USERS_PEOPLE;
	var VEHICLES = ['ambulance', 'bicycle', 'bus', 'car', 'fighter jet', 'motorcycle', 'paper plane', 'paper plane outline', 'plane', 'rocket', 'ship', 'shopping cart', 'space shuttle', 'subway', 'taxi', 'train', 'truck', 'wheelchair'];
	exports.VEHICLES = VEHICLES;
	var WRITING = ['archive', 'book', 'bookmark', 'bookmark outline', 'edit', 'edit outline', 'envelope', 'envelope outline', 'envelope open', 'envelope open outline', 'eraser', 'file', 'file outline', 'file alternate', 'file alternate outline', 'folder', 'folder outline', 'folder open', 'folder open outline', 'keyboard', 'keyboard outline', 'newspaper', 'newspaper outline', 'paper plane', 'paper plane outline', 'paperclip', 'paragraph', 'pen square', 'pencil alternate', 'quote left', 'quote right', 'sticky note', 'sticky note outline', 'thumbtack'];
	exports.WRITING = WRITING;
	var BRANDS = ['500px', 'accessible', 'accusoft', 'adn', 'adversal', 'affiliatetheme', 'algolia', 'amazon', 'amazon pay', 'amilia', 'android', 'angellist', 'angrycreative', 'angular', 'app store', 'app store ios', 'apper', 'apple', 'apple pay', 'asymmetrik', 'audible', 'autoprefixer', 'avianex', 'aviato', 'aws', 'bandcamp', 'behance', 'behance square', 'bimobject', 'bitbucket', 'bitcoin', 'bity', 'black tie', 'blackberry', 'blogger', 'blogger b', 'bluetooth', 'bluetooth b', 'btc', 'buromobelexperte', 'buysellads', 'cc amazon pay', 'cc amex', 'cc apple pay', 'cc diners club', 'cc discover', 'cc jcb', 'cc mastercard', 'cc paypal', 'cc stripe', 'cc visa', 'centercode', 'chrome', 'cloudscale', 'cloudsmith', 'cloudversify', 'codepen', 'codiepie', 'connectdevelop', 'contao', 'cpanel', 'creative commons', 'css3', 'css3 alternate', 'cuttlefish', 'd and d', 'dashcube', 'delicious', 'deploydog', 'deskpro', 'deviantart', 'digg', 'digital ocean', 'discord', 'discourse', 'dochub', 'docker', 'draft2digital', 'dribbble', 'dribbble square', 'dropbox', 'drupal', 'dyalog', 'earlybirds', 'edge', 'elementor', 'ember', 'empire', 'envira', 'erlang', 'ethereum', 'etsy', 'expeditedssl', 'facebook', 'facebook f', 'facebook messenger', 'facebook square', 'firefox', 'first order', 'firstdraft', 'flickr', 'flipboard', 'fly', 'font awesome', 'font awesome alternate', 'font awesome flag', 'fonticons', 'fonticons fi', 'fort awesome', 'fort awesome alternate', 'forumbee', 'foursquare', 'free code camp', 'freebsd', 'get pocket', 'gg', 'gg circle', 'git', 'git square', 'github', 'github alternate', 'github square', 'gitkraken', 'gitlab', 'gitter', 'glide', 'glide g', 'gofore', 'goodreads', 'goodreads g', 'google', 'google drive', 'google play', 'google plus', 'google plus g', 'google plus square', 'google wallet', 'gratipay', 'grav', 'gripfire', 'grunt', 'gulp', 'hacker news', 'hacker news square', 'hips', 'hire a helper', 'hooli', 'hotjar', 'houzz', 'html5', 'hubspot', 'imdb', 'instagram', 'internet explorer', 'ioxhost', 'itunes', 'itunes note', 'jenkins', 'joget', 'joomla', 'js', 'js square', 'jsfiddle', 'keycdn', 'kickstarter', 'kickstarter k', 'korvue', 'laravel', 'lastfm', 'lastfm square', 'leanpub', 'less', 'linechat', 'linkedin', 'linkedin alternate', 'linode', 'linux', 'lyft', 'magento', 'maxcdn', 'medapps', 'medium', 'medium m', 'medrt', 'meetup', 'microsoft', 'mix', 'mixcloud', 'mizuni', 'modx', 'monero', 'napster', 'nintendo switch', 'node', 'node js', 'npm', 'ns8', 'nutritionix', 'odnoklassniki', 'odnoklassniki square', 'opencart', 'openid', 'opera', 'optin monster', 'osi', 'page4', 'pagelines', 'palfed', 'patreon', 'paypal', 'periscope', 'phabricator', 'phoenix framework', 'php', 'pied piper', 'pied piper alternate', 'pied piper pp', 'pinterest', 'pinterest p', 'pinterest square', 'playstation', 'product hunt', 'pushed', 'python', 'qq', 'quinscape', 'quora', 'ravelry', 'react', 'rebel', 'redriver', 'reddit', 'reddit alien', 'reddit square', 'rendact', 'renren', 'replyd', 'resolving', 'rocketchat', 'rockrms', 'safari', 'sass', 'schlix', 'scribd', 'searchengin', 'sellcast', 'sellsy', 'servicestack', 'shirtsinbulk', 'simplybuilt', 'sistrix', 'skyatlas', 'skype', 'slack', 'slack hash', 'slideshare', 'snapchat', 'snapchat ghost', 'snapchat square', 'soundcloud', 'speakap', 'spotify', 'stack exchange', 'stack overflow', 'staylinked', 'steam', 'steam square', 'steam symbol', 'sticker mule', 'strava', 'stripe', 'stripe s', 'studiovinari', 'stumbleupon', 'stumbleupon circle', 'superpowers', 'supple', 'telegram', 'telegram plane', 'tencent weibo', 'themeisle', 'trello', 'tripadvisor', 'tumblr', 'tumblr square', 'twitch', 'twitter', 'twitter square', 'typo3', 'uber', 'uikit', 'uniregistry', 'untappd', 'usb', 'ussunnah', 'vaadin', 'viacoin', 'viadeo', 'viadeo square', 'viber', 'vimeo', 'vimeo square', 'vimeo v', 'vine', 'vk', 'vnv', 'vuejs', 'wechat', 'weibo', 'weixin', 'whatsapp', 'whatsapp square', 'whmcs', 'wikipedia w', 'windows', 'wordpress', 'wordpress simple', 'wpbeginner', 'wpexplorer', 'wpforms', 'xbox', 'xing', 'xing square', 'y combinator', 'yahoo', 'yandex', 'yandex international', 'yelp', 'yoast', 'youtube', 'youtube square'];
	exports.BRANDS = BRANDS;
	var ICONS = (0, _uniq2["default"])([].concat(ACCESSIBILITY, ARROWS, AUDIO_VIDEO, BUSINESS, CHESS, CODE, COMMUNICATION, COMPUTERS, CURRENCY, DATE_TIME, DESIGN, EDITORS, FILES, GENDERS, HANDS_GESTURES, HEALTH, IMAGES, INTERFACES, LOGISTICS, MAPS, MEDICAL, OBJECTS, PAYMENTS_SHOPPING, SHAPES, SPINNERS, SPORTS, STATUS, USERS_PEOPLE, VEHICLES, WRITING, BRANDS));
	exports.ICONS = ICONS;
	var ICON_ALIASES = ['chess rock', 'ordered list', 'unordered list', 'user doctor', 'shield', 'puzzle', 'add circle', 'add square', 'add to calendar', 'add to cart', 'add user', 'add', 'alarm mute', 'alarm', 'ald', 'als', 'announcement', 'area chart', 'area graph', 'arrow down cart', 'asexual', 'asl interpreting', 'asl', 'assistive listening devices', 'attach', 'attention', 'balance', 'bar', 'bathtub', 'battery four', 'battery high', 'battery low', 'battery one', 'battery three', 'battery two', 'battery zero', 'birthday', 'block layout', 'bluetooth alternative', 'broken chain', 'browser', 'call square', 'call', 'cancel', 'cart', 'cc', 'chain', 'chat', 'checked calendar', 'checkmark', 'circle notched', 'close', 'cny', 'cocktail', 'commenting', 'computer', 'configure', 'content', 'deafness', 'delete calendar', 'delete', 'detective', 'discussions', 'doctor', 'dollar', 'dont', 'drivers license', 'dropdown', 'emergency', 'envira gallery', 'erase', 'eur', 'euro', 'eyedropper', 'factory', 'favorite', 'feed', 'female homosexual', 'file text', 'file text outline', 'find', 'first aid', 'fork', 'game', 'gay', 'gbp', 'google plus circle', 'google plus official', 'grab', 'graduation', 'grid layout', 'group', 'h', 'hand victory', 'handicap', 'hard of hearing', 'header', 'help circle', 'help', 'heterosexual', 'hide', 'hotel', 'hourglass four', 'hourglass full', 'hourglass one', 'hourglass three', 'hourglass two', 'idea', 'ils', 'in cart', 'inr', 'intergender', 'intersex', 'jpy', 'krw', 'lab', 'law', 'legal', 'lesbian', 'lightning', 'like', 'line graph', 'linkedin square', 'linkify', 'lira', 'list layout', 'magnify', 'mail forward', 'mail outline', 'mail square', 'mail', 'male homosexual', 'man', 'marker', 'mars alternate', 'mars horizontal', 'mars vertical', 'microsoft edge', 'military', 'ms edge', 'mute', 'new pied piper', 'non binary transgender', 'numbered list', 'options', 'other gender horizontal', 'other gender vertical', 'other gender', 'payment', 'paypal card', 'pencil square', 'photo', 'picture', 'pie chart', 'pie graph', 'pied piper hat', 'pin', 'plus cart', 'point', 'pointing down', 'pointing left', 'pointing right', 'pointing up', 'pound', 'power cord', 'power', 'privacy', 'r circle', 'rain', 'record', 'refresh', 'remove circle', 'remove from calendar', 'remove user', 'remove', 'repeat', 'rmb', 'rouble', 'rub', 'ruble', 'rupee', 's15', 'selected radio', 'send', 'setting', 'settings', 'shekel', 'sheqel', 'shipping', 'shop', 'shuffle', 'shutdown', 'sidebar', 'signing', 'signup', 'sliders', 'soccer', 'sort alphabet ascending', 'sort alphabet descending', 'sort ascending', 'sort content ascending', 'sort content descending', 'sort descending', 'sort numeric ascending', 'sort numeric descending', 'sound', 'spy', 'stripe card', 'student', 'talk', 'target', 'teletype', 'television', 'text cursor', 'text telephone', 'theme', 'thermometer', 'thumb tack', 'time', 'tm', 'toggle down', 'toggle left', 'toggle right', 'toggle up', 'translate', 'travel', 'treatment', 'triangle down', 'triangle left', 'triangle right', 'triangle up', 'try', 'unhide', 'unlinkify', 'unmute', 'usd', 'user cancel', 'user close', 'user delete', 'user x', 'vcard', 'video camera', 'video play', 'volume control phone', 'wait', 'warning circle', 'warning sign', 'warning', 'wi-fi', 'winner', 'wizard', 'woman', 'won', 'wordpress beginner', 'wordpress forms', 'world', 'write square', 'x', 'yen', 'zip', 'zoom in', 'zoom out', 'zoom', 'bitbucket square', 'checkmark box', 'circle thin', 'cloud download', 'cloud upload', 'compose', 'conversation', 'credit card alternative', 'currency', 'dashboard', 'diamond', 'disk', 'exchange', 'external share', 'external square', 'external', 'facebook official', 'food', 'hourglass zero', 'level down', 'level up', 'log out', 'meanpath', 'money', 'move', 'pencil', 'protect', 'radio', 'remove bookmark', 'resize horizontal', 'resize vertical', 'sign in', 'sign out', 'spoon', 'star half empty', 'star half full', 'ticket', 'times rectangle', 'write', 'youtube play'];
	exports.ICON_ALIASES = ICON_ALIASES;
	var ICONS_AND_ALIASES = (0, _uniq2["default"])([].concat((0, _toConsumableArray2["default"])(ICONS), ICON_ALIASES)); // Some icon names are not part of icons.css.
	// These are only valid as children of other components.
	// Their CSS rules are defined by a specific component's CSS.
	// We don't want to show name warnings for those usages so we add them as valid names here.

	exports.ICONS_AND_ALIASES = ICONS_AND_ALIASES;
	var COMPONENT_CONTEXT_SPECIFIC_ICONS = ['left dropdown'];
	exports.COMPONENT_CONTEXT_SPECIFIC_ICONS = COMPONENT_CONTEXT_SPECIFIC_ICONS;
	var ALL_ICONS_IN_ALL_CONTEXTS = (0, _uniq2["default"])([].concat((0, _toConsumableArray2["default"])(ICONS_AND_ALIASES), COMPONENT_CONTEXT_SPECIFIC_ICONS));
	exports.ALL_ICONS_IN_ALL_CONTEXTS = ALL_ICONS_IN_ALL_CONTEXTS;

/***/ }),
/* 529 */
/***/ (function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	/**
	 * Normalizes the offset value.
	 * @param {number|array} value The value to normalize.
	 * @returns {number}
	 */
	var _default = function _default(value) {
	  return typeof value === 'number' || typeof value === 'string' ? [value, value] : value;
	};

	exports["default"] = _default;

/***/ }),
/* 530 */
/***/ (function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	/**
	 * Normalizes the duration of a transition.
	 * @param {number|object} duration The value to normalize.
	 * @param {'hide'|'show'} type The type of transition.
	 * @returns {number}
	 */
	var _default = function _default(duration, type) {
	  return typeof duration === 'number' || typeof duration === 'string' ? duration : duration[type];
	};

	exports["default"] = _default;

/***/ }),
/* 531 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _isEqual2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/isEqual\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _has2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/has\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _transform2 = _interopRequireDefault(__webpack_require__(533));

	/**
	 * Naive and inefficient object difference, intended for development / debugging use only.
	 * Deleted keys are shown as [DELETED].
	 * @param {{}} source The source object
	 * @param {{}} target The target object.
	 * @returns {{}} A new object containing new/modified/deleted keys.
	 * @example
	 * import { objectDiff } from 'src/lib'
	 *
	 * const a = { key: 'val', foo: 'bar' }
	 * const b = { key: 'val', foo: 'baz' }
	 *
	 * objectDiff(a, b)
	 * //=> { foo: 'baz' }
	 */
	var _default = function _default(source, target) {
	  return (0, _transform2["default"])(source, function (res, val, key) {
	    // deleted keys
	    if (!(0, _has2["default"])(target, key)) res[key] = '[DELETED]'; // new keys / changed values
	    // Note, we tolerate isEqual here as this is a dev only utility and not included in production code
	    else if (!(0, _isEqual2["default"])(val, target[key])) res[key] = target[key];
	  }, {});
	};

	exports["default"] = _default;

/***/ }),
/* 532 */,
/* 533 */
/***/ (function(module, exports, __webpack_require__) {

	var arrayEach = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"./_arrayEach\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())),
	    baseCreate = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"./_baseCreate\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())),
	    baseForOwn = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"./_baseForOwn\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())),
	    baseIteratee = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"./_baseIteratee\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())),
	    getPrototype = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"./_getPrototype\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())),
	    isArray = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"./isArray\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())),
	    isBuffer = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"./isBuffer\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())),
	    isFunction = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"./isFunction\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())),
	    isObject = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"./isObject\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())),
	    isTypedArray = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"./isTypedArray\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	/**
	 * An alternative to `_.reduce`; this method transforms `object` to a new
	 * `accumulator` object which is the result of running each of its own
	 * enumerable string keyed properties thru `iteratee`, with each invocation
	 * potentially mutating the `accumulator` object. If `accumulator` is not
	 * provided, a new object with the same `[[Prototype]]` will be used. The
	 * iteratee is invoked with four arguments: (accumulator, value, key, object).
	 * Iteratee functions may exit iteration early by explicitly returning `false`.
	 *
	 * @static
	 * @memberOf _
	 * @since 1.3.0
	 * @category Object
	 * @param {Object} object The object to iterate over.
	 * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	 * @param {*} [accumulator] The custom accumulator value.
	 * @returns {*} Returns the accumulated value.
	 * @example
	 *
	 * _.transform([2, 3, 4], function(result, n) {
	 *   result.push(n *= n);
	 *   return n % 2 == 0;
	 * }, []);
	 * // => [4, 9]
	 *
	 * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {
	 *   (result[value] || (result[value] = [])).push(key);
	 * }, {});
	 * // => { '1': ['a', 'c'], '2': ['b'] }
	 */
	function transform(object, iteratee, accumulator) {
	  var isArr = isArray(object),
	      isArrLike = isArr || isBuffer(object) || isTypedArray(object);

	  iteratee = baseIteratee(iteratee, 4);
	  if (accumulator == null) {
	    var Ctor = object && object.constructor;
	    if (isArrLike) {
	      accumulator = isArr ? new Ctor : [];
	    }
	    else if (isObject(object)) {
	      accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};
	    }
	    else {
	      accumulator = {};
	    }
	  }
	  (isArrLike ? arrayEach : baseForOwn)(object, function(value, index, object) {
	    return iteratee(accumulator, value, index, object);
	  });
	  return accumulator;
	}

	module.exports = transform;


/***/ }),
/* 534 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.isRefObject = exports.handleRef = void 0;

	var _typeof2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/typeof\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	/**
	 * The function that correctly handles passing refs.
	 *
	 * @param {Function|Object} ref An ref object or function
	 * @param {HTMLElement} node A node that should be passed by ref
	 */
	var handleRef = function handleRef(ref, node) {
	  if (process.env.NODE_ENV !== 'production') {
	    if (typeof ref === 'string') {
	      throw new Error(['We do not support refs as string, this is a legacy API and will be likely to be removed in', 'one of the future releases of React.'].join(' '));
	    }
	  }

	  if (typeof ref === 'function') {
	    ref(node);
	    return;
	  }

	  if (ref !== null && (0, _typeof2["default"])(ref) === 'object') {
	    // The `current` property is defined as readonly, however it's a valid way because `ref` is a mutable object
	    // eslint-disable-next-line no-param-reassign
	    ref.current = node;
	  }
	};

	exports.handleRef = handleRef;

	var isRefObject = function isRefObject(ref) {
	  return (// https://github.com/facebook/react/blob/v16.8.2/packages/react-reconciler/src/ReactFiberCommitWork.js#L665
	    // eslint-disable-next-line
	    ref !== null && (0, _typeof2["default"])(ref) === 'object' && ref.hasOwnProperty('current')
	  );
	};

	exports.isRefObject = isRefObject;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 535 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	Object.defineProperty(exports, "default", {
	  enumerable: true,
	  get: function get() {
	    return _Button["default"];
	  }
	});

	var _Button = _interopRequireDefault(__webpack_require__(536));

/***/ }),
/* 536 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";

	var _interopRequireWildcard = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireWildcard\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _toConsumableArray2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/toConsumableArray\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _extends2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/extends\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _classCallCheck2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/classCallCheck\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _createClass2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/createClass\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/possibleConstructorReturn\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _getPrototypeOf3 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/getPrototypeOf\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _assertThisInitialized2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/assertThisInitialized\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _inherits2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/inherits\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _defineProperty2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/defineProperty\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _invoke2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/invoke\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _isNil2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/isNil\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _classnames = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"classnames\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _propTypes = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"prop-types\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _react = _interopRequireWildcard(__webpack_require__(3));

	var _Ref = _interopRequireDefault(__webpack_require__(537));

	var _lib = __webpack_require__(256);

	var _Icon = _interopRequireDefault(__webpack_require__(541));

	var _Label = _interopRequireDefault(__webpack_require__(544));

	var _ButtonContent = _interopRequireDefault(__webpack_require__(557));

	var _ButtonGroup = _interopRequireDefault(__webpack_require__(558));

	var _ButtonOr = _interopRequireDefault(__webpack_require__(559));

	/**
	 * A Button indicates a possible user action.
	 * @see Form
	 * @see Icon
	 * @see Label
	 */
	var Button =
	/*#__PURE__*/
	function (_Component) {
	  (0, _inherits2["default"])(Button, _Component);

	  function Button() {
	    var _getPrototypeOf2;

	    var _this;

	    (0, _classCallCheck2["default"])(this, Button);

	    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    _this = (0, _possibleConstructorReturn2["default"])(this, (_getPrototypeOf2 = (0, _getPrototypeOf3["default"])(Button)).call.apply(_getPrototypeOf2, [this].concat(args)));
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "ref", (0, _react.createRef)());
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "computeElementType", function () {
	      var _this$props = _this.props,
	          attached = _this$props.attached,
	          label = _this$props.label;
	      if (!(0, _isNil2["default"])(attached) || !(0, _isNil2["default"])(label)) return 'div';
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "computeTabIndex", function (ElementType) {
	      var _this$props2 = _this.props,
	          disabled = _this$props2.disabled,
	          tabIndex = _this$props2.tabIndex;
	      if (!(0, _isNil2["default"])(tabIndex)) return tabIndex;
	      if (disabled) return -1;
	      if (ElementType === 'div') return 0;
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "focus", function () {
	      return (0, _invoke2["default"])(_this.ref.current, 'focus');
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "handleClick", function (e) {
	      var disabled = _this.props.disabled;

	      if (disabled) {
	        e.preventDefault();
	        return;
	      }

	      (0, _invoke2["default"])(_this.props, 'onClick', e, _this.props);
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "hasIconClass", function () {
	      var _this$props3 = _this.props,
	          labelPosition = _this$props3.labelPosition,
	          children = _this$props3.children,
	          content = _this$props3.content,
	          icon = _this$props3.icon;
	      if (icon === true) return true;
	      return icon && (labelPosition || _lib.childrenUtils.isNil(children) && (0, _isNil2["default"])(content));
	    });
	    return _this;
	  }

	  (0, _createClass2["default"])(Button, [{
	    key: "computeButtonAriaRole",
	    value: function computeButtonAriaRole(ElementType) {
	      var role = this.props.role;
	      if (!(0, _isNil2["default"])(role)) return role;
	      if (ElementType !== 'button') return 'button';
	    }
	  }, {
	    key: "render",
	    value: function render() {
	      var _this$props4 = this.props,
	          active = _this$props4.active,
	          animated = _this$props4.animated,
	          attached = _this$props4.attached,
	          basic = _this$props4.basic,
	          children = _this$props4.children,
	          circular = _this$props4.circular,
	          className = _this$props4.className,
	          color = _this$props4.color,
	          compact = _this$props4.compact,
	          content = _this$props4.content,
	          disabled = _this$props4.disabled,
	          floated = _this$props4.floated,
	          fluid = _this$props4.fluid,
	          icon = _this$props4.icon,
	          inverted = _this$props4.inverted,
	          label = _this$props4.label,
	          labelPosition = _this$props4.labelPosition,
	          loading = _this$props4.loading,
	          negative = _this$props4.negative,
	          positive = _this$props4.positive,
	          primary = _this$props4.primary,
	          secondary = _this$props4.secondary,
	          size = _this$props4.size,
	          toggle = _this$props4.toggle;
	      var baseClasses = (0, _classnames["default"])(color, size, (0, _lib.useKeyOnly)(active, 'active'), (0, _lib.useKeyOnly)(basic, 'basic'), (0, _lib.useKeyOnly)(circular, 'circular'), (0, _lib.useKeyOnly)(compact, 'compact'), (0, _lib.useKeyOnly)(fluid, 'fluid'), (0, _lib.useKeyOnly)(this.hasIconClass(), 'icon'), (0, _lib.useKeyOnly)(inverted, 'inverted'), (0, _lib.useKeyOnly)(loading, 'loading'), (0, _lib.useKeyOnly)(negative, 'negative'), (0, _lib.useKeyOnly)(positive, 'positive'), (0, _lib.useKeyOnly)(primary, 'primary'), (0, _lib.useKeyOnly)(secondary, 'secondary'), (0, _lib.useKeyOnly)(toggle, 'toggle'), (0, _lib.useKeyOrValueAndKey)(animated, 'animated'), (0, _lib.useKeyOrValueAndKey)(attached, 'attached'));
	      var labeledClasses = (0, _classnames["default"])((0, _lib.useKeyOrValueAndKey)(labelPosition || !!label, 'labeled'));
	      var wrapperClasses = (0, _classnames["default"])((0, _lib.useKeyOnly)(disabled, 'disabled'), (0, _lib.useValueAndKey)(floated, 'floated'));
	      var rest = (0, _lib.getUnhandledProps)(Button, this.props);
	      var ElementType = (0, _lib.getElementType)(Button, this.props, this.computeElementType);
	      var tabIndex = this.computeTabIndex(ElementType);

	      if (!(0, _isNil2["default"])(label)) {
	        var buttonClasses = (0, _classnames["default"])('ui', baseClasses, 'button', className);
	        var containerClasses = (0, _classnames["default"])('ui', labeledClasses, 'button', className, wrapperClasses);

	        var labelElement = _Label["default"].create(label, {
	          defaultProps: {
	            basic: true,
	            pointing: labelPosition === 'left' ? 'right' : 'left'
	          },
	          autoGenerateKey: false
	        });

	        return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	          className: containerClasses,
	          onClick: this.handleClick
	        }), labelPosition === 'left' && labelElement, _react["default"].createElement(_Ref["default"], {
	          innerRef: this.ref
	        }, _react["default"].createElement("button", {
	          className: buttonClasses,
	          "aria-pressed": toggle ? !!active : undefined,
	          disabled: disabled,
	          tabIndex: tabIndex
	        }, _Icon["default"].create(icon, {
	          autoGenerateKey: false
	        }), " ", content)), (labelPosition === 'right' || !labelPosition) && labelElement);
	      }

	      var classes = (0, _classnames["default"])('ui', baseClasses, wrapperClasses, labeledClasses, 'button', className);
	      var hasChildren = !_lib.childrenUtils.isNil(children);
	      var role = this.computeButtonAriaRole(ElementType);
	      return _react["default"].createElement(_Ref["default"], {
	        innerRef: this.ref
	      }, _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	        className: classes,
	        "aria-pressed": toggle ? !!active : undefined,
	        disabled: disabled && ElementType === 'button' || undefined,
	        onClick: this.handleClick,
	        role: role,
	        tabIndex: tabIndex
	      }), hasChildren && children, !hasChildren && _Icon["default"].create(icon, {
	        autoGenerateKey: false
	      }), !hasChildren && content));
	    }
	  }]);
	  return Button;
	}(_react.Component);

	(0, _defineProperty2["default"])(Button, "defaultProps", {
	  as: 'button'
	});
	(0, _defineProperty2["default"])(Button, "Content", _ButtonContent["default"]);
	(0, _defineProperty2["default"])(Button, "Group", _ButtonGroup["default"]);
	(0, _defineProperty2["default"])(Button, "Or", _ButtonOr["default"]);
	(0, _defineProperty2["default"])(Button, "handledProps", ["active", "animated", "as", "attached", "basic", "children", "circular", "className", "color", "compact", "content", "disabled", "floated", "fluid", "icon", "inverted", "label", "labelPosition", "loading", "negative", "onClick", "positive", "primary", "role", "secondary", "size", "tabIndex", "toggle"]);
	Button.propTypes = process.env.NODE_ENV !== "production" ? {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** A button can show it is currently the active user selection. */
	  active: _propTypes["default"].bool,

	  /** A button can animate to show hidden content. */
	  animated: _propTypes["default"].oneOfType([_propTypes["default"].bool, _propTypes["default"].oneOf(['fade', 'vertical'])]),

	  /** A button can be attached to other content. */
	  attached: _propTypes["default"].oneOfType([_propTypes["default"].bool, _propTypes["default"].oneOf(['left', 'right', 'top', 'bottom'])]),

	  /** A basic button is less pronounced. */
	  basic: _propTypes["default"].bool,

	  /** Primary content. */
	  children: _lib.customPropTypes.every([_propTypes["default"].node, _lib.customPropTypes.disallow(['label']), _lib.customPropTypes.givenProps({
	    icon: _propTypes["default"].oneOfType([_propTypes["default"].string.isRequired, _propTypes["default"].object.isRequired, _propTypes["default"].element.isRequired])
	  }, _lib.customPropTypes.disallow(['icon']))]),

	  /** A button can be circular. */
	  circular: _propTypes["default"].bool,

	  /** Additional classes. */
	  className: _propTypes["default"].string,

	  /** A button can have different colors */
	  color: _propTypes["default"].oneOf([].concat((0, _toConsumableArray2["default"])(_lib.SUI.COLORS), ['facebook', 'google plus', 'instagram', 'linkedin', 'twitter', 'vk', 'youtube'])),

	  /** A button can reduce its padding to fit into tighter spaces. */
	  compact: _propTypes["default"].bool,

	  /** Shorthand for primary content. */
	  content: _lib.customPropTypes.contentShorthand,

	  /** A button can show it is currently unable to be interacted with. */
	  disabled: _propTypes["default"].bool,

	  /** A button can be aligned to the left or right of its container. */
	  floated: _propTypes["default"].oneOf(_lib.SUI.FLOATS),

	  /** A button can take the width of its container. */
	  fluid: _propTypes["default"].bool,

	  /** Add an Icon by name, props object, or pass an <Icon />. */
	  icon: _lib.customPropTypes.some([_propTypes["default"].bool, _propTypes["default"].string, _propTypes["default"].object, _propTypes["default"].element]),

	  /** A button can be formatted to appear on dark backgrounds. */
	  inverted: _propTypes["default"].bool,

	  /** Add a Label by text, props object, or pass a <Label />. */
	  label: _lib.customPropTypes.some([_propTypes["default"].string, _propTypes["default"].object, _propTypes["default"].element]),

	  /** A labeled button can format a Label or Icon to appear on the left or right. */
	  labelPosition: _propTypes["default"].oneOf(['right', 'left']),

	  /** A button can show a loading indicator. */
	  loading: _propTypes["default"].bool,

	  /** A button can hint towards a negative consequence. */
	  negative: _propTypes["default"].bool,

	  /**
	   * Called after user's click.
	   * @param {SyntheticEvent} event - React's original SyntheticEvent.
	   * @param {object} data - All props.
	   */
	  onClick: _propTypes["default"].func,

	  /** A button can hint towards a positive consequence. */
	  positive: _propTypes["default"].bool,

	  /** A button can be formatted to show different levels of emphasis. */
	  primary: _propTypes["default"].bool,

	  /** The role of the HTML element. */
	  role: _propTypes["default"].string,

	  /** A button can be formatted to show different levels of emphasis. */
	  secondary: _propTypes["default"].bool,

	  /** A button can have different sizes. */
	  size: _propTypes["default"].oneOf(_lib.SUI.SIZES),

	  /** A button can receive focus. */
	  tabIndex: _propTypes["default"].oneOfType([_propTypes["default"].number, _propTypes["default"].string]),

	  /** A button can be formatted to toggle on and off. */
	  toggle: _propTypes["default"].bool
	} : {};
	Button.create = (0, _lib.createShorthandFactory)(Button, function (value) {
	  return {
	    content: value
	  };
	});
	var _default = Button;
	exports["default"] = _default;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 537 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	Object.defineProperty(exports, "default", {
	  enumerable: true,
	  get: function get() {
	    return _Ref["default"];
	  }
	});

	var _Ref = _interopRequireDefault(__webpack_require__(538));

/***/ }),
/* 538 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _propTypes = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"prop-types\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _react = _interopRequireDefault(__webpack_require__(3));

	var _reactIs = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"react-is\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	var _RefFindNode = _interopRequireDefault(__webpack_require__(539));

	var _RefForward = _interopRequireDefault(__webpack_require__(540));

	/**
	 * This component exposes a prop that supports functional and createRef() API and returns the DOM
	 * node of both functional and class component children.
	 */
	function Ref(props) {
	  var children = props.children,
	      innerRef = props.innerRef;

	  var child = _react["default"].Children.only(children);

	  var ElementType = (0, _reactIs.isForwardRef)(child) ? _RefForward["default"] : _RefFindNode["default"];
	  return _react["default"].createElement(ElementType, {
	    innerRef: innerRef
	  }, child);
	}

	Ref.handledProps = ["children", "innerRef"];
	Ref.propTypes = process.env.NODE_ENV !== "production" ? {
	  /** Primary content. */
	  children: _propTypes["default"].element.isRequired,

	  /**
	   * Called when a child component will be mounted or updated.
	   *
	   * @param {HTMLElement} node - Referred node.
	   */
	  innerRef: _propTypes["default"].oneOfType([_propTypes["default"].func, _propTypes["default"].object])
	} : {};
	Ref.FindNode = _RefFindNode["default"];
	Ref.Forward = _RefForward["default"];
	var _default = Ref;
	exports["default"] = _default;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 539 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _classCallCheck2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/classCallCheck\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _createClass2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/createClass\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/possibleConstructorReturn\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _getPrototypeOf3 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/getPrototypeOf\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _assertThisInitialized2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/assertThisInitialized\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _inherits2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/inherits\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _defineProperty2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/defineProperty\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _propTypes = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"prop-types\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _react = __webpack_require__(3);

	var _reactDom = __webpack_require__(10);

	var _refUtils = __webpack_require__(534);

	var RefFindNode =
	/*#__PURE__*/
	function (_Component) {
	  (0, _inherits2["default"])(RefFindNode, _Component);

	  function RefFindNode() {
	    var _getPrototypeOf2;

	    var _this;

	    (0, _classCallCheck2["default"])(this, RefFindNode);

	    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    _this = (0, _possibleConstructorReturn2["default"])(this, (_getPrototypeOf2 = (0, _getPrototypeOf3["default"])(RefFindNode)).call.apply(_getPrototypeOf2, [this].concat(args)));
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "prevNode", null);
	    return _this;
	  }

	  (0, _createClass2["default"])(RefFindNode, [{
	    key: "componentDidMount",
	    value: function componentDidMount() {
	      // eslint-disable-next-line react/no-find-dom-node
	      this.prevNode = (0, _reactDom.findDOMNode)(this);
	      (0, _refUtils.handleRef)(this.props.innerRef, this.prevNode);
	    }
	  }, {
	    key: "componentDidUpdate",
	    value: function componentDidUpdate() {
	      // eslint-disable-next-line react/no-find-dom-node
	      var currentNode = (0, _reactDom.findDOMNode)(this);

	      if (this.prevNode !== currentNode) {
	        this.prevNode = currentNode;
	        (0, _refUtils.handleRef)(this.props.innerRef, currentNode);
	      }
	    }
	  }, {
	    key: "componentWillUnmount",
	    value: function componentWillUnmount() {
	      (0, _refUtils.handleRef)(this.props.innerRef, null);
	    }
	  }, {
	    key: "render",
	    value: function render() {
	      var children = this.props.children;
	      return children;
	    }
	  }]);
	  return RefFindNode;
	}(_react.Component);

	exports["default"] = RefFindNode;
	(0, _defineProperty2["default"])(RefFindNode, "handledProps", ["children", "innerRef"]);
	RefFindNode.propTypes = process.env.NODE_ENV !== "production" ? {
	  /** Primary content. */
	  children: _propTypes["default"].element.isRequired,

	  /**
	   * Called when a child component will be mounted or updated.
	   *
	   * @param {HTMLElement} node - Referred node.
	   */
	  innerRef: _propTypes["default"].oneOfType([_propTypes["default"].func, _propTypes["default"].object])
	} : {};
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 540 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _classCallCheck2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/classCallCheck\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _createClass2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/createClass\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/possibleConstructorReturn\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _getPrototypeOf3 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/getPrototypeOf\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _assertThisInitialized2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/assertThisInitialized\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _inherits2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/inherits\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _defineProperty2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/defineProperty\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _propTypes = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"prop-types\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _react = __webpack_require__(3);

	var _refUtils = __webpack_require__(534);

	var RefForward =
	/*#__PURE__*/
	function (_Component) {
	  (0, _inherits2["default"])(RefForward, _Component);

	  function RefForward() {
	    var _getPrototypeOf2;

	    var _this;

	    (0, _classCallCheck2["default"])(this, RefForward);

	    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    _this = (0, _possibleConstructorReturn2["default"])(this, (_getPrototypeOf2 = (0, _getPrototypeOf3["default"])(RefForward)).call.apply(_getPrototypeOf2, [this].concat(args)));
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "handleRefOverride", function (node) {
	      var _this$props = _this.props,
	          children = _this$props.children,
	          innerRef = _this$props.innerRef;
	      (0, _refUtils.handleRef)(children.ref, node);
	      (0, _refUtils.handleRef)(innerRef, node);
	    });
	    return _this;
	  }

	  (0, _createClass2["default"])(RefForward, [{
	    key: "render",
	    value: function render() {
	      var children = this.props.children;
	      return (0, _react.cloneElement)(children, {
	        ref: this.handleRefOverride
	      });
	    }
	  }]);
	  return RefForward;
	}(_react.Component);

	exports["default"] = RefForward;
	(0, _defineProperty2["default"])(RefForward, "handledProps", ["children", "innerRef"]);
	RefForward.propTypes = process.env.NODE_ENV !== "production" ? {
	  /** Primary content. */
	  children: _propTypes["default"].element.isRequired,

	  /**
	   * Called when a child component will be mounted or updated.
	   *
	   * @param {HTMLElement} node - Referred node.
	   */
	  innerRef: _propTypes["default"].oneOfType([_propTypes["default"].func, _propTypes["default"].object])
	} : {};
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 541 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";

	var _interopRequireWildcard = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireWildcard\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _extends2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/extends\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _classCallCheck2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/classCallCheck\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _createClass2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/createClass\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/possibleConstructorReturn\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _getPrototypeOf3 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/getPrototypeOf\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _assertThisInitialized2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/assertThisInitialized\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _inherits2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/inherits\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _defineProperty2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/defineProperty\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _invoke2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/invoke\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _isNil2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/isNil\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _without2 = _interopRequireDefault(__webpack_require__(542));

	var _classnames = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"classnames\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _propTypes = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"prop-types\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _react = _interopRequireWildcard(__webpack_require__(3));

	var _lib = __webpack_require__(256);

	var _IconGroup = _interopRequireDefault(__webpack_require__(543));

	/**
	 * An icon is a glyph used to represent something else.
	 * @see Image
	 */
	var Icon =
	/*#__PURE__*/
	function (_PureComponent) {
	  (0, _inherits2["default"])(Icon, _PureComponent);

	  function Icon() {
	    var _getPrototypeOf2;

	    var _this;

	    (0, _classCallCheck2["default"])(this, Icon);

	    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    _this = (0, _possibleConstructorReturn2["default"])(this, (_getPrototypeOf2 = (0, _getPrototypeOf3["default"])(Icon)).call.apply(_getPrototypeOf2, [this].concat(args)));
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "handleClick", function (e) {
	      var disabled = _this.props.disabled;

	      if (disabled) {
	        e.preventDefault();
	        return;
	      }

	      (0, _invoke2["default"])(_this.props, 'onClick', e, _this.props);
	    });
	    return _this;
	  }

	  (0, _createClass2["default"])(Icon, [{
	    key: "getIconAriaOptions",
	    value: function getIconAriaOptions() {
	      var ariaOptions = {};
	      var _this$props = this.props,
	          ariaLabel = _this$props['aria-label'],
	          ariaHidden = _this$props['aria-hidden'];

	      if ((0, _isNil2["default"])(ariaLabel)) {
	        ariaOptions['aria-hidden'] = 'true';
	      } else {
	        ariaOptions['aria-label'] = ariaLabel;
	      }

	      if (!(0, _isNil2["default"])(ariaHidden)) {
	        ariaOptions['aria-hidden'] = ariaHidden;
	      }

	      return ariaOptions;
	    }
	  }, {
	    key: "render",
	    value: function render() {
	      var _this$props2 = this.props,
	          bordered = _this$props2.bordered,
	          circular = _this$props2.circular,
	          className = _this$props2.className,
	          color = _this$props2.color,
	          corner = _this$props2.corner,
	          disabled = _this$props2.disabled,
	          fitted = _this$props2.fitted,
	          flipped = _this$props2.flipped,
	          inverted = _this$props2.inverted,
	          link = _this$props2.link,
	          loading = _this$props2.loading,
	          name = _this$props2.name,
	          rotated = _this$props2.rotated,
	          size = _this$props2.size;
	      var classes = (0, _classnames["default"])(color, name, size, (0, _lib.useKeyOnly)(bordered, 'bordered'), (0, _lib.useKeyOnly)(circular, 'circular'), (0, _lib.useKeyOnly)(disabled, 'disabled'), (0, _lib.useKeyOnly)(fitted, 'fitted'), (0, _lib.useKeyOnly)(inverted, 'inverted'), (0, _lib.useKeyOnly)(link, 'link'), (0, _lib.useKeyOnly)(loading, 'loading'), (0, _lib.useKeyOrValueAndKey)(corner, 'corner'), (0, _lib.useValueAndKey)(flipped, 'flipped'), (0, _lib.useValueAndKey)(rotated, 'rotated'), 'icon', className);
	      var rest = (0, _lib.getUnhandledProps)(Icon, this.props);
	      var ElementType = (0, _lib.getElementType)(Icon, this.props);
	      var ariaOptions = this.getIconAriaOptions();
	      return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, ariaOptions, {
	        className: classes,
	        onClick: this.handleClick
	      }));
	    }
	  }]);
	  return Icon;
	}(_react.PureComponent);

	(0, _defineProperty2["default"])(Icon, "defaultProps", {
	  as: 'i'
	});
	(0, _defineProperty2["default"])(Icon, "Group", _IconGroup["default"]);
	(0, _defineProperty2["default"])(Icon, "handledProps", ["aria-hidden", "aria-label", "as", "bordered", "circular", "className", "color", "corner", "disabled", "fitted", "flipped", "inverted", "link", "loading", "name", "rotated", "size"]);
	Icon.propTypes = process.env.NODE_ENV !== "production" ? {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Formatted to appear bordered. */
	  bordered: _propTypes["default"].bool,

	  /** Icon can formatted to appear circular. */
	  circular: _propTypes["default"].bool,

	  /** Additional classes. */
	  className: _propTypes["default"].string,

	  /** Color of the icon. */
	  color: _propTypes["default"].oneOf(_lib.SUI.COLORS),

	  /** Icons can display a smaller corner icon. */
	  corner: _propTypes["default"].oneOfType([_propTypes["default"].bool, _propTypes["default"].oneOf(['top left', 'top right', 'bottom left', 'bottom right'])]),

	  /** Show that the icon is inactive. */
	  disabled: _propTypes["default"].bool,

	  /** Fitted, without space to left or right of Icon. */
	  fitted: _propTypes["default"].bool,

	  /** Icon can flipped. */
	  flipped: _propTypes["default"].oneOf(['horizontally', 'vertically']),

	  /** Formatted to have its colors inverted for contrast. */
	  inverted: _propTypes["default"].bool,

	  /** Icon can be formatted as a link. */
	  link: _propTypes["default"].bool,

	  /** Icon can be used as a simple loader. */
	  loading: _propTypes["default"].bool,

	  /** Name of the icon. */
	  name: _lib.customPropTypes.suggest(_lib.SUI.ALL_ICONS_IN_ALL_CONTEXTS),

	  /** Icon can rotated. */
	  rotated: _propTypes["default"].oneOf(['clockwise', 'counterclockwise']),

	  /** Size of the icon. */
	  size: _propTypes["default"].oneOf((0, _without2["default"])(_lib.SUI.SIZES, 'medium')),

	  /** Icon can have an aria label. */
	  'aria-hidden': _propTypes["default"].string,

	  /** Icon can have an aria label. */
	  'aria-label': _propTypes["default"].string
	} : {};
	Icon.create = (0, _lib.createShorthandFactory)(Icon, function (value) {
	  return {
	    name: value
	  };
	});
	var _default = Icon;
	exports["default"] = _default;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 542 */
/***/ (function(module, exports, __webpack_require__) {

	var baseDifference = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"./_baseDifference\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())),
	    baseRest = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"./_baseRest\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())),
	    isArrayLikeObject = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"./isArrayLikeObject\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	/**
	 * Creates an array excluding all given values using
	 * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
	 * for equality comparisons.
	 *
	 * **Note:** Unlike `_.pull`, this method returns a new array.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Array
	 * @param {Array} array The array to inspect.
	 * @param {...*} [values] The values to exclude.
	 * @returns {Array} Returns the new array of filtered values.
	 * @see _.difference, _.xor
	 * @example
	 *
	 * _.without([2, 1, 2, 3], 1, 2);
	 * // => [3]
	 */
	var without = baseRest(function(array, values) {
	  return isArrayLikeObject(array)
	    ? baseDifference(array, values)
	    : [];
	});

	module.exports = without;


/***/ }),
/* 543 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _extends2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/extends\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _without2 = _interopRequireDefault(__webpack_require__(542));

	var _classnames = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"classnames\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _propTypes = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"prop-types\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _react = _interopRequireDefault(__webpack_require__(3));

	var _lib = __webpack_require__(256);

	/**
	 * Several icons can be used together as a group.
	 */
	function IconGroup(props) {
	  var children = props.children,
	      className = props.className,
	      content = props.content,
	      size = props.size;
	  var classes = (0, _classnames["default"])(size, 'icons', className);
	  var rest = (0, _lib.getUnhandledProps)(IconGroup, props);
	  var ElementType = (0, _lib.getElementType)(IconGroup, props);
	  return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	    className: classes
	  }), _lib.childrenUtils.isNil(children) ? content : children);
	}

	IconGroup.handledProps = ["as", "children", "className", "content", "size"];
	IconGroup.propTypes = process.env.NODE_ENV !== "production" ? {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Primary content. */
	  children: _propTypes["default"].node,

	  /** Additional classes. */
	  className: _propTypes["default"].string,

	  /** Shorthand for primary content. */
	  content: _lib.customPropTypes.contentShorthand,

	  /** Size of the icon group. */
	  size: _propTypes["default"].oneOf((0, _without2["default"])(_lib.SUI.SIZES, 'medium'))
	} : {};
	IconGroup.defaultProps = {
	  as: 'i'
	};
	var _default = IconGroup;
	exports["default"] = _default;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 544 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";

	var _interopRequireWildcard = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireWildcard\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _extends2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/extends\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _classCallCheck2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/classCallCheck\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _createClass2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/createClass\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/possibleConstructorReturn\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _getPrototypeOf3 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/getPrototypeOf\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _assertThisInitialized2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/assertThisInitialized\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _inherits2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/inherits\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _defineProperty2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/defineProperty\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _isUndefined2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/isUndefined\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _invoke2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/invoke\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _classnames = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"classnames\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _propTypes = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"prop-types\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _react = _interopRequireWildcard(__webpack_require__(3));

	var _lib = __webpack_require__(256);

	var _Icon = _interopRequireDefault(__webpack_require__(541));

	var _Image = _interopRequireDefault(__webpack_require__(545));

	var _LabelDetail = _interopRequireDefault(__webpack_require__(555));

	var _LabelGroup = _interopRequireDefault(__webpack_require__(556));

	/**
	 * A label displays content classification.
	 */
	var Label =
	/*#__PURE__*/
	function (_Component) {
	  (0, _inherits2["default"])(Label, _Component);

	  function Label() {
	    var _getPrototypeOf2;

	    var _this;

	    (0, _classCallCheck2["default"])(this, Label);

	    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    _this = (0, _possibleConstructorReturn2["default"])(this, (_getPrototypeOf2 = (0, _getPrototypeOf3["default"])(Label)).call.apply(_getPrototypeOf2, [this].concat(args)));
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "handleClick", function (e) {
	      var onClick = _this.props.onClick;
	      if (onClick) onClick(e, _this.props);
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "handleIconOverrides", function (predefinedProps) {
	      return {
	        onClick: function onClick(e) {
	          (0, _invoke2["default"])(predefinedProps, 'onClick', e);
	          (0, _invoke2["default"])(_this.props, 'onRemove', e, _this.props);
	        }
	      };
	    });
	    return _this;
	  }

	  (0, _createClass2["default"])(Label, [{
	    key: "render",
	    value: function render() {
	      var _this$props = this.props,
	          active = _this$props.active,
	          attached = _this$props.attached,
	          basic = _this$props.basic,
	          children = _this$props.children,
	          circular = _this$props.circular,
	          className = _this$props.className,
	          color = _this$props.color,
	          content = _this$props.content,
	          corner = _this$props.corner,
	          detail = _this$props.detail,
	          empty = _this$props.empty,
	          floating = _this$props.floating,
	          horizontal = _this$props.horizontal,
	          icon = _this$props.icon,
	          image = _this$props.image,
	          onRemove = _this$props.onRemove,
	          pointing = _this$props.pointing,
	          prompt = _this$props.prompt,
	          removeIcon = _this$props.removeIcon,
	          ribbon = _this$props.ribbon,
	          size = _this$props.size,
	          tag = _this$props.tag;
	      var pointingClass = pointing === true && 'pointing' || (pointing === 'left' || pointing === 'right') && "".concat(pointing, " pointing") || (pointing === 'above' || pointing === 'below') && "pointing ".concat(pointing);
	      var classes = (0, _classnames["default"])('ui', color, pointingClass, size, (0, _lib.useKeyOnly)(active, 'active'), (0, _lib.useKeyOnly)(basic, 'basic'), (0, _lib.useKeyOnly)(circular, 'circular'), (0, _lib.useKeyOnly)(empty, 'empty'), (0, _lib.useKeyOnly)(floating, 'floating'), (0, _lib.useKeyOnly)(horizontal, 'horizontal'), (0, _lib.useKeyOnly)(image === true, 'image'), (0, _lib.useKeyOnly)(prompt, 'prompt'), (0, _lib.useKeyOnly)(tag, 'tag'), (0, _lib.useKeyOrValueAndKey)(corner, 'corner'), (0, _lib.useKeyOrValueAndKey)(ribbon, 'ribbon'), (0, _lib.useValueAndKey)(attached, 'attached'), 'label', className);
	      var rest = (0, _lib.getUnhandledProps)(Label, this.props);
	      var ElementType = (0, _lib.getElementType)(Label, this.props);

	      if (!_lib.childrenUtils.isNil(children)) {
	        return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	          className: classes,
	          onClick: this.handleClick
	        }), children);
	      }

	      var removeIconShorthand = (0, _isUndefined2["default"])(removeIcon) ? 'delete' : removeIcon;
	      return _react["default"].createElement(ElementType, (0, _extends2["default"])({
	        className: classes,
	        onClick: this.handleClick
	      }, rest), _Icon["default"].create(icon, {
	        autoGenerateKey: false
	      }), typeof image !== 'boolean' && _Image["default"].create(image, {
	        autoGenerateKey: false
	      }), content, _LabelDetail["default"].create(detail, {
	        autoGenerateKey: false
	      }), onRemove && _Icon["default"].create(removeIconShorthand, {
	        autoGenerateKey: false,
	        overrideProps: this.handleIconOverrides
	      }));
	    }
	  }]);
	  return Label;
	}(_react.Component);

	exports["default"] = Label;
	(0, _defineProperty2["default"])(Label, "Detail", _LabelDetail["default"]);
	(0, _defineProperty2["default"])(Label, "Group", _LabelGroup["default"]);
	(0, _defineProperty2["default"])(Label, "handledProps", ["active", "as", "attached", "basic", "children", "circular", "className", "color", "content", "corner", "detail", "empty", "floating", "horizontal", "icon", "image", "onClick", "onRemove", "pointing", "prompt", "removeIcon", "ribbon", "size", "tag"]);
	Label.propTypes = process.env.NODE_ENV !== "production" ? {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** A label can be active. */
	  active: _propTypes["default"].bool,

	  /** A label can attach to a content segment. */
	  attached: _propTypes["default"].oneOf(['top', 'bottom', 'top right', 'top left', 'bottom left', 'bottom right']),

	  /** A label can reduce its complexity. */
	  basic: _propTypes["default"].bool,

	  /** Primary content. */
	  children: _propTypes["default"].node,

	  /** A label can be circular. */
	  circular: _propTypes["default"].bool,

	  /** Additional classes. */
	  className: _propTypes["default"].string,

	  /** Color of the label. */
	  color: _propTypes["default"].oneOf(_lib.SUI.COLORS),

	  /** Shorthand for primary content. */
	  content: _lib.customPropTypes.contentShorthand,

	  /** A label can position itself in the corner of an element. */
	  corner: _propTypes["default"].oneOfType([_propTypes["default"].bool, _propTypes["default"].oneOf(['left', 'right'])]),

	  /** Shorthand for LabelDetail. */
	  detail: _lib.customPropTypes.itemShorthand,

	  /** Formats the label as a dot. */
	  empty: _lib.customPropTypes.every([_propTypes["default"].bool, _lib.customPropTypes.demand(['circular'])]),

	  /** Float above another element in the upper right corner. */
	  floating: _propTypes["default"].bool,

	  /** A horizontal label is formatted to label content along-side it horizontally. */
	  horizontal: _propTypes["default"].bool,

	  /** Shorthand for Icon. */
	  icon: _lib.customPropTypes.itemShorthand,

	  /** A label can be formatted to emphasize an image or prop can be used as shorthand for Image. */
	  image: _propTypes["default"].oneOfType([_propTypes["default"].bool, _lib.customPropTypes.itemShorthand]),

	  /**
	   * Called on click.
	   *
	   * @param {SyntheticEvent} event - React's original SyntheticEvent.
	   * @param {object} data - All props.
	   */
	  onClick: _propTypes["default"].func,

	  /**
	   * Adds an "x" icon, called when "x" is clicked.
	   *
	   * @param {SyntheticEvent} event - React's original SyntheticEvent.
	   * @param {object} data - All props.
	   */
	  onRemove: _propTypes["default"].func,

	  /** A label can point to content next to it. */
	  pointing: _propTypes["default"].oneOfType([_propTypes["default"].bool, _propTypes["default"].oneOf(['above', 'below', 'left', 'right'])]),

	  /** A label can prompt for an error in your forms. */
	  prompt: _propTypes["default"].bool,

	  /** Shorthand for Icon to appear as the last child and trigger onRemove. */
	  removeIcon: _lib.customPropTypes.itemShorthand,

	  /** A label can appear as a ribbon attaching itself to an element. */
	  ribbon: _propTypes["default"].oneOfType([_propTypes["default"].bool, _propTypes["default"].oneOf(['right'])]),

	  /** A label can have different sizes. */
	  size: _propTypes["default"].oneOf(_lib.SUI.SIZES),

	  /** A label can appear as a tag. */
	  tag: _propTypes["default"].bool
	} : {};
	Label.create = (0, _lib.createShorthandFactory)(Label, function (value) {
	  return {
	    content: value
	  };
	});
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 545 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _extends2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/extends\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _slicedToArray2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/slicedToArray\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _isNil2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/isNil\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _classnames = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"classnames\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _propTypes = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"prop-types\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _react = _interopRequireDefault(__webpack_require__(3));

	var _lib = __webpack_require__(256);

	var _Dimmer = _interopRequireDefault(__webpack_require__(546));

	var _Label = _interopRequireDefault(__webpack_require__(544));

	var _ImageGroup = _interopRequireDefault(__webpack_require__(554));

	/**
	 * An image is a graphic representation of something.
	 * @see Icon
	 */
	function Image(props) {
	  var avatar = props.avatar,
	      bordered = props.bordered,
	      centered = props.centered,
	      children = props.children,
	      circular = props.circular,
	      className = props.className,
	      content = props.content,
	      dimmer = props.dimmer,
	      disabled = props.disabled,
	      floated = props.floated,
	      fluid = props.fluid,
	      hidden = props.hidden,
	      href = props.href,
	      inline = props.inline,
	      label = props.label,
	      rounded = props.rounded,
	      size = props.size,
	      spaced = props.spaced,
	      verticalAlign = props.verticalAlign,
	      wrapped = props.wrapped,
	      ui = props.ui;
	  var classes = (0, _classnames["default"])((0, _lib.useKeyOnly)(ui, 'ui'), size, (0, _lib.useKeyOnly)(avatar, 'avatar'), (0, _lib.useKeyOnly)(bordered, 'bordered'), (0, _lib.useKeyOnly)(circular, 'circular'), (0, _lib.useKeyOnly)(centered, 'centered'), (0, _lib.useKeyOnly)(disabled, 'disabled'), (0, _lib.useKeyOnly)(fluid, 'fluid'), (0, _lib.useKeyOnly)(hidden, 'hidden'), (0, _lib.useKeyOnly)(inline, 'inline'), (0, _lib.useKeyOnly)(rounded, 'rounded'), (0, _lib.useKeyOrValueAndKey)(spaced, 'spaced'), (0, _lib.useValueAndKey)(floated, 'floated'), (0, _lib.useVerticalAlignProp)(verticalAlign, 'aligned'), 'image', className);
	  var rest = (0, _lib.getUnhandledProps)(Image, props);

	  var _partitionHTMLProps = (0, _lib.partitionHTMLProps)(rest, {
	    htmlProps: _lib.htmlImageProps
	  }),
	      _partitionHTMLProps2 = (0, _slicedToArray2["default"])(_partitionHTMLProps, 2),
	      imgTagProps = _partitionHTMLProps2[0],
	      rootProps = _partitionHTMLProps2[1];

	  var ElementType = (0, _lib.getElementType)(Image, props, function () {
	    if (!(0, _isNil2["default"])(dimmer) || !(0, _isNil2["default"])(label) || !(0, _isNil2["default"])(wrapped) || !_lib.childrenUtils.isNil(children)) {
	      return 'div';
	    }
	  });

	  if (!_lib.childrenUtils.isNil(children)) {
	    return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	      className: classes
	    }), children);
	  }

	  if (!_lib.childrenUtils.isNil(content)) {
	    return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	      className: classes
	    }), content);
	  }

	  if (ElementType === 'img') {
	    return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rootProps, imgTagProps, {
	      className: classes
	    }));
	  }

	  return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rootProps, {
	    className: classes,
	    href: href
	  }), _Dimmer["default"].create(dimmer, {
	    autoGenerateKey: false
	  }), _Label["default"].create(label, {
	    autoGenerateKey: false
	  }), _react["default"].createElement("img", imgTagProps));
	}

	Image.handledProps = ["as", "avatar", "bordered", "centered", "children", "circular", "className", "content", "dimmer", "disabled", "floated", "fluid", "hidden", "href", "inline", "label", "rounded", "size", "spaced", "ui", "verticalAlign", "wrapped"];
	Image.Group = _ImageGroup["default"];
	Image.propTypes = process.env.NODE_ENV !== "production" ? {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** An image may be formatted to appear inline with text as an avatar. */
	  avatar: _propTypes["default"].bool,

	  /** An image may include a border to emphasize the edges of white or transparent content. */
	  bordered: _propTypes["default"].bool,

	  /** An image can appear centered in a content block. */
	  centered: _propTypes["default"].bool,

	  /** Primary content. */
	  children: _propTypes["default"].node,

	  /** An image may appear circular. */
	  circular: _propTypes["default"].bool,

	  /** Additional classes. */
	  className: _propTypes["default"].string,

	  /** Shorthand for primary content. */
	  content: _lib.customPropTypes.contentShorthand,

	  /** An image can show that it is disabled and cannot be selected. */
	  disabled: _propTypes["default"].bool,

	  /** Shorthand for Dimmer. */
	  dimmer: _lib.customPropTypes.itemShorthand,

	  /** An image can sit to the left or right of other content. */
	  floated: _propTypes["default"].oneOf(_lib.SUI.FLOATS),

	  /** An image can take up the width of its container. */
	  fluid: _lib.customPropTypes.every([_propTypes["default"].bool, _lib.customPropTypes.disallow(['size'])]),

	  /** An image can be hidden. */
	  hidden: _propTypes["default"].bool,

	  /** Renders the Image as an <a> tag with this href. */
	  href: _propTypes["default"].string,

	  /** An image may appear inline. */
	  inline: _propTypes["default"].bool,

	  /** Shorthand for Label. */
	  label: _lib.customPropTypes.itemShorthand,

	  /** An image may appear rounded. */
	  rounded: _propTypes["default"].bool,

	  /** An image may appear at different sizes. */
	  size: _propTypes["default"].oneOf(_lib.SUI.SIZES),

	  /** An image can specify that it needs an additional spacing to separate it from nearby content. */
	  spaced: _propTypes["default"].oneOfType([_propTypes["default"].bool, _propTypes["default"].oneOf(['left', 'right'])]),

	  /** Whether or not to add the ui className. */
	  ui: _propTypes["default"].bool,

	  /** An image can specify its vertical alignment. */
	  verticalAlign: _propTypes["default"].oneOf(_lib.SUI.VERTICAL_ALIGNMENTS),

	  /** An image can render wrapped in a `div.ui.image` as alternative HTML markup. */
	  wrapped: _propTypes["default"].bool
	} : {};
	Image.defaultProps = {
	  as: 'img',
	  ui: true
	};
	Image.create = (0, _lib.createShorthandFactory)(Image, function (value) {
	  return {
	    src: value
	  };
	});
	var _default = Image;
	exports["default"] = _default;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 546 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	Object.defineProperty(exports, "default", {
	  enumerable: true,
	  get: function get() {
	    return _Dimmer["default"];
	  }
	});

	var _Dimmer = _interopRequireDefault(__webpack_require__(547));

/***/ }),
/* 547 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";

	var _interopRequireWildcard = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireWildcard\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _extends2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/extends\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _classCallCheck2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/classCallCheck\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _createClass2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/createClass\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/possibleConstructorReturn\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _getPrototypeOf3 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/getPrototypeOf\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _assertThisInitialized2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/assertThisInitialized\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _inherits2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/inherits\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _defineProperty2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/defineProperty\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _propTypes = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"prop-types\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _react = _interopRequireWildcard(__webpack_require__(3));

	var _lib = __webpack_require__(256);

	var _Portal = _interopRequireDefault(__webpack_require__(548));

	var _DimmerDimmable = _interopRequireDefault(__webpack_require__(552));

	var _DimmerInner = _interopRequireDefault(__webpack_require__(553));

	/**
	 * A dimmer hides distractions to focus attention on particular content.
	 */
	var Dimmer =
	/*#__PURE__*/
	function (_Component) {
	  (0, _inherits2["default"])(Dimmer, _Component);

	  function Dimmer() {
	    var _getPrototypeOf2;

	    var _this;

	    (0, _classCallCheck2["default"])(this, Dimmer);

	    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    _this = (0, _possibleConstructorReturn2["default"])(this, (_getPrototypeOf2 = (0, _getPrototypeOf3["default"])(Dimmer)).call.apply(_getPrototypeOf2, [this].concat(args)));
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "handlePortalMount", function () {
	      if (!(0, _lib.isBrowser)()) return; // Heads up, IE doesn't support second argument in add()

	      document.body.classList.add('dimmed');
	      document.body.classList.add('dimmable');
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "handlePortalUnmount", function () {
	      if (!(0, _lib.isBrowser)()) return; // Heads up, IE doesn't support second argument in add()

	      document.body.classList.remove('dimmed');
	      document.body.classList.remove('dimmable');
	    });
	    return _this;
	  }

	  (0, _createClass2["default"])(Dimmer, [{
	    key: "render",
	    value: function render() {
	      var _this$props = this.props,
	          active = _this$props.active,
	          page = _this$props.page;
	      var rest = (0, _lib.getUnhandledProps)(Dimmer, this.props);

	      if (page) {
	        return _react["default"].createElement(_Portal["default"], {
	          closeOnEscape: false,
	          closeOnDocumentClick: false,
	          onMount: this.handlePortalMount,
	          onUnmount: this.handlePortalUnmount,
	          open: active,
	          openOnTriggerClick: false
	        }, _react["default"].createElement(_DimmerInner["default"], (0, _extends2["default"])({}, rest, {
	          active: active,
	          page: page
	        })));
	      }

	      return _react["default"].createElement(_DimmerInner["default"], (0, _extends2["default"])({}, rest, {
	        active: active,
	        page: page
	      }));
	    }
	  }]);
	  return Dimmer;
	}(_react.Component);

	exports["default"] = Dimmer;
	(0, _defineProperty2["default"])(Dimmer, "Dimmable", _DimmerDimmable["default"]);
	(0, _defineProperty2["default"])(Dimmer, "Inner", _DimmerInner["default"]);
	(0, _defineProperty2["default"])(Dimmer, "handledProps", ["active", "page"]);
	Dimmer.propTypes = process.env.NODE_ENV !== "production" ? {
	  /** An active dimmer will dim its parent container. */
	  active: _propTypes["default"].bool,

	  /** A dimmer can be formatted to be fixed to the page. */
	  page: _propTypes["default"].bool
	} : {};
	Dimmer.create = (0, _lib.createShorthandFactory)(Dimmer, function (value) {
	  return {
	    content: value
	  };
	});
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 548 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	Object.defineProperty(exports, "default", {
	  enumerable: true,
	  get: function get() {
	    return _Portal["default"];
	  }
	});

	var _Portal = _interopRequireDefault(__webpack_require__(549));

/***/ }),
/* 549 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";

	var _interopRequireWildcard = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireWildcard\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _objectSpread2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/objectSpread\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _classCallCheck2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/classCallCheck\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _createClass2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/createClass\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/possibleConstructorReturn\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _getPrototypeOf3 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/getPrototypeOf\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _assertThisInitialized2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/assertThisInitialized\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _inherits2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/inherits\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _defineProperty2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/defineProperty\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _invoke2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/invoke\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _eventStack = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@semantic-ui-react/event-stack\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _keyboardKey = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"keyboard-key\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _propTypes = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"prop-types\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _react = _interopRequireWildcard(__webpack_require__(3));

	var _lib = __webpack_require__(256);

	var _Ref = _interopRequireDefault(__webpack_require__(537));

	var _PortalInner = _interopRequireDefault(__webpack_require__(551));

	/**
	 * A component that allows you to render children outside their parent.
	 * @see Modal
	 * @see Popup
	 * @see Dimmer
	 * @see Confirm
	 */
	var Portal =
	/*#__PURE__*/
	function (_Component) {
	  (0, _inherits2["default"])(Portal, _Component);

	  function Portal() {
	    var _getPrototypeOf2;

	    var _this;

	    (0, _classCallCheck2["default"])(this, Portal);

	    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    _this = (0, _possibleConstructorReturn2["default"])(this, (_getPrototypeOf2 = (0, _getPrototypeOf3["default"])(Portal)).call.apply(_getPrototypeOf2, [this].concat(args)));
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "contentRef", (0, _react.createRef)());
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "triggerRef", (0, _react.createRef)());
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "latestDocumentMouseDownEvent", null);
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "handleDocumentMouseDown", function (e) {
	      _this.latestDocumentMouseDownEvent = e;
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "handleDocumentClick", function (e) {
	      var closeOnDocumentClick = _this.props.closeOnDocumentClick;
	      var currentMouseDownEvent = _this.latestDocumentMouseDownEvent;
	      _this.latestDocumentMouseDownEvent = null;

	      if (!_this.contentRef.current || // no portal
	      (0, _lib.doesNodeContainClick)(_this.triggerRef.current, e) || // event happened in trigger (delegate to trigger handlers)
	      currentMouseDownEvent && (0, _lib.doesNodeContainClick)(_this.contentRef.current, currentMouseDownEvent) || // event originated in the portal but was ended outside
	      (0, _lib.doesNodeContainClick)(_this.contentRef.current, e) // event happened in the portal
	      ) {
	          return;
	        } // ignore the click


	      if (closeOnDocumentClick) {
	        _this.close(e);
	      }
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "handleEscape", function (e) {
	      if (!_this.props.closeOnEscape) return;
	      if (_keyboardKey["default"].getCode(e) !== _keyboardKey["default"].Escape) return;

	      _this.close(e);
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "handlePortalMouseLeave", function (e) {
	      var _this$props = _this.props,
	          closeOnPortalMouseLeave = _this$props.closeOnPortalMouseLeave,
	          mouseLeaveDelay = _this$props.mouseLeaveDelay;
	      if (!closeOnPortalMouseLeave) return; // Do not close the portal when 'mouseleave' is triggered by children

	      if (e.target !== _this.contentRef.current) return;
	      _this.mouseLeaveTimer = _this.closeWithTimeout(e, mouseLeaveDelay);
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "handlePortalMouseEnter", function () {
	      // In order to enable mousing from the trigger to the portal, we need to
	      // clear the mouseleave timer that was set when leaving the trigger.
	      var closeOnPortalMouseLeave = _this.props.closeOnPortalMouseLeave;
	      if (!closeOnPortalMouseLeave) return;
	      clearTimeout(_this.mouseLeaveTimer);
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "handleTriggerBlur", function (e) {
	      var _this$props2 = _this.props,
	          trigger = _this$props2.trigger,
	          closeOnTriggerBlur = _this$props2.closeOnTriggerBlur; // Call original event handler

	      for (var _len2 = arguments.length, rest = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
	        rest[_key2 - 1] = arguments[_key2];
	      }

	      _invoke2["default"].apply(void 0, [trigger, 'props.onBlur', e].concat(rest)); // IE 11 doesn't work with relatedTarget in blur events


	      var target = e.relatedTarget || document.activeElement; // do not close if focus is given to the portal

	      var didFocusPortal = (0, _invoke2["default"])(_this.contentRef.current, 'contains', target);
	      if (!closeOnTriggerBlur || didFocusPortal) return;

	      _this.close(e);
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "handleTriggerClick", function (e) {
	      var _this$props3 = _this.props,
	          trigger = _this$props3.trigger,
	          closeOnTriggerClick = _this$props3.closeOnTriggerClick,
	          openOnTriggerClick = _this$props3.openOnTriggerClick;
	      var open = _this.state.open; // Call original event handler

	      for (var _len3 = arguments.length, rest = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {
	        rest[_key3 - 1] = arguments[_key3];
	      }

	      _invoke2["default"].apply(void 0, [trigger, 'props.onClick', e].concat(rest));

	      if (open && closeOnTriggerClick) {
	        _this.close(e);
	      } else if (!open && openOnTriggerClick) {
	        _this.open(e);
	      }
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "handleTriggerFocus", function (e) {
	      var _this$props4 = _this.props,
	          trigger = _this$props4.trigger,
	          openOnTriggerFocus = _this$props4.openOnTriggerFocus; // Call original event handler

	      for (var _len4 = arguments.length, rest = new Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {
	        rest[_key4 - 1] = arguments[_key4];
	      }

	      _invoke2["default"].apply(void 0, [trigger, 'props.onFocus', e].concat(rest));

	      if (!openOnTriggerFocus) return;

	      _this.open(e);
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "handleTriggerMouseLeave", function (e) {
	      clearTimeout(_this.mouseEnterTimer);
	      var _this$props5 = _this.props,
	          trigger = _this$props5.trigger,
	          closeOnTriggerMouseLeave = _this$props5.closeOnTriggerMouseLeave,
	          mouseLeaveDelay = _this$props5.mouseLeaveDelay; // Call original event handler

	      for (var _len5 = arguments.length, rest = new Array(_len5 > 1 ? _len5 - 1 : 0), _key5 = 1; _key5 < _len5; _key5++) {
	        rest[_key5 - 1] = arguments[_key5];
	      }

	      _invoke2["default"].apply(void 0, [trigger, 'props.onMouseLeave', e].concat(rest));

	      if (!closeOnTriggerMouseLeave) return;
	      _this.mouseLeaveTimer = _this.closeWithTimeout(e, mouseLeaveDelay);
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "handleTriggerMouseEnter", function (e) {
	      clearTimeout(_this.mouseLeaveTimer);
	      var _this$props6 = _this.props,
	          trigger = _this$props6.trigger,
	          mouseEnterDelay = _this$props6.mouseEnterDelay,
	          openOnTriggerMouseEnter = _this$props6.openOnTriggerMouseEnter; // Call original event handler

	      for (var _len6 = arguments.length, rest = new Array(_len6 > 1 ? _len6 - 1 : 0), _key6 = 1; _key6 < _len6; _key6++) {
	        rest[_key6 - 1] = arguments[_key6];
	      }

	      _invoke2["default"].apply(void 0, [trigger, 'props.onMouseEnter', e].concat(rest));

	      if (!openOnTriggerMouseEnter) return;
	      _this.mouseEnterTimer = _this.openWithTimeout(e, mouseEnterDelay);
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "open", function (e) {
	      var onOpen = _this.props.onOpen;
	      if (onOpen) onOpen(e, _this.props);

	      _this.trySetState({
	        open: true
	      });
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "openWithTimeout", function (e, delay) {
	      // React wipes the entire event object and suggests using e.persist() if
	      // you need the event for async access. However, even with e.persist
	      // certain required props (e.g. currentTarget) are null so we're forced to clone.
	      var eventClone = (0, _objectSpread2["default"])({}, e);
	      return setTimeout(function () {
	        return _this.open(eventClone);
	      }, delay || 0);
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "close", function (e) {
	      var onClose = _this.props.onClose;
	      if (onClose) onClose(e, _this.props);

	      _this.trySetState({
	        open: false
	      });
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "closeWithTimeout", function (e, delay) {
	      // React wipes the entire event object and suggests using e.persist() if
	      // you need the event for async access. However, even with e.persist
	      // certain required props (e.g. currentTarget) are null so we're forced to clone.
	      var eventClone = (0, _objectSpread2["default"])({}, e);
	      return setTimeout(function () {
	        return _this.close(eventClone);
	      }, delay || 0);
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "handleMount", function () {
	      (0, _invoke2["default"])(_this.props, 'onMount', null, _this.props);
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "handleUnmount", function () {
	      (0, _invoke2["default"])(_this.props, 'onUnmount', null, _this.props);
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "handleTriggerRef", function (c) {
	      _this.triggerRef.current = c;
	      (0, _lib.handleRef)(_this.props.triggerRef, c);
	    });
	    return _this;
	  }

	  (0, _createClass2["default"])(Portal, [{
	    key: "componentWillUnmount",
	    value: function componentWillUnmount() {
	      // Clean up timers
	      clearTimeout(this.mouseEnterTimer);
	      clearTimeout(this.mouseLeaveTimer);
	    } // ----------------------------------------
	    // Document Event Handlers
	    // ----------------------------------------

	  }, {
	    key: "render",
	    value: function render() {
	      var _this$props7 = this.props,
	          children = _this$props7.children,
	          eventPool = _this$props7.eventPool,
	          mountNode = _this$props7.mountNode,
	          trigger = _this$props7.trigger;
	      var open = this.state.open;
	      return _react["default"].createElement(_react.Fragment, null, open && _react["default"].createElement(_react.Fragment, null, _react["default"].createElement(_PortalInner["default"], {
	        innerRef: this.contentRef,
	        mountNode: mountNode,
	        onMount: this.handleMount,
	        onUnmount: this.handleUnmount
	      }, children), _react["default"].createElement(_eventStack["default"], {
	        name: "mouseleave",
	        on: this.handlePortalMouseLeave,
	        pool: eventPool,
	        target: this.contentRef
	      }), _react["default"].createElement(_eventStack["default"], {
	        name: "mouseenter",
	        on: this.handlePortalMouseEnter,
	        pool: eventPool,
	        target: this.contentRef
	      }), _react["default"].createElement(_eventStack["default"], {
	        name: "mousedown",
	        on: this.handleDocumentMouseDown,
	        pool: eventPool
	      }), _react["default"].createElement(_eventStack["default"], {
	        name: "click",
	        on: this.handleDocumentClick,
	        pool: eventPool
	      }), _react["default"].createElement(_eventStack["default"], {
	        name: "keydown",
	        on: this.handleEscape,
	        pool: eventPool
	      })), trigger && _react["default"].createElement(_Ref["default"], {
	        innerRef: this.handleTriggerRef
	      }, (0, _react.cloneElement)(trigger, {
	        onBlur: this.handleTriggerBlur,
	        onClick: this.handleTriggerClick,
	        onFocus: this.handleTriggerFocus,
	        onMouseLeave: this.handleTriggerMouseLeave,
	        onMouseEnter: this.handleTriggerMouseEnter
	      })));
	    }
	  }]);
	  return Portal;
	}(_lib.AutoControlledComponent);

	(0, _defineProperty2["default"])(Portal, "defaultProps", {
	  closeOnDocumentClick: true,
	  closeOnEscape: true,
	  eventPool: 'default',
	  openOnTriggerClick: true
	});
	(0, _defineProperty2["default"])(Portal, "autoControlledProps", ['open']);
	(0, _defineProperty2["default"])(Portal, "Inner", _PortalInner["default"]);
	(0, _defineProperty2["default"])(Portal, "handledProps", ["children", "closeOnDocumentClick", "closeOnEscape", "closeOnPortalMouseLeave", "closeOnTriggerBlur", "closeOnTriggerClick", "closeOnTriggerMouseLeave", "defaultOpen", "eventPool", "mountNode", "mouseEnterDelay", "mouseLeaveDelay", "onClose", "onMount", "onOpen", "onUnmount", "open", "openOnTriggerClick", "openOnTriggerFocus", "openOnTriggerMouseEnter", "trigger", "triggerRef"]);
	Portal.propTypes = process.env.NODE_ENV !== "production" ? {
	  /** Primary content. */
	  children: _propTypes["default"].node.isRequired,

	  /** Controls whether or not the portal should close when the document is clicked. */
	  closeOnDocumentClick: _propTypes["default"].bool,

	  /** Controls whether or not the portal should close when escape is pressed is displayed. */
	  closeOnEscape: _propTypes["default"].bool,

	  /**
	   * Controls whether or not the portal should close when mousing out of the portal.
	   * NOTE: This will prevent `closeOnTriggerMouseLeave` when mousing over the
	   * gap from the trigger to the portal.
	   */
	  closeOnPortalMouseLeave: _propTypes["default"].bool,

	  /** Controls whether or not the portal should close on blur of the trigger. */
	  closeOnTriggerBlur: _propTypes["default"].bool,

	  /** Controls whether or not the portal should close on click of the trigger. */
	  closeOnTriggerClick: _propTypes["default"].bool,

	  /** Controls whether or not the portal should close when mousing out of the trigger. */
	  closeOnTriggerMouseLeave: _propTypes["default"].bool,

	  /** Initial value of open. */
	  defaultOpen: _propTypes["default"].bool,

	  /** Event pool namespace that is used to handle component events */
	  eventPool: _propTypes["default"].string,

	  /** The node where the portal should mount. */
	  mountNode: _propTypes["default"].any,

	  /** Milliseconds to wait before opening on mouse over */
	  mouseEnterDelay: _propTypes["default"].number,

	  /** Milliseconds to wait before closing on mouse leave */
	  mouseLeaveDelay: _propTypes["default"].number,

	  /**
	   * Called when a close event happens
	   *
	   * @param {SyntheticEvent} event - React's original SyntheticEvent.
	   * @param {object} data - All props.
	   */
	  onClose: _propTypes["default"].func,

	  /**
	   * Called when the portal is mounted on the DOM.
	   *
	   * @param {null}
	   * @param {object} data - All props.
	   */
	  onMount: _propTypes["default"].func,

	  /**
	   * Called when an open event happens
	   *
	   * @param {SyntheticEvent} event - React's original SyntheticEvent.
	   * @param {object} data - All props.
	   */
	  onOpen: _propTypes["default"].func,

	  /**
	   * Called when the portal is unmounted from the DOM.
	   *
	   * @param {null}
	   * @param {object} data - All props.
	   */
	  onUnmount: _propTypes["default"].func,

	  /** Controls whether or not the portal is displayed. */
	  open: _propTypes["default"].bool,

	  /** Controls whether or not the portal should open when the trigger is clicked. */
	  openOnTriggerClick: _propTypes["default"].bool,

	  /** Controls whether or not the portal should open on focus of the trigger. */
	  openOnTriggerFocus: _propTypes["default"].bool,

	  /** Controls whether or not the portal should open when mousing over the trigger. */
	  openOnTriggerMouseEnter: _propTypes["default"].bool,

	  /** Element to be rendered in-place where the portal is defined. */
	  trigger: _propTypes["default"].node,

	  /** Called with a ref to the trigger node. */
	  triggerRef: _lib.customPropTypes.ref
	} : {};
	var _default = Portal;
	exports["default"] = _default;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 550 */,
/* 551 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";

	var _interopRequireWildcard = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireWildcard\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _classCallCheck2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/classCallCheck\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _createClass2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/createClass\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/possibleConstructorReturn\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _getPrototypeOf3 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/getPrototypeOf\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _assertThisInitialized2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/assertThisInitialized\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _inherits2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/inherits\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _defineProperty2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/defineProperty\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _invoke2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/invoke\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _propTypes = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"prop-types\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _react = _interopRequireWildcard(__webpack_require__(3));

	var _reactDom = __webpack_require__(10);

	var _lib = __webpack_require__(256);

	var _Ref = _interopRequireDefault(__webpack_require__(537));

	/**
	 * An inner component that allows you to render children outside their parent.
	 */
	var PortalInner =
	/*#__PURE__*/
	function (_Component) {
	  (0, _inherits2["default"])(PortalInner, _Component);

	  function PortalInner() {
	    var _getPrototypeOf2;

	    var _this;

	    (0, _classCallCheck2["default"])(this, PortalInner);

	    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    _this = (0, _possibleConstructorReturn2["default"])(this, (_getPrototypeOf2 = (0, _getPrototypeOf3["default"])(PortalInner)).call.apply(_getPrototypeOf2, [this].concat(args)));
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "handleRef", function (c) {
	      (0, _lib.handleRef)(_this.props.innerRef, c);
	    });
	    return _this;
	  }

	  (0, _createClass2["default"])(PortalInner, [{
	    key: "componentDidMount",
	    value: function componentDidMount() {
	      (0, _invoke2["default"])(this.props, 'onMount', null, this.props);
	    }
	  }, {
	    key: "componentWillUnmount",
	    value: function componentWillUnmount() {
	      (0, _invoke2["default"])(this.props, 'onUnmount', null, this.props);
	    }
	  }, {
	    key: "render",
	    value: function render() {
	      if (!(0, _lib.isBrowser)()) return null;
	      var _this$props = this.props,
	          children = _this$props.children,
	          _this$props$mountNode = _this$props.mountNode,
	          mountNode = _this$props$mountNode === void 0 ? document.body : _this$props$mountNode;
	      return (0, _reactDom.createPortal)(_react["default"].createElement(_Ref["default"], {
	        innerRef: this.handleRef
	      }, children), mountNode);
	    }
	  }]);
	  return PortalInner;
	}(_react.Component);

	(0, _defineProperty2["default"])(PortalInner, "handledProps", ["children", "innerRef", "mountNode", "onMount", "onUnmount"]);
	PortalInner.propTypes = process.env.NODE_ENV !== "production" ? {
	  /** Primary content. */
	  children: _propTypes["default"].node.isRequired,

	  /** Called with a ref to the inner node. */
	  innerRef: _lib.customPropTypes.ref,

	  /** The node where the portal should mount. */
	  mountNode: _propTypes["default"].any,

	  /**
	   * Called when the portal is mounted on the DOM
	   *
	   * @param {null}
	   * @param {object} data - All props.
	   */
	  onMount: _propTypes["default"].func,

	  /**
	   * Called when the portal is unmounted from the DOM
	   *
	   * @param {null}
	   * @param {object} data - All props.
	   */
	  onUnmount: _propTypes["default"].func
	} : {};
	var _default = PortalInner;
	exports["default"] = _default;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 552 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _extends2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/extends\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _classnames = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"classnames\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _propTypes = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"prop-types\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _react = _interopRequireDefault(__webpack_require__(3));

	var _lib = __webpack_require__(256);

	/**
	 * A dimmable sub-component for Dimmer.
	 */
	function DimmerDimmable(props) {
	  var blurring = props.blurring,
	      className = props.className,
	      children = props.children,
	      content = props.content,
	      dimmed = props.dimmed;
	  var classes = (0, _classnames["default"])((0, _lib.useKeyOnly)(blurring, 'blurring'), (0, _lib.useKeyOnly)(dimmed, 'dimmed'), 'dimmable', className);
	  var rest = (0, _lib.getUnhandledProps)(DimmerDimmable, props);
	  var ElementType = (0, _lib.getElementType)(DimmerDimmable, props);
	  return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	    className: classes
	  }), _lib.childrenUtils.isNil(children) ? content : children);
	}

	DimmerDimmable.handledProps = ["as", "blurring", "children", "className", "content", "dimmed"];
	DimmerDimmable.propTypes = process.env.NODE_ENV !== "production" ? {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** A dimmable element can blur its contents. */
	  blurring: _propTypes["default"].bool,

	  /** Primary content. */
	  children: _propTypes["default"].node,

	  /** Additional classes. */
	  className: _propTypes["default"].string,

	  /** Shorthand for primary content. */
	  content: _lib.customPropTypes.contentShorthand,

	  /** Controls whether or not the dim is displayed. */
	  dimmed: _propTypes["default"].bool
	} : {};
	var _default = DimmerDimmable;
	exports["default"] = _default;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 553 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";

	var _interopRequireWildcard = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireWildcard\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _extends2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/extends\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _classCallCheck2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/classCallCheck\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _createClass2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/createClass\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/possibleConstructorReturn\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _getPrototypeOf3 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/getPrototypeOf\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _assertThisInitialized2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/assertThisInitialized\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _inherits2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/inherits\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _defineProperty2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/defineProperty\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _invoke2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/invoke\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _classnames = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"classnames\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _propTypes = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"prop-types\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _react = _interopRequireWildcard(__webpack_require__(3));

	var _Ref = _interopRequireDefault(__webpack_require__(537));

	var _lib = __webpack_require__(256);

	/**
	 * An inner element for a Dimmer.
	 */
	var DimmerInner =
	/*#__PURE__*/
	function (_Component) {
	  (0, _inherits2["default"])(DimmerInner, _Component);

	  function DimmerInner() {
	    var _getPrototypeOf2;

	    var _this;

	    (0, _classCallCheck2["default"])(this, DimmerInner);

	    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    _this = (0, _possibleConstructorReturn2["default"])(this, (_getPrototypeOf2 = (0, _getPrototypeOf3["default"])(DimmerInner)).call.apply(_getPrototypeOf2, [this].concat(args)));
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "containerRef", (0, _react.createRef)());
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "contentRef", (0, _react.createRef)());
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "handleClick", function (e) {
	      var contentRef = _this.contentRef.current;
	      (0, _invoke2["default"])(_this.props, 'onClick', e, _this.props);

	      if (contentRef && contentRef !== e.target && (0, _lib.doesNodeContainClick)(contentRef, e)) {
	        return;
	      }

	      (0, _invoke2["default"])(_this.props, 'onClickOutside', e, _this.props);
	    });
	    return _this;
	  }

	  (0, _createClass2["default"])(DimmerInner, [{
	    key: "componentDidMount",
	    value: function componentDidMount() {
	      var active = this.props.active;
	      this.toggleStyles(active);
	    }
	  }, {
	    key: "componentDidUpdate",
	    value: function componentDidUpdate(prevProps) {
	      var currentActive = this.props.active;
	      var prevActive = prevProps.active;
	      if (prevActive !== currentActive) this.toggleStyles(currentActive);
	    }
	  }, {
	    key: "toggleStyles",
	    value: function toggleStyles(active) {
	      var containerRef = this.containerRef.current;
	      if (!containerRef || !containerRef.style) return;

	      if (active) {
	        containerRef.style.setProperty('display', 'flex', 'important');
	      } else {
	        containerRef.style.removeProperty('display');
	      }
	    }
	  }, {
	    key: "render",
	    value: function render() {
	      var _this$props = this.props,
	          active = _this$props.active,
	          children = _this$props.children,
	          className = _this$props.className,
	          content = _this$props.content,
	          disabled = _this$props.disabled,
	          inverted = _this$props.inverted,
	          page = _this$props.page,
	          simple = _this$props.simple,
	          verticalAlign = _this$props.verticalAlign;
	      var classes = (0, _classnames["default"])('ui', (0, _lib.useKeyOnly)(active, 'active transition visible'), (0, _lib.useKeyOnly)(disabled, 'disabled'), (0, _lib.useKeyOnly)(inverted, 'inverted'), (0, _lib.useKeyOnly)(page, 'page'), (0, _lib.useKeyOnly)(simple, 'simple'), (0, _lib.useVerticalAlignProp)(verticalAlign), 'dimmer', className);
	      var rest = (0, _lib.getUnhandledProps)(DimmerInner, this.props);
	      var ElementType = (0, _lib.getElementType)(DimmerInner, this.props);
	      var childrenContent = _lib.childrenUtils.isNil(children) ? content : children;
	      return _react["default"].createElement(_Ref["default"], {
	        innerRef: this.containerRef
	      }, _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	        className: classes,
	        onClick: this.handleClick
	      }), childrenContent && _react["default"].createElement("div", {
	        className: "content",
	        ref: this.contentRef
	      }, childrenContent)));
	    }
	  }]);
	  return DimmerInner;
	}(_react.Component);

	exports["default"] = DimmerInner;
	(0, _defineProperty2["default"])(DimmerInner, "handledProps", ["active", "as", "children", "className", "content", "disabled", "inverted", "onClick", "onClickOutside", "page", "simple", "verticalAlign"]);
	DimmerInner.propTypes = process.env.NODE_ENV !== "production" ? {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** An active dimmer will dim its parent container. */
	  active: _propTypes["default"].bool,

	  /** Primary content. */
	  children: _propTypes["default"].node,

	  /** Additional classes. */
	  className: _propTypes["default"].string,

	  /** Shorthand for primary content. */
	  content: _lib.customPropTypes.contentShorthand,

	  /** A disabled dimmer cannot be activated */
	  disabled: _propTypes["default"].bool,

	  /**
	   * Called on click.
	   *
	   * @param {SyntheticEvent} event - React's original SyntheticEvent.
	   * @param {object} data - All props.
	   */
	  onClick: _propTypes["default"].func,

	  /**
	   * Handles click outside Dimmer's content, but inside Dimmer area.
	   *
	   * @param {SyntheticEvent} event - React's original SyntheticEvent.
	   * @param {object} data - All props.
	   */
	  onClickOutside: _propTypes["default"].func,

	  /** A dimmer can be formatted to have its colors inverted. */
	  inverted: _propTypes["default"].bool,

	  /** A dimmer can be formatted to be fixed to the page. */
	  page: _propTypes["default"].bool,

	  /** A dimmer can be controlled with simple prop. */
	  simple: _propTypes["default"].bool,

	  /** A dimmer can have its content top or bottom aligned. */
	  verticalAlign: _propTypes["default"].oneOf(['bottom', 'top'])
	} : {};
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 554 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _extends2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/extends\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _classnames = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"classnames\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _propTypes = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"prop-types\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _react = _interopRequireDefault(__webpack_require__(3));

	var _lib = __webpack_require__(256);

	/**
	 * A group of images.
	 */
	function ImageGroup(props) {
	  var children = props.children,
	      className = props.className,
	      content = props.content,
	      size = props.size;
	  var classes = (0, _classnames["default"])('ui', size, className, 'images');
	  var rest = (0, _lib.getUnhandledProps)(ImageGroup, props);
	  var ElementType = (0, _lib.getElementType)(ImageGroup, props);
	  return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	    className: classes
	  }), _lib.childrenUtils.isNil(children) ? content : children);
	}

	ImageGroup.handledProps = ["as", "children", "className", "content", "size"];
	ImageGroup.propTypes = process.env.NODE_ENV !== "production" ? {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Primary content. */
	  children: _propTypes["default"].node,

	  /** Additional classes. */
	  className: _propTypes["default"].string,

	  /** Shorthand for primary content. */
	  content: _lib.customPropTypes.contentShorthand,

	  /** A group of images can be formatted to have the same size. */
	  size: _propTypes["default"].oneOf(_lib.SUI.SIZES)
	} : {};
	var _default = ImageGroup;
	exports["default"] = _default;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 555 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _extends2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/extends\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _classnames = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"classnames\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _propTypes = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"prop-types\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _react = _interopRequireDefault(__webpack_require__(3));

	var _lib = __webpack_require__(256);

	function LabelDetail(props) {
	  var children = props.children,
	      className = props.className,
	      content = props.content;
	  var classes = (0, _classnames["default"])('detail', className);
	  var rest = (0, _lib.getUnhandledProps)(LabelDetail, props);
	  var ElementType = (0, _lib.getElementType)(LabelDetail, props);
	  return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	    className: classes
	  }), _lib.childrenUtils.isNil(children) ? content : children);
	}

	LabelDetail.handledProps = ["as", "children", "className", "content"];
	LabelDetail.propTypes = process.env.NODE_ENV !== "production" ? {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Primary content. */
	  children: _propTypes["default"].node,

	  /** Additional classes. */
	  className: _propTypes["default"].string,

	  /** Shorthand for primary content. */
	  content: _lib.customPropTypes.contentShorthand
	} : {};
	LabelDetail.create = (0, _lib.createShorthandFactory)(LabelDetail, function (val) {
	  return {
	    content: val
	  };
	});
	var _default = LabelDetail;
	exports["default"] = _default;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 556 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _extends2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/extends\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _classnames = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"classnames\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _propTypes = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"prop-types\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _react = _interopRequireDefault(__webpack_require__(3));

	var _lib = __webpack_require__(256);

	/**
	 * A label can be grouped.
	 */
	function LabelGroup(props) {
	  var children = props.children,
	      circular = props.circular,
	      className = props.className,
	      color = props.color,
	      content = props.content,
	      size = props.size,
	      tag = props.tag;
	  var classes = (0, _classnames["default"])('ui', color, size, (0, _lib.useKeyOnly)(circular, 'circular'), (0, _lib.useKeyOnly)(tag, 'tag'), 'labels', className);
	  var rest = (0, _lib.getUnhandledProps)(LabelGroup, props);
	  var ElementType = (0, _lib.getElementType)(LabelGroup, props);
	  return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	    className: classes
	  }), _lib.childrenUtils.isNil(children) ? content : children);
	}

	LabelGroup.handledProps = ["as", "children", "circular", "className", "color", "content", "size", "tag"];
	LabelGroup.propTypes = process.env.NODE_ENV !== "production" ? {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Primary content. */
	  children: _propTypes["default"].node,

	  /** Labels can share shapes. */
	  circular: _propTypes["default"].bool,

	  /** Additional classes. */
	  className: _propTypes["default"].string,

	  /** Label group can share colors together. */
	  color: _propTypes["default"].oneOf(_lib.SUI.COLORS),

	  /** Shorthand for primary content. */
	  content: _lib.customPropTypes.contentShorthand,

	  /** Label group can share sizes together. */
	  size: _propTypes["default"].oneOf(_lib.SUI.SIZES),

	  /** Label group can share tag formatting. */
	  tag: _propTypes["default"].bool
	} : {};
	var _default = LabelGroup;
	exports["default"] = _default;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 557 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _extends2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/extends\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _classnames = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"classnames\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _propTypes = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"prop-types\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _react = _interopRequireDefault(__webpack_require__(3));

	var _lib = __webpack_require__(256);

	/**
	 * Used in some Button types, such as `animated`.
	 */
	function ButtonContent(props) {
	  var children = props.children,
	      className = props.className,
	      content = props.content,
	      hidden = props.hidden,
	      visible = props.visible;
	  var classes = (0, _classnames["default"])((0, _lib.useKeyOnly)(visible, 'visible'), (0, _lib.useKeyOnly)(hidden, 'hidden'), 'content', className);
	  var rest = (0, _lib.getUnhandledProps)(ButtonContent, props);
	  var ElementType = (0, _lib.getElementType)(ButtonContent, props);
	  return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	    className: classes
	  }), _lib.childrenUtils.isNil(children) ? content : children);
	}

	ButtonContent.handledProps = ["as", "children", "className", "content", "hidden", "visible"];
	ButtonContent.propTypes = process.env.NODE_ENV !== "production" ? {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Primary content. */
	  children: _propTypes["default"].node,

	  /** Additional classes. */
	  className: _propTypes["default"].string,

	  /** Shorthand for primary content. */
	  content: _lib.customPropTypes.contentShorthand,

	  /** Initially hidden, visible on hover. */
	  hidden: _propTypes["default"].bool,

	  /** Initially visible, hidden on hover. */
	  visible: _propTypes["default"].bool
	} : {};
	var _default = ButtonContent;
	exports["default"] = _default;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 558 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _extends2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/extends\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _map2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/map\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _isNil2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/isNil\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _classnames = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"classnames\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _propTypes = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"prop-types\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _react = _interopRequireDefault(__webpack_require__(3));

	var _lib = __webpack_require__(256);

	var _Button = _interopRequireDefault(__webpack_require__(536));

	/**
	 * Buttons can be grouped.
	 */
	function ButtonGroup(props) {
	  var attached = props.attached,
	      basic = props.basic,
	      buttons = props.buttons,
	      children = props.children,
	      className = props.className,
	      color = props.color,
	      compact = props.compact,
	      content = props.content,
	      floated = props.floated,
	      fluid = props.fluid,
	      icon = props.icon,
	      inverted = props.inverted,
	      labeled = props.labeled,
	      negative = props.negative,
	      positive = props.positive,
	      primary = props.primary,
	      secondary = props.secondary,
	      size = props.size,
	      toggle = props.toggle,
	      vertical = props.vertical,
	      widths = props.widths;
	  var classes = (0, _classnames["default"])('ui', color, size, (0, _lib.useKeyOnly)(basic, 'basic'), (0, _lib.useKeyOnly)(compact, 'compact'), (0, _lib.useKeyOnly)(fluid, 'fluid'), (0, _lib.useKeyOnly)(icon, 'icon'), (0, _lib.useKeyOnly)(inverted, 'inverted'), (0, _lib.useKeyOnly)(labeled, 'labeled'), (0, _lib.useKeyOnly)(negative, 'negative'), (0, _lib.useKeyOnly)(positive, 'positive'), (0, _lib.useKeyOnly)(primary, 'primary'), (0, _lib.useKeyOnly)(secondary, 'secondary'), (0, _lib.useKeyOnly)(toggle, 'toggle'), (0, _lib.useKeyOnly)(vertical, 'vertical'), (0, _lib.useKeyOrValueAndKey)(attached, 'attached'), (0, _lib.useValueAndKey)(floated, 'floated'), (0, _lib.useWidthProp)(widths), 'buttons', className);
	  var rest = (0, _lib.getUnhandledProps)(ButtonGroup, props);
	  var ElementType = (0, _lib.getElementType)(ButtonGroup, props);

	  if ((0, _isNil2["default"])(buttons)) {
	    return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	      className: classes
	    }), _lib.childrenUtils.isNil(children) ? content : children);
	  }

	  return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	    className: classes
	  }), (0, _map2["default"])(buttons, function (button) {
	    return _Button["default"].create(button);
	  }));
	}

	ButtonGroup.handledProps = ["as", "attached", "basic", "buttons", "children", "className", "color", "compact", "content", "floated", "fluid", "icon", "inverted", "labeled", "negative", "positive", "primary", "secondary", "size", "toggle", "vertical", "widths"];
	ButtonGroup.propTypes = process.env.NODE_ENV !== "production" ? {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Groups can be attached to other content. */
	  attached: _propTypes["default"].oneOfType([_propTypes["default"].bool, _propTypes["default"].oneOf(['left', 'right', 'top', 'bottom'])]),

	  /** Groups can be less pronounced. */
	  basic: _propTypes["default"].bool,

	  /** Array of shorthand Button values. */
	  buttons: _lib.customPropTypes.collectionShorthand,

	  /** Primary content. */
	  children: _propTypes["default"].node,

	  /** Additional classes. */
	  className: _propTypes["default"].string,

	  /** Groups can have a shared color. */
	  color: _propTypes["default"].oneOf(_lib.SUI.COLORS),

	  /** Groups can reduce their padding to fit into tighter spaces. */
	  compact: _propTypes["default"].bool,

	  /** Shorthand for primary content. */
	  content: _lib.customPropTypes.contentShorthand,

	  /** Groups can be aligned to the left or right of its container. */
	  floated: _propTypes["default"].oneOf(_lib.SUI.FLOATS),

	  /** Groups can take the width of their container. */
	  fluid: _propTypes["default"].bool,

	  /** Groups can be formatted as icons. */
	  icon: _propTypes["default"].bool,

	  /** Groups can be formatted to appear on dark backgrounds. */
	  inverted: _propTypes["default"].bool,

	  /** Groups can be formatted as labeled icon buttons. */
	  labeled: _propTypes["default"].bool,

	  /** Groups can hint towards a negative consequence. */
	  negative: _propTypes["default"].bool,

	  /** Groups can hint towards a positive consequence. */
	  positive: _propTypes["default"].bool,

	  /** Groups can be formatted to show different levels of emphasis. */
	  primary: _propTypes["default"].bool,

	  /** Groups can be formatted to show different levels of emphasis. */
	  secondary: _propTypes["default"].bool,

	  /** Groups can have different sizes. */
	  size: _propTypes["default"].oneOf(_lib.SUI.SIZES),

	  /** Groups can be formatted to toggle on and off. */
	  toggle: _propTypes["default"].bool,

	  /** Groups can be formatted to appear vertically. */
	  vertical: _propTypes["default"].bool,

	  /** Groups can have their widths divided evenly. */
	  widths: _propTypes["default"].oneOf(_lib.SUI.WIDTHS)
	} : {};
	var _default = ButtonGroup;
	exports["default"] = _default;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 559 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _extends2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/extends\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _classnames = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"classnames\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _propTypes = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"prop-types\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _react = _interopRequireDefault(__webpack_require__(3));

	var _lib = __webpack_require__(256);

	/**
	 * Button groups can contain conditionals.
	 */
	function ButtonOr(props) {
	  var className = props.className,
	      text = props.text;
	  var classes = (0, _classnames["default"])('or', className);
	  var rest = (0, _lib.getUnhandledProps)(ButtonOr, props);
	  var ElementType = (0, _lib.getElementType)(ButtonOr, props);
	  return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	    className: classes,
	    "data-text": text
	  }));
	}

	ButtonOr.handledProps = ["as", "className", "text"];
	ButtonOr.propTypes = process.env.NODE_ENV !== "production" ? {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Additional classes. */
	  className: _propTypes["default"].string,

	  /** Or buttons can have their text localized, or adjusted by using the text prop. */
	  text: _propTypes["default"].oneOfType([_propTypes["default"].number, _propTypes["default"].string])
	} : {};
	var _default = ButtonOr;
	exports["default"] = _default;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 560 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	Object.defineProperty(exports, "default", {
	  enumerable: true,
	  get: function get() {
	    return _Modal["default"];
	  }
	});

	var _Modal = _interopRequireDefault(__webpack_require__(561));

/***/ }),
/* 561 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";

	var _interopRequireWildcard = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireWildcard\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _extends2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/extends\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _objectSpread2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/objectSpread\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _classCallCheck2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/classCallCheck\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _createClass2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/createClass\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/possibleConstructorReturn\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _getPrototypeOf3 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/getPrototypeOf\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _assertThisInitialized2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/assertThisInitialized\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _inherits2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/inherits\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _defineProperty2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/defineProperty\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _pick2 = _interopRequireDefault(__webpack_require__(460));

	var _includes2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/includes\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _reduce2 = _interopRequireDefault(__webpack_require__(562));

	var _isEmpty2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/isEmpty\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _invoke2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/invoke\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _classnames = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"classnames\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _propTypes = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"prop-types\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _react = _interopRequireWildcard(__webpack_require__(3));

	var _shallowequal = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"shallowequal\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _lib = __webpack_require__(256);

	var _Icon = _interopRequireDefault(__webpack_require__(566));

	var _MountNode = _interopRequireDefault(__webpack_require__(567));

	var _Portal = _interopRequireDefault(__webpack_require__(548));

	var _ModalHeader = _interopRequireDefault(__webpack_require__(586));

	var _ModalContent = _interopRequireDefault(__webpack_require__(587));

	var _ModalActions = _interopRequireDefault(__webpack_require__(588));

	var _ModalDescription = _interopRequireDefault(__webpack_require__(589));

	var _Ref = _interopRequireDefault(__webpack_require__(537));

	var _utils = __webpack_require__(590);

	/**
	 * A modal displays content that temporarily blocks interactions with the main view of a site.
	 * @see Confirm
	 * @see Portal
	 */
	var Modal =
	/*#__PURE__*/
	function (_Component) {
	  (0, _inherits2["default"])(Modal, _Component);

	  function Modal() {
	    var _getPrototypeOf2;

	    var _this;

	    (0, _classCallCheck2["default"])(this, Modal);

	    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    _this = (0, _possibleConstructorReturn2["default"])(this, (_getPrototypeOf2 = (0, _getPrototypeOf3["default"])(Modal)).call.apply(_getPrototypeOf2, [this].concat(args)));
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "legacy", (0, _lib.isBrowser)() && (0, _utils.isLegacy)());
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "ref", (0, _react.createRef)());
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "dimmerRef", (0, _react.createRef)());
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "latestDocumentMouseDownEvent", null);
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "getMountNode", function () {
	      return (0, _lib.isBrowser)() ? _this.props.mountNode || document.body : null;
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "handleActionsOverrides", function (predefinedProps) {
	      return {
	        onActionClick: function onActionClick(e, actionProps) {
	          (0, _invoke2["default"])(predefinedProps, 'onActionClick', e, actionProps);
	          (0, _invoke2["default"])(_this.props, 'onActionClick', e, _this.props);

	          _this.handleClose(e);
	        }
	      };
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "handleClose", function (e) {
	      (0, _invoke2["default"])(_this.props, 'onClose', e, _this.props);

	      _this.trySetState({
	        open: false
	      });
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "handleDocumentMouseDown", function (e) {
	      _this.latestDocumentMouseDownEvent = e;
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "handleDocumentClick", function (e) {
	      var closeOnDimmerClick = _this.props.closeOnDimmerClick;
	      var currentDocumentMouseDownEvent = _this.latestDocumentMouseDownEvent;
	      _this.latestDocumentMouseDownEvent = null;
	      if (!closeOnDimmerClick || (0, _lib.doesNodeContainClick)(_this.ref.current, currentDocumentMouseDownEvent) || (0, _lib.doesNodeContainClick)(_this.ref.current, e)) return;
	      (0, _invoke2["default"])(_this.props, 'onClose', e, _this.props);

	      _this.trySetState({
	        open: false
	      });
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "handleIconOverrides", function (predefinedProps) {
	      return {
	        onClick: function onClick(e) {
	          (0, _invoke2["default"])(predefinedProps, 'onClick', e);

	          _this.handleClose(e);
	        }
	      };
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "handleOpen", function (e) {
	      (0, _invoke2["default"])(_this.props, 'onOpen', e, _this.props);

	      _this.trySetState({
	        open: true
	      });
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "handlePortalMount", function (e) {
	      var eventPool = _this.props.eventPool;

	      _this.setState({
	        scrolling: false
	      });

	      _this.setPositionAndClassNames();

	      _lib.eventStack.sub('mousedown', _this.handleDocumentMouseDown, {
	        pool: eventPool,
	        target: _this.dimmerRef.current
	      });

	      _lib.eventStack.sub('click', _this.handleDocumentClick, {
	        pool: eventPool,
	        target: _this.dimmerRef.current
	      });

	      (0, _invoke2["default"])(_this.props, 'onMount', e, _this.props);
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "handlePortalUnmount", function (e) {
	      var eventPool = _this.props.eventPool;
	      cancelAnimationFrame(_this.animationRequestId);

	      _lib.eventStack.unsub('mousedown', _this.handleDocumentMouseDown, {
	        pool: eventPool,
	        target: _this.dimmerRef.current
	      });

	      _lib.eventStack.unsub('click', _this.handleDocumentClick, {
	        pool: eventPool,
	        target: _this.dimmerRef.current
	      });

	      (0, _invoke2["default"])(_this.props, 'onUnmount', e, _this.props);
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "setDimmerNodeStyle", function () {
	      var current = _this.dimmerRef.current;

	      if (current && current.style && current.style.display !== 'flex') {
	        current.style.setProperty('display', 'flex', 'important');
	      }
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "setPositionAndClassNames", function () {
	      var _this$props = _this.props,
	          centered = _this$props.centered,
	          dimmer = _this$props.dimmer;
	      var scrolling;
	      var newState = {};

	      if (_this.ref.current) {
	        var rect = _this.ref.current.getBoundingClientRect();

	        var isFitted = (0, _utils.canFit)(rect);
	        scrolling = !isFitted; // Styles should be computed for IE11

	        var legacyStyles = _this.legacy ? (0, _utils.getLegacyStyles)(isFitted, centered, rect) : {};

	        if (!(0, _shallowequal["default"])(_this.state.legacyStyles, legacyStyles)) {
	          newState.legacyStyles = legacyStyles;
	        }

	        if (_this.state.scrolling !== scrolling) {
	          newState.scrolling = scrolling;
	        }
	      }

	      var classes = (0, _classnames["default"])((0, _lib.useKeyOnly)(dimmer, 'dimmable dimmed'), (0, _lib.useKeyOnly)(dimmer === 'blurring', ' blurring'), (0, _lib.useKeyOnly)(scrolling, ' scrolling'));
	      if (_this.state.mountClasses !== classes) newState.mountClasses = classes;
	      if (!(0, _isEmpty2["default"])(newState)) _this.setState(newState);
	      _this.animationRequestId = requestAnimationFrame(_this.setPositionAndClassNames);

	      _this.setDimmerNodeStyle();
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "renderContent", function (rest) {
	      var _this$props2 = _this.props,
	          actions = _this$props2.actions,
	          basic = _this$props2.basic,
	          children = _this$props2.children,
	          className = _this$props2.className,
	          closeIcon = _this$props2.closeIcon,
	          content = _this$props2.content,
	          header = _this$props2.header,
	          mountNode = _this$props2.mountNode,
	          size = _this$props2.size,
	          style = _this$props2.style;
	      var _this$state = _this.state,
	          legacyStyles = _this$state.legacyStyles,
	          mountClasses = _this$state.mountClasses,
	          scrolling = _this$state.scrolling;
	      var classes = (0, _classnames["default"])('ui', size, (0, _lib.useKeyOnly)(basic, 'basic'), (0, _lib.useKeyOnly)(_this.legacy, 'legacy'), (0, _lib.useKeyOnly)(scrolling, 'scrolling'), 'modal transition visible active', className);
	      var ElementType = (0, _lib.getElementType)(Modal, _this.props);
	      var closeIconName = closeIcon === true ? 'close' : closeIcon;

	      var closeIconJSX = _Icon["default"].create(closeIconName, {
	        overrideProps: _this.handleIconOverrides
	      });

	      return _react["default"].createElement(_Ref["default"], {
	        innerRef: _this.ref
	      }, _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	        className: classes,
	        style: (0, _objectSpread2["default"])({}, legacyStyles, style)
	      }), _react["default"].createElement(_MountNode["default"], {
	        className: mountClasses,
	        node: mountNode
	      }), closeIconJSX, _lib.childrenUtils.isNil(children) ? _react["default"].createElement(_react.Fragment, null, _ModalHeader["default"].create(header, {
	        autoGenerateKey: false
	      }), _ModalContent["default"].create(content, {
	        autoGenerateKey: false
	      }), _ModalActions["default"].create(actions, {
	        overrideProps: _this.handleActionsOverrides
	      })) : children));
	    });
	    return _this;
	  }

	  (0, _createClass2["default"])(Modal, [{
	    key: "componentWillUnmount",
	    value: function componentWillUnmount() {
	      this.handlePortalUnmount();
	    } // Do not access document when server side rendering

	  }, {
	    key: "render",
	    value: function render() {
	      var open = this.state.open;
	      var _this$props3 = this.props,
	          centered = _this$props3.centered,
	          closeOnDocumentClick = _this$props3.closeOnDocumentClick,
	          dimmer = _this$props3.dimmer,
	          eventPool = _this$props3.eventPool,
	          trigger = _this$props3.trigger;
	      var mountNode = this.getMountNode(); // Short circuit when server side rendering

	      if (!(0, _lib.isBrowser)()) {
	        return (0, _react.isValidElement)(trigger) ? trigger : null;
	      }

	      var unhandled = (0, _lib.getUnhandledProps)(Modal, this.props);
	      var portalPropNames = _Portal["default"].handledProps;
	      var rest = (0, _reduce2["default"])(unhandled, function (acc, val, key) {
	        if (!(0, _includes2["default"])(portalPropNames, key)) acc[key] = val;
	        return acc;
	      }, {});
	      var portalProps = (0, _pick2["default"])(unhandled, portalPropNames); // wrap dimmer modals

	      var dimmerClasses = (0, _classnames["default"])('ui', dimmer === 'inverted' && 'inverted', !centered && 'top aligned', 'page modals dimmer transition visible active'); // Heads up!
	      //
	      // The SUI CSS selector to prevent the modal itself from blurring requires an immediate .dimmer child:
	      // .blurring.dimmed.dimmable>:not(.dimmer) { ... }
	      //
	      // The .blurring.dimmed.dimmable is the body, so that all body content inside is blurred.
	      // We need the immediate child to be the dimmer to :not() blur the modal itself!
	      // Otherwise, the portal div is also blurred, blurring the modal.
	      //
	      // We cannot them wrap the modalJSX in an actual <Dimmer /> instead, we apply the dimmer classes to the <Portal />.

	      return _react["default"].createElement(_Portal["default"], (0, _extends2["default"])({
	        closeOnDocumentClick: closeOnDocumentClick
	      }, portalProps, {
	        trigger: trigger,
	        eventPool: eventPool,
	        mountNode: mountNode,
	        open: open,
	        onClose: this.handleClose,
	        onMount: this.handlePortalMount,
	        onOpen: this.handleOpen,
	        onUnmount: this.handlePortalUnmount
	      }), _react["default"].createElement("div", {
	        className: dimmerClasses,
	        ref: this.dimmerRef
	      }, this.renderContent(rest)));
	    }
	  }]);
	  return Modal;
	}(_lib.AutoControlledComponent);

	(0, _defineProperty2["default"])(Modal, "defaultProps", {
	  centered: true,
	  dimmer: true,
	  closeOnDimmerClick: true,
	  closeOnDocumentClick: false,
	  eventPool: 'Modal'
	});
	(0, _defineProperty2["default"])(Modal, "autoControlledProps", ['open']);
	(0, _defineProperty2["default"])(Modal, "Header", _ModalHeader["default"]);
	(0, _defineProperty2["default"])(Modal, "Content", _ModalContent["default"]);
	(0, _defineProperty2["default"])(Modal, "Description", _ModalDescription["default"]);
	(0, _defineProperty2["default"])(Modal, "Actions", _ModalActions["default"]);
	(0, _defineProperty2["default"])(Modal, "handledProps", ["actions", "as", "basic", "centered", "children", "className", "closeIcon", "closeOnDimmerClick", "closeOnDocumentClick", "content", "defaultOpen", "dimmer", "eventPool", "header", "mountNode", "onActionClick", "onClose", "onMount", "onOpen", "onUnmount", "open", "size", "style", "trigger"]);
	Modal.propTypes = process.env.NODE_ENV !== "production" ? {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Shorthand for Modal.Actions. Typically an array of button shorthand. */
	  actions: _lib.customPropTypes.itemShorthand,

	  /** A modal can reduce its complexity */
	  basic: _propTypes["default"].bool,

	  /** A modal can be vertically centered in the viewport */
	  centered: _propTypes["default"].bool,

	  /** Primary content. */
	  children: _propTypes["default"].node,

	  /** Additional classes. */
	  className: _propTypes["default"].string,

	  /** Shorthand for the close icon. Closes the modal on click. */
	  closeIcon: _propTypes["default"].oneOfType([_propTypes["default"].node, _propTypes["default"].object, _propTypes["default"].bool]),

	  /** Whether or not the Modal should close when the dimmer is clicked. */
	  closeOnDimmerClick: _propTypes["default"].bool,

	  /** Whether or not the Modal should close when the document is clicked. */
	  closeOnDocumentClick: _propTypes["default"].bool,

	  /** Simple text content for the Modal. */
	  content: _lib.customPropTypes.itemShorthand,

	  /** Initial value of open. */
	  defaultOpen: _propTypes["default"].bool,

	  /** A Modal can appear in a dimmer. */
	  dimmer: _propTypes["default"].oneOf([true, 'inverted', 'blurring']),

	  /** Event pool namespace that is used to handle component events */
	  eventPool: _propTypes["default"].string,

	  /** Modal displayed above the content in bold. */
	  header: _lib.customPropTypes.itemShorthand,

	  /** The node where the modal should mount. Defaults to document.body. */
	  mountNode: _propTypes["default"].any,

	  /**
	   * Action onClick handler when using shorthand `actions`.
	   *
	   * @param {SyntheticEvent} event - React's original SyntheticEvent.
	   * @param {object} data - All props.
	   */
	  onActionClick: _propTypes["default"].func,

	  /**
	   * Called when a close event happens.
	   *
	   * @param {SyntheticEvent} event - React's original SyntheticEvent.
	   * @param {object} data - All props.
	   */
	  onClose: _propTypes["default"].func,

	  /**
	   * Called when the portal is mounted on the DOM.
	   *
	   * @param {null}
	   * @param {object} data - All props.
	   */
	  onMount: _propTypes["default"].func,

	  /**
	   * Called when an open event happens.
	   *
	   * @param {SyntheticEvent} event - React's original SyntheticEvent.
	   * @param {object} data - All props.
	   */
	  onOpen: _propTypes["default"].func,

	  /**
	   * Called when the portal is unmounted from the DOM.
	   *
	   * @param {null}
	   * @param {object} data - All props.
	   */
	  onUnmount: _propTypes["default"].func,

	  /** Controls whether or not the Modal is displayed. */
	  open: _propTypes["default"].bool,

	  /** A modal can vary in size */
	  size: _propTypes["default"].oneOf(['mini', 'tiny', 'small', 'large', 'fullscreen']),

	  /** Custom styles. */
	  style: _propTypes["default"].object,

	  /** Element to be rendered in-place where the portal is defined. */
	  trigger: _propTypes["default"].node
	  /**
	   * NOTE: Any unhandled props that are defined in Portal are passed-through
	   * to the wrapping Portal.
	   */

	} : {};
	var _default = Modal;
	exports["default"] = _default;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 562 */
/***/ (function(module, exports, __webpack_require__) {

	var arrayReduce = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"./_arrayReduce\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())),
	    baseEach = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"./_baseEach\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())),
	    baseIteratee = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"./_baseIteratee\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())),
	    baseReduce = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"./_baseReduce\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())),
	    isArray = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"./isArray\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	/**
	 * Reduces `collection` to a value which is the accumulated result of running
	 * each element in `collection` thru `iteratee`, where each successive
	 * invocation is supplied the return value of the previous. If `accumulator`
	 * is not given, the first element of `collection` is used as the initial
	 * value. The iteratee is invoked with four arguments:
	 * (accumulator, value, index|key, collection).
	 *
	 * Many lodash methods are guarded to work as iteratees for methods like
	 * `_.reduce`, `_.reduceRight`, and `_.transform`.
	 *
	 * The guarded methods are:
	 * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,
	 * and `sortBy`
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Collection
	 * @param {Array|Object} collection The collection to iterate over.
	 * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	 * @param {*} [accumulator] The initial value.
	 * @returns {*} Returns the accumulated value.
	 * @see _.reduceRight
	 * @example
	 *
	 * _.reduce([1, 2], function(sum, n) {
	 *   return sum + n;
	 * }, 0);
	 * // => 3
	 *
	 * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {
	 *   (result[value] || (result[value] = [])).push(key);
	 *   return result;
	 * }, {});
	 * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)
	 */
	function reduce(collection, iteratee, accumulator) {
	  var func = isArray(collection) ? arrayReduce : baseReduce,
	      initAccum = arguments.length < 3;

	  return func(collection, baseIteratee(iteratee, 4), accumulator, initAccum, baseEach);
	}

	module.exports = reduce;


/***/ }),
/* 563 */,
/* 564 */,
/* 565 */,
/* 566 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	Object.defineProperty(exports, "default", {
	  enumerable: true,
	  get: function get() {
	    return _Icon["default"];
	  }
	});

	var _Icon = _interopRequireDefault(__webpack_require__(541));

/***/ }),
/* 567 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	Object.defineProperty(exports, "default", {
	  enumerable: true,
	  get: function get() {
	    return _MountNode["default"];
	  }
	});

	var _MountNode = _interopRequireDefault(__webpack_require__(568));

/***/ }),
/* 568 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _classCallCheck2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/classCallCheck\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _createClass2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/createClass\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/possibleConstructorReturn\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/getPrototypeOf\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _inherits2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/inherits\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _defineProperty2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/defineProperty\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _propTypes = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"prop-types\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _react = __webpack_require__(3);

	var _lib = __webpack_require__(256);

	var _getNodeRefFromProps = _interopRequireDefault(__webpack_require__(569));

	var _handleClassNamesChange = _interopRequireDefault(__webpack_require__(570));

	var _NodeRegistry = _interopRequireDefault(__webpack_require__(585));

	var nodeRegistry = new _NodeRegistry["default"]();
	/**
	 * A component that allows to manage classNames on a DOM node in declarative manner.
	 */

	var MountNode =
	/*#__PURE__*/
	function (_Component) {
	  (0, _inherits2["default"])(MountNode, _Component);

	  function MountNode() {
	    (0, _classCallCheck2["default"])(this, MountNode);
	    return (0, _possibleConstructorReturn2["default"])(this, (0, _getPrototypeOf2["default"])(MountNode).apply(this, arguments));
	  }

	  (0, _createClass2["default"])(MountNode, [{
	    key: "shouldComponentUpdate",
	    value: function shouldComponentUpdate(_ref) {
	      var nextClassName = _ref.className;
	      var currentClassName = this.props.className;
	      return nextClassName !== currentClassName;
	    }
	  }, {
	    key: "componentDidMount",
	    value: function componentDidMount() {
	      var nodeRef = (0, _getNodeRefFromProps["default"])(this.props);
	      nodeRegistry.add(nodeRef, this);
	      nodeRegistry.emit(nodeRef, _handleClassNamesChange["default"]);
	    }
	  }, {
	    key: "componentDidUpdate",
	    value: function componentDidUpdate() {
	      nodeRegistry.emit((0, _getNodeRefFromProps["default"])(this.props), _handleClassNamesChange["default"]);
	    }
	  }, {
	    key: "componentWillUnmount",
	    value: function componentWillUnmount() {
	      var nodeRef = (0, _getNodeRefFromProps["default"])(this.props);
	      nodeRegistry.del(nodeRef, this);
	      nodeRegistry.emit(nodeRef, _handleClassNamesChange["default"]);
	    }
	  }, {
	    key: "render",
	    value: function render() {
	      return null;
	    }
	  }]);
	  return MountNode;
	}(_react.Component);

	exports["default"] = MountNode;
	(0, _defineProperty2["default"])(MountNode, "handledProps", ["className", "node"]);
	MountNode.propTypes = process.env.NODE_ENV !== "production" ? {
	  /** Additional classes. */
	  className: _propTypes["default"].string,

	  /** The DOM node where we will apply class names. Defaults to document.body. */
	  node: _propTypes["default"].oneOfType([_lib.customPropTypes.domNode, _lib.customPropTypes.refObject])
	} : {};
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 569 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _isNil2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/isNil\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _memoize2 = _interopRequireDefault(__webpack_require__(194));

	var _lib = __webpack_require__(256);

	var toRef = (0, _memoize2["default"])(function (node) {
	  return {
	    current: node
	  };
	});
	/**
	 * Given `this.props`, return a `node` value or undefined.
	 *
	 * @param {object|React.RefObject} props Component's props
	 * @return {React.RefObject|undefined}
	 */

	var getNodeRefFromProps = function getNodeRefFromProps(props) {
	  var node = props.node;

	  if ((0, _lib.isBrowser)()) {
	    if ((0, _lib.isRefObject)(node)) return node;
	    return (0, _isNil2["default"])(node) ? toRef(document.body) : toRef(node);
	  }
	};

	var _default = getNodeRefFromProps;
	exports["default"] = _default;

/***/ }),
/* 570 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _slicedToArray2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/slicedToArray\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _forEach2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/forEach\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _computeClassNames = _interopRequireDefault(__webpack_require__(571));

	var _computeClassNamesDifference = _interopRequireDefault(__webpack_require__(584));

	var prevClassNames = new Map();
	/**
	 * @param {React.RefObject} nodeRef
	 * @param {Object[]} components
	 */

	var handleClassNamesChange = function handleClassNamesChange(nodeRef, components) {
	  var currentClassNames = (0, _computeClassNames["default"])(components);

	  var _computeClassNamesDif = (0, _computeClassNamesDifference["default"])(prevClassNames.get(nodeRef), currentClassNames),
	      _computeClassNamesDif2 = (0, _slicedToArray2["default"])(_computeClassNamesDif, 2),
	      forAdd = _computeClassNamesDif2[0],
	      forRemoval = _computeClassNamesDif2[1];

	  if (nodeRef.current) {
	    (0, _forEach2["default"])(forAdd, function (className) {
	      return nodeRef.current.classList.add(className);
	    });
	    (0, _forEach2["default"])(forRemoval, function (className) {
	      return nodeRef.current.classList.remove(className);
	    });
	  }

	  prevClassNames.set(nodeRef, currentClassNames);
	};

	var _default = handleClassNamesChange;
	exports["default"] = _default;

/***/ }),
/* 571 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _uniq2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/fp/uniq\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _identity2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/fp/identity\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _filter2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/fp/filter\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _split2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/fp/split\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _flatMap2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/fp/flatMap\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _map2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/fp/map\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _toArray2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/fp/toArray\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _flow2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/fp/flow\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var computeClassNames = (0, _flow2["default"])(_toArray2["default"], (0, _map2["default"])('props.className'), (0, _flatMap2["default"])((0, _split2["default"])(/\s+/)), (0, _filter2["default"])(_identity2["default"]), _uniq2["default"]);
	var _default = computeClassNames;
	exports["default"] = _default;

/***/ }),
/* 572 */,
/* 573 */,
/* 574 */,
/* 575 */,
/* 576 */,
/* 577 */,
/* 578 */,
/* 579 */,
/* 580 */,
/* 581 */,
/* 582 */,
/* 583 */,
/* 584 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _difference2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/difference\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var computeClassNamesDifference = function computeClassNamesDifference(prevClassNames, currentClassNames) {
	  return [(0, _difference2["default"])(currentClassNames, prevClassNames), (0, _difference2["default"])(prevClassNames, currentClassNames)];
	};

	var _default = computeClassNamesDifference;
	exports["default"] = _default;

/***/ }),
/* 585 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _classCallCheck2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/classCallCheck\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _defineProperty2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/defineProperty\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var NodeRegistry = function NodeRegistry() {
	  var _this = this;

	  (0, _classCallCheck2["default"])(this, NodeRegistry);
	  (0, _defineProperty2["default"])(this, "add", function (nodeRef, component) {
	    if (_this.nodes.has(nodeRef)) {
	      var set = _this.nodes.get(nodeRef);

	      set.add(component);
	      return;
	    }

	    _this.nodes.set(nodeRef, new Set([component]));
	  });
	  (0, _defineProperty2["default"])(this, "del", function (nodeRef, component) {
	    if (!_this.nodes.has(nodeRef)) return;

	    var set = _this.nodes.get(nodeRef);

	    if (set.size === 1) {
	      _this.nodes["delete"](nodeRef);

	      return;
	    }

	    set["delete"](component);
	  });
	  (0, _defineProperty2["default"])(this, "emit", function (nodeRef, callback) {
	    callback(nodeRef, _this.nodes.get(nodeRef));
	  });
	  this.nodes = new Map();
	};

	exports["default"] = NodeRegistry;

/***/ }),
/* 586 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _extends2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/extends\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _classnames = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"classnames\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _propTypes = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"prop-types\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _react = _interopRequireDefault(__webpack_require__(3));

	var _lib = __webpack_require__(256);

	/**
	 * A modal can have a header.
	 */
	function ModalHeader(props) {
	  var children = props.children,
	      className = props.className,
	      content = props.content;
	  var classes = (0, _classnames["default"])(className, 'header');
	  var rest = (0, _lib.getUnhandledProps)(ModalHeader, props);
	  var ElementType = (0, _lib.getElementType)(ModalHeader, props);
	  return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	    className: classes
	  }), _lib.childrenUtils.isNil(children) ? content : children);
	}

	ModalHeader.handledProps = ["as", "children", "className", "content"];
	ModalHeader.propTypes = process.env.NODE_ENV !== "production" ? {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Primary content. */
	  children: _propTypes["default"].node,

	  /** Additional classes. */
	  className: _propTypes["default"].string,

	  /** Shorthand for primary content. */
	  content: _lib.customPropTypes.contentShorthand
	} : {};
	ModalHeader.create = (0, _lib.createShorthandFactory)(ModalHeader, function (content) {
	  return {
	    content: content
	  };
	});
	var _default = ModalHeader;
	exports["default"] = _default;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 587 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _extends2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/extends\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _classnames = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"classnames\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _propTypes = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"prop-types\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _react = _interopRequireDefault(__webpack_require__(3));

	var _lib = __webpack_require__(256);

	/**
	 * A modal can contain content.
	 */
	function ModalContent(props) {
	  var children = props.children,
	      className = props.className,
	      content = props.content,
	      image = props.image,
	      scrolling = props.scrolling;
	  var classes = (0, _classnames["default"])(className, (0, _lib.useKeyOnly)(image, 'image'), (0, _lib.useKeyOnly)(scrolling, 'scrolling'), 'content');
	  var rest = (0, _lib.getUnhandledProps)(ModalContent, props);
	  var ElementType = (0, _lib.getElementType)(ModalContent, props);
	  return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	    className: classes
	  }), _lib.childrenUtils.isNil(children) ? content : children);
	}

	ModalContent.handledProps = ["as", "children", "className", "content", "image", "scrolling"];
	ModalContent.propTypes = process.env.NODE_ENV !== "production" ? {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Primary content. */
	  children: _propTypes["default"].node,

	  /** Additional classes. */
	  className: _propTypes["default"].string,

	  /** Shorthand for primary content. */
	  content: _lib.customPropTypes.contentShorthand,

	  /** A modal can contain image content. */
	  image: _propTypes["default"].bool,

	  /** A modal can use the entire size of the screen. */
	  scrolling: _propTypes["default"].bool
	} : {};
	ModalContent.create = (0, _lib.createShorthandFactory)(ModalContent, function (content) {
	  return {
	    content: content
	  };
	});
	var _default = ModalContent;
	exports["default"] = _default;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 588 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";

	var _interopRequireWildcard = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireWildcard\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _extends2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/extends\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _classCallCheck2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/classCallCheck\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _createClass2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/createClass\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/possibleConstructorReturn\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _getPrototypeOf3 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/getPrototypeOf\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _assertThisInitialized2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/assertThisInitialized\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _inherits2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/inherits\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _defineProperty2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/defineProperty\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _map2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/map\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _invoke2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/invoke\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _classnames = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"classnames\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _propTypes = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"prop-types\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _react = _interopRequireWildcard(__webpack_require__(3));

	var _lib = __webpack_require__(256);

	var _Button = _interopRequireDefault(__webpack_require__(535));

	/**
	 * A modal can contain a row of actions.
	 */
	var ModalActions =
	/*#__PURE__*/
	function (_Component) {
	  (0, _inherits2["default"])(ModalActions, _Component);

	  function ModalActions() {
	    var _getPrototypeOf2;

	    var _this;

	    (0, _classCallCheck2["default"])(this, ModalActions);

	    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    _this = (0, _possibleConstructorReturn2["default"])(this, (_getPrototypeOf2 = (0, _getPrototypeOf3["default"])(ModalActions)).call.apply(_getPrototypeOf2, [this].concat(args)));
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "handleButtonOverrides", function (predefinedProps) {
	      return {
	        onClick: function onClick(e, buttonProps) {
	          (0, _invoke2["default"])(predefinedProps, 'onClick', e, buttonProps);
	          (0, _invoke2["default"])(_this.props, 'onActionClick', e, buttonProps);
	        }
	      };
	    });
	    return _this;
	  }

	  (0, _createClass2["default"])(ModalActions, [{
	    key: "render",
	    value: function render() {
	      var _this2 = this;

	      var _this$props = this.props,
	          actions = _this$props.actions,
	          children = _this$props.children,
	          className = _this$props.className,
	          content = _this$props.content;
	      var classes = (0, _classnames["default"])('actions', className);
	      var rest = (0, _lib.getUnhandledProps)(ModalActions, this.props);
	      var ElementType = (0, _lib.getElementType)(ModalActions, this.props);

	      if (!_lib.childrenUtils.isNil(children)) {
	        return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	          className: classes
	        }), children);
	      }

	      if (!_lib.childrenUtils.isNil(content)) {
	        return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	          className: classes
	        }), content);
	      }

	      return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	        className: classes
	      }), (0, _map2["default"])(actions, function (action) {
	        return _Button["default"].create(action, {
	          overrideProps: _this2.handleButtonOverrides
	        });
	      }));
	    }
	  }]);
	  return ModalActions;
	}(_react.Component);

	exports["default"] = ModalActions;
	(0, _defineProperty2["default"])(ModalActions, "handledProps", ["actions", "as", "children", "className", "content", "onActionClick"]);
	ModalActions.propTypes = process.env.NODE_ENV !== "production" ? {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Array of shorthand buttons. */
	  actions: _lib.customPropTypes.collectionShorthand,

	  /** Primary content. */
	  children: _propTypes["default"].node,

	  /** Additional classes. */
	  className: _propTypes["default"].string,

	  /** Shorthand for primary content. */
	  content: _lib.customPropTypes.contentShorthand,

	  /**
	   * Action onClick handler when using shorthand `actions`.
	   *
	   * @param {SyntheticEvent} event - React's original SyntheticEvent.
	   * @param {object} data - All props from the clicked action.
	   */
	  onActionClick: _lib.customPropTypes.every([_lib.customPropTypes.disallow(['children']), _propTypes["default"].func])
	} : {};
	ModalActions.create = (0, _lib.createShorthandFactory)(ModalActions, function (actions) {
	  return {
	    actions: actions
	  };
	});
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 589 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _extends2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/extends\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _classnames = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"classnames\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _propTypes = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"prop-types\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _react = _interopRequireDefault(__webpack_require__(3));

	var _lib = __webpack_require__(256);

	/**
	 * A modal can contain a description with one or more paragraphs.
	 */
	function ModalDescription(props) {
	  var children = props.children,
	      className = props.className,
	      content = props.content;
	  var classes = (0, _classnames["default"])('description', className);
	  var rest = (0, _lib.getUnhandledProps)(ModalDescription, props);
	  var ElementType = (0, _lib.getElementType)(ModalDescription, props);
	  return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	    className: classes
	  }), _lib.childrenUtils.isNil(children) ? content : children);
	}

	ModalDescription.handledProps = ["as", "children", "className", "content"];
	ModalDescription.propTypes = process.env.NODE_ENV !== "production" ? {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Primary content. */
	  children: _propTypes["default"].node,

	  /** Additional classes. */
	  className: _propTypes["default"].string,

	  /** Shorthand for primary content. */
	  content: _lib.customPropTypes.contentShorthand
	} : {};
	var _default = ModalDescription;
	exports["default"] = _default;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 590 */
/***/ (function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.isLegacy = exports.getLegacyStyles = exports.canFit = void 0;
	// https://github.com/Semantic-Org/Semantic-UI/blob/2.4.1/src/definitions/modules/modal.js#L956
	var OFFSET = 0; // https://github.com/Semantic-Org/Semantic-UI/blob/2.4.1/src/definitions/modules/modal.js#L990

	var PADDING = 50;
	/**
	 * Ensures that modal can fit viewport without scroll.
	 *
	 * @param modalRect {DOMRect}
	 *
	 * @see https://github.com/Semantic-Org/Semantic-UI/blob/2.4.1/src/definitions/modules/modal.js#L608
	 */

	var canFit = function canFit(modalRect) {
	  // original: scrollHeight = $module.prop('scrollHeight'),
	  // is replaced by .height because scrollHeight provides integer which produces glitches
	  // https://github.com/Semantic-Org/Semantic-UI-React/issues/2221
	  var scrollHeight = modalRect.height + OFFSET; // $module.outerHeight() + settings.offset

	  var height = modalRect.height + OFFSET; // original: $(window).height()

	  var contextHeight = window.innerHeight;
	  var verticalCenter = contextHeight / 2;
	  var topOffset = -(height / 2); // padding with edge of page

	  var paddingHeight = PADDING;
	  var startPosition = verticalCenter + topOffset; // 0
	  // original: scrollHeight > height
	  //     ? startPosition + scrollHeight + paddingHeight < contextHeight
	  //     : height + paddingHeight * 2 < contextHeight

	  return startPosition + scrollHeight + paddingHeight < contextHeight;
	};
	/**
	 * Creates legacy styles for IE11.
	 *
	 * @param isFitted {Boolean}
	 * @param centered {Boolean}
	 * @param modalRect {DOMRect}
	 *
	 * @see https://github.com/Semantic-Org/Semantic-UI/blob/2.4.1/src/definitions/modules/modal.js#L718
	 */


	exports.canFit = canFit;

	var getLegacyStyles = function getLegacyStyles(isFitted, centered, modalRect) {
	  var marginTop = centered && isFitted ? -(modalRect.height / 2) : 0;
	  var marginLeft = -(modalRect.width / 2);
	  return {
	    marginLeft: marginLeft,
	    marginTop: marginTop
	  };
	}; // https://github.com/Semantic-Org/Semantic-UI/blob/2.4.1/src/definitions/modules/modal.js#L631

	/* istanbul ignore next */


	exports.getLegacyStyles = getLegacyStyles;

	var isLegacy = function isLegacy() {
	  return !window.ActiveXObject && 'ActiveXObject' in window;
	};

	exports.isLegacy = isLegacy;

/***/ }),
/* 591 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	Object.defineProperty(exports, "default", {
	  enumerable: true,
	  get: function get() {
	    return _Pagination["default"];
	  }
	});

	var _Pagination = _interopRequireDefault(__webpack_require__(592));

/***/ }),
/* 592 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _extends2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/extends\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _objectSpread2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/objectSpread\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _classCallCheck2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/classCallCheck\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _createClass2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/createClass\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/possibleConstructorReturn\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _getPrototypeOf3 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/getPrototypeOf\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _assertThisInitialized2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/assertThisInitialized\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _inherits2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/inherits\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _defineProperty2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/defineProperty\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _map2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/map\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _isNil2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/isNil\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _invoke2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/invoke\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _propTypes = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"prop-types\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _react = _interopRequireDefault(__webpack_require__(3));

	var _lib = __webpack_require__(256);

	var _Menu = _interopRequireDefault(__webpack_require__(593));

	var _PaginationItem = _interopRequireDefault(__webpack_require__(609));

	/**
	 * A component to render a pagination.
	 */
	var Pagination =
	/*#__PURE__*/
	function (_Component) {
	  (0, _inherits2["default"])(Pagination, _Component);

	  function Pagination() {
	    var _getPrototypeOf2;

	    var _this;

	    (0, _classCallCheck2["default"])(this, Pagination);

	    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    _this = (0, _possibleConstructorReturn2["default"])(this, (_getPrototypeOf2 = (0, _getPrototypeOf3["default"])(Pagination)).call.apply(_getPrototypeOf2, [this].concat(args)));
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "handleItemClick", function (e, _ref) {
	      var nextActivePage = _ref.value;
	      var prevActivePage = _this.state.activePage; // Heads up! We need the cast to the "number" type there, as `activePage` can be a string

	      if (+prevActivePage === +nextActivePage) return;

	      _this.trySetState({
	        activePage: nextActivePage
	      });

	      (0, _invoke2["default"])(_this.props, 'onPageChange', e, (0, _objectSpread2["default"])({}, _this.props, {
	        activePage: nextActivePage
	      }));
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "handleItemOverrides", function (active, type, value) {
	      return function (predefinedProps) {
	        return {
	          active: active,
	          type: type,
	          key: "".concat(type, "-").concat(value),
	          onClick: function onClick(e, itemProps) {
	            (0, _invoke2["default"])(predefinedProps, 'onClick', e, itemProps);
	            if (itemProps.type !== 'ellipsisItem') _this.handleItemClick(e, itemProps);
	          }
	        };
	      };
	    });
	    return _this;
	  }

	  (0, _createClass2["default"])(Pagination, [{
	    key: "render",
	    value: function render() {
	      var _this2 = this;

	      var _this$props = this.props,
	          ariaLabel = _this$props['aria-label'],
	          boundaryRange = _this$props.boundaryRange,
	          disabled = _this$props.disabled,
	          ellipsisItem = _this$props.ellipsisItem,
	          siblingRange = _this$props.siblingRange,
	          totalPages = _this$props.totalPages;
	      var activePage = this.state.activePage;
	      var items = (0, _lib.createPaginationItems)({
	        activePage: activePage,
	        boundaryRange: boundaryRange,
	        hideEllipsis: (0, _isNil2["default"])(ellipsisItem),
	        siblingRange: siblingRange,
	        totalPages: totalPages
	      });
	      var rest = (0, _lib.getUnhandledProps)(Pagination, this.props);
	      return _react["default"].createElement(_Menu["default"], (0, _extends2["default"])({}, rest, {
	        "aria-label": ariaLabel,
	        pagination: true,
	        role: "navigation"
	      }), (0, _map2["default"])(items, function (_ref2) {
	        var active = _ref2.active,
	            type = _ref2.type,
	            value = _ref2.value;
	        return _PaginationItem["default"].create(_this2.props[type], {
	          defaultProps: {
	            content: value,
	            disabled: disabled,
	            value: value
	          },
	          overrideProps: _this2.handleItemOverrides(active, type, value)
	        });
	      }));
	    }
	  }]);
	  return Pagination;
	}(_lib.AutoControlledComponent);

	exports["default"] = Pagination;
	(0, _defineProperty2["default"])(Pagination, "autoControlledProps", ['activePage']);
	(0, _defineProperty2["default"])(Pagination, "defaultProps", {
	  'aria-label': 'Pagination Navigation',
	  boundaryRange: 1,
	  ellipsisItem: '...',
	  firstItem: {
	    'aria-label': 'First item',
	    content: '«'
	  },
	  lastItem: {
	    'aria-label': 'Last item',
	    content: '»'
	  },
	  nextItem: {
	    'aria-label': 'Next item',
	    content: '⟩'
	  },
	  pageItem: {},
	  prevItem: {
	    'aria-label': 'Previous item',
	    content: '⟨'
	  },
	  siblingRange: 1
	});
	(0, _defineProperty2["default"])(Pagination, "Item", _PaginationItem["default"]);
	(0, _defineProperty2["default"])(Pagination, "handledProps", ["activePage", "aria-label", "boundaryRange", "defaultActivePage", "disabled", "ellipsisItem", "firstItem", "lastItem", "nextItem", "onPageChange", "pageItem", "prevItem", "siblingRange", "totalPages"]);
	Pagination.propTypes = process.env.NODE_ENV !== "production" ? {
	  /** A pagination item can have an aria label. */
	  'aria-label': _propTypes["default"].string,

	  /** Initial activePage value. */
	  defaultActivePage: _propTypes["default"].oneOfType([_propTypes["default"].number, _propTypes["default"].string]),

	  /** Index of the currently active page. */
	  activePage: _propTypes["default"].oneOfType([_propTypes["default"].number, _propTypes["default"].string]),

	  /** Number of always visible pages at the beginning and end. */
	  boundaryRange: _propTypes["default"].oneOfType([_propTypes["default"].number, _propTypes["default"].string]),

	  /** A pagination can be disabled. */
	  disabled: _propTypes["default"].bool,

	  /** A shorthand for PaginationItem. */
	  ellipsisItem: _lib.customPropTypes.itemShorthand,

	  /** A shorthand for PaginationItem. */
	  firstItem: _lib.customPropTypes.itemShorthand,

	  /** A shorthand for PaginationItem. */
	  lastItem: _lib.customPropTypes.itemShorthand,

	  /** A shorthand for PaginationItem. */
	  nextItem: _lib.customPropTypes.itemShorthand,

	  /** A shorthand for PaginationItem. */
	  pageItem: _lib.customPropTypes.itemShorthand,

	  /** A shorthand for PaginationItem. */
	  prevItem: _lib.customPropTypes.itemShorthand,

	  /**
	   * Called on change of an active page.
	   *
	   * @param {SyntheticEvent} event - React's original SyntheticEvent.
	   * @param {object} data - All props.
	   */
	  onPageChange: _propTypes["default"].func,

	  /** Number of always visible pages before and after the current one. */
	  siblingRange: _propTypes["default"].oneOfType([_propTypes["default"].number, _propTypes["default"].string]),

	  /** Total number of pages. */
	  totalPages: _propTypes["default"].oneOfType([_propTypes["default"].number, _propTypes["default"].string]).isRequired
	} : {};
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 593 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	Object.defineProperty(exports, "default", {
	  enumerable: true,
	  get: function get() {
	    return _Menu["default"];
	  }
	});

	var _Menu = _interopRequireDefault(__webpack_require__(594));

/***/ }),
/* 594 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _extends2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/extends\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _classCallCheck2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/classCallCheck\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _createClass2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/createClass\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/possibleConstructorReturn\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _getPrototypeOf3 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/getPrototypeOf\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _assertThisInitialized2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/assertThisInitialized\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _inherits2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/inherits\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _defineProperty2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/defineProperty\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _map2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/map\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _invoke2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/invoke\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _without2 = _interopRequireDefault(__webpack_require__(542));

	var _classnames = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"classnames\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _propTypes = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"prop-types\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _react = _interopRequireDefault(__webpack_require__(3));

	var _lib = __webpack_require__(256);

	var _MenuHeader = _interopRequireDefault(__webpack_require__(595));

	var _MenuItem = _interopRequireDefault(__webpack_require__(596));

	var _MenuMenu = _interopRequireDefault(__webpack_require__(608));

	/**
	 * A menu displays grouped navigation actions.
	 * @see Dropdown
	 */
	var Menu =
	/*#__PURE__*/
	function (_Component) {
	  (0, _inherits2["default"])(Menu, _Component);

	  function Menu() {
	    var _getPrototypeOf2;

	    var _this;

	    (0, _classCallCheck2["default"])(this, Menu);

	    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    _this = (0, _possibleConstructorReturn2["default"])(this, (_getPrototypeOf2 = (0, _getPrototypeOf3["default"])(Menu)).call.apply(_getPrototypeOf2, [this].concat(args)));
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "handleItemOverrides", function (predefinedProps) {
	      return {
	        onClick: function onClick(e, itemProps) {
	          var index = itemProps.index;

	          _this.trySetState({
	            activeIndex: index
	          });

	          (0, _invoke2["default"])(predefinedProps, 'onClick', e, itemProps);
	          (0, _invoke2["default"])(_this.props, 'onItemClick', e, itemProps);
	        }
	      };
	    });
	    return _this;
	  }

	  (0, _createClass2["default"])(Menu, [{
	    key: "renderItems",
	    value: function renderItems() {
	      var _this2 = this;

	      var items = this.props.items;
	      var activeIndex = this.state.activeIndex;
	      return (0, _map2["default"])(items, function (item, index) {
	        return _MenuItem["default"].create(item, {
	          defaultProps: {
	            active: parseInt(activeIndex, 10) === index,
	            index: index
	          },
	          overrideProps: _this2.handleItemOverrides
	        });
	      });
	    }
	  }, {
	    key: "render",
	    value: function render() {
	      var _this$props = this.props,
	          attached = _this$props.attached,
	          borderless = _this$props.borderless,
	          children = _this$props.children,
	          className = _this$props.className,
	          color = _this$props.color,
	          compact = _this$props.compact,
	          fixed = _this$props.fixed,
	          floated = _this$props.floated,
	          fluid = _this$props.fluid,
	          icon = _this$props.icon,
	          inverted = _this$props.inverted,
	          pagination = _this$props.pagination,
	          pointing = _this$props.pointing,
	          secondary = _this$props.secondary,
	          size = _this$props.size,
	          stackable = _this$props.stackable,
	          tabular = _this$props.tabular,
	          text = _this$props.text,
	          vertical = _this$props.vertical,
	          widths = _this$props.widths;
	      var classes = (0, _classnames["default"])('ui', color, size, (0, _lib.useKeyOnly)(borderless, 'borderless'), (0, _lib.useKeyOnly)(compact, 'compact'), (0, _lib.useKeyOnly)(fluid, 'fluid'), (0, _lib.useKeyOnly)(inverted, 'inverted'), (0, _lib.useKeyOnly)(pagination, 'pagination'), (0, _lib.useKeyOnly)(pointing, 'pointing'), (0, _lib.useKeyOnly)(secondary, 'secondary'), (0, _lib.useKeyOnly)(stackable, 'stackable'), (0, _lib.useKeyOnly)(text, 'text'), (0, _lib.useKeyOnly)(vertical, 'vertical'), (0, _lib.useKeyOrValueAndKey)(attached, 'attached'), (0, _lib.useKeyOrValueAndKey)(floated, 'floated'), (0, _lib.useKeyOrValueAndKey)(icon, 'icon'), (0, _lib.useKeyOrValueAndKey)(tabular, 'tabular'), (0, _lib.useValueAndKey)(fixed, 'fixed'), (0, _lib.useWidthProp)(widths, 'item'), className, 'menu');
	      var rest = (0, _lib.getUnhandledProps)(Menu, this.props);
	      var ElementType = (0, _lib.getElementType)(Menu, this.props);
	      return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	        className: classes
	      }), _lib.childrenUtils.isNil(children) ? this.renderItems() : children);
	    }
	  }]);
	  return Menu;
	}(_lib.AutoControlledComponent);

	(0, _defineProperty2["default"])(Menu, "autoControlledProps", ['activeIndex']);
	(0, _defineProperty2["default"])(Menu, "Header", _MenuHeader["default"]);
	(0, _defineProperty2["default"])(Menu, "Item", _MenuItem["default"]);
	(0, _defineProperty2["default"])(Menu, "Menu", _MenuMenu["default"]);
	(0, _defineProperty2["default"])(Menu, "handledProps", ["activeIndex", "as", "attached", "borderless", "children", "className", "color", "compact", "defaultActiveIndex", "fixed", "floated", "fluid", "icon", "inverted", "items", "onItemClick", "pagination", "pointing", "secondary", "size", "stackable", "tabular", "text", "vertical", "widths"]);
	Menu.propTypes = process.env.NODE_ENV !== "production" ? {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Index of the currently active item. */
	  activeIndex: _propTypes["default"].oneOfType([_propTypes["default"].number, _propTypes["default"].string]),

	  /** A menu may be attached to other content segments. */
	  attached: _propTypes["default"].oneOfType([_propTypes["default"].bool, _propTypes["default"].oneOf(['top', 'bottom'])]),

	  /** A menu item or menu can have no borders. */
	  borderless: _propTypes["default"].bool,

	  /** Primary content. */
	  children: _propTypes["default"].node,

	  /** Additional classes. */
	  className: _propTypes["default"].string,

	  /** Additional colors can be specified. */
	  color: _propTypes["default"].oneOf(_lib.SUI.COLORS),

	  /** A menu can take up only the space necessary to fit its content. */
	  compact: _propTypes["default"].bool,

	  /** Initial activeIndex value. */
	  defaultActiveIndex: _propTypes["default"].oneOfType([_propTypes["default"].number, _propTypes["default"].string]),

	  /** A menu can be fixed to a side of its context. */
	  fixed: _propTypes["default"].oneOf(['left', 'right', 'bottom', 'top']),

	  /** A menu can be floated. */
	  floated: _propTypes["default"].oneOfType([_propTypes["default"].bool, _propTypes["default"].oneOf(['right'])]),

	  /** A vertical menu may take the size of its container. */
	  fluid: _propTypes["default"].bool,

	  /** A menu may have just icons (bool) or labeled icons. */
	  icon: _propTypes["default"].oneOfType([_propTypes["default"].bool, _propTypes["default"].oneOf(['labeled'])]),

	  /** A menu may have its colors inverted to show greater contrast. */
	  inverted: _propTypes["default"].bool,

	  /** Shorthand array of props for Menu. */
	  items: _lib.customPropTypes.collectionShorthand,

	  /**
	   * onClick handler for MenuItem. Mutually exclusive with children.
	   *
	   * @param {SyntheticEvent} event - React's original SyntheticEvent.
	   * @param {object} data - All item props.
	   */
	  onItemClick: _lib.customPropTypes.every([_lib.customPropTypes.disallow(['children']), _propTypes["default"].func]),

	  /** A pagination menu is specially formatted to present links to pages of content. */
	  pagination: _propTypes["default"].bool,

	  /** A menu can point to show its relationship to nearby content. */
	  pointing: _propTypes["default"].bool,

	  /** A menu can adjust its appearance to de-emphasize its contents. */
	  secondary: _propTypes["default"].bool,

	  /** A menu can vary in size. */
	  size: _propTypes["default"].oneOf((0, _without2["default"])(_lib.SUI.SIZES, 'medium', 'big')),

	  /** A menu can stack at mobile resolutions. */
	  stackable: _propTypes["default"].bool,

	  /** A menu can be formatted to show tabs of information. */
	  tabular: _propTypes["default"].oneOfType([_propTypes["default"].bool, _propTypes["default"].oneOf(['right'])]),

	  /** A menu can be formatted for text content. */
	  text: _propTypes["default"].bool,

	  /** A vertical menu displays elements vertically. */
	  vertical: _propTypes["default"].bool,

	  /** A menu can have its items divided evenly. */
	  widths: _propTypes["default"].oneOf(_lib.SUI.WIDTHS)
	} : {};
	Menu.create = (0, _lib.createShorthandFactory)(Menu, function (items) {
	  return {
	    items: items
	  };
	});
	var _default = Menu;
	exports["default"] = _default;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 595 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _extends2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/extends\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _classnames = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"classnames\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _propTypes = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"prop-types\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _react = _interopRequireDefault(__webpack_require__(3));

	var _lib = __webpack_require__(256);

	/**
	 * A menu item may include a header or may itself be a header.
	 */
	function MenuHeader(props) {
	  var children = props.children,
	      className = props.className,
	      content = props.content;
	  var classes = (0, _classnames["default"])('header', className);
	  var rest = (0, _lib.getUnhandledProps)(MenuHeader, props);
	  var ElementType = (0, _lib.getElementType)(MenuHeader, props);
	  return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	    className: classes
	  }), _lib.childrenUtils.isNil(children) ? content : children);
	}

	MenuHeader.handledProps = ["as", "children", "className", "content"];
	MenuHeader.propTypes = process.env.NODE_ENV !== "production" ? {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Primary content. */
	  children: _propTypes["default"].node,

	  /** Additional classes. */
	  className: _propTypes["default"].string,

	  /** Shorthand for primary content. */
	  content: _lib.customPropTypes.contentShorthand
	} : {};
	var _default = MenuHeader;
	exports["default"] = _default;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 596 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";

	var _interopRequireWildcard = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireWildcard\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _extends2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/extends\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _classCallCheck2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/classCallCheck\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _createClass2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/createClass\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/possibleConstructorReturn\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _getPrototypeOf3 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/getPrototypeOf\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _assertThisInitialized2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/assertThisInitialized\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _inherits2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/inherits\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _defineProperty2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/defineProperty\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _startCase2 = _interopRequireDefault(__webpack_require__(597));

	var _invoke2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/invoke\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _classnames = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"classnames\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _propTypes = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"prop-types\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _react = _interopRequireWildcard(__webpack_require__(3));

	var _lib = __webpack_require__(256);

	var _Icon = _interopRequireDefault(__webpack_require__(566));

	/**
	 * A menu can contain an item.
	 */
	var MenuItem =
	/*#__PURE__*/
	function (_Component) {
	  (0, _inherits2["default"])(MenuItem, _Component);

	  function MenuItem() {
	    var _getPrototypeOf2;

	    var _this;

	    (0, _classCallCheck2["default"])(this, MenuItem);

	    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    _this = (0, _possibleConstructorReturn2["default"])(this, (_getPrototypeOf2 = (0, _getPrototypeOf3["default"])(MenuItem)).call.apply(_getPrototypeOf2, [this].concat(args)));
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "handleClick", function (e) {
	      var disabled = _this.props.disabled;
	      if (!disabled) (0, _invoke2["default"])(_this.props, 'onClick', e, _this.props);
	    });
	    return _this;
	  }

	  (0, _createClass2["default"])(MenuItem, [{
	    key: "render",
	    value: function render() {
	      var _this$props = this.props,
	          active = _this$props.active,
	          children = _this$props.children,
	          className = _this$props.className,
	          color = _this$props.color,
	          content = _this$props.content,
	          disabled = _this$props.disabled,
	          fitted = _this$props.fitted,
	          header = _this$props.header,
	          icon = _this$props.icon,
	          link = _this$props.link,
	          name = _this$props.name,
	          onClick = _this$props.onClick,
	          position = _this$props.position;
	      var classes = (0, _classnames["default"])(color, position, (0, _lib.useKeyOnly)(active, 'active'), (0, _lib.useKeyOnly)(disabled, 'disabled'), (0, _lib.useKeyOnly)(icon === true || icon && !(name || content), 'icon'), (0, _lib.useKeyOnly)(header, 'header'), (0, _lib.useKeyOnly)(link, 'link'), (0, _lib.useKeyOrValueAndKey)(fitted, 'fitted'), 'item', className);
	      var ElementType = (0, _lib.getElementType)(MenuItem, this.props, function () {
	        if (onClick) return 'a';
	      });
	      var rest = (0, _lib.getUnhandledProps)(MenuItem, this.props);

	      if (!_lib.childrenUtils.isNil(children)) {
	        return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	          className: classes,
	          onClick: this.handleClick
	        }), children);
	      }

	      return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	        className: classes,
	        onClick: this.handleClick
	      }), _Icon["default"].create(icon, {
	        autoGenerateKey: false
	      }), _lib.childrenUtils.isNil(content) ? (0, _startCase2["default"])(name) : content);
	    }
	  }]);
	  return MenuItem;
	}(_react.Component);

	exports["default"] = MenuItem;
	(0, _defineProperty2["default"])(MenuItem, "handledProps", ["active", "as", "children", "className", "color", "content", "disabled", "fitted", "header", "icon", "index", "link", "name", "onClick", "position"]);
	MenuItem.propTypes = process.env.NODE_ENV !== "production" ? {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** A menu item can be active. */
	  active: _propTypes["default"].bool,

	  /** Primary content. */
	  children: _propTypes["default"].node,

	  /** Additional classes. */
	  className: _propTypes["default"].string,

	  /** Additional colors can be specified. */
	  color: _propTypes["default"].oneOf(_lib.SUI.COLORS),

	  /** Shorthand for primary content. */
	  content: _lib.customPropTypes.contentShorthand,

	  /** A menu item can be disabled. */
	  disabled: _propTypes["default"].bool,

	  /** A menu item or menu can remove element padding, vertically or horizontally. */
	  fitted: _propTypes["default"].oneOfType([_propTypes["default"].bool, _propTypes["default"].oneOf(['horizontally', 'vertically'])]),

	  /** A menu item may include a header or may itself be a header. */
	  header: _propTypes["default"].bool,

	  /** MenuItem can be only icon. */
	  icon: _propTypes["default"].oneOfType([_propTypes["default"].bool, _lib.customPropTypes.itemShorthand]),

	  /** MenuItem index inside Menu. */
	  index: _propTypes["default"].number,

	  /** A menu item can be link. */
	  link: _propTypes["default"].bool,

	  /** Internal name of the MenuItem. */
	  name: _propTypes["default"].string,

	  /**
	   * Called on click. When passed, the component will render as an `a`
	   * tag by default instead of a `div`.
	   *
	   * @param {SyntheticEvent} event - React's original SyntheticEvent.
	   * @param {object} data - All props.
	   */
	  onClick: _propTypes["default"].func,

	  /** A menu item can take left or right position. */
	  position: _propTypes["default"].oneOf(['left', 'right'])
	} : {};
	MenuItem.create = (0, _lib.createShorthandFactory)(MenuItem, function (val) {
	  return {
	    content: val,
	    name: val
	  };
	});
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 597 */
/***/ (function(module, exports, __webpack_require__) {

	var createCompounder = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"./_createCompounder\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())),
	    upperFirst = __webpack_require__(606);

	/**
	 * Converts `string` to
	 * [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).
	 *
	 * @static
	 * @memberOf _
	 * @since 3.1.0
	 * @category String
	 * @param {string} [string=''] The string to convert.
	 * @returns {string} Returns the start cased string.
	 * @example
	 *
	 * _.startCase('--foo-bar--');
	 * // => 'Foo Bar'
	 *
	 * _.startCase('fooBar');
	 * // => 'Foo Bar'
	 *
	 * _.startCase('__FOO_BAR__');
	 * // => 'FOO BAR'
	 */
	var startCase = createCompounder(function(result, word, index) {
	  return result + (index ? ' ' : '') + upperFirst(word);
	});

	module.exports = startCase;


/***/ }),
/* 598 */,
/* 599 */,
/* 600 */,
/* 601 */,
/* 602 */,
/* 603 */,
/* 604 */,
/* 605 */,
/* 606 */
/***/ (function(module, exports, __webpack_require__) {

	var createCaseFirst = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"./_createCaseFirst\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	/**
	 * Converts the first character of `string` to upper case.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category String
	 * @param {string} [string=''] The string to convert.
	 * @returns {string} Returns the converted string.
	 * @example
	 *
	 * _.upperFirst('fred');
	 * // => 'Fred'
	 *
	 * _.upperFirst('FRED');
	 * // => 'FRED'
	 */
	var upperFirst = createCaseFirst('toUpperCase');

	module.exports = upperFirst;


/***/ }),
/* 607 */,
/* 608 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _extends2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/extends\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _classnames = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"classnames\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _propTypes = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"prop-types\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _react = _interopRequireDefault(__webpack_require__(3));

	var _lib = __webpack_require__(256);

	/**
	 * A menu can contain a sub menu.
	 */
	function MenuMenu(props) {
	  var children = props.children,
	      className = props.className,
	      content = props.content,
	      position = props.position;
	  var classes = (0, _classnames["default"])(position, 'menu', className);
	  var rest = (0, _lib.getUnhandledProps)(MenuMenu, props);
	  var ElementType = (0, _lib.getElementType)(MenuMenu, props);
	  return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	    className: classes
	  }), _lib.childrenUtils.isNil(children) ? content : children);
	}

	MenuMenu.handledProps = ["as", "children", "className", "content", "position"];
	MenuMenu.propTypes = process.env.NODE_ENV !== "production" ? {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Primary content. */
	  children: _propTypes["default"].node,

	  /** Additional classes. */
	  className: _propTypes["default"].string,

	  /** Shorthand for primary content. */
	  content: _lib.customPropTypes.contentShorthand,

	  /** A sub menu can take left or right position. */
	  position: _propTypes["default"].oneOf(['left', 'right'])
	} : {};
	var _default = MenuMenu;
	exports["default"] = _default;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 609 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _classCallCheck2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/classCallCheck\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _createClass2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/createClass\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/possibleConstructorReturn\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _getPrototypeOf3 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/getPrototypeOf\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _assertThisInitialized2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/assertThisInitialized\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _inherits2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/inherits\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _defineProperty2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/defineProperty\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _invoke2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/invoke\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _keyboardKey = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"keyboard-key\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _propTypes = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"prop-types\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _react = __webpack_require__(3);

	var _lib = __webpack_require__(256);

	var _MenuItem = _interopRequireDefault(__webpack_require__(596));

	/**
	 * An item of a pagination.
	 */
	var PaginationItem =
	/*#__PURE__*/
	function (_Component) {
	  (0, _inherits2["default"])(PaginationItem, _Component);

	  function PaginationItem() {
	    var _getPrototypeOf2;

	    var _this;

	    (0, _classCallCheck2["default"])(this, PaginationItem);

	    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    _this = (0, _possibleConstructorReturn2["default"])(this, (_getPrototypeOf2 = (0, _getPrototypeOf3["default"])(PaginationItem)).call.apply(_getPrototypeOf2, [this].concat(args)));
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "handleClick", function (e) {
	      (0, _invoke2["default"])(_this.props, 'onClick', e, _this.props);
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "handleKeyDown", function (e) {
	      (0, _invoke2["default"])(_this.props, 'onKeyDown', e, _this.props);
	      if (_keyboardKey["default"].getCode(e) === _keyboardKey["default"].Enter) (0, _invoke2["default"])(_this.props, 'onClick', e, _this.props);
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "handleOverrides", function () {
	      return {
	        onClick: _this.handleClick,
	        onKeyDown: _this.handleKeyDown
	      };
	    });
	    return _this;
	  }

	  (0, _createClass2["default"])(PaginationItem, [{
	    key: "render",
	    value: function render() {
	      var _this$props = this.props,
	          active = _this$props.active,
	          type = _this$props.type;
	      var disabled = this.props.disabled || type === 'ellipsisItem';
	      return _MenuItem["default"].create(this.props, {
	        defaultProps: {
	          active: active,
	          'aria-current': active,
	          'aria-disabled': disabled,
	          disabled: disabled,
	          onClick: this.handleClick,
	          onKeyDown: this.handleKeyDown,
	          tabIndex: disabled ? -1 : 0
	        },
	        overrideProps: this.handleOverrides
	      });
	    }
	  }]);
	  return PaginationItem;
	}(_react.Component);

	(0, _defineProperty2["default"])(PaginationItem, "handledProps", ["active", "disabled", "onClick", "onKeyDown", "type"]);
	PaginationItem.propTypes = process.env.NODE_ENV !== "production" ? {
	  /** A pagination item can be active. */
	  active: _propTypes["default"].bool,

	  /** A pagination item can be disabled. */
	  disabled: _propTypes["default"].bool,

	  /**
	   * Called on click.
	   *
	   * @param {SyntheticEvent} event - React's original SyntheticEvent.
	   * @param {object} data - All props.
	   */
	  onClick: _propTypes["default"].func,

	  /**
	   * Called on key down.
	   *
	   * @param {SyntheticEvent} event - React's original SyntheticEvent.
	   * @param {object} data - All props.
	   */
	  onKeyDown: _propTypes["default"].func,

	  /** A pagination should have a type. */
	  type: _propTypes["default"].oneOf(['ellipsisItem', 'firstItem', 'prevItem', 'pageItem', 'nextItem', 'lastItem'])
	} : {};
	PaginationItem.create = (0, _lib.createShorthandFactory)(PaginationItem, function (content) {
	  return {
	    content: content
	  };
	});
	var _default = PaginationItem;
	exports["default"] = _default;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 610 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	Object.defineProperty(exports, "default", {
	  enumerable: true,
	  get: function get() {
	    return _Radio["default"];
	  }
	});

	var _Radio = _interopRequireDefault(__webpack_require__(611));

/***/ }),
/* 611 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _extends2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/extends\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _react = _interopRequireDefault(__webpack_require__(3));

	var _lib = __webpack_require__(256);

	var _Checkbox = _interopRequireDefault(__webpack_require__(612));

	/**
	 * A Radio is sugar for <Checkbox radio />.
	 * Useful for exclusive groups of sliders or toggles.
	 * @see Checkbox
	 * @see Form
	 */
	function Radio(props) {
	  var slider = props.slider,
	      toggle = props.toggle,
	      type = props.type;
	  var rest = (0, _lib.getUnhandledProps)(Radio, props); // const ElementType = getElementType(Radio, props)
	  // radio, slider, toggle are exclusive
	  // use an undefined radio if slider or toggle are present

	  var radio = !(slider || toggle) || undefined;
	  return _react["default"].createElement(_Checkbox["default"], (0, _extends2["default"])({}, rest, {
	    type: type,
	    radio: radio,
	    slider: slider,
	    toggle: toggle
	  }));
	}

	Radio.handledProps = ["slider", "toggle", "type"];
	Radio.propTypes = process.env.NODE_ENV !== "production" ? {
	  /** Format to emphasize the current selection state. */
	  slider: _Checkbox["default"].propTypes.slider,

	  /** Format to show an on or off choice. */
	  toggle: _Checkbox["default"].propTypes.toggle,

	  /** HTML input type, either checkbox or radio. */
	  type: _Checkbox["default"].propTypes.type
	} : {};
	Radio.defaultProps = {
	  type: 'radio'
	};
	var _default = Radio;
	exports["default"] = _default;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 612 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	Object.defineProperty(exports, "default", {
	  enumerable: true,
	  get: function get() {
	    return _Checkbox["default"];
	  }
	});

	var _Checkbox = _interopRequireDefault(__webpack_require__(613));

/***/ }),
/* 613 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";

	var _interopRequireWildcard = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireWildcard\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _extends2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/extends\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _slicedToArray2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/slicedToArray\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _objectSpread2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/objectSpread\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _classCallCheck2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/classCallCheck\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _createClass2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/createClass\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/possibleConstructorReturn\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _getPrototypeOf3 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/getPrototypeOf\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _assertThisInitialized2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/assertThisInitialized\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _inherits2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/inherits\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _defineProperty2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/defineProperty\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _set2 = _interopRequireDefault(__webpack_require__(614));

	var _invoke2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/invoke\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _get2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/get\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _isNil2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/isNil\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _classnames = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"classnames\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _propTypes = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"prop-types\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _react = _interopRequireWildcard(__webpack_require__(3));

	var _Ref = _interopRequireDefault(__webpack_require__(537));

	var _lib = __webpack_require__(256);

	/**
	 * A checkbox allows a user to select a value from a small set of options, often binary.
	 * @see Form
	 * @see Radio
	 */
	var Checkbox =
	/*#__PURE__*/
	function (_Component) {
	  (0, _inherits2["default"])(Checkbox, _Component);

	  function Checkbox() {
	    var _getPrototypeOf2;

	    var _this;

	    (0, _classCallCheck2["default"])(this, Checkbox);

	    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    _this = (0, _possibleConstructorReturn2["default"])(this, (_getPrototypeOf2 = (0, _getPrototypeOf3["default"])(Checkbox)).call.apply(_getPrototypeOf2, [this].concat(args)));
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "inputRef", (0, _react.createRef)());
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "labelRef", (0, _react.createRef)());
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "canToggle", function () {
	      var _this$props = _this.props,
	          disabled = _this$props.disabled,
	          radio = _this$props.radio,
	          readOnly = _this$props.readOnly;
	      var checked = _this.state.checked;
	      return !disabled && !readOnly && !(radio && checked);
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "computeTabIndex", function () {
	      var _this$props2 = _this.props,
	          disabled = _this$props2.disabled,
	          tabIndex = _this$props2.tabIndex;
	      if (!(0, _isNil2["default"])(tabIndex)) return tabIndex;
	      return disabled ? -1 : 0;
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "handleClick", function (e) {
	      var id = _this.props.id;
	      var _this$state = _this.state,
	          checked = _this$state.checked,
	          indeterminate = _this$state.indeterminate;
	      var isInputClick = (0, _invoke2["default"])(_this.inputRef.current, 'contains', e.target);
	      var isLabelClick = (0, _invoke2["default"])(_this.labelRef.current, 'contains', e.target);
	      var isRootClick = !isLabelClick && !isInputClick;
	      var hasId = !(0, _isNil2["default"])(id);
	      var isLabelClickAndForwardedToInput = isLabelClick && hasId; // https://github.com/Semantic-Org/Semantic-UI-React/pull/3351

	      if (!isLabelClickAndForwardedToInput) {
	        (0, _invoke2["default"])(_this.props, 'onClick', e, (0, _objectSpread2["default"])({}, _this.props, {
	          checked: !checked,
	          indeterminate: !!indeterminate
	        }));
	      }

	      if (_this.isClickFromMouse) {
	        _this.isClickFromMouse = false;

	        if (isLabelClick && !hasId) {
	          _this.handleChange(e);
	        } // Changes should be triggered for the slider variation


	        if (isRootClick) {
	          _this.handleChange(e);
	        }

	        if (isLabelClick && hasId) {
	          // To prevent two clicks from being fired from the component we have to stop the propagation
	          // from the "input" click: https://github.com/Semantic-Org/Semantic-UI-React/issues/3433
	          e.stopPropagation();
	        }
	      }
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "handleChange", function (e) {
	      var checked = _this.state.checked;
	      if (!_this.canToggle()) return;
	      (0, _invoke2["default"])(_this.props, 'onChange', e, (0, _objectSpread2["default"])({}, _this.props, {
	        checked: !checked,
	        indeterminate: false
	      }));

	      _this.trySetState({
	        checked: !checked,
	        indeterminate: false
	      });
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "handleMouseDown", function (e) {
	      var _this$state2 = _this.state,
	          checked = _this$state2.checked,
	          indeterminate = _this$state2.indeterminate;
	      (0, _invoke2["default"])(_this.props, 'onMouseDown', e, (0, _objectSpread2["default"])({}, _this.props, {
	        checked: !!checked,
	        indeterminate: !!indeterminate
	      }));
	      (0, _invoke2["default"])(_this.inputRef.current, 'focus'); // Heads up!
	      // We need to call "preventDefault" to keep element focused.

	      e.preventDefault();
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "handleMouseUp", function (e) {
	      var _this$state3 = _this.state,
	          checked = _this$state3.checked,
	          indeterminate = _this$state3.indeterminate;
	      _this.isClickFromMouse = true;
	      (0, _invoke2["default"])(_this.props, 'onMouseUp', e, (0, _objectSpread2["default"])({}, _this.props, {
	        checked: !!checked,
	        indeterminate: !!indeterminate
	      }));
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "setIndeterminate", function () {
	      var indeterminate = _this.state.indeterminate;
	      (0, _set2["default"])(_this.inputRef, 'current.indeterminate', !!indeterminate);
	    });
	    return _this;
	  }

	  (0, _createClass2["default"])(Checkbox, [{
	    key: "componentDidMount",
	    value: function componentDidMount() {
	      this.setIndeterminate();
	    }
	  }, {
	    key: "componentDidUpdate",
	    value: function componentDidUpdate() {
	      this.setIndeterminate();
	    }
	  }, {
	    key: "render",
	    value: function render() {
	      var _this$props3 = this.props,
	          className = _this$props3.className,
	          disabled = _this$props3.disabled,
	          label = _this$props3.label,
	          id = _this$props3.id,
	          name = _this$props3.name,
	          radio = _this$props3.radio,
	          readOnly = _this$props3.readOnly,
	          slider = _this$props3.slider,
	          toggle = _this$props3.toggle,
	          type = _this$props3.type,
	          value = _this$props3.value;
	      var _this$state4 = this.state,
	          checked = _this$state4.checked,
	          indeterminate = _this$state4.indeterminate;
	      var classes = (0, _classnames["default"])('ui', (0, _lib.useKeyOnly)(checked, 'checked'), (0, _lib.useKeyOnly)(disabled, 'disabled'), (0, _lib.useKeyOnly)(indeterminate, 'indeterminate'), // auto apply fitted class to compact white space when there is no label
	      // https://semantic-ui.com/modules/checkbox.html#fitted
	      (0, _lib.useKeyOnly)((0, _isNil2["default"])(label), 'fitted'), (0, _lib.useKeyOnly)(radio, 'radio'), (0, _lib.useKeyOnly)(readOnly, 'read-only'), (0, _lib.useKeyOnly)(slider, 'slider'), (0, _lib.useKeyOnly)(toggle, 'toggle'), 'checkbox', className);
	      var unhandled = (0, _lib.getUnhandledProps)(Checkbox, this.props);
	      var ElementType = (0, _lib.getElementType)(Checkbox, this.props);

	      var _partitionHTMLProps = (0, _lib.partitionHTMLProps)(unhandled, {
	        htmlProps: _lib.htmlInputAttrs
	      }),
	          _partitionHTMLProps2 = (0, _slicedToArray2["default"])(_partitionHTMLProps, 2),
	          htmlInputProps = _partitionHTMLProps2[0],
	          rest = _partitionHTMLProps2[1]; // Heads Up!
	      // Do not remove empty labels, they are required by SUI CSS


	      var labelElement = (0, _lib.createHTMLLabel)(label, {
	        defaultProps: {
	          htmlFor: id
	        },
	        autoGenerateKey: false
	      }) || _react["default"].createElement("label", {
	        htmlFor: id
	      });

	      return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	        className: classes,
	        onClick: this.handleClick,
	        onChange: this.handleChange,
	        onMouseDown: this.handleMouseDown,
	        onMouseUp: this.handleMouseUp
	      }), _react["default"].createElement(_Ref["default"], {
	        innerRef: this.inputRef
	      }, _react["default"].createElement("input", (0, _extends2["default"])({}, htmlInputProps, {
	        checked: checked,
	        className: "hidden",
	        disabled: disabled,
	        id: id,
	        name: name,
	        readOnly: true,
	        tabIndex: this.computeTabIndex(),
	        type: type,
	        value: value
	      }))), _react["default"].createElement(_Ref["default"], {
	        innerRef: this.labelRef
	      }, labelElement));
	    }
	  }]);
	  return Checkbox;
	}(_lib.AutoControlledComponent);

	exports["default"] = Checkbox;
	(0, _defineProperty2["default"])(Checkbox, "defaultProps", {
	  type: 'checkbox'
	});
	(0, _defineProperty2["default"])(Checkbox, "autoControlledProps", ['checked', 'indeterminate']);
	(0, _defineProperty2["default"])(Checkbox, "handledProps", ["as", "checked", "className", "defaultChecked", "defaultIndeterminate", "disabled", "fitted", "id", "indeterminate", "label", "name", "onChange", "onClick", "onMouseDown", "onMouseUp", "radio", "readOnly", "slider", "tabIndex", "toggle", "type", "value"]);
	Checkbox.propTypes = process.env.NODE_ENV !== "production" ? {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Whether or not checkbox is checked. */
	  checked: _propTypes["default"].bool,

	  /** Additional classes. */
	  className: _propTypes["default"].string,

	  /** The initial value of checked. */
	  defaultChecked: _propTypes["default"].bool,

	  /** Whether or not checkbox is indeterminate. */
	  defaultIndeterminate: _propTypes["default"].bool,

	  /** A checkbox can appear disabled and be unable to change states */
	  disabled: _propTypes["default"].bool,

	  /** Removes padding for a label. Auto applied when there is no label. */
	  fitted: _propTypes["default"].bool,

	  /** A unique identifier. */
	  id: _propTypes["default"].oneOfType([_propTypes["default"].number, _propTypes["default"].string]),

	  /** Whether or not checkbox is indeterminate. */
	  indeterminate: _propTypes["default"].bool,

	  /** The text of the associated label element. */
	  label: _lib.customPropTypes.itemShorthand,

	  /** The HTML input name. */
	  name: _propTypes["default"].string,

	  /**
	   * Called when the user attempts to change the checked state.
	   *
	   * @param {SyntheticEvent} event - React's original SyntheticEvent.
	   * @param {object} data - All props and proposed checked/indeterminate state.
	   */
	  onChange: _propTypes["default"].func,

	  /**
	   * Called when the checkbox or label is clicked.
	   *
	   * @param {SyntheticEvent} event - React's original SyntheticEvent.
	   * @param {object} data - All props and current checked/indeterminate state.
	   */
	  onClick: _propTypes["default"].func,

	  /**
	   * Called when the user presses down on the mouse.
	   *
	   * @param {SyntheticEvent} event - React's original SyntheticEvent.
	   * @param {object} data - All props and current checked/indeterminate state.
	   */
	  onMouseDown: _propTypes["default"].func,

	  /**
	   * Called when the user releases the mouse.
	   *
	   * @param {SyntheticEvent} event - React's original SyntheticEvent.
	   * @param {object} data - All props and current checked/indeterminate state.
	   */
	  onMouseUp: _propTypes["default"].func,

	  /** Format as a radio element. This means it is an exclusive option. */
	  radio: _lib.customPropTypes.every([_propTypes["default"].bool, _lib.customPropTypes.disallow(['slider', 'toggle'])]),

	  /** A checkbox can be read-only and unable to change states. */
	  readOnly: _propTypes["default"].bool,

	  /** Format to emphasize the current selection state. */
	  slider: _lib.customPropTypes.every([_propTypes["default"].bool, _lib.customPropTypes.disallow(['radio', 'toggle'])]),

	  /** A checkbox can receive focus. */
	  tabIndex: _propTypes["default"].oneOfType([_propTypes["default"].number, _propTypes["default"].string]),

	  /** Format to show an on or off choice. */
	  toggle: _lib.customPropTypes.every([_propTypes["default"].bool, _lib.customPropTypes.disallow(['radio', 'slider'])]),

	  /** HTML input type, either checkbox or radio. */
	  type: _propTypes["default"].oneOf(['checkbox', 'radio']),

	  /** The HTML input value. */
	  value: _propTypes["default"].oneOfType([_propTypes["default"].string, _propTypes["default"].number])
	} : {};
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 614 */
/***/ (function(module, exports, __webpack_require__) {

	var baseSet = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"./_baseSet\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	/**
	 * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,
	 * it's created. Arrays are created for missing index properties while objects
	 * are created for all other missing properties. Use `_.setWith` to customize
	 * `path` creation.
	 *
	 * **Note:** This method mutates `object`.
	 *
	 * @static
	 * @memberOf _
	 * @since 3.7.0
	 * @category Object
	 * @param {Object} object The object to modify.
	 * @param {Array|string} path The path of the property to set.
	 * @param {*} value The value to set.
	 * @returns {Object} Returns `object`.
	 * @example
	 *
	 * var object = { 'a': [{ 'b': { 'c': 3 } }] };
	 *
	 * _.set(object, 'a[0].b.c', 4);
	 * console.log(object.a[0].b.c);
	 * // => 4
	 *
	 * _.set(object, ['x', '0', 'y', 'z'], 5);
	 * console.log(object.x[0].y.z);
	 * // => 5
	 */
	function set(object, path, value) {
	  return object == null ? object : baseSet(object, path, value);
	}

	module.exports = set;


/***/ }),
/* 615 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	Object.defineProperty(exports, "default", {
	  enumerable: true,
	  get: function get() {
	    return _Responsive["default"];
	  }
	});

	var _Responsive = _interopRequireDefault(__webpack_require__(616));

/***/ }),
/* 616 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";

	var _interopRequireWildcard = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireWildcard\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _objectSpread2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/objectSpread\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _classCallCheck2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/classCallCheck\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _createClass2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/createClass\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/possibleConstructorReturn\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _getPrototypeOf3 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/getPrototypeOf\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _assertThisInitialized2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/assertThisInitialized\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _inherits2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/inherits\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _defineProperty2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/defineProperty\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _invoke2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/invoke\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _propTypes = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"prop-types\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _react = _interopRequireWildcard(__webpack_require__(3));

	var _lib = __webpack_require__(256);

	var _isVisible = _interopRequireDefault(__webpack_require__(617));

	/**
	 * Responsive can control visibility of content.
	 */
	var Responsive =
	/*#__PURE__*/
	function (_Component) {
	  (0, _inherits2["default"])(Responsive, _Component);

	  function Responsive() {
	    var _getPrototypeOf2;

	    var _this;

	    (0, _classCallCheck2["default"])(this, Responsive);

	    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    _this = (0, _possibleConstructorReturn2["default"])(this, (_getPrototypeOf2 = (0, _getPrototypeOf3["default"])(Responsive)).call.apply(_getPrototypeOf2, [this].concat(args)));
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "state", {
	      visible: true
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "handleResize", function (e) {
	      if (_this.ticking) return;
	      _this.ticking = true;
	      _this.frameId = requestAnimationFrame(function () {
	        return _this.handleUpdate(e);
	      });
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "handleUpdate", function (e) {
	      _this.ticking = false;
	      var visible = _this.state.visible;
	      var width = (0, _invoke2["default"])(_this.props, 'getWidth');
	      var nextVisible = (0, _isVisible["default"])(width, _this.props);
	      if (visible !== nextVisible) _this.setState({
	        visible: nextVisible
	      });
	      (0, _invoke2["default"])(_this.props, 'onUpdate', e, (0, _objectSpread2["default"])({}, _this.props, {
	        width: width
	      }));
	    });
	    return _this;
	  }

	  (0, _createClass2["default"])(Responsive, [{
	    key: "componentDidMount",
	    value: function componentDidMount() {
	      var fireOnMount = this.props.fireOnMount;

	      _lib.eventStack.sub('resize', this.handleResize, {
	        target: 'window'
	      });

	      if (fireOnMount) this.handleUpdate();
	    }
	  }, {
	    key: "componentWillUnmount",
	    value: function componentWillUnmount() {
	      _lib.eventStack.unsub('resize', this.handleResize, {
	        target: 'window'
	      });

	      cancelAnimationFrame(this.frameId);
	    } // ----------------------------------------
	    // Event handlers
	    // ----------------------------------------

	  }, {
	    key: "render",
	    // ----------------------------------------
	    // Render
	    // ----------------------------------------
	    value: function render() {
	      var children = this.props.children;
	      var visible = this.state.visible;
	      var ElementType = (0, _lib.getElementType)(Responsive, this.props);
	      var rest = (0, _lib.getUnhandledProps)(Responsive, this.props);
	      if (visible) return _react["default"].createElement(ElementType, rest, children);
	      return null;
	    }
	  }], [{
	    key: "getDerivedStateFromProps",
	    value: function getDerivedStateFromProps(props) {
	      var width = (0, _invoke2["default"])(props, 'getWidth');
	      var visible = (0, _isVisible["default"])(width, props);
	      return {
	        visible: visible
	      };
	    }
	  }]);
	  return Responsive;
	}(_react.Component);

	exports["default"] = Responsive;
	(0, _defineProperty2["default"])(Responsive, "defaultProps", {
	  getWidth: function getWidth() {
	    return (0, _lib.isBrowser)() ? window.innerWidth : 0;
	  }
	});
	(0, _defineProperty2["default"])(Responsive, "onlyMobile", {
	  minWidth: 320,
	  maxWidth: 767
	});
	(0, _defineProperty2["default"])(Responsive, "onlyTablet", {
	  minWidth: 768,
	  maxWidth: 991
	});
	(0, _defineProperty2["default"])(Responsive, "onlyComputer", {
	  minWidth: 992
	});
	(0, _defineProperty2["default"])(Responsive, "onlyLargeScreen", {
	  minWidth: 1200,
	  maxWidth: 1919
	});
	(0, _defineProperty2["default"])(Responsive, "onlyWidescreen", {
	  minWidth: 1920
	});
	(0, _defineProperty2["default"])(Responsive, "handledProps", ["as", "children", "fireOnMount", "getWidth", "maxWidth", "minWidth", "onUpdate"]);
	Responsive.propTypes = process.env.NODE_ENV !== "production" ? {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Primary content. */
	  children: _propTypes["default"].node,

	  /** Fires callbacks immediately after mount. */
	  fireOnMount: _propTypes["default"].bool,

	  /**
	   * Called to get width of screen. Defaults to using `window.innerWidth` when in a browser;
	   * otherwise, assumes a width of 0.
	   */
	  getWidth: _propTypes["default"].func,

	  /** The maximum width at which content will be displayed. */
	  maxWidth: _propTypes["default"].oneOfType([_propTypes["default"].number, _propTypes["default"].string]),

	  /** The minimum width at which content will be displayed. */
	  minWidth: _propTypes["default"].oneOfType([_propTypes["default"].number, _propTypes["default"].string]),

	  /**
	   * Called on update.
	   *
	   * @param {SyntheticEvent} event - The React SyntheticEvent object
	   * @param {object} data - All props and the event value.
	   */
	  onUpdate: _propTypes["default"].func
	} : {};
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 617 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _isNil2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/isNil\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var fitsMaxWidth = function fitsMaxWidth(width, maxWidth) {
	  return (0, _isNil2["default"])(maxWidth) ? true : width <= maxWidth;
	};

	var fitsMinWidth = function fitsMinWidth(width, minWidth) {
	  return (0, _isNil2["default"])(minWidth) ? true : width >= minWidth;
	};

	var isVisible = function isVisible(width, _ref) {
	  var maxWidth = _ref.maxWidth,
	      minWidth = _ref.minWidth;
	  return fitsMinWidth(width, minWidth) && fitsMaxWidth(width, maxWidth);
	};

	var _default = isVisible;
	exports["default"] = _default;

/***/ }),
/* 618 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	Object.defineProperty(exports, "default", {
	  enumerable: true,
	  get: function get() {
	    return _Select["default"];
	  }
	});

	var _Select = _interopRequireDefault(__webpack_require__(619));

/***/ }),
/* 619 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _extends2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/extends\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _propTypes = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"prop-types\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _react = _interopRequireDefault(__webpack_require__(3));

	var _Dropdown = _interopRequireDefault(__webpack_require__(620));

	/**
	 * A Select is sugar for <Dropdown selection />.
	 * @see Dropdown
	 * @see Form
	 */
	function Select(props) {
	  return _react["default"].createElement(_Dropdown["default"], (0, _extends2["default"])({}, props, {
	    selection: true
	  }));
	}

	Select.handledProps = ["options"];
	Select.propTypes = process.env.NODE_ENV !== "production" ? {
	  /** Array of Dropdown.Item props e.g. `{ text: '', value: '' }` */
	  options: _propTypes["default"].arrayOf(_propTypes["default"].shape(_Dropdown["default"].Item.propTypes)).isRequired
	} : {};
	Select.Divider = _Dropdown["default"].Divider;
	Select.Header = _Dropdown["default"].Header;
	Select.Item = _Dropdown["default"].Item;
	Select.Menu = _Dropdown["default"].Menu;
	var _default = Select;
	exports["default"] = _default;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 620 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	Object.defineProperty(exports, "default", {
	  enumerable: true,
	  get: function get() {
	    return _Dropdown["default"];
	  }
	});

	var _Dropdown = _interopRequireDefault(__webpack_require__(621));

/***/ }),
/* 621 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";

	var _interopRequireWildcard = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireWildcard\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _extends2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/extends\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _objectSpread2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/objectSpread\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _classCallCheck2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/classCallCheck\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _createClass2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/createClass\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/possibleConstructorReturn\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _assertThisInitialized2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/assertThisInitialized\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _getPrototypeOf3 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/getPrototypeOf\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _get3 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/get\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _inherits2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/inherits\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _defineProperty2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/defineProperty\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _compact2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/compact\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _map2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/map\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _every2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/every\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _without2 = _interopRequireDefault(__webpack_require__(542));

	var _findIndex2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/findIndex\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _find2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/find\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _reduce2 = _interopRequireDefault(__webpack_require__(562));

	var _some2 = _interopRequireDefault(__webpack_require__(362));

	var _escapeRegExp2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/escapeRegExp\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _deburr2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/deburr\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _isFunction2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/isFunction\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _filter2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/filter\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _pick2 = _interopRequireDefault(__webpack_require__(460));

	var _dropRight2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/dropRight\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _isEmpty2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/isEmpty\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _size2 = _interopRequireDefault(__webpack_require__(629));

	var _difference2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/difference\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _union2 = _interopRequireDefault(__webpack_require__(633));

	var _get4 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/get\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _includes2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/includes\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _isUndefined2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/isUndefined\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _invoke2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/invoke\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _isEqual2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/isEqual\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _has2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/has\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _isNil2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/isNil\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _eventStack = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@semantic-ui-react/event-stack\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _classnames = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"classnames\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _keyboardKey = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"keyboard-key\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _propTypes = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"prop-types\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _react = _interopRequireWildcard(__webpack_require__(3));

	var _shallowequal = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"shallowequal\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _lib = __webpack_require__(256);

	var _Ref = _interopRequireDefault(__webpack_require__(537));

	var _Icon = _interopRequireDefault(__webpack_require__(566));

	var _Label = _interopRequireDefault(__webpack_require__(634));

	var _DropdownDivider = _interopRequireDefault(__webpack_require__(635));

	var _DropdownItem = _interopRequireDefault(__webpack_require__(636));

	var _DropdownHeader = _interopRequireDefault(__webpack_require__(640));

	var _DropdownMenu = _interopRequireDefault(__webpack_require__(641));

	var _DropdownSearchInput = _interopRequireDefault(__webpack_require__(642));

	var getKeyOrValue = function getKeyOrValue(key, value) {
	  return (0, _isNil2["default"])(key) ? value : key;
	};
	/**
	 * A dropdown allows a user to select a value from a series of options.
	 * @see Form
	 * @see Select
	 * @see Menu
	 */


	var Dropdown =
	/*#__PURE__*/
	function (_Component) {
	  (0, _inherits2["default"])(Dropdown, _Component);

	  function Dropdown() {
	    var _getPrototypeOf2;

	    var _this;

	    (0, _classCallCheck2["default"])(this, Dropdown);

	    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    _this = (0, _possibleConstructorReturn2["default"])(this, (_getPrototypeOf2 = (0, _getPrototypeOf3["default"])(Dropdown)).call.apply(_getPrototypeOf2, [this].concat(args)));
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "searchRef", (0, _react.createRef)());
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "sizerRef", (0, _react.createRef)());
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "ref", (0, _react.createRef)());
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "handleChange", function (e, value) {
	      (0, _invoke2["default"])(_this.props, 'onChange', e, (0, _objectSpread2["default"])({}, _this.props, {
	        value: value
	      }));
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "closeOnChange", function (e) {
	      var _this$props = _this.props,
	          closeOnChange = _this$props.closeOnChange,
	          multiple = _this$props.multiple;
	      var shouldClose = (0, _isUndefined2["default"])(closeOnChange) ? !multiple : closeOnChange;
	      if (shouldClose) _this.close(e);
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "closeOnEscape", function (e) {
	      if (!_this.props.closeOnEscape) return;
	      if (_keyboardKey["default"].getCode(e) !== _keyboardKey["default"].Escape) return;
	      e.preventDefault();

	      _this.close(e);
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "moveSelectionOnKeyDown", function (e) {
	      var _moves;

	      var _this$props2 = _this.props,
	          multiple = _this$props2.multiple,
	          selectOnNavigation = _this$props2.selectOnNavigation;
	      var moves = (_moves = {}, (0, _defineProperty2["default"])(_moves, _keyboardKey["default"].ArrowDown, 1), (0, _defineProperty2["default"])(_moves, _keyboardKey["default"].ArrowUp, -1), _moves);

	      var move = moves[_keyboardKey["default"].getCode(e)];

	      if (move === undefined) return;
	      e.preventDefault();

	      _this.moveSelectionBy(move);

	      if (!multiple && selectOnNavigation) _this.makeSelectedItemActive(e);
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "openOnSpace", function (e) {
	      if (_keyboardKey["default"].getCode(e) !== _keyboardKey["default"].Spacebar) return;
	      e.preventDefault();

	      _this.open(e);
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "openOnArrow", function (e) {
	      var code = _keyboardKey["default"].getCode(e);

	      if (!(0, _includes2["default"])([_keyboardKey["default"].ArrowDown, _keyboardKey["default"].ArrowUp], code)) return;
	      if (_this.state.open) return;
	      e.preventDefault();

	      _this.open(e);
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "makeSelectedItemActive", function (e) {
	      var _this$state = _this.state,
	          open = _this$state.open,
	          value = _this$state.value;
	      var multiple = _this.props.multiple;

	      var item = _this.getSelectedItem();

	      var selectedValue = (0, _get4["default"])(item, 'value'); // prevent selecting null if there was no selected item value
	      // prevent selecting duplicate items when the dropdown is closed

	      if ((0, _isNil2["default"])(selectedValue) || !open) return; // state value may be undefined

	      var newValue = multiple ? (0, _union2["default"])(_this.state.value, [selectedValue]) : selectedValue;
	      var valueHasChanged = multiple ? !!(0, _difference2["default"])(newValue, value).length : newValue !== value;

	      if (valueHasChanged) {
	        // notify the onChange prop that the user is trying to change value
	        _this.setValue(newValue);

	        _this.setSelectedIndex(newValue);

	        _this.handleChange(e, newValue); // Heads up! This event handler should be called after `onChange`
	        // Notify the onAddItem prop if this is a new value


	        if (item['data-additional']) {
	          (0, _invoke2["default"])(_this.props, 'onAddItem', e, (0, _objectSpread2["default"])({}, _this.props, {
	            value: selectedValue
	          }));
	        }
	      }
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "selectItemOnEnter", function (e) {
	      var search = _this.props.search;
	      if (_keyboardKey["default"].getCode(e) !== _keyboardKey["default"].Enter) return;
	      e.preventDefault();
	      var optionSize = (0, _size2["default"])(_this.getMenuOptions());
	      if (search && optionSize === 0) return;

	      _this.makeSelectedItemActive(e);

	      _this.closeOnChange(e);

	      _this.clearSearchQuery();

	      if (search) (0, _invoke2["default"])(_this.searchRef.current, 'focus');
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "removeItemOnBackspace", function (e) {
	      var _this$props3 = _this.props,
	          multiple = _this$props3.multiple,
	          search = _this$props3.search;
	      var _this$state2 = _this.state,
	          searchQuery = _this$state2.searchQuery,
	          value = _this$state2.value;
	      if (_keyboardKey["default"].getCode(e) !== _keyboardKey["default"].Backspace) return;
	      if (searchQuery || !search || !multiple || (0, _isEmpty2["default"])(value)) return;
	      e.preventDefault(); // remove most recent value

	      var newValue = (0, _dropRight2["default"])(value);

	      _this.setValue(newValue);

	      _this.setSelectedIndex(newValue);

	      _this.handleChange(e, newValue);
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "closeOnDocumentClick", function (e) {
	      if (!_this.props.closeOnBlur) return; // If event happened in the dropdown, ignore it

	      if (_this.ref.current && (0, _lib.doesNodeContainClick)(_this.ref.current, e)) return;

	      _this.close();
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "handleMouseDown", function (e) {
	      _this.isMouseDown = true;
	      (0, _invoke2["default"])(_this.props, 'onMouseDown', e, _this.props);
	      document.addEventListener('mouseup', _this.handleDocumentMouseUp);
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "handleDocumentMouseUp", function () {
	      _this.isMouseDown = false;
	      document.removeEventListener('mouseup', _this.handleDocumentMouseUp);
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "handleClick", function (e) {
	      var _this$props4 = _this.props,
	          minCharacters = _this$props4.minCharacters,
	          search = _this$props4.search;
	      var _this$state3 = _this.state,
	          open = _this$state3.open,
	          searchQuery = _this$state3.searchQuery;
	      (0, _invoke2["default"])(_this.props, 'onClick', e, _this.props); // prevent closeOnDocumentClick()

	      e.stopPropagation();
	      if (!search) return _this.toggle(e);

	      if (open) {
	        (0, _invoke2["default"])(_this.searchRef.current, 'focus');
	        return;
	      }

	      if (searchQuery.length >= minCharacters || minCharacters === 1) {
	        _this.open(e);

	        return;
	      }

	      (0, _invoke2["default"])(_this.searchRef.current, 'focus');
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "handleIconClick", function (e) {
	      var clearable = _this.props.clearable;

	      var hasValue = _this.hasValue();

	      (0, _invoke2["default"])(_this.props, 'onClick', e, _this.props); // prevent handleClick()

	      e.stopPropagation();

	      if (clearable && hasValue) {
	        _this.clearValue(e);
	      } else {
	        _this.toggle(e);
	      }
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "handleItemClick", function (e, item) {
	      var _this$props5 = _this.props,
	          multiple = _this$props5.multiple,
	          search = _this$props5.search;
	      var currentValue = _this.state.value;
	      var value = item.value; // prevent toggle() in handleClick()

	      e.stopPropagation(); // prevent closeOnDocumentClick() if multiple or item is disabled

	      if (multiple || item.disabled) e.nativeEvent.stopImmediatePropagation();
	      if (item.disabled) return;
	      var isAdditionItem = item['data-additional'];
	      var newValue = multiple ? (0, _union2["default"])(_this.state.value, [value]) : value;
	      var valueHasChanged = multiple ? !!(0, _difference2["default"])(newValue, currentValue).length : newValue !== currentValue; // notify the onChange prop that the user is trying to change value

	      if (valueHasChanged) {
	        _this.setValue(newValue);

	        _this.setSelectedIndex(value);

	        _this.handleChange(e, newValue);
	      }

	      _this.clearSearchQuery(value);

	      _this.closeOnChange(e); // Heads up! This event handler should be called after `onChange`
	      // Notify the onAddItem prop if this is a new value


	      if (isAdditionItem) (0, _invoke2["default"])(_this.props, 'onAddItem', e, (0, _objectSpread2["default"])({}, _this.props, {
	        value: value
	      }));
	      if (search) (0, _invoke2["default"])(_this.searchRef.current, 'focus');
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "handleFocus", function (e) {
	      var focus = _this.state.focus;
	      if (focus) return;
	      (0, _invoke2["default"])(_this.props, 'onFocus', e, _this.props);

	      _this.setState({
	        focus: true
	      });
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "handleBlur", function (e) {
	      // Heads up! Don't remove this.
	      // https://github.com/Semantic-Org/Semantic-UI-React/issues/1315
	      var currentTarget = (0, _get4["default"])(e, 'currentTarget');
	      if (currentTarget && currentTarget.contains(document.activeElement)) return;
	      var _this$props6 = _this.props,
	          closeOnBlur = _this$props6.closeOnBlur,
	          multiple = _this$props6.multiple,
	          selectOnBlur = _this$props6.selectOnBlur; // do not "blur" when the mouse is down inside of the Dropdown

	      if (_this.isMouseDown) return;
	      (0, _invoke2["default"])(_this.props, 'onBlur', e, _this.props);

	      if (selectOnBlur && !multiple) {
	        _this.makeSelectedItemActive(e);

	        if (closeOnBlur) _this.close();
	      }

	      _this.setState({
	        focus: false
	      });

	      _this.clearSearchQuery();
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "handleSearchChange", function (e, _ref) {
	      var value = _ref.value;
	      // prevent propagating to this.props.onChange()
	      e.stopPropagation();
	      var minCharacters = _this.props.minCharacters;
	      var open = _this.state.open;
	      var newQuery = value;
	      (0, _invoke2["default"])(_this.props, 'onSearchChange', e, (0, _objectSpread2["default"])({}, _this.props, {
	        searchQuery: newQuery
	      }));

	      _this.trySetState({
	        searchQuery: newQuery
	      }, {
	        selectedIndex: 0
	      }); // open search dropdown on search query


	      if (!open && newQuery.length >= minCharacters) {
	        _this.open();

	        return;
	      } // close search dropdown if search query is too small


	      if (open && minCharacters !== 1 && newQuery.length < minCharacters) _this.close();
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "getKeyAndValues", function (options) {
	      return options ? options.map(function (option) {
	        return (0, _pick2["default"])(option, ['key', 'value']);
	      }) : options;
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "getMenuOptions", function () {
	      var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _this.state.value;
	      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _this.props.options;
	      var searchQuery = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : _this.state.searchQuery;
	      var _this$props7 = _this.props,
	          additionLabel = _this$props7.additionLabel,
	          additionPosition = _this$props7.additionPosition,
	          allowAdditions = _this$props7.allowAdditions,
	          deburr = _this$props7.deburr,
	          multiple = _this$props7.multiple,
	          search = _this$props7.search;
	      var filteredOptions = options; // filter out active options

	      if (multiple) {
	        filteredOptions = (0, _filter2["default"])(filteredOptions, function (opt) {
	          return !(0, _includes2["default"])(value, opt.value);
	        });
	      } // filter by search query


	      if (search && searchQuery) {
	        if ((0, _isFunction2["default"])(search)) {
	          filteredOptions = search(filteredOptions, searchQuery);
	        } else {
	          // remove diacritics on search input and options, if deburr prop is set
	          var strippedQuery = deburr ? (0, _deburr2["default"])(searchQuery) : searchQuery;
	          var re = new RegExp((0, _escapeRegExp2["default"])(strippedQuery), 'i');
	          filteredOptions = (0, _filter2["default"])(filteredOptions, function (opt) {
	            return re.test(deburr ? (0, _deburr2["default"])(opt.text) : opt.text);
	          });
	        }
	      } // insert the "add" item


	      if (allowAdditions && search && searchQuery && !(0, _some2["default"])(filteredOptions, {
	        text: searchQuery
	      })) {
	        var additionLabelElement = _react["default"].isValidElement(additionLabel) ? _react["default"].cloneElement(additionLabel, {
	          key: 'addition-label'
	        }) : additionLabel || '';
	        var addItem = {
	          key: 'addition',
	          // by using an array, we can pass multiple elements, but when doing so
	          // we must specify a `key` for React to know which one is which
	          text: [additionLabelElement, _react["default"].createElement("b", {
	            key: "addition-query"
	          }, searchQuery)],
	          value: searchQuery,
	          className: 'addition',
	          'data-additional': true
	        };
	        if (additionPosition === 'top') filteredOptions.unshift(addItem);else filteredOptions.push(addItem);
	      }

	      return filteredOptions;
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "getSelectedItem", function () {
	      var selectedIndex = _this.state.selectedIndex;

	      var options = _this.getMenuOptions();

	      return (0, _get4["default"])(options, "[".concat(selectedIndex, "]"));
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "getEnabledIndices", function (givenOptions) {
	      var options = givenOptions || _this.getMenuOptions();

	      return (0, _reduce2["default"])(options, function (memo, item, index) {
	        if (!item.disabled) memo.push(index);
	        return memo;
	      }, []);
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "getItemByValue", function (value) {
	      var options = _this.props.options;
	      return (0, _find2["default"])(options, {
	        value: value
	      });
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "getMenuItemIndexByValue", function (value, givenOptions) {
	      var options = givenOptions || _this.getMenuOptions();

	      return (0, _findIndex2["default"])(options, ['value', value]);
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "getDropdownAriaOptions", function () {
	      var _this$props8 = _this.props,
	          loading = _this$props8.loading,
	          disabled = _this$props8.disabled,
	          search = _this$props8.search,
	          multiple = _this$props8.multiple;
	      var open = _this.state.open;
	      var ariaOptions = {
	        role: search ? 'combobox' : 'listbox',
	        'aria-busy': loading,
	        'aria-disabled': disabled,
	        'aria-expanded': !!open
	      };

	      if (ariaOptions.role === 'listbox') {
	        ariaOptions['aria-multiselectable'] = multiple;
	      }

	      return ariaOptions;
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "clearSearchQuery", function (value) {
	      var searchQuery = _this.state.searchQuery;
	      if (searchQuery === undefined || searchQuery === '') return;

	      _this.trySetState({
	        searchQuery: ''
	      });

	      _this.setSelectedIndex(value, undefined, '');
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "setValue", function (value) {
	      _this.trySetState({
	        value: value
	      });
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "setSelectedIndex", function () {
	      var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _this.state.value;
	      var optionsProps = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _this.props.options;
	      var searchQuery = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : _this.state.searchQuery;
	      var multiple = _this.props.multiple;
	      var selectedIndex = _this.state.selectedIndex;

	      var options = _this.getMenuOptions(value, optionsProps, searchQuery);

	      var enabledIndicies = _this.getEnabledIndices(options);

	      var newSelectedIndex; // update the selected index

	      if (!selectedIndex || selectedIndex < 0) {
	        var firstIndex = enabledIndicies[0]; // Select the currently active item, if none, use the first item.
	        // Multiple selects remove active items from the list,
	        // their initial selected index should be 0.

	        newSelectedIndex = multiple ? firstIndex : _this.getMenuItemIndexByValue(value, options) || enabledIndicies[0];
	      } else if (multiple) {
	        // multiple selects remove options from the menu as they are made active
	        // keep the selected index within range of the remaining items
	        if (selectedIndex >= options.length - 1) {
	          newSelectedIndex = enabledIndicies[enabledIndicies.length - 1];
	        }
	      } else {
	        var activeIndex = _this.getMenuItemIndexByValue(value, options); // regular selects can only have one active item
	        // set the selected index to the currently active item


	        newSelectedIndex = (0, _includes2["default"])(enabledIndicies, activeIndex) ? activeIndex : undefined;
	      }

	      if (!newSelectedIndex || newSelectedIndex < 0) {
	        newSelectedIndex = enabledIndicies[0];
	      }

	      _this.setState({
	        selectedIndex: newSelectedIndex
	      });
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "handleLabelClick", function (e, labelProps) {
	      // prevent focusing search input on click
	      e.stopPropagation();

	      _this.setState({
	        selectedLabel: labelProps.value
	      });

	      (0, _invoke2["default"])(_this.props, 'onLabelClick', e, labelProps);
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "handleLabelRemove", function (e, labelProps) {
	      // prevent focusing search input on click
	      e.stopPropagation();
	      var value = _this.state.value;
	      var newValue = (0, _without2["default"])(value, labelProps.value);

	      _this.setValue(newValue);

	      _this.setSelectedIndex(newValue);

	      _this.handleChange(e, newValue);
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "moveSelectionBy", function (offset) {
	      var startIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _this.state.selectedIndex;

	      var options = _this.getMenuOptions(); // Prevent infinite loop
	      // TODO: remove left part of condition after children API will be removed


	      if (options === undefined || (0, _every2["default"])(options, 'disabled')) return;
	      var lastIndex = options.length - 1;
	      var wrapSelection = _this.props.wrapSelection; // next is after last, wrap to beginning
	      // next is before first, wrap to end

	      var nextIndex = startIndex + offset; // if 'wrapSelection' is set to false and selection is after last or before first, it just does not change

	      if (!wrapSelection && (nextIndex > lastIndex || nextIndex < 0)) {
	        nextIndex = startIndex;
	      } else if (nextIndex > lastIndex) nextIndex = 0;else if (nextIndex < 0) nextIndex = lastIndex;

	      if (options[nextIndex].disabled) {
	        _this.moveSelectionBy(offset, nextIndex);

	        return;
	      }

	      _this.setState({
	        selectedIndex: nextIndex
	      });

	      _this.scrollSelectedItemIntoView();
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "handleIconOverrides", function (predefinedProps) {
	      var clearable = _this.props.clearable;
	      var classes = (0, _classnames["default"])(clearable && _this.hasValue() && 'clear', predefinedProps.className);
	      return {
	        className: classes,
	        onClick: function onClick(e) {
	          (0, _invoke2["default"])(predefinedProps, 'onClick', e, predefinedProps);

	          _this.handleIconClick(e);
	        }
	      };
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "clearValue", function (e) {
	      var multiple = _this.props.multiple;
	      var newValue = multiple ? [] : '';

	      _this.setValue(newValue);

	      _this.setSelectedIndex(newValue);

	      _this.handleChange(e, newValue);
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "computeSearchInputTabIndex", function () {
	      var _this$props9 = _this.props,
	          disabled = _this$props9.disabled,
	          tabIndex = _this$props9.tabIndex;
	      if (!(0, _isNil2["default"])(tabIndex)) return tabIndex;
	      return disabled ? -1 : 0;
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "computeSearchInputWidth", function () {
	      var searchQuery = _this.state.searchQuery;

	      if (_this.sizerRef.current && searchQuery) {
	        // resize the search input, temporarily show the sizer so we can measure it
	        _this.sizerRef.current.style.display = 'inline';
	        _this.sizerRef.current.textContent = searchQuery;
	        var searchWidth = Math.ceil(_this.sizerRef.current.getBoundingClientRect().width);

	        _this.sizerRef.current.style.removeProperty('display');

	        return searchWidth;
	      }
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "computeTabIndex", function () {
	      var _this$props10 = _this.props,
	          disabled = _this$props10.disabled,
	          search = _this$props10.search,
	          tabIndex = _this$props10.tabIndex; // don't set a root node tabIndex as the search input has its own tabIndex

	      if (search) return undefined;
	      if (disabled) return -1;
	      return (0, _isNil2["default"])(tabIndex) ? 0 : tabIndex;
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "handleSearchInputOverrides", function (predefinedProps) {
	      return {
	        onChange: function onChange(e, inputProps) {
	          (0, _invoke2["default"])(predefinedProps, 'onChange', e, inputProps);

	          _this.handleSearchChange(e, inputProps);
	        }
	      };
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "hasValue", function () {
	      var multiple = _this.props.multiple;
	      var value = _this.state.value;
	      return multiple ? !(0, _isEmpty2["default"])(value) : !(0, _isNil2["default"])(value) && value !== '';
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "scrollSelectedItemIntoView", function () {
	      if (!_this.ref.current) return;

	      var menu = _this.ref.current.querySelector('.menu.visible');

	      if (!menu) return;
	      var item = menu.querySelector('.item.selected');
	      if (!item) return;
	      var isOutOfUpperView = item.offsetTop < menu.scrollTop;
	      var isOutOfLowerView = item.offsetTop + item.clientHeight > menu.scrollTop + menu.clientHeight;

	      if (isOutOfUpperView) {
	        menu.scrollTop = item.offsetTop;
	      } else if (isOutOfLowerView) {
	        // eslint-disable-next-line no-mixed-operators
	        menu.scrollTop = item.offsetTop + item.clientHeight - menu.clientHeight;
	      }
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "setOpenDirection", function () {
	      if (!_this.ref.current) return;

	      var menu = _this.ref.current.querySelector('.menu.visible');

	      if (!menu) return;

	      var dropdownRect = _this.ref.current.getBoundingClientRect();

	      var menuHeight = menu.clientHeight;
	      var spaceAtTheBottom = document.documentElement.clientHeight - dropdownRect.top - dropdownRect.height - menuHeight;
	      var spaceAtTheTop = dropdownRect.top - menuHeight;
	      var upward = spaceAtTheBottom < 0 && spaceAtTheTop > spaceAtTheBottom; // set state only if there's a relevant difference

	      if (!upward !== !_this.state.upward) {
	        _this.trySetState({
	          upward: upward
	        });
	      }
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "open", function (e) {
	      var _this$props11 = _this.props,
	          disabled = _this$props11.disabled,
	          open = _this$props11.open,
	          search = _this$props11.search;
	      if (disabled) return;
	      if (search) (0, _invoke2["default"])(_this.searchRef.current, 'focus');
	      (0, _invoke2["default"])(_this.props, 'onOpen', e, _this.props);

	      _this.trySetState({
	        open: true
	      });

	      _this.scrollSelectedItemIntoView();
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "close", function (e) {
	      var open = _this.state.open;

	      if (open) {
	        (0, _invoke2["default"])(_this.props, 'onClose', e, _this.props);

	        _this.trySetState({
	          open: false
	        });
	      }
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "handleClose", function () {
	      var hasSearchFocus = document.activeElement === _this.searchRef.current; // https://github.com/Semantic-Org/Semantic-UI-React/issues/627
	      // Blur the Dropdown on close so it is blurred after selecting an item.
	      // This is to prevent it from re-opening when switching tabs after selecting an item.

	      if (!hasSearchFocus) {
	        _this.ref.current.blur();
	      }

	      var hasDropdownFocus = document.activeElement === _this.ref.current;
	      var hasFocus = hasSearchFocus || hasDropdownFocus; // We need to keep the virtual model in sync with the browser focus change
	      // https://github.com/Semantic-Org/Semantic-UI-React/issues/692

	      _this.setState({
	        focus: hasFocus
	      });
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "toggle", function (e) {
	      return _this.state.open ? _this.close(e) : _this.open(e);
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "renderText", function () {
	      var _this$props12 = _this.props,
	          multiple = _this$props12.multiple,
	          placeholder = _this$props12.placeholder,
	          search = _this$props12.search,
	          text = _this$props12.text;
	      var _this$state4 = _this.state,
	          searchQuery = _this$state4.searchQuery,
	          value = _this$state4.value,
	          open = _this$state4.open;

	      var hasValue = _this.hasValue();

	      var classes = (0, _classnames["default"])(placeholder && !hasValue && 'default', 'text', search && searchQuery && 'filtered');
	      var _text = placeholder;

	      if (text) {
	        _text = text;
	      } else if (open && !multiple) {
	        _text = (0, _get4["default"])(_this.getSelectedItem(), 'text');
	      } else if (hasValue) {
	        _text = (0, _get4["default"])(_this.getItemByValue(value), 'text');
	      }

	      return _react["default"].createElement("div", {
	        className: classes,
	        role: "alert",
	        "aria-live": "polite",
	        "aria-atomic": true
	      }, _text);
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "renderSearchInput", function () {
	      var _this$props13 = _this.props,
	          search = _this$props13.search,
	          searchInput = _this$props13.searchInput;
	      var searchQuery = _this.state.searchQuery;
	      return search && _react["default"].createElement(_Ref["default"], {
	        innerRef: _this.searchRef
	      }, _DropdownSearchInput["default"].create(searchInput, {
	        defaultProps: {
	          style: {
	            width: _this.computeSearchInputWidth()
	          },
	          tabIndex: _this.computeSearchInputTabIndex(),
	          value: searchQuery
	        },
	        overrideProps: _this.handleSearchInputOverrides
	      }));
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "renderSearchSizer", function () {
	      var _this$props14 = _this.props,
	          search = _this$props14.search,
	          multiple = _this$props14.multiple;
	      return search && multiple && _react["default"].createElement("span", {
	        className: "sizer",
	        ref: _this.sizerRef
	      });
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "renderLabels", function () {
	      var _this$props15 = _this.props,
	          multiple = _this$props15.multiple,
	          renderLabel = _this$props15.renderLabel;
	      var _this$state5 = _this.state,
	          selectedLabel = _this$state5.selectedLabel,
	          value = _this$state5.value;

	      if (!multiple || (0, _isEmpty2["default"])(value)) {
	        return;
	      }

	      var selectedItems = (0, _map2["default"])(value, _this.getItemByValue);
	      // if no item could be found for a given state value the selected item will be undefined
	      // compact the selectedItems so we only have actual objects left
	      return (0, _map2["default"])((0, _compact2["default"])(selectedItems), function (item, index) {
	        var defaultProps = {
	          active: item.value === selectedLabel,
	          as: 'a',
	          key: getKeyOrValue(item.key, item.value),
	          onClick: _this.handleLabelClick,
	          onRemove: _this.handleLabelRemove,
	          value: item.value
	        };
	        return _Label["default"].create(renderLabel(item, index, defaultProps), {
	          defaultProps: defaultProps
	        });
	      });
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "renderOptions", function () {
	      var _this$props16 = _this.props,
	          lazyLoad = _this$props16.lazyLoad,
	          multiple = _this$props16.multiple,
	          search = _this$props16.search,
	          noResultsMessage = _this$props16.noResultsMessage;
	      var _this$state6 = _this.state,
	          open = _this$state6.open,
	          selectedIndex = _this$state6.selectedIndex,
	          value = _this$state6.value; // lazy load, only render options when open

	      if (lazyLoad && !open) return null;

	      var options = _this.getMenuOptions();

	      if (noResultsMessage !== null && search && (0, _isEmpty2["default"])(options)) {
	        return _react["default"].createElement("div", {
	          className: "message"
	        }, noResultsMessage);
	      }

	      var isActive = multiple ? function (optValue) {
	        return (0, _includes2["default"])(value, optValue);
	      } : function (optValue) {
	        return optValue === value;
	      };
	      return (0, _map2["default"])(options, function (opt, i) {
	        return _DropdownItem["default"].create((0, _objectSpread2["default"])({
	          active: isActive(opt.value),
	          onClick: _this.handleItemClick,
	          selected: selectedIndex === i
	        }, opt, {
	          key: getKeyOrValue(opt.key, opt.value),
	          // Needed for handling click events on disabled items
	          style: (0, _objectSpread2["default"])({}, opt.style, {
	            pointerEvents: 'all'
	          })
	        }));
	      });
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "renderMenu", function () {
	      var _this$props17 = _this.props,
	          children = _this$props17.children,
	          direction = _this$props17.direction,
	          header = _this$props17.header;
	      var open = _this.state.open;

	      var ariaOptions = _this.getDropdownMenuAriaOptions(); // single menu child


	      if (!_lib.childrenUtils.isNil(children)) {
	        var menuChild = _react.Children.only(children);

	        var className = (0, _classnames["default"])(direction, (0, _lib.useKeyOnly)(open, 'visible'), menuChild.props.className);
	        return (0, _react.cloneElement)(menuChild, (0, _objectSpread2["default"])({
	          className: className
	        }, ariaOptions));
	      }

	      return _react["default"].createElement(_DropdownMenu["default"], (0, _extends2["default"])({}, ariaOptions, {
	        direction: direction,
	        open: open
	      }), _DropdownHeader["default"].create(header, {
	        autoGenerateKey: false
	      }), _this.renderOptions());
	    });
	    return _this;
	  }

	  (0, _createClass2["default"])(Dropdown, [{
	    key: "getInitialAutoControlledState",
	    value: function getInitialAutoControlledState() {
	      return {
	        focus: false,
	        searchQuery: ''
	      };
	    }
	  }, {
	    key: "componentWillMount",
	    value: function componentWillMount() {
	      var _this$state7 = this.state,
	          open = _this$state7.open,
	          value = _this$state7.value;
	      this.setValue(value);
	      this.setSelectedIndex(value);

	      if (open) {
	        this.open();
	      }
	    }
	  }, {
	    key: "componentWillReceiveProps",
	    value: function componentWillReceiveProps(nextProps) {
	      (0, _get3["default"])((0, _getPrototypeOf3["default"])(Dropdown.prototype), "componentWillReceiveProps", this).call(this, nextProps);

	      /* eslint-disable no-console */
	      if (process.env.NODE_ENV !== 'production') {
	        // in development, validate value type matches dropdown type
	        var isNextValueArray = Array.isArray(nextProps.value);
	        var hasValue = (0, _has2["default"])(nextProps, 'value');

	        if (hasValue && nextProps.multiple && !isNextValueArray) {
	          console.error('Dropdown `value` must be an array when `multiple` is set.' + " Received type: `".concat(Object.prototype.toString.call(nextProps.value), "`."));
	        } else if (hasValue && !nextProps.multiple && isNextValueArray) {
	          console.error('Dropdown `value` must not be an array when `multiple` is not set.' + ' Either set `multiple={true}` or use a string or number value.');
	        }
	      }
	      /* eslint-enable no-console */


	      if (!(0, _shallowequal["default"])(nextProps.value, this.props.value)) {
	        this.setValue(nextProps.value);
	        this.setSelectedIndex(nextProps.value);
	      } // The selected index is only dependent on option keys/values.
	      // We only check those properties to avoid recursive performance impacts.
	      // https://github.com/Semantic-Org/Semantic-UI-React/issues/3000


	      if (!(0, _isEqual2["default"])(this.getKeyAndValues(nextProps.options), this.getKeyAndValues(this.props.options))) {
	        this.setSelectedIndex(undefined, nextProps.options);
	      }
	    }
	  }, {
	    key: "shouldComponentUpdate",
	    value: function shouldComponentUpdate(nextProps, nextState) {
	      return !(0, _shallowequal["default"])(nextProps, this.props) || !(0, _shallowequal["default"])(nextState, this.state);
	    }
	  }, {
	    key: "componentDidUpdate",
	    value: function componentDidUpdate(prevProps, prevState) {
	      // eslint-disable-line complexity
	      var _this$props18 = this.props,
	          closeOnBlur = _this$props18.closeOnBlur,
	          minCharacters = _this$props18.minCharacters,
	          openOnFocus = _this$props18.openOnFocus,
	          search = _this$props18.search; // focused / blurred

	      if (!prevState.focus && this.state.focus) {
	        if (!this.isMouseDown) {
	          var openable = !search || search && minCharacters === 1 && !this.state.open;
	          if (openOnFocus && openable) this.open();
	        }
	      } else if (prevState.focus && !this.state.focus) {
	        if (!this.isMouseDown && closeOnBlur) {
	          this.close();
	        }
	      } // opened / closed


	      if (!prevState.open && this.state.open) {
	        this.setOpenDirection();
	        this.scrollSelectedItemIntoView();
	      } else if (prevState.open && !this.state.open) {
	        this.handleClose();
	      }
	    } // ----------------------------------------
	    // Document Event Handlers
	    // ----------------------------------------
	    // onChange needs to receive a value
	    // can't rely on props.value if we are controlled

	  }, {
	    key: "getDropdownMenuAriaOptions",
	    value: function getDropdownMenuAriaOptions() {
	      var _this$props19 = this.props,
	          search = _this$props19.search,
	          multiple = _this$props19.multiple;
	      var ariaOptions = {};

	      if (search) {
	        ariaOptions['aria-multiselectable'] = multiple;
	        ariaOptions.role = 'listbox';
	      }

	      return ariaOptions;
	    } // ----------------------------------------
	    // Setters
	    // ----------------------------------------

	  }, {
	    key: "render",
	    value: function render() {
	      var _this$props20 = this.props,
	          basic = _this$props20.basic,
	          button = _this$props20.button,
	          className = _this$props20.className,
	          compact = _this$props20.compact,
	          disabled = _this$props20.disabled,
	          error = _this$props20.error,
	          fluid = _this$props20.fluid,
	          floating = _this$props20.floating,
	          icon = _this$props20.icon,
	          inline = _this$props20.inline,
	          item = _this$props20.item,
	          labeled = _this$props20.labeled,
	          loading = _this$props20.loading,
	          multiple = _this$props20.multiple,
	          pointing = _this$props20.pointing,
	          search = _this$props20.search,
	          selection = _this$props20.selection,
	          scrolling = _this$props20.scrolling,
	          simple = _this$props20.simple,
	          trigger = _this$props20.trigger;
	      var _this$state8 = this.state,
	          focus = _this$state8.focus,
	          open = _this$state8.open,
	          upward = _this$state8.upward; // Classes

	      var classes = (0, _classnames["default"])('ui', (0, _lib.useKeyOnly)(open, 'active visible'), (0, _lib.useKeyOnly)(disabled, 'disabled'), (0, _lib.useKeyOnly)(error, 'error'), (0, _lib.useKeyOnly)(loading, 'loading'), (0, _lib.useKeyOnly)(basic, 'basic'), (0, _lib.useKeyOnly)(button, 'button'), (0, _lib.useKeyOnly)(compact, 'compact'), (0, _lib.useKeyOnly)(fluid, 'fluid'), (0, _lib.useKeyOnly)(floating, 'floating'), (0, _lib.useKeyOnly)(inline, 'inline'), // TODO: consider augmentation to render Dropdowns as Button/Menu, solves icon/link item issues
	      // https://github.com/Semantic-Org/Semantic-UI-React/issues/401#issuecomment-240487229
	      // TODO: the icon class is only required when a dropdown is a button
	      // useKeyOnly(icon, 'icon'),
	      (0, _lib.useKeyOnly)(labeled, 'labeled'), (0, _lib.useKeyOnly)(item, 'item'), (0, _lib.useKeyOnly)(multiple, 'multiple'), (0, _lib.useKeyOnly)(search, 'search'), (0, _lib.useKeyOnly)(selection, 'selection'), (0, _lib.useKeyOnly)(simple, 'simple'), (0, _lib.useKeyOnly)(scrolling, 'scrolling'), (0, _lib.useKeyOnly)(upward, 'upward'), (0, _lib.useKeyOrValueAndKey)(pointing, 'pointing'), 'dropdown', className);
	      var rest = (0, _lib.getUnhandledProps)(Dropdown, this.props);
	      var ElementType = (0, _lib.getElementType)(Dropdown, this.props);
	      var ariaOptions = this.getDropdownAriaOptions(ElementType, this.props);
	      return _react["default"].createElement(_Ref["default"], {
	        innerRef: this.ref
	      }, _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, ariaOptions, {
	        className: classes,
	        onBlur: this.handleBlur,
	        onClick: this.handleClick,
	        onMouseDown: this.handleMouseDown,
	        onFocus: this.handleFocus,
	        onChange: this.handleChange,
	        tabIndex: this.computeTabIndex()
	      }), this.renderLabels(), this.renderSearchInput(), this.renderSearchSizer(), trigger || this.renderText(), _Icon["default"].create(icon, {
	        overrideProps: this.handleIconOverrides,
	        autoGenerateKey: false
	      }), this.renderMenu(), open && _react["default"].createElement(_eventStack["default"], {
	        name: "keydown",
	        on: this.closeOnEscape
	      }), open && _react["default"].createElement(_eventStack["default"], {
	        name: "keydown",
	        on: this.moveSelectionOnKeyDown
	      }), open && _react["default"].createElement(_eventStack["default"], {
	        name: "click",
	        on: this.closeOnDocumentClick
	      }), open && _react["default"].createElement(_eventStack["default"], {
	        name: "keydown",
	        on: this.selectItemOnEnter
	      }), focus && _react["default"].createElement(_eventStack["default"], {
	        name: "keydown",
	        on: this.removeItemOnBackspace
	      }), focus && !open && _react["default"].createElement(_eventStack["default"], {
	        name: "keydown",
	        on: this.openOnArrow
	      }), focus && !open && _react["default"].createElement(_eventStack["default"], {
	        name: "keydown",
	        on: this.openOnSpace
	      })));
	    }
	  }]);
	  return Dropdown;
	}(_lib.AutoControlledComponent);

	exports["default"] = Dropdown;
	(0, _defineProperty2["default"])(Dropdown, "defaultProps", {
	  additionLabel: 'Add ',
	  additionPosition: 'top',
	  closeOnBlur: true,
	  closeOnEscape: true,
	  deburr: false,
	  icon: 'dropdown',
	  minCharacters: 1,
	  noResultsMessage: 'No results found.',
	  openOnFocus: true,
	  renderLabel: function renderLabel(_ref2) {
	    var text = _ref2.text;
	    return text;
	  },
	  searchInput: 'text',
	  selectOnBlur: true,
	  selectOnNavigation: true,
	  wrapSelection: true
	});
	(0, _defineProperty2["default"])(Dropdown, "autoControlledProps", ['open', 'searchQuery', 'selectedLabel', 'value', 'upward']);
	(0, _defineProperty2["default"])(Dropdown, "Divider", _DropdownDivider["default"]);
	(0, _defineProperty2["default"])(Dropdown, "Header", _DropdownHeader["default"]);
	(0, _defineProperty2["default"])(Dropdown, "Item", _DropdownItem["default"]);
	(0, _defineProperty2["default"])(Dropdown, "Menu", _DropdownMenu["default"]);
	(0, _defineProperty2["default"])(Dropdown, "SearchInput", _DropdownSearchInput["default"]);
	(0, _defineProperty2["default"])(Dropdown, "handledProps", ["additionLabel", "additionPosition", "allowAdditions", "as", "basic", "button", "children", "className", "clearable", "closeOnBlur", "closeOnChange", "closeOnEscape", "compact", "deburr", "defaultOpen", "defaultSearchQuery", "defaultSelectedLabel", "defaultUpward", "defaultValue", "direction", "disabled", "error", "floating", "fluid", "header", "icon", "inline", "item", "labeled", "lazyLoad", "loading", "minCharacters", "multiple", "noResultsMessage", "onAddItem", "onBlur", "onChange", "onClick", "onClose", "onFocus", "onLabelClick", "onMouseDown", "onOpen", "onSearchChange", "open", "openOnFocus", "options", "placeholder", "pointing", "renderLabel", "scrolling", "search", "searchInput", "searchQuery", "selectOnBlur", "selectOnNavigation", "selectedLabel", "selection", "simple", "tabIndex", "text", "trigger", "upward", "value", "wrapSelection"]);
	Dropdown.propTypes = process.env.NODE_ENV !== "production" ? {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Label prefixed to an option added by a user. */
	  additionLabel: _propTypes["default"].oneOfType([_propTypes["default"].element, _propTypes["default"].string]),

	  /** Position of the `Add: ...` option in the dropdown list ('top' or 'bottom'). */
	  additionPosition: _propTypes["default"].oneOf(['top', 'bottom']),

	  /**
	   * Allow user additions to the list of options (boolean).
	   * Requires the use of `selection`, `options` and `search`.
	   */
	  allowAdditions: _lib.customPropTypes.every([_lib.customPropTypes.demand(['options', 'selection', 'search']), _propTypes["default"].bool]),

	  /** A Dropdown can reduce its complexity. */
	  basic: _propTypes["default"].bool,

	  /** Format the Dropdown to appear as a button. */
	  button: _propTypes["default"].bool,

	  /** Primary content. */
	  children: _lib.customPropTypes.every([_lib.customPropTypes.disallow(['options', 'selection']), _lib.customPropTypes.givenProps({
	    children: _propTypes["default"].any.isRequired
	  }, _propTypes["default"].element.isRequired)]),

	  /** Additional classes. */
	  className: _propTypes["default"].string,

	  /** Using the clearable setting will let users remove their selection from a dropdown. */
	  clearable: _propTypes["default"].bool,

	  /** Whether or not the menu should close when the dropdown is blurred. */
	  closeOnBlur: _propTypes["default"].bool,

	  /** Whether or not the dropdown should close when the escape key is pressed. */
	  closeOnEscape: _propTypes["default"].bool,

	  /**
	   * Whether or not the menu should close when a value is selected from the dropdown.
	   * By default, multiple selection dropdowns will remain open on change, while single
	   * selection dropdowns will close on change.
	   */
	  closeOnChange: _propTypes["default"].bool,

	  /** A compact dropdown has no minimum width. */
	  compact: _propTypes["default"].bool,

	  /** Whether or not the dropdown should strip diacritics in options and input search */
	  deburr: _propTypes["default"].bool,

	  /** Initial value of open. */
	  defaultOpen: _propTypes["default"].bool,

	  /** Initial value of searchQuery. */
	  defaultSearchQuery: _propTypes["default"].string,

	  /** Currently selected label in multi-select. */
	  defaultSelectedLabel: _lib.customPropTypes.every([_lib.customPropTypes.demand(['multiple']), _propTypes["default"].oneOfType([_propTypes["default"].number, _propTypes["default"].string])]),

	  /** Initial value of upward. */
	  defaultUpward: _propTypes["default"].bool,

	  /** Initial value or value array if multiple. */
	  defaultValue: _propTypes["default"].oneOfType([_propTypes["default"].number, _propTypes["default"].string, _propTypes["default"].bool, _propTypes["default"].arrayOf(_propTypes["default"].oneOfType([_propTypes["default"].string, _propTypes["default"].number, _propTypes["default"].bool]))]),

	  /** A dropdown menu can open to the left or to the right. */
	  direction: _propTypes["default"].oneOf(['left', 'right']),

	  /** A disabled dropdown menu or item does not allow user interaction. */
	  disabled: _propTypes["default"].bool,

	  /** An errored dropdown can alert a user to a problem. */
	  error: _propTypes["default"].bool,

	  /** A dropdown menu can contain floated content. */
	  floating: _propTypes["default"].bool,

	  /** A dropdown can take the full width of its parent */
	  fluid: _propTypes["default"].bool,

	  /** A dropdown menu can contain a header. */
	  header: _propTypes["default"].node,

	  /** Shorthand for Icon. */
	  icon: _propTypes["default"].oneOfType([_propTypes["default"].node, _propTypes["default"].object]),

	  /** A dropdown can be formatted to appear inline in other content. */
	  inline: _propTypes["default"].bool,

	  /** A dropdown can be formatted as a Menu item. */
	  item: _propTypes["default"].bool,

	  /** A dropdown can be labeled. */
	  labeled: _propTypes["default"].bool,

	  /** A dropdown can defer rendering its options until it is open. */
	  lazyLoad: _propTypes["default"].bool,

	  /** A dropdown can show that it is currently loading data. */
	  loading: _propTypes["default"].bool,

	  /** The minimum characters for a search to begin showing results. */
	  minCharacters: _propTypes["default"].number,

	  /** A selection dropdown can allow multiple selections. */
	  multiple: _propTypes["default"].bool,

	  /** Message to display when there are no results. */
	  noResultsMessage: _propTypes["default"].node,

	  /**
	   * Called when a user adds a new item. Use this to update the options list.
	   *
	   * @param {SyntheticEvent} event - React's original SyntheticEvent.
	   * @param {object} data - All props and the new item's value.
	   */
	  onAddItem: _propTypes["default"].func,

	  /**
	   * Called on blur.
	   *
	   * @param {SyntheticEvent} event - React's original SyntheticEvent.
	   * @param {object} data - All props.
	   */
	  onBlur: _propTypes["default"].func,

	  /**
	   * Called when the user attempts to change the value.
	   *
	   * @param {SyntheticEvent} event - React's original SyntheticEvent.
	   * @param {object} data - All props and proposed value.
	   */
	  onChange: _propTypes["default"].func,

	  /**
	   * Called on click.
	   *
	   * @param {SyntheticEvent} event - React's original SyntheticEvent.
	   * @param {object} data - All props.
	   */
	  onClick: _propTypes["default"].func,

	  /**
	   * Called when a close event happens.
	   *
	   * @param {SyntheticEvent} event - React's original SyntheticEvent.
	   * @param {object} data - All props.
	   */
	  onClose: _propTypes["default"].func,

	  /**
	   * Called on focus.
	   *
	   * @param {SyntheticEvent} event - React's original SyntheticEvent.
	   * @param {object} data - All props.
	   */
	  onFocus: _propTypes["default"].func,

	  /**
	   * Called when a multi-select label is clicked.
	   *
	   * @param {SyntheticEvent} event - React's original SyntheticEvent.
	   * @param {object} data - All label props.
	   */
	  onLabelClick: _propTypes["default"].func,

	  /**
	   * Called on mousedown.
	   *
	   * @param {SyntheticEvent} event - React's original SyntheticEvent.
	   * @param {object} data - All props.
	   */
	  onMouseDown: _propTypes["default"].func,

	  /**
	   * Called when an open event happens.
	   *
	   * @param {SyntheticEvent} event - React's original SyntheticEvent.
	   * @param {object} data - All props.
	   */
	  onOpen: _propTypes["default"].func,

	  /**
	   * Called on search input change.
	   *
	   * @param {SyntheticEvent} event - React's original SyntheticEvent.
	   * @param {object} data - All props, includes current value of searchQuery.
	   */
	  onSearchChange: _propTypes["default"].func,

	  /** Controls whether or not the dropdown menu is displayed. */
	  open: _propTypes["default"].bool,

	  /** Whether or not the menu should open when the dropdown is focused. */
	  openOnFocus: _propTypes["default"].bool,

	  /** Array of Dropdown.Item props e.g. `{ text: '', value: '' }` */
	  options: _lib.customPropTypes.every([_lib.customPropTypes.disallow(['children']), _propTypes["default"].arrayOf(_propTypes["default"].shape(_DropdownItem["default"].propTypes))]),

	  /** Placeholder text. */
	  placeholder: _propTypes["default"].string,

	  /** A dropdown can be formatted so that its menu is pointing. */
	  pointing: _propTypes["default"].oneOfType([_propTypes["default"].bool, _propTypes["default"].oneOf(['left', 'right', 'top', 'top left', 'top right', 'bottom', 'bottom left', 'bottom right'])]),

	  /**
	   * Mapped over the active items and returns shorthand for the active item Labels.
	   * Only applies to `multiple` Dropdowns.
	   *
	   * @param {object} item - A currently active dropdown item.
	   * @param {number} index - The current index.
	   * @param {object} defaultLabelProps - The default props for an active item Label.
	   * @returns {*} Shorthand for a Label.
	   */
	  renderLabel: _propTypes["default"].func,

	  /** A dropdown can have its menu scroll. */
	  scrolling: _propTypes["default"].bool,

	  /**
	   * A selection dropdown can allow a user to search through a large list of choices.
	   * Pass a function here to replace the default search.
	   */
	  search: _propTypes["default"].oneOfType([_propTypes["default"].bool, _propTypes["default"].func]),

	  /** A shorthand for a search input. */
	  searchInput: _propTypes["default"].oneOfType([_propTypes["default"].array, _propTypes["default"].node, _propTypes["default"].object]),

	  /** Current value of searchQuery. Creates a controlled component. */
	  searchQuery: _propTypes["default"].string,
	  // TODO 'searchInMenu' or 'search='in menu' or ???  How to handle this markup and functionality?

	  /** Define whether the highlighted item should be selected on blur. */
	  selectOnBlur: _propTypes["default"].bool,

	  /**
	   * Whether or not to change the value when navigating the menu using arrow keys.
	   * Setting to false will require enter or left click to confirm a choice.
	   */
	  selectOnNavigation: _propTypes["default"].bool,

	  /** Currently selected label in multi-select. */
	  selectedLabel: _lib.customPropTypes.every([_lib.customPropTypes.demand(['multiple']), _propTypes["default"].oneOfType([_propTypes["default"].string, _propTypes["default"].number])]),

	  /** A dropdown can be used to select between choices in a form. */
	  selection: _lib.customPropTypes.every([_lib.customPropTypes.disallow(['children']), _lib.customPropTypes.demand(['options']), _propTypes["default"].bool]),

	  /** A simple dropdown can open without Javascript. */
	  simple: _propTypes["default"].bool,

	  /** A dropdown can receive focus. */
	  tabIndex: _propTypes["default"].oneOfType([_propTypes["default"].number, _propTypes["default"].string]),

	  /** The text displayed in the dropdown, usually for the active item. */
	  text: _propTypes["default"].string,

	  /** Custom element to trigger the menu to become visible. Takes place of 'text'. */
	  trigger: _lib.customPropTypes.every([_lib.customPropTypes.disallow(['selection', 'text']), _propTypes["default"].node]),

	  /** Current value or value array if multiple. Creates a controlled component. */
	  value: _propTypes["default"].oneOfType([_propTypes["default"].bool, _propTypes["default"].string, _propTypes["default"].number, _propTypes["default"].arrayOf(_propTypes["default"].oneOfType([_propTypes["default"].bool, _propTypes["default"].string, _propTypes["default"].number]))]),

	  /** Controls whether the dropdown will open upward. */
	  upward: _propTypes["default"].bool,

	  /**
	   * A dropdown will go to the last element when ArrowUp is pressed on the first,
	   * or go to the first when ArrowDown is pressed on the last( aka infinite selection )
	   */
	  wrapSelection: _propTypes["default"].bool
	} : {};
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 622 */,
/* 623 */,
/* 624 */,
/* 625 */,
/* 626 */,
/* 627 */,
/* 628 */,
/* 629 */
/***/ (function(module, exports, __webpack_require__) {

	var baseKeys = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"./_baseKeys\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())),
	    getTag = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"./_getTag\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())),
	    isArrayLike = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"./isArrayLike\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())),
	    isString = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"./isString\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())),
	    stringSize = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"./_stringSize\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	/** `Object#toString` result references. */
	var mapTag = '[object Map]',
	    setTag = '[object Set]';

	/**
	 * Gets the size of `collection` by returning its length for array-like
	 * values or the number of own enumerable string keyed properties for objects.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Collection
	 * @param {Array|Object|string} collection The collection to inspect.
	 * @returns {number} Returns the collection size.
	 * @example
	 *
	 * _.size([1, 2, 3]);
	 * // => 3
	 *
	 * _.size({ 'a': 1, 'b': 2 });
	 * // => 2
	 *
	 * _.size('pebbles');
	 * // => 7
	 */
	function size(collection) {
	  if (collection == null) {
	    return 0;
	  }
	  if (isArrayLike(collection)) {
	    return isString(collection) ? stringSize(collection) : collection.length;
	  }
	  var tag = getTag(collection);
	  if (tag == mapTag || tag == setTag) {
	    return collection.size;
	  }
	  return baseKeys(collection).length;
	}

	module.exports = size;


/***/ }),
/* 630 */,
/* 631 */,
/* 632 */,
/* 633 */
/***/ (function(module, exports, __webpack_require__) {

	var baseFlatten = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"./_baseFlatten\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())),
	    baseRest = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"./_baseRest\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())),
	    baseUniq = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"./_baseUniq\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())),
	    isArrayLikeObject = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"./isArrayLikeObject\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	/**
	 * Creates an array of unique values, in order, from all given arrays using
	 * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
	 * for equality comparisons.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Array
	 * @param {...Array} [arrays] The arrays to inspect.
	 * @returns {Array} Returns the new array of combined values.
	 * @example
	 *
	 * _.union([2], [1, 2]);
	 * // => [2, 1]
	 */
	var union = baseRest(function(arrays) {
	  return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));
	});

	module.exports = union;


/***/ }),
/* 634 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	Object.defineProperty(exports, "default", {
	  enumerable: true,
	  get: function get() {
	    return _Label["default"];
	  }
	});

	var _Label = _interopRequireDefault(__webpack_require__(544));

/***/ }),
/* 635 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _extends2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/extends\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _classnames = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"classnames\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _propTypes = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"prop-types\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _react = _interopRequireDefault(__webpack_require__(3));

	var _lib = __webpack_require__(256);

	/**
	 * A dropdown menu can contain dividers to separate related content.
	 */
	function DropdownDivider(props) {
	  var className = props.className;
	  var classes = (0, _classnames["default"])('divider', className);
	  var rest = (0, _lib.getUnhandledProps)(DropdownDivider, props);
	  var ElementType = (0, _lib.getElementType)(DropdownDivider, props);
	  return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	    className: classes
	  }));
	}

	DropdownDivider.handledProps = ["as", "className"];
	DropdownDivider.propTypes = process.env.NODE_ENV !== "production" ? {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Additional classes. */
	  className: _propTypes["default"].string
	} : {};
	var _default = DropdownDivider;
	exports["default"] = _default;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 636 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";

	var _interopRequireWildcard = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireWildcard\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _extends2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/extends\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _classCallCheck2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/classCallCheck\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _createClass2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/createClass\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/possibleConstructorReturn\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _getPrototypeOf3 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/getPrototypeOf\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _assertThisInitialized2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/assertThisInitialized\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _inherits2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/inherits\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _defineProperty2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/defineProperty\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _isNil2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/isNil\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _classnames = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"classnames\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _propTypes = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"prop-types\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _react = _interopRequireWildcard(__webpack_require__(3));

	var _lib = __webpack_require__(256);

	var _Flag = _interopRequireDefault(__webpack_require__(637));

	var _Icon = _interopRequireDefault(__webpack_require__(566));

	var _Image = _interopRequireDefault(__webpack_require__(639));

	var _Label = _interopRequireDefault(__webpack_require__(634));

	/**
	 * An item sub-component for Dropdown component.
	 */
	var DropdownItem =
	/*#__PURE__*/
	function (_Component) {
	  (0, _inherits2["default"])(DropdownItem, _Component);

	  function DropdownItem() {
	    var _getPrototypeOf2;

	    var _this;

	    (0, _classCallCheck2["default"])(this, DropdownItem);

	    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    _this = (0, _possibleConstructorReturn2["default"])(this, (_getPrototypeOf2 = (0, _getPrototypeOf3["default"])(DropdownItem)).call.apply(_getPrototypeOf2, [this].concat(args)));
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "handleClick", function (e) {
	      var onClick = _this.props.onClick;
	      if (onClick) onClick(e, _this.props);
	    });
	    return _this;
	  }

	  (0, _createClass2["default"])(DropdownItem, [{
	    key: "render",
	    value: function render() {
	      var _this$props = this.props,
	          active = _this$props.active,
	          children = _this$props.children,
	          className = _this$props.className,
	          content = _this$props.content,
	          disabled = _this$props.disabled,
	          description = _this$props.description,
	          flag = _this$props.flag,
	          icon = _this$props.icon,
	          image = _this$props.image,
	          label = _this$props.label,
	          selected = _this$props.selected,
	          text = _this$props.text;
	      var classes = (0, _classnames["default"])((0, _lib.useKeyOnly)(active, 'active'), (0, _lib.useKeyOnly)(disabled, 'disabled'), (0, _lib.useKeyOnly)(selected, 'selected'), 'item', className); // add default dropdown icon if item contains another menu

	      var iconName = (0, _isNil2["default"])(icon) ? _lib.childrenUtils.someByType(children, 'DropdownMenu') && 'dropdown' : icon;
	      var rest = (0, _lib.getUnhandledProps)(DropdownItem, this.props);
	      var ElementType = (0, _lib.getElementType)(DropdownItem, this.props);
	      var ariaOptions = {
	        role: 'option',
	        'aria-disabled': disabled,
	        'aria-checked': active,
	        'aria-selected': selected
	      };

	      if (!_lib.childrenUtils.isNil(children)) {
	        return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, ariaOptions, {
	          className: classes,
	          onClick: this.handleClick
	        }), children);
	      }

	      var flagElement = _Flag["default"].create(flag, {
	        autoGenerateKey: false
	      });

	      var iconElement = _Icon["default"].create(iconName, {
	        autoGenerateKey: false
	      });

	      var imageElement = _Image["default"].create(image, {
	        autoGenerateKey: false
	      });

	      var labelElement = _Label["default"].create(label, {
	        autoGenerateKey: false
	      });

	      var descriptionElement = (0, _lib.createShorthand)('span', function (val) {
	        return {
	          children: val
	        };
	      }, description, {
	        defaultProps: {
	          className: 'description'
	        },
	        autoGenerateKey: false
	      });
	      var textElement = (0, _lib.createShorthand)('span', function (val) {
	        return {
	          children: val
	        };
	      }, _lib.childrenUtils.isNil(content) ? text : content, {
	        defaultProps: {
	          className: 'text'
	        },
	        autoGenerateKey: false
	      });
	      return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, ariaOptions, {
	        className: classes,
	        onClick: this.handleClick
	      }), imageElement, iconElement, flagElement, labelElement, descriptionElement, textElement);
	    }
	  }]);
	  return DropdownItem;
	}(_react.Component);

	(0, _defineProperty2["default"])(DropdownItem, "handledProps", ["active", "as", "children", "className", "content", "description", "disabled", "flag", "icon", "image", "label", "onClick", "selected", "text", "value"]);
	DropdownItem.propTypes = process.env.NODE_ENV !== "production" ? {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Style as the currently chosen item. */
	  active: _propTypes["default"].bool,

	  /** Primary content. */
	  children: _propTypes["default"].node,

	  /** Additional classes. */
	  className: _propTypes["default"].string,

	  /** Shorthand for primary content. */
	  content: _lib.customPropTypes.contentShorthand,

	  /** Additional text with less emphasis. */
	  description: _lib.customPropTypes.itemShorthand,

	  /** A dropdown item can be disabled. */
	  disabled: _propTypes["default"].bool,

	  /** Shorthand for Flag. */
	  flag: _lib.customPropTypes.itemShorthand,

	  /** Shorthand for Icon. */
	  icon: _lib.customPropTypes.itemShorthand,

	  /** Shorthand for Image. */
	  image: _lib.customPropTypes.itemShorthand,

	  /** Shorthand for Label. */
	  label: _lib.customPropTypes.itemShorthand,

	  /**
	   * Called on click.
	   *
	   * @param {SyntheticEvent} event - React's original SyntheticEvent.
	   * @param {object} data - All props.
	   */
	  onClick: _propTypes["default"].func,

	  /**
	   * The item currently selected by keyboard shortcut.
	   * This is not the active item.
	   */
	  selected: _propTypes["default"].bool,

	  /** Display text. */
	  text: _lib.customPropTypes.contentShorthand,

	  /** Stored value. */
	  value: _propTypes["default"].oneOfType([_propTypes["default"].bool, _propTypes["default"].number, _propTypes["default"].string])
	} : {};
	DropdownItem.create = (0, _lib.createShorthandFactory)(DropdownItem, function (opts) {
	  return opts;
	});
	var _default = DropdownItem;
	exports["default"] = _default;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 637 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	Object.defineProperty(exports, "default", {
	  enumerable: true,
	  get: function get() {
	    return _Flag["default"];
	  }
	});

	var _Flag = _interopRequireDefault(__webpack_require__(638));

/***/ }),
/* 638 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";

	var _interopRequireWildcard = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireWildcard\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = exports.names = void 0;

	var _extends2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/extends\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _classCallCheck2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/classCallCheck\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _createClass2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/createClass\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/possibleConstructorReturn\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/getPrototypeOf\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _inherits2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/inherits\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _defineProperty2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/defineProperty\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _classnames = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"classnames\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _propTypes = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"prop-types\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _react = _interopRequireWildcard(__webpack_require__(3));

	var _lib = __webpack_require__(256);

	var names = ['ad', 'andorra', 'ae', 'united arab emirates', 'uae', 'af', 'afghanistan', 'ag', 'antigua', 'ai', 'anguilla', 'al', 'albania', 'am', 'armenia', 'an', 'netherlands antilles', 'ao', 'angola', 'ar', 'argentina', 'as', 'american samoa', 'at', 'austria', 'au', 'australia', 'aw', 'aruba', 'ax', 'aland islands', 'az', 'azerbaijan', 'ba', 'bosnia', 'bb', 'barbados', 'bd', 'bangladesh', 'be', 'belgium', 'bf', 'burkina faso', 'bg', 'bulgaria', 'bh', 'bahrain', 'bi', 'burundi', 'bj', 'benin', 'bm', 'bermuda', 'bn', 'brunei', 'bo', 'bolivia', 'br', 'brazil', 'bs', 'bahamas', 'bt', 'bhutan', 'bv', 'bouvet island', 'bw', 'botswana', 'by', 'belarus', 'bz', 'belize', 'ca', 'canada', 'cc', 'cocos islands', 'cd', 'congo', 'cf', 'central african republic', 'cg', 'congo brazzaville', 'ch', 'switzerland', 'ci', 'cote divoire', 'ck', 'cook islands', 'cl', 'chile', 'cm', 'cameroon', 'cn', 'china', 'co', 'colombia', 'cr', 'costa rica', 'cs', 'cu', 'cuba', 'cv', 'cape verde', 'cx', 'christmas island', 'cy', 'cyprus', 'cz', 'czech republic', 'de', 'germany', 'dj', 'djibouti', 'dk', 'denmark', 'dm', 'dominica', 'do', 'dominican republic', 'dz', 'algeria', 'ec', 'ecuador', 'ee', 'estonia', 'eg', 'egypt', 'eh', 'western sahara', 'er', 'eritrea', 'es', 'spain', 'et', 'ethiopia', 'eu', 'european union', 'fi', 'finland', 'fj', 'fiji', 'fk', 'falkland islands', 'fm', 'micronesia', 'fo', 'faroe islands', 'fr', 'france', 'ga', 'gabon', 'gb', 'uk', 'united kingdom', 'gd', 'grenada', 'ge', 'georgia', 'gf', 'french guiana', 'gh', 'ghana', 'gi', 'gibraltar', 'gl', 'greenland', 'gm', 'gambia', 'gn', 'guinea', 'gp', 'guadeloupe', 'gq', 'equatorial guinea', 'gr', 'greece', 'gs', 'sandwich islands', 'gt', 'guatemala', 'gu', 'guam', 'gw', 'guinea-bissau', 'gy', 'guyana', 'hk', 'hong kong', 'hm', 'heard island', 'hn', 'honduras', 'hr', 'croatia', 'ht', 'haiti', 'hu', 'hungary', 'id', 'indonesia', 'ie', 'ireland', 'il', 'israel', 'in', 'india', 'io', 'indian ocean territory', 'iq', 'iraq', 'ir', 'iran', 'is', 'iceland', 'it', 'italy', 'jm', 'jamaica', 'jo', 'jordan', 'jp', 'japan', 'ke', 'kenya', 'kg', 'kyrgyzstan', 'kh', 'cambodia', 'ki', 'kiribati', 'km', 'comoros', 'kn', 'saint kitts and nevis', 'kp', 'north korea', 'kr', 'south korea', 'kw', 'kuwait', 'ky', 'cayman islands', 'kz', 'kazakhstan', 'la', 'laos', 'lb', 'lebanon', 'lc', 'saint lucia', 'li', 'liechtenstein', 'lk', 'sri lanka', 'lr', 'liberia', 'ls', 'lesotho', 'lt', 'lithuania', 'lu', 'luxembourg', 'lv', 'latvia', 'ly', 'libya', 'ma', 'morocco', 'mc', 'monaco', 'md', 'moldova', 'me', 'montenegro', 'mg', 'madagascar', 'mh', 'marshall islands', 'mk', 'macedonia', 'ml', 'mali', 'mm', 'myanmar', 'burma', 'mn', 'mongolia', 'mo', 'macau', 'mp', 'northern mariana islands', 'mq', 'martinique', 'mr', 'mauritania', 'ms', 'montserrat', 'mt', 'malta', 'mu', 'mauritius', 'mv', 'maldives', 'mw', 'malawi', 'mx', 'mexico', 'my', 'malaysia', 'mz', 'mozambique', 'na', 'namibia', 'nc', 'new caledonia', 'ne', 'niger', 'nf', 'norfolk island', 'ng', 'nigeria', 'ni', 'nicaragua', 'nl', 'netherlands', 'no', 'norway', 'np', 'nepal', 'nr', 'nauru', 'nu', 'niue', 'nz', 'new zealand', 'om', 'oman', 'pa', 'panama', 'pe', 'peru', 'pf', 'french polynesia', 'pg', 'new guinea', 'ph', 'philippines', 'pk', 'pakistan', 'pl', 'poland', 'pm', 'saint pierre', 'pn', 'pitcairn islands', 'pr', 'puerto rico', 'ps', 'palestine', 'pt', 'portugal', 'pw', 'palau', 'py', 'paraguay', 'qa', 'qatar', 're', 'reunion', 'ro', 'romania', 'rs', 'serbia', 'ru', 'russia', 'rw', 'rwanda', 'sa', 'saudi arabia', 'sb', 'solomon islands', 'sc', 'seychelles', 'gb sct', 'scotland', 'sd', 'sudan', 'se', 'sweden', 'sg', 'singapore', 'sh', 'saint helena', 'si', 'slovenia', 'sj', 'svalbard', 'jan mayen', 'sk', 'slovakia', 'sl', 'sierra leone', 'sm', 'san marino', 'sn', 'senegal', 'so', 'somalia', 'sr', 'suriname', 'st', 'sao tome', 'sv', 'el salvador', 'sy', 'syria', 'sz', 'swaziland', 'tc', 'caicos islands', 'td', 'chad', 'tf', 'french territories', 'tg', 'togo', 'th', 'thailand', 'tj', 'tajikistan', 'tk', 'tokelau', 'tl', 'timorleste', 'tm', 'turkmenistan', 'tn', 'tunisia', 'to', 'tonga', 'tr', 'turkey', 'tt', 'trinidad', 'tv', 'tuvalu', 'tw', 'taiwan', 'tz', 'tanzania', 'ua', 'ukraine', 'ug', 'uganda', 'um', 'us minor islands', 'us', 'america', 'united states', 'uy', 'uruguay', 'uz', 'uzbekistan', 'va', 'vatican city', 'vc', 'saint vincent', 've', 'venezuela', 'vg', 'british virgin islands', 'vi', 'us virgin islands', 'vn', 'vietnam', 'vu', 'vanuatu', 'gb wls', 'wales', 'wf', 'wallis and futuna', 'ws', 'samoa', 'ye', 'yemen', 'yt', 'mayotte', 'za', 'south africa', 'zm', 'zambia', 'zw', 'zimbabwe'];
	/**
	 * A flag is is used to represent a political state.
	 */

	exports.names = names;

	var Flag =
	/*#__PURE__*/
	function (_PureComponent) {
	  (0, _inherits2["default"])(Flag, _PureComponent);

	  function Flag() {
	    (0, _classCallCheck2["default"])(this, Flag);
	    return (0, _possibleConstructorReturn2["default"])(this, (0, _getPrototypeOf2["default"])(Flag).apply(this, arguments));
	  }

	  (0, _createClass2["default"])(Flag, [{
	    key: "render",
	    value: function render() {
	      var _this$props = this.props,
	          className = _this$props.className,
	          name = _this$props.name;
	      var classes = (0, _classnames["default"])(name, 'flag', className);
	      var rest = (0, _lib.getUnhandledProps)(Flag, this.props);
	      var ElementType = (0, _lib.getElementType)(Flag, this.props);
	      return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	        className: classes
	      }));
	    }
	  }]);
	  return Flag;
	}(_react.PureComponent);

	(0, _defineProperty2["default"])(Flag, "defaultProps", {
	  as: 'i'
	});
	(0, _defineProperty2["default"])(Flag, "handledProps", ["as", "className", "name"]);
	Flag.propTypes = process.env.NODE_ENV !== "production" ? {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Additional classes. */
	  className: _propTypes["default"].string,

	  /** Flag name, can use the two digit country code, the full name, or a common alias. */
	  name: _lib.customPropTypes.suggest(names)
	} : {};
	Flag.create = (0, _lib.createShorthandFactory)(Flag, function (value) {
	  return {
	    name: value
	  };
	});
	var _default = Flag;
	exports["default"] = _default;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 639 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	Object.defineProperty(exports, "default", {
	  enumerable: true,
	  get: function get() {
	    return _Image["default"];
	  }
	});

	var _Image = _interopRequireDefault(__webpack_require__(545));

/***/ }),
/* 640 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _extends2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/extends\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _classnames = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"classnames\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _propTypes = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"prop-types\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _react = _interopRequireDefault(__webpack_require__(3));

	var _lib = __webpack_require__(256);

	var _Icon = _interopRequireDefault(__webpack_require__(566));

	/**
	 * A dropdown menu can contain a header.
	 */
	function DropdownHeader(props) {
	  var children = props.children,
	      className = props.className,
	      content = props.content,
	      icon = props.icon;
	  var classes = (0, _classnames["default"])('header', className);
	  var rest = (0, _lib.getUnhandledProps)(DropdownHeader, props);
	  var ElementType = (0, _lib.getElementType)(DropdownHeader, props);

	  if (!_lib.childrenUtils.isNil(children)) {
	    return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	      className: classes
	    }), children);
	  }

	  return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	    className: classes
	  }), _Icon["default"].create(icon, {
	    autoGenerateKey: false
	  }), content);
	}

	DropdownHeader.handledProps = ["as", "children", "className", "content", "icon"];
	DropdownHeader.propTypes = process.env.NODE_ENV !== "production" ? {
	  /** An element type to render as (string or function) */
	  as: _lib.customPropTypes.as,

	  /** Primary content. */
	  children: _propTypes["default"].node,

	  /** Additional classes. */
	  className: _propTypes["default"].string,

	  /** Shorthand for primary content. */
	  content: _lib.customPropTypes.contentShorthand,

	  /** Shorthand for Icon. */
	  icon: _lib.customPropTypes.itemShorthand
	} : {};
	DropdownHeader.create = (0, _lib.createShorthandFactory)(DropdownHeader, function (content) {
	  return {
	    content: content
	  };
	});
	var _default = DropdownHeader;
	exports["default"] = _default;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 641 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _extends2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/extends\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _classnames = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"classnames\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _propTypes = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"prop-types\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _react = _interopRequireDefault(__webpack_require__(3));

	var _lib = __webpack_require__(256);

	/**
	 * A dropdown menu can contain a menu.
	 */
	function DropdownMenu(props) {
	  var children = props.children,
	      className = props.className,
	      content = props.content,
	      direction = props.direction,
	      open = props.open,
	      scrolling = props.scrolling;
	  var classes = (0, _classnames["default"])(direction, (0, _lib.useKeyOnly)(open, 'visible'), (0, _lib.useKeyOnly)(scrolling, 'scrolling'), 'menu transition', className);
	  var rest = (0, _lib.getUnhandledProps)(DropdownMenu, props);
	  var ElementType = (0, _lib.getElementType)(DropdownMenu, props);
	  return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	    className: classes
	  }), _lib.childrenUtils.isNil(children) ? content : children);
	}

	DropdownMenu.handledProps = ["as", "children", "className", "content", "direction", "open", "scrolling"];
	DropdownMenu.propTypes = process.env.NODE_ENV !== "production" ? {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Primary content. */
	  children: _propTypes["default"].node,

	  /** Additional classes. */
	  className: _propTypes["default"].string,

	  /** Shorthand for primary content. */
	  content: _lib.customPropTypes.contentShorthand,

	  /** A dropdown menu can open to the left or to the right. */
	  direction: _propTypes["default"].oneOf(['left', 'right']),

	  /** Whether or not the dropdown menu is displayed. */
	  open: _propTypes["default"].bool,

	  /** A dropdown menu can scroll. */
	  scrolling: _propTypes["default"].bool
	} : {};
	var _default = DropdownMenu;
	exports["default"] = _default;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 642 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";

	var _interopRequireWildcard = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireWildcard\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _extends2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/extends\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _objectSpread2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/objectSpread\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _classCallCheck2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/classCallCheck\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _createClass2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/createClass\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/possibleConstructorReturn\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _getPrototypeOf3 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/getPrototypeOf\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _assertThisInitialized2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/assertThisInitialized\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _inherits2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/inherits\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _defineProperty2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/defineProperty\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _invoke2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/invoke\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _get2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/get\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _classnames = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"classnames\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _propTypes = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"prop-types\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _react = _interopRequireWildcard(__webpack_require__(3));

	var _lib = __webpack_require__(256);

	/**
	 * A search item sub-component for Dropdown component.
	 */
	var DropdownSearchInput =
	/*#__PURE__*/
	function (_Component) {
	  (0, _inherits2["default"])(DropdownSearchInput, _Component);

	  function DropdownSearchInput() {
	    var _getPrototypeOf2;

	    var _this;

	    (0, _classCallCheck2["default"])(this, DropdownSearchInput);

	    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    _this = (0, _possibleConstructorReturn2["default"])(this, (_getPrototypeOf2 = (0, _getPrototypeOf3["default"])(DropdownSearchInput)).call.apply(_getPrototypeOf2, [this].concat(args)));
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "handleChange", function (e) {
	      var value = (0, _get2["default"])(e, 'target.value');
	      (0, _invoke2["default"])(_this.props, 'onChange', e, (0, _objectSpread2["default"])({}, _this.props, {
	        value: value
	      }));
	    });
	    return _this;
	  }

	  (0, _createClass2["default"])(DropdownSearchInput, [{
	    key: "render",
	    value: function render() {
	      var _this$props = this.props,
	          autoComplete = _this$props.autoComplete,
	          className = _this$props.className,
	          tabIndex = _this$props.tabIndex,
	          type = _this$props.type,
	          value = _this$props.value;
	      var classes = (0, _classnames["default"])('search', className);
	      var rest = (0, _lib.getUnhandledProps)(DropdownSearchInput, this.props);
	      return _react["default"].createElement("input", (0, _extends2["default"])({}, rest, {
	        "aria-autocomplete": "list",
	        autoComplete: autoComplete,
	        className: classes,
	        onChange: this.handleChange,
	        tabIndex: tabIndex,
	        type: type,
	        value: value
	      }));
	    }
	  }]);
	  return DropdownSearchInput;
	}(_react.Component);

	(0, _defineProperty2["default"])(DropdownSearchInput, "defaultProps", {
	  autoComplete: 'off',
	  type: 'text'
	});
	(0, _defineProperty2["default"])(DropdownSearchInput, "handledProps", ["as", "autoComplete", "className", "tabIndex", "type", "value"]);
	DropdownSearchInput.propTypes = process.env.NODE_ENV !== "production" ? {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** An input can have the auto complete. */
	  autoComplete: _propTypes["default"].string,

	  /** Additional classes. */
	  className: _propTypes["default"].string,

	  /** An input can receive focus. */
	  tabIndex: _propTypes["default"].oneOfType([_propTypes["default"].number, _propTypes["default"].string]),

	  /** The HTML input type. */
	  type: _propTypes["default"].string,

	  /** Stored value. */
	  value: _propTypes["default"].oneOfType([_propTypes["default"].number, _propTypes["default"].string])
	} : {};
	DropdownSearchInput.create = (0, _lib.createShorthandFactory)(DropdownSearchInput, function (type) {
	  return {
	    type: type
	  };
	});
	var _default = DropdownSearchInput;
	exports["default"] = _default;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 643 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	Object.defineProperty(exports, "default", {
	  enumerable: true,
	  get: function get() {
	    return _TextArea["default"];
	  }
	});

	var _TextArea = _interopRequireDefault(__webpack_require__(644));

/***/ }),
/* 644 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";

	var _interopRequireWildcard = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireWildcard\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _extends2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/extends\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _objectSpread2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/objectSpread\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _classCallCheck2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/classCallCheck\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _createClass2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/createClass\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/possibleConstructorReturn\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _getPrototypeOf3 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/getPrototypeOf\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _assertThisInitialized2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/assertThisInitialized\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _inherits2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/inherits\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _defineProperty2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/defineProperty\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _invoke2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/invoke\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _get2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/get\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _propTypes = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"prop-types\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _react = _interopRequireWildcard(__webpack_require__(3));

	var _Ref = _interopRequireDefault(__webpack_require__(537));

	var _lib = __webpack_require__(256);

	/**
	 * A TextArea can be used to allow for extended user input.
	 * @see Form
	 */
	var TextArea =
	/*#__PURE__*/
	function (_Component) {
	  (0, _inherits2["default"])(TextArea, _Component);

	  function TextArea() {
	    var _getPrototypeOf2;

	    var _this;

	    (0, _classCallCheck2["default"])(this, TextArea);

	    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    _this = (0, _possibleConstructorReturn2["default"])(this, (_getPrototypeOf2 = (0, _getPrototypeOf3["default"])(TextArea)).call.apply(_getPrototypeOf2, [this].concat(args)));
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "ref", (0, _react.createRef)());
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "focus", function () {
	      return _this.ref.current.focus();
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "handleChange", function (e) {
	      var value = (0, _get2["default"])(e, 'target.value');
	      (0, _invoke2["default"])(_this.props, 'onChange', e, (0, _objectSpread2["default"])({}, _this.props, {
	        value: value
	      }));
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "handleInput", function (e) {
	      var value = (0, _get2["default"])(e, 'target.value');
	      (0, _invoke2["default"])(_this.props, 'onInput', e, (0, _objectSpread2["default"])({}, _this.props, {
	        value: value
	      }));
	    });
	    return _this;
	  }

	  (0, _createClass2["default"])(TextArea, [{
	    key: "render",
	    value: function render() {
	      var _this$props = this.props,
	          rows = _this$props.rows,
	          value = _this$props.value;
	      var rest = (0, _lib.getUnhandledProps)(TextArea, this.props);
	      var ElementType = (0, _lib.getElementType)(TextArea, this.props);
	      return _react["default"].createElement(_Ref["default"], {
	        innerRef: this.ref
	      }, _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	        onChange: this.handleChange,
	        onInput: this.handleInput,
	        rows: rows,
	        value: value
	      })));
	    }
	  }]);
	  return TextArea;
	}(_react.Component);

	(0, _defineProperty2["default"])(TextArea, "defaultProps", {
	  as: 'textarea',
	  rows: 3
	});
	(0, _defineProperty2["default"])(TextArea, "handledProps", ["as", "onChange", "onInput", "rows", "value"]);
	TextArea.propTypes = process.env.NODE_ENV !== "production" ? {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /**
	   * Called on change.
	   * @param {SyntheticEvent} event - The React SyntheticEvent object
	   * @param {object} data - All props and the event value.
	   */
	  onChange: _propTypes["default"].func,

	  /**
	   * Called on input.
	   * @param {SyntheticEvent} event - The React SyntheticEvent object
	   * @param {object} data - All props and the event value.
	   */
	  onInput: _propTypes["default"].func,

	  /** Indicates row count for a TextArea. */
	  rows: _propTypes["default"].oneOfType([_propTypes["default"].number, _propTypes["default"].string]),

	  /** The value of the textarea. */
	  value: _propTypes["default"].oneOfType([_propTypes["default"].number, _propTypes["default"].string])
	} : {};
	var _default = TextArea;
	exports["default"] = _default;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 645 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	Object.defineProperty(exports, "default", {
	  enumerable: true,
	  get: function get() {
	    return _TransitionablePortal["default"];
	  }
	});

	var _TransitionablePortal = _interopRequireDefault(__webpack_require__(646));

/***/ }),
/* 646 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";

	var _interopRequireWildcard = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireWildcard\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _extends2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/extends\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _objectSpread2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/objectSpread\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _classCallCheck2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/classCallCheck\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _createClass2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/createClass\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/possibleConstructorReturn\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/getPrototypeOf\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _assertThisInitialized2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/assertThisInitialized\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _inherits2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/inherits\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _defineProperty2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/defineProperty\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _invoke2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/invoke\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _propTypes = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"prop-types\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _react = _interopRequireWildcard(__webpack_require__(3));

	var _Portal = _interopRequireDefault(__webpack_require__(548));

	var _Transition = _interopRequireDefault(__webpack_require__(647));

	var _lib = __webpack_require__(256);

	/**
	 * A sugar for `Portal` and `Transition`.
	 * @see Portal
	 * @see Transition
	 */
	var TransitionablePortal =
	/*#__PURE__*/
	function (_Component) {
	  (0, _inherits2["default"])(TransitionablePortal, _Component);

	  function TransitionablePortal(props) {
	    var _this;

	    (0, _classCallCheck2["default"])(this, TransitionablePortal);
	    _this = (0, _possibleConstructorReturn2["default"])(this, (0, _getPrototypeOf2["default"])(TransitionablePortal).call(this, props));
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "handlePortalClose", function () {
	      _this.setState({
	        portalOpen: false
	      });
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "handlePortalOpen", function () {
	      _this.setState({
	        portalOpen: true
	      });
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "handleTransitionHide", function (nothing, data) {
	      var portalOpen = _this.state.portalOpen;

	      _this.setState({
	        transitionVisible: false
	      });

	      (0, _invoke2["default"])(_this.props, 'onClose', null, (0, _objectSpread2["default"])({}, data, {
	        portalOpen: false,
	        transitionVisible: false
	      }));
	      (0, _invoke2["default"])(_this.props, 'onHide', null, (0, _objectSpread2["default"])({}, data, {
	        portalOpen: portalOpen,
	        transitionVisible: false
	      }));
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "handleTransitionStart", function (nothing, data) {
	      var portalOpen = _this.state.portalOpen;
	      var status = data.status;
	      var transitionVisible = status === _Transition["default"].ENTERING;
	      (0, _invoke2["default"])(_this.props, 'onStart', null, (0, _objectSpread2["default"])({}, data, {
	        portalOpen: portalOpen,
	        transitionVisible: transitionVisible
	      })); // Heads up! TransitionablePortal fires onOpen callback on the start of transition animation

	      if (!transitionVisible) return;

	      _this.setState({
	        transitionVisible: transitionVisible
	      });

	      (0, _invoke2["default"])(_this.props, 'onOpen', null, (0, _objectSpread2["default"])({}, data, {
	        transitionVisible: transitionVisible,
	        portalOpen: true
	      }));
	    });
	    _this.state = {
	      portalOpen: props.open
	    };
	    return _this;
	  } // ----------------------------------------
	  // Lifecycle
	  // ----------------------------------------


	  (0, _createClass2["default"])(TransitionablePortal, [{
	    key: "componentWillReceiveProps",
	    value: function componentWillReceiveProps(_ref) {
	      var open = _ref.open;
	      this.setState({
	        portalOpen: open
	      });
	    } // ----------------------------------------
	    // Callback handling
	    // ----------------------------------------

	  }, {
	    key: "render",
	    // ----------------------------------------
	    // Render
	    // ----------------------------------------
	    value: function render() {
	      var _this$props = this.props,
	          children = _this$props.children,
	          transition = _this$props.transition;
	      var _this$state = this.state,
	          portalOpen = _this$state.portalOpen,
	          transitionVisible = _this$state.transitionVisible;
	      var open = portalOpen || transitionVisible;
	      var rest = (0, _lib.getUnhandledProps)(TransitionablePortal, this.props);
	      return _react["default"].createElement(_Portal["default"], (0, _extends2["default"])({}, rest, {
	        open: open,
	        onOpen: this.handlePortalOpen,
	        onClose: this.handlePortalClose
	      }), _react["default"].createElement(_Transition["default"], (0, _extends2["default"])({}, transition, {
	        transitionOnMount: true,
	        onStart: this.handleTransitionStart,
	        onHide: this.handleTransitionHide,
	        visible: portalOpen
	      }), children));
	    }
	  }]);
	  return TransitionablePortal;
	}(_react.Component);

	exports["default"] = TransitionablePortal;
	(0, _defineProperty2["default"])(TransitionablePortal, "defaultProps", {
	  transition: {
	    animation: 'scale',
	    duration: 400
	  }
	});
	(0, _defineProperty2["default"])(TransitionablePortal, "handledProps", ["children", "onClose", "onHide", "onOpen", "onStart", "open", "transition"]);
	TransitionablePortal.propTypes = process.env.NODE_ENV !== "production" ? {
	  /** Primary content. */
	  children: _propTypes["default"].node.isRequired,

	  /**
	   * Called when a close event happens.
	   *
	   * @param {SyntheticEvent} event - React's original SyntheticEvent.
	   * @param {object} data - All props and internal state.
	   */
	  onClose: _propTypes["default"].func,

	  /**
	   * Callback on each transition that changes visibility to hidden.
	   *
	   * @param {null}
	   * @param {object} data - All props with transition status and internal state.
	   */
	  onHide: _propTypes["default"].func,

	  /**
	   * Called when an open event happens.
	   *
	   * @param {SyntheticEvent} event - React's original SyntheticEvent.
	   * @param {object} data - All props and internal state.
	   */
	  onOpen: _propTypes["default"].func,

	  /**
	   * Callback on animation start.
	   *
	   * @param {null}
	   * @param {object} data - All props with transition status and internal state.
	   */
	  onStart: _propTypes["default"].func,

	  /** Controls whether or not the portal is displayed. */
	  open: _propTypes["default"].bool,

	  /** Transition props. */
	  transition: _propTypes["default"].object
	} : {};
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 647 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	Object.defineProperty(exports, "default", {
	  enumerable: true,
	  get: function get() {
	    return _Transition["default"];
	  }
	});

	var _Transition = _interopRequireDefault(__webpack_require__(648));

/***/ }),
/* 648 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _objectSpread2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/objectSpread\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _classCallCheck2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/classCallCheck\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _createClass2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/createClass\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/possibleConstructorReturn\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _getPrototypeOf3 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/getPrototypeOf\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _assertThisInitialized2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/assertThisInitialized\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _inherits2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/inherits\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _defineProperty2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/defineProperty\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _includes2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/includes\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _isNil2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/isNil\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _get2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/get\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _invoke2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/invoke\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _classnames = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"classnames\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _propTypes = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"prop-types\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _react = __webpack_require__(3);

	var _lib = __webpack_require__(256);

	var _TransitionGroup = _interopRequireDefault(__webpack_require__(649));

	var TRANSITION_TYPE = {
	  ENTERING: 'show',
	  EXITING: 'hide'
	  /**
	   * A transition is an animation usually used to move content in or out of view.
	   */

	};

	var Transition =
	/*#__PURE__*/
	function (_Component) {
	  (0, _inherits2["default"])(Transition, _Component);

	  function Transition() {
	    var _getPrototypeOf2;

	    var _this;

	    (0, _classCallCheck2["default"])(this, Transition);

	    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    _this = (0, _possibleConstructorReturn2["default"])(this, (_getPrototypeOf2 = (0, _getPrototypeOf3["default"])(Transition)).call.apply(_getPrototypeOf2, [this].concat(args)));
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "handleStart", function () {
	      var duration = _this.props.duration;
	      var status = _this.nextStatus;
	      _this.nextStatus = null;

	      _this.setState({
	        status: status,
	        animating: true
	      }, function () {
	        var durationType = TRANSITION_TYPE[status];
	        var durationValue = (0, _lib.normalizeTransitionDuration)(duration, durationType);
	        (0, _invoke2["default"])(_this.props, 'onStart', null, (0, _objectSpread2["default"])({}, _this.props, {
	          status: status
	        }));
	        _this.timeoutId = setTimeout(_this.handleComplete, durationValue);
	      });
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "handleComplete", function () {
	      var current = _this.state.status;
	      (0, _invoke2["default"])(_this.props, 'onComplete', null, (0, _objectSpread2["default"])({}, _this.props, {
	        status: current
	      }));

	      if (_this.nextStatus) {
	        _this.handleStart();

	        return;
	      }

	      var status = _this.computeCompletedStatus();

	      var callback = current === Transition.ENTERING ? 'onShow' : 'onHide';

	      _this.setState({
	        status: status,
	        animating: false
	      }, function () {
	        (0, _invoke2["default"])(_this.props, callback, null, (0, _objectSpread2["default"])({}, _this.props, {
	          status: status
	        }));
	      });
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "updateStatus", function () {
	      var animating = _this.state.animating;

	      if (_this.nextStatus) {
	        _this.nextStatus = _this.computeNextStatus();
	        if (!animating) _this.handleStart();
	      }
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "computeClasses", function () {
	      var _this$props = _this.props,
	          animation = _this$props.animation,
	          directional = _this$props.directional,
	          children = _this$props.children;
	      var _this$state = _this.state,
	          animating = _this$state.animating,
	          status = _this$state.status;
	      var childClasses = (0, _get2["default"])(children, 'props.className');
	      var isDirectional = (0, _isNil2["default"])(directional) ? (0, _includes2["default"])(_lib.SUI.DIRECTIONAL_TRANSITIONS, animation) : directional;

	      if (isDirectional) {
	        return (0, _classnames["default"])(animation, childClasses, (0, _lib.useKeyOnly)(animating, 'animating'), (0, _lib.useKeyOnly)(status === Transition.ENTERING, 'in'), (0, _lib.useKeyOnly)(status === Transition.EXITING, 'out'), (0, _lib.useKeyOnly)(status === Transition.EXITED, 'hidden'), (0, _lib.useKeyOnly)(status !== Transition.EXITED, 'visible'), 'transition');
	      }

	      return (0, _classnames["default"])(animation, childClasses, (0, _lib.useKeyOnly)(animating, 'animating transition'));
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "computeCompletedStatus", function () {
	      var unmountOnHide = _this.props.unmountOnHide;
	      var status = _this.state.status;
	      if (status === Transition.ENTERING) return Transition.ENTERED;
	      return unmountOnHide ? Transition.UNMOUNTED : Transition.EXITED;
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "computeInitialStatuses", function () {
	      var _this$props2 = _this.props,
	          visible = _this$props2.visible,
	          mountOnShow = _this$props2.mountOnShow,
	          transitionOnMount = _this$props2.transitionOnMount,
	          unmountOnHide = _this$props2.unmountOnHide;

	      if (visible) {
	        if (transitionOnMount) {
	          return {
	            initial: Transition.EXITED,
	            next: Transition.ENTERING
	          };
	        }

	        return {
	          initial: Transition.ENTERED
	        };
	      }

	      if (mountOnShow || unmountOnHide) return {
	        initial: Transition.UNMOUNTED
	      };
	      return {
	        initial: Transition.EXITED
	      };
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "computeNextStatus", function () {
	      var _this$state2 = _this.state,
	          animating = _this$state2.animating,
	          status = _this$state2.status;
	      if (animating) return status === Transition.ENTERING ? Transition.EXITING : Transition.ENTERING;
	      return status === Transition.ENTERED ? Transition.EXITING : Transition.ENTERING;
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "computeStatuses", function (props) {
	      var status = _this.state.status;
	      var visible = props.visible;

	      if (visible) {
	        return {
	          current: status === Transition.UNMOUNTED && Transition.EXITED,
	          next: status !== Transition.ENTERING && status !== Transition.ENTERED && Transition.ENTERING
	        };
	      }

	      return {
	        next: (status === Transition.ENTERING || status === Transition.ENTERED) && Transition.EXITING
	      };
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "computeStyle", function () {
	      var _this$props3 = _this.props,
	          children = _this$props3.children,
	          duration = _this$props3.duration;
	      var status = _this.state.status;
	      var childStyle = (0, _get2["default"])(children, 'props.style');
	      var type = TRANSITION_TYPE[status];
	      var animationDuration = type && "".concat((0, _lib.normalizeTransitionDuration)(duration, type), "ms");
	      return (0, _objectSpread2["default"])({}, childStyle, {
	        animationDuration: animationDuration
	      });
	    });

	    var _this$computeInitialS = _this.computeInitialStatuses(),
	        _status = _this$computeInitialS.initial,
	        next = _this$computeInitialS.next;

	    _this.nextStatus = next;
	    _this.state = {
	      status: _status
	    };
	    return _this;
	  } // ----------------------------------------
	  // Lifecycle
	  // ----------------------------------------


	  (0, _createClass2["default"])(Transition, [{
	    key: "componentDidMount",
	    value: function componentDidMount() {
	      this.updateStatus();
	    }
	  }, {
	    key: "componentWillReceiveProps",
	    value: function componentWillReceiveProps(nextProps) {
	      var _this$computeStatuses = this.computeStatuses(nextProps),
	          status = _this$computeStatuses.current,
	          next = _this$computeStatuses.next;

	      this.nextStatus = next;
	      if (status) this.setState({
	        status: status
	      });
	    }
	  }, {
	    key: "componentDidUpdate",
	    value: function componentDidUpdate() {
	      this.updateStatus();
	    }
	  }, {
	    key: "componentWillUnmount",
	    value: function componentWillUnmount() {
	      clearTimeout(this.timeoutId);
	    } // ----------------------------------------
	    // Callback handling
	    // ----------------------------------------

	  }, {
	    key: "render",
	    // ----------------------------------------
	    // Render
	    // ----------------------------------------
	    value: function render() {
	      var children = this.props.children;
	      var status = this.state.status;
	      if (status === Transition.UNMOUNTED) return null;
	      return (0, _react.cloneElement)(children, {
	        className: this.computeClasses(),
	        style: this.computeStyle()
	      });
	    }
	  }]);
	  return Transition;
	}(_react.Component);

	exports["default"] = Transition;
	(0, _defineProperty2["default"])(Transition, "defaultProps", {
	  animation: 'fade',
	  duration: 500,
	  visible: true,
	  mountOnShow: true,
	  transitionOnMount: false,
	  unmountOnHide: false
	});
	(0, _defineProperty2["default"])(Transition, "ENTERED", 'ENTERED');
	(0, _defineProperty2["default"])(Transition, "ENTERING", 'ENTERING');
	(0, _defineProperty2["default"])(Transition, "EXITED", 'EXITED');
	(0, _defineProperty2["default"])(Transition, "EXITING", 'EXITING');
	(0, _defineProperty2["default"])(Transition, "UNMOUNTED", 'UNMOUNTED');
	(0, _defineProperty2["default"])(Transition, "Group", _TransitionGroup["default"]);
	(0, _defineProperty2["default"])(Transition, "handledProps", ["animation", "children", "directional", "duration", "mountOnShow", "onComplete", "onHide", "onShow", "onStart", "reactKey", "transitionOnMount", "unmountOnHide", "visible"]);
	Transition.propTypes = process.env.NODE_ENV !== "production" ? {
	  /** Named animation event to used. Must be defined in CSS. */
	  animation: _propTypes["default"].oneOfType([_propTypes["default"].oneOf(_lib.SUI.TRANSITIONS), _propTypes["default"].string]),

	  /** Primary content. */
	  children: _propTypes["default"].element.isRequired,

	  /** Whether it is directional animation event or not. Use it only for custom transitions. */
	  directional: _propTypes["default"].bool,

	  /** Duration of the CSS transition animation in milliseconds. */
	  duration: _propTypes["default"].oneOfType([_propTypes["default"].number, _propTypes["default"].shape({
	    hide: _propTypes["default"].number,
	    show: _propTypes["default"].number
	  }), _propTypes["default"].string]),

	  /** Show the component; triggers the enter or exit animation. */
	  visible: _propTypes["default"].bool,

	  /** Wait until the first "enter" transition to mount the component (add it to the DOM). */
	  mountOnShow: _propTypes["default"].bool,

	  /**
	   * Callback on each transition that changes visibility to shown.
	   *
	   * @param {null}
	   * @param {object} data - All props with status.
	   */
	  onComplete: _propTypes["default"].func,

	  /**
	   * Callback on each transition that changes visibility to hidden.
	   *
	   * @param {null}
	   * @param {object} data - All props with status.
	   */
	  onHide: _propTypes["default"].func,

	  /**
	   * Callback on each transition that changes visibility to shown.
	   *
	   * @param {null}
	   * @param {object} data - All props with status.
	   */
	  onShow: _propTypes["default"].func,

	  /**
	   * Callback on animation start.
	   *
	   * @param {null}
	   * @param {object} data - All props with status.
	   */
	  onStart: _propTypes["default"].func,

	  /** React's key of the element. */
	  reactKey: _propTypes["default"].string,

	  /** Run the enter animation when the component mounts, if it is initially shown. */
	  transitionOnMount: _propTypes["default"].bool,

	  /** Unmount the component (remove it from the DOM) when it is not shown. */
	  unmountOnHide: _propTypes["default"].bool
	} : {};
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 649 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";

	var _interopRequireWildcard = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireWildcard\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _objectSpread2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/objectSpread\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _classCallCheck2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/classCallCheck\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _createClass2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/createClass\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/possibleConstructorReturn\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _getPrototypeOf3 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/getPrototypeOf\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _assertThisInitialized2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/assertThisInitialized\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _inherits2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/inherits\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _defineProperty2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/defineProperty\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _values2 = _interopRequireDefault(__webpack_require__(511));

	var _get2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/get\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _has2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/has\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _forEach2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/forEach\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _mapValues2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/mapValues\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _propTypes = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"prop-types\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _react = _interopRequireWildcard(__webpack_require__(3));

	var _lib = __webpack_require__(256);

	var _Transition = _interopRequireDefault(__webpack_require__(648));

	/**
	 * A Transition.Group animates children as they mount and unmount.
	 */
	var TransitionGroup =
	/*#__PURE__*/
	function (_React$Component) {
	  (0, _inherits2["default"])(TransitionGroup, _React$Component);

	  function TransitionGroup() {
	    var _getPrototypeOf2;

	    var _this;

	    (0, _classCallCheck2["default"])(this, TransitionGroup);

	    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    _this = (0, _possibleConstructorReturn2["default"])(this, (_getPrototypeOf2 = (0, _getPrototypeOf3["default"])(TransitionGroup)).call.apply(_getPrototypeOf2, [this].concat(args)));
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "handleOnHide", function (nothing, childProps) {
	      var reactKey = childProps.reactKey;

	      _this.setState(function (state) {
	        var children = (0, _objectSpread2["default"])({}, state.children);
	        delete children[reactKey];
	        return {
	          children: children
	        };
	      });
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "wrapChild", function (child) {
	      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
	      var _this$props = _this.props,
	          animation = _this$props.animation,
	          directional = _this$props.directional,
	          duration = _this$props.duration;
	      var key = child.key;
	      var _options$visible = options.visible,
	          visible = _options$visible === void 0 ? true : _options$visible,
	          _options$transitionOn = options.transitionOnMount,
	          transitionOnMount = _options$transitionOn === void 0 ? false : _options$transitionOn;
	      return _react["default"].createElement(_Transition["default"], {
	        animation: animation,
	        directional: directional,
	        duration: duration,
	        key: key,
	        onHide: _this.handleOnHide,
	        reactKey: key,
	        transitionOnMount: transitionOnMount,
	        visible: visible
	      }, child);
	    });
	    var _children = _this.props.children;
	    _this.state = {
	      children: (0, _mapValues2["default"])((0, _lib.getChildMapping)(_children), function (child) {
	        return _this.wrapChild(child);
	      })
	    };
	    return _this;
	  }

	  (0, _createClass2["default"])(TransitionGroup, [{
	    key: "componentWillReceiveProps",
	    value: function componentWillReceiveProps(nextProps) {
	      var _this2 = this;

	      var prevMapping = this.state.children;
	      var nextMapping = (0, _lib.getChildMapping)(nextProps.children);
	      var children = (0, _lib.mergeChildMappings)(prevMapping, nextMapping);
	      (0, _forEach2["default"])(children, function (child, key) {
	        var hasPrev = (0, _has2["default"])(prevMapping, key);
	        var hasNext = (0, _has2["default"])(nextMapping, key);
	        var prevChild = prevMapping[key];
	        var isLeaving = !(0, _get2["default"])(prevChild, 'props.visible'); // Heads up!
	        // An item is new (entering), it will be picked from `nextChildren`, so it should be wrapped

	        if (hasNext && (!hasPrev || isLeaving)) {
	          children[key] = _this2.wrapChild(child, {
	            transitionOnMount: true
	          });
	          return;
	        } // Heads up!
	        // An item is old (exiting), it will be picked from `prevChildren`, so it has been already
	        // wrapped, so should be only updated


	        if (!hasNext && hasPrev && !isLeaving) {
	          children[key] = (0, _react.cloneElement)(prevChild, {
	            visible: false
	          });
	          return;
	        } // Heads up!
	        // An item item hasn't changed transition states, but it will be picked from `nextChildren`,
	        // so we should wrap it again


	        var _prevChild$props = prevChild.props,
	            visible = _prevChild$props.visible,
	            transitionOnMount = _prevChild$props.transitionOnMount;
	        children[key] = _this2.wrapChild(child, {
	          transitionOnMount: transitionOnMount,
	          visible: visible
	        });
	      });
	      this.setState({
	        children: children
	      });
	    }
	  }, {
	    key: "render",
	    value: function render() {
	      var children = this.state.children;
	      var ElementType = (0, _lib.getElementType)(TransitionGroup, this.props);
	      var rest = (0, _lib.getUnhandledProps)(TransitionGroup, this.props);
	      return _react["default"].createElement(ElementType, rest, (0, _values2["default"])(children));
	    }
	  }]);
	  return TransitionGroup;
	}(_react["default"].Component);

	exports["default"] = TransitionGroup;
	(0, _defineProperty2["default"])(TransitionGroup, "defaultProps", {
	  as: _react.Fragment,
	  animation: 'fade',
	  duration: 500
	});
	(0, _defineProperty2["default"])(TransitionGroup, "handledProps", ["animation", "as", "children", "directional", "duration"]);
	TransitionGroup.propTypes = process.env.NODE_ENV !== "production" ? {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Named animation event to used. Must be defined in CSS. */
	  animation: _propTypes["default"].oneOfType([_propTypes["default"].oneOf(_lib.SUI.TRANSITIONS), _propTypes["default"].string]),

	  /** Primary content. */
	  children: _propTypes["default"].node,

	  /** Whether it is directional animation event or not. Use it only for custom transitions. */
	  directional: _propTypes["default"].bool,

	  /** Duration of the CSS transition animation in milliseconds. */
	  duration: _propTypes["default"].oneOfType([_propTypes["default"].number, _propTypes["default"].shape({
	    hide: _propTypes["default"].number.isRequired,
	    show: _propTypes["default"].number.isRequired
	  }), _propTypes["default"].string])
	} : {};
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 650 */,
/* 651 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	Object.defineProperty(exports, "default", {
	  enumerable: true,
	  get: function get() {
	    return _Visibility["default"];
	  }
	});

	var _Visibility = _interopRequireDefault(__webpack_require__(652));

/***/ }),
/* 652 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";

	var _interopRequireWildcard = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireWildcard\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _slicedToArray2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/slicedToArray\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _objectSpread2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/objectSpread\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _classCallCheck2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/classCallCheck\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _createClass2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/createClass\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/possibleConstructorReturn\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _getPrototypeOf3 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/getPrototypeOf\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _assertThisInitialized2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/assertThisInitialized\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _inherits2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/inherits\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _defineProperty2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/defineProperty\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _invoke2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/invoke\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _forEach2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/forEach\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _without2 = _interopRequireDefault(__webpack_require__(542));

	var _includes2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/includes\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _propTypes = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"prop-types\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _react = _interopRequireWildcard(__webpack_require__(3));

	var _Ref = _interopRequireDefault(__webpack_require__(537));

	var _lib = __webpack_require__(256);

	/**
	 * Visibility provides a set of callbacks for when a content appears in the viewport.
	 */
	var Visibility =
	/*#__PURE__*/
	function (_Component) {
	  (0, _inherits2["default"])(Visibility, _Component);

	  function Visibility() {
	    var _getPrototypeOf2;

	    var _this;

	    (0, _classCallCheck2["default"])(this, Visibility);

	    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    _this = (0, _possibleConstructorReturn2["default"])(this, (_getPrototypeOf2 = (0, _getPrototypeOf3["default"])(Visibility)).call.apply(_getPrototypeOf2, [this].concat(args)));
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "calculations", {
	      bottomPassed: false,
	      bottomVisible: false,
	      fits: false,
	      passing: false,
	      offScreen: false,
	      onScreen: false,
	      topPassed: false,
	      topVisible: false
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "firedCallbacks", []);
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "ref", (0, _react.createRef)());
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "fire", function (_ref, value) {
	      var callback = _ref.callback,
	          name = _ref.name;
	      var reverse = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
	      var _this$props = _this.props,
	          continuous = _this$props.continuous,
	          once = _this$props.once; // Heads up! For the execution is required:
	      // - current value correspond to the fired direction
	      // - `continuous` is true or calculation values are different

	      var matchesDirection = _this.calculations[value] !== reverse;
	      var executionPossible = continuous || _this.calculations[value] !== _this.oldCalculations[value];
	      if (matchesDirection && executionPossible) _this.execute(callback, name); // Heads up! We should remove callback from the happened when it's not `once`

	      if (!once) _this.firedCallbacks = (0, _without2["default"])(_this.firedCallbacks, name);
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "handleUpdate", function () {
	      if (_this.ticking) return;
	      _this.ticking = true;
	      _this.frameId = requestAnimationFrame(_this.update);
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "update", function () {
	      if (!_this.mounted) return;
	      _this.ticking = false;
	      _this.oldCalculations = _this.calculations;
	      _this.calculations = _this.computeCalculations();
	      _this.pageYOffset = _this.getPageYOffset();
	      var _this$props2 = _this.props,
	          onBottomPassed = _this$props2.onBottomPassed,
	          onBottomPassedReverse = _this$props2.onBottomPassedReverse,
	          onBottomVisible = _this$props2.onBottomVisible,
	          onBottomVisibleReverse = _this$props2.onBottomVisibleReverse,
	          onPassing = _this$props2.onPassing,
	          onPassingReverse = _this$props2.onPassingReverse,
	          onTopPassed = _this$props2.onTopPassed,
	          onTopPassedReverse = _this$props2.onTopPassedReverse,
	          onTopVisible = _this$props2.onTopVisible,
	          onTopVisibleReverse = _this$props2.onTopVisibleReverse,
	          onOffScreen = _this$props2.onOffScreen,
	          onOnScreen = _this$props2.onOnScreen,
	          updateOn = _this$props2.updateOn;
	      var forward = {
	        bottomPassed: {
	          callback: onBottomPassed,
	          name: 'onBottomPassed'
	        },
	        bottomVisible: {
	          callback: onBottomVisible,
	          name: 'onBottomVisible'
	        },
	        passing: {
	          callback: onPassing,
	          name: 'onPassing'
	        },
	        offScreen: {
	          callback: onOffScreen,
	          name: 'onOffScreen'
	        },
	        onScreen: {
	          callback: onOnScreen,
	          name: 'onOnScreen'
	        },
	        topPassed: {
	          callback: onTopPassed,
	          name: 'onTopPassed'
	        },
	        topVisible: {
	          callback: onTopVisible,
	          name: 'onTopVisible'
	        }
	      };
	      var reverse = {
	        bottomPassed: {
	          callback: onBottomPassedReverse,
	          name: 'onBottomPassedReverse'
	        },
	        bottomVisible: {
	          callback: onBottomVisibleReverse,
	          name: 'onBottomVisibleReverse'
	        },
	        passing: {
	          callback: onPassingReverse,
	          name: 'onPassingReverse'
	        },
	        topPassed: {
	          callback: onTopPassedReverse,
	          name: 'onTopPassedReverse'
	        },
	        topVisible: {
	          callback: onTopVisibleReverse,
	          name: 'onTopVisibleReverse'
	        }
	      };
	      (0, _invoke2["default"])(_this.props, 'onUpdate', null, (0, _objectSpread2["default"])({}, _this.props, {
	        calculations: _this.calculations
	      }));

	      _this.fireOnPassed(); // Heads up! Reverse callbacks should be fired first


	      (0, _forEach2["default"])(reverse, function (data, value) {
	        return _this.fire(data, value, true);
	      });
	      (0, _forEach2["default"])(forward, function (data, value) {
	        return _this.fire(data, value);
	      });
	      if (updateOn === 'repaint') _this.handleUpdate();
	    });
	    return _this;
	  }

	  (0, _createClass2["default"])(Visibility, [{
	    key: "componentWillReceiveProps",
	    // ----------------------------------------
	    // Lifecycle
	    // ----------------------------------------
	    value: function componentWillReceiveProps(_ref2) {
	      var continuous = _ref2.continuous,
	          once = _ref2.once,
	          context = _ref2.context,
	          updateOn = _ref2.updateOn;
	      var cleanHappened = continuous !== this.props.continuous || once !== this.props.once || updateOn !== this.props.updateOn; // Heads up! We should clean up array of happened callbacks, if values of these props are changed

	      if (cleanHappened) this.firedCallbacks = [];

	      if (context !== this.props.context || updateOn !== this.props.updateOn) {
	        this.unattachHandlers(this.props.context);
	        this.attachHandlers(context, updateOn);
	      }
	    }
	  }, {
	    key: "componentDidMount",
	    value: function componentDidMount() {
	      this.mounted = true;
	      if (!(0, _lib.isBrowser)()) return;
	      var _this$props3 = this.props,
	          context = _this$props3.context,
	          fireOnMount = _this$props3.fireOnMount,
	          updateOn = _this$props3.updateOn;
	      this.pageYOffset = this.getPageYOffset();
	      this.attachHandlers(context, updateOn);
	      if (fireOnMount) this.update();
	    }
	  }, {
	    key: "componentWillUnmount",
	    value: function componentWillUnmount() {
	      var context = this.props.context;
	      this.unattachHandlers(context);
	      this.mounted = false;
	    }
	  }, {
	    key: "attachHandlers",
	    value: function attachHandlers(context, updateOn) {
	      if (updateOn === 'events') {
	        if (context) {
	          _lib.eventStack.sub('resize', this.handleUpdate, {
	            target: context
	          });

	          _lib.eventStack.sub('scroll', this.handleUpdate, {
	            target: context
	          });
	        }

	        return;
	      } // Heads up!
	      // We will deal with `repaint` there


	      this.handleUpdate();
	    }
	  }, {
	    key: "unattachHandlers",
	    value: function unattachHandlers(context) {
	      if (context) {
	        _lib.eventStack.unsub('resize', this.handleUpdate, {
	          target: context
	        });

	        _lib.eventStack.unsub('scroll', this.handleUpdate, {
	          target: context
	        });
	      }

	      if (this.frameId) cancelAnimationFrame(this.frameId);
	    } // ----------------------------------------
	    // Callback handling
	    // ----------------------------------------

	  }, {
	    key: "execute",
	    value: function execute(callback, name) {
	      var continuous = this.props.continuous;
	      if (!callback) return; // Heads up! When `continuous` is true, callback will be fired always

	      if (!continuous && (0, _includes2["default"])(this.firedCallbacks, name)) return;
	      callback(null, (0, _objectSpread2["default"])({}, this.props, {
	        calculations: this.calculations
	      }));
	      this.firedCallbacks.push(name);
	    }
	  }, {
	    key: "fireOnPassed",
	    value: function fireOnPassed() {
	      var _this2 = this;

	      var _this$calculations = this.calculations,
	          percentagePassed = _this$calculations.percentagePassed,
	          pixelsPassed = _this$calculations.pixelsPassed;
	      var onPassed = this.props.onPassed;
	      (0, _forEach2["default"])(onPassed, function (callback, passed) {
	        var pixelsValue = Number(passed);

	        if (pixelsValue && pixelsPassed >= pixelsValue) {
	          _this2.execute(callback, passed);

	          return;
	        }

	        var matchPercentage = "".concat(passed).match(/^(\d+)%$/);
	        if (!matchPercentage) return;
	        var percentageValue = Number(matchPercentage[1]) / 100;
	        if (percentagePassed >= percentageValue) _this2.execute(callback, passed);
	      });
	    }
	  }, {
	    key: "computeCalculations",
	    // ----------------------------------------
	    // Helpers
	    // ----------------------------------------
	    value: function computeCalculations() {
	      var offset = this.props.offset;

	      var _this$ref$current$get = this.ref.current.getBoundingClientRect(),
	          bottom = _this$ref$current$get.bottom,
	          height = _this$ref$current$get.height,
	          top = _this$ref$current$get.top,
	          width = _this$ref$current$get.width;

	      var _normalizeOffset = (0, _lib.normalizeOffset)(offset),
	          _normalizeOffset2 = (0, _slicedToArray2["default"])(_normalizeOffset, 2),
	          topOffset = _normalizeOffset2[0],
	          bottomOffset = _normalizeOffset2[1];

	      var newOffset = this.getPageYOffset();
	      var direction = newOffset > this.pageYOffset ? 'down' : 'up';
	      var topPassed = top < topOffset;
	      var bottomPassed = bottom < bottomOffset;
	      var pixelsPassed = bottomPassed ? 0 : Math.max(top * -1, 0);
	      var percentagePassed = pixelsPassed / height;
	      var bottomVisible = bottom >= bottomOffset && bottom <= window.innerHeight;
	      var topVisible = top >= topOffset && top <= window.innerHeight;
	      var fits = topVisible && bottomVisible;
	      var passing = topPassed && !bottomPassed;
	      var onScreen = (topVisible || topPassed) && !bottomPassed;
	      var offScreen = !onScreen;
	      return {
	        bottomPassed: bottomPassed,
	        bottomVisible: bottomVisible,
	        direction: direction,
	        fits: fits,
	        height: height,
	        passing: passing,
	        percentagePassed: percentagePassed,
	        pixelsPassed: pixelsPassed,
	        offScreen: offScreen,
	        onScreen: onScreen,
	        topPassed: topPassed,
	        topVisible: topVisible,
	        width: width
	      };
	    }
	  }, {
	    key: "getPageYOffset",
	    value: function getPageYOffset() {
	      var context = this.props.context;

	      if (context) {
	        // Heads up! `window` doesn't have `pageYOffset` property
	        return context === window ? window.pageYOffset : context.scrollTop;
	      }

	      return 0;
	    } // ----------------------------------------
	    // Render
	    // ----------------------------------------

	  }, {
	    key: "render",
	    value: function render() {
	      var children = this.props.children;
	      var ElementType = (0, _lib.getElementType)(Visibility, this.props);
	      var rest = (0, _lib.getUnhandledProps)(Visibility, this.props);
	      return _react["default"].createElement(_Ref["default"], {
	        innerRef: this.ref
	      }, _react["default"].createElement(ElementType, rest, children));
	    }
	  }]);
	  return Visibility;
	}(_react.Component);

	exports["default"] = Visibility;
	(0, _defineProperty2["default"])(Visibility, "defaultProps", {
	  context: (0, _lib.isBrowser)() ? window : null,
	  continuous: false,
	  offset: [0, 0],
	  once: true,
	  updateOn: 'events'
	});
	(0, _defineProperty2["default"])(Visibility, "handledProps", ["as", "children", "context", "continuous", "fireOnMount", "offset", "onBottomPassed", "onBottomPassedReverse", "onBottomVisible", "onBottomVisibleReverse", "onOffScreen", "onOnScreen", "onPassed", "onPassing", "onPassingReverse", "onTopPassed", "onTopPassedReverse", "onTopVisible", "onTopVisibleReverse", "onUpdate", "once", "updateOn"]);
	Visibility.propTypes = process.env.NODE_ENV !== "production" ? {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Primary content. */
	  children: _propTypes["default"].node,

	  /** Context which visibility should attach onscroll events. */
	  context: _propTypes["default"].object,

	  /**
	   * When set to true a callback will occur anytime an element passes a condition not just immediately after the
	   * threshold is met.
	   */
	  continuous: _propTypes["default"].bool,

	  /** Fires callbacks immediately after mount. */
	  fireOnMount: _propTypes["default"].bool,

	  /**
	   * Element's bottom edge has passed top of screen.
	   *
	   * @param {null}
	   * @param {object} data - All props.
	   */
	  onBottomPassed: _propTypes["default"].func,

	  /**
	   * Element's bottom edge has not passed top of screen.
	   *
	   * @param {null}
	   * @param {object} data - All props.
	   */
	  onBottomPassedReverse: _propTypes["default"].func,

	  /**
	   * Element's bottom edge has passed bottom of screen
	   *
	   * @param {null}
	   * @param {object} data - All props.
	   */
	  onBottomVisible: _propTypes["default"].func,

	  /**
	   * Element's bottom edge has not passed bottom of screen.
	   *
	   * @param {null}
	   * @param {object} data - All props.
	   */
	  onBottomVisibleReverse: _propTypes["default"].func,

	  /**
	   * Value that context should be adjusted in pixels. Useful for making content appear below content fixed to the
	   * page.
	   */
	  offset: _propTypes["default"].oneOfType([_propTypes["default"].number, _propTypes["default"].string, _propTypes["default"].arrayOf(_propTypes["default"].oneOfType([_propTypes["default"].number, _propTypes["default"].string]))]),

	  /** When set to false a callback will occur each time an element passes the threshold for a condition. */
	  once: _propTypes["default"].bool,

	  /** Element is not visible on the screen. */
	  onPassed: _propTypes["default"].object,

	  /**
	   * Any part of an element is visible on screen.
	   *
	   * @param {null}
	   * @param {object} data - All props.
	   */
	  onPassing: _propTypes["default"].func,

	  /**
	   * Element's top has not passed top of screen but bottom has.
	   *
	   * @param {null}
	   * @param {object} data - All props.
	   */
	  onPassingReverse: _propTypes["default"].func,

	  /**
	   * Element is not visible on the screen.
	   *
	   * @param {null}
	   * @param {object} data - All props.
	   */
	  onOffScreen: _propTypes["default"].func,

	  /**
	   * Element is visible on the screen.
	   *
	   * @param {null}
	   * @param {object} data - All props.
	   */
	  onOnScreen: _propTypes["default"].func,

	  /**
	   * Element's top edge has passed top of the screen.
	   *
	   * @param {null}
	   * @param {object} data - All props.
	   */
	  onTopPassed: _propTypes["default"].func,

	  /**
	   * Element's top edge has not passed top of the screen.
	   *
	   * @param {null}
	   * @param {object} data - All props.
	   */
	  onTopPassedReverse: _propTypes["default"].func,

	  /**
	   * Element's top edge has passed bottom of screen.
	   *
	   * @param {null}
	   * @param {object} data - All props.
	   */
	  onTopVisible: _propTypes["default"].func,

	  /**
	   * Element's top edge has not passed bottom of screen.
	   *
	   * @param {null}
	   * @param {object} data - All props.
	   */
	  onTopVisibleReverse: _propTypes["default"].func,

	  /**
	   * Element's top edge has passed bottom of screen.
	   *
	   * @param {null}
	   * @param {object} data - All props.
	   */
	  onUpdate: _propTypes["default"].func,

	  /**
	   * Allows to choose the mode of the position calculations:
	   * - `events` - (default) update and fire callbacks only on scroll/resize events
	   * - `repaint` - update and fire callbacks on browser repaint (animation frames)
	   */
	  updateOn: _propTypes["default"].oneOf(['events', 'repaint'])
	} : {};
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 653 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	Object.defineProperty(exports, "default", {
	  enumerable: true,
	  get: function get() {
	    return _Breadcrumb["default"];
	  }
	});

	var _Breadcrumb = _interopRequireDefault(__webpack_require__(654));

/***/ }),
/* 654 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _extends2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/extends\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _without2 = _interopRequireDefault(__webpack_require__(542));

	var _each2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/each\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _classnames = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"classnames\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _propTypes = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"prop-types\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _react = _interopRequireDefault(__webpack_require__(3));

	var _lib = __webpack_require__(256);

	var _BreadcrumbDivider = _interopRequireDefault(__webpack_require__(655));

	var _BreadcrumbSection = _interopRequireDefault(__webpack_require__(656));

	/**
	 * A breadcrumb is used to show hierarchy between content.
	 */
	function Breadcrumb(props) {
	  var children = props.children,
	      className = props.className,
	      divider = props.divider,
	      icon = props.icon,
	      sections = props.sections,
	      size = props.size;
	  var classes = (0, _classnames["default"])('ui', size, 'breadcrumb', className);
	  var rest = (0, _lib.getUnhandledProps)(Breadcrumb, props);
	  var ElementType = (0, _lib.getElementType)(Breadcrumb, props);

	  if (!_lib.childrenUtils.isNil(children)) {
	    return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	      className: classes
	    }), children);
	  }

	  var childElements = [];
	  (0, _each2["default"])(sections, function (section, index) {
	    // section
	    var breadcrumbElement = _BreadcrumbSection["default"].create(section);

	    childElements.push(breadcrumbElement); // divider

	    if (index !== sections.length - 1) {
	      var key = "".concat(breadcrumbElement.key, "_divider") || JSON.stringify(section);
	      childElements.push(_BreadcrumbDivider["default"].create({
	        content: divider,
	        icon: icon,
	        key: key
	      }));
	    }
	  });
	  return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	    className: classes
	  }), childElements);
	}

	Breadcrumb.handledProps = ["as", "children", "className", "divider", "icon", "sections", "size"];
	Breadcrumb.propTypes = process.env.NODE_ENV !== "production" ? {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Primary content. */
	  children: _propTypes["default"].node,

	  /** Additional classes. */
	  className: _propTypes["default"].string,

	  /** Shorthand for primary content of the Breadcrumb.Divider. */
	  divider: _lib.customPropTypes.every([_lib.customPropTypes.disallow(['icon']), _lib.customPropTypes.contentShorthand]),

	  /** For use with the sections prop. Render as an `Icon` component with `divider` class instead of a `div` in
	   *  Breadcrumb.Divider. */
	  icon: _lib.customPropTypes.every([_lib.customPropTypes.disallow(['divider']), _lib.customPropTypes.itemShorthand]),

	  /** Shorthand array of props for Breadcrumb.Section. */
	  sections: _lib.customPropTypes.collectionShorthand,

	  /** Size of Breadcrumb. */
	  size: _propTypes["default"].oneOf((0, _without2["default"])(_lib.SUI.SIZES, 'medium'))
	} : {};
	Breadcrumb.Divider = _BreadcrumbDivider["default"];
	Breadcrumb.Section = _BreadcrumbSection["default"];
	var _default = Breadcrumb;
	exports["default"] = _default;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 655 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _extends2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/extends\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _objectSpread2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/objectSpread\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _isNil2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/isNil\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _classnames = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"classnames\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _propTypes = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"prop-types\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _react = _interopRequireDefault(__webpack_require__(3));

	var _lib = __webpack_require__(256);

	var _Icon = _interopRequireDefault(__webpack_require__(566));

	/**
	 * A divider sub-component for Breadcrumb component.
	 */
	function BreadcrumbDivider(props) {
	  var children = props.children,
	      className = props.className,
	      content = props.content,
	      icon = props.icon;
	  var classes = (0, _classnames["default"])('divider', className);
	  var rest = (0, _lib.getUnhandledProps)(BreadcrumbDivider, props);
	  var ElementType = (0, _lib.getElementType)(BreadcrumbDivider, props);

	  if (!(0, _isNil2["default"])(icon)) {
	    return _Icon["default"].create(icon, {
	      defaultProps: (0, _objectSpread2["default"])({}, rest, {
	        className: classes
	      }),
	      autoGenerateKey: false
	    });
	  }

	  if (!(0, _isNil2["default"])(content)) {
	    return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	      className: classes
	    }), content);
	  }

	  return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	    className: classes
	  }), _lib.childrenUtils.isNil(children) ? '/' : children);
	}

	BreadcrumbDivider.handledProps = ["as", "children", "className", "content", "icon"];
	BreadcrumbDivider.propTypes = process.env.NODE_ENV !== "production" ? {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Primary content. */
	  children: _propTypes["default"].node,

	  /** Additional classes. */
	  className: _propTypes["default"].string,

	  /** Shorthand for primary content. */
	  content: _lib.customPropTypes.contentShorthand,

	  /** Render as an `Icon` component with `divider` class instead of a `div`. */
	  icon: _lib.customPropTypes.itemShorthand
	} : {};
	BreadcrumbDivider.create = (0, _lib.createShorthandFactory)(BreadcrumbDivider, function (icon) {
	  return {
	    icon: icon
	  };
	});
	var _default = BreadcrumbDivider;
	exports["default"] = _default;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 656 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";

	var _interopRequireWildcard = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireWildcard\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _extends2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/extends\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _classCallCheck2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/classCallCheck\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _createClass2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/createClass\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/possibleConstructorReturn\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _getPrototypeOf3 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/getPrototypeOf\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _assertThisInitialized2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/assertThisInitialized\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _inherits2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/inherits\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _defineProperty2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/defineProperty\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _invoke2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/invoke\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _classnames = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"classnames\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _propTypes = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"prop-types\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _react = _interopRequireWildcard(__webpack_require__(3));

	var _lib = __webpack_require__(256);

	/**
	 * A section sub-component for Breadcrumb component.
	 */
	var BreadcrumbSection =
	/*#__PURE__*/
	function (_Component) {
	  (0, _inherits2["default"])(BreadcrumbSection, _Component);

	  function BreadcrumbSection() {
	    var _getPrototypeOf2;

	    var _this;

	    (0, _classCallCheck2["default"])(this, BreadcrumbSection);

	    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    _this = (0, _possibleConstructorReturn2["default"])(this, (_getPrototypeOf2 = (0, _getPrototypeOf3["default"])(BreadcrumbSection)).call.apply(_getPrototypeOf2, [this].concat(args)));
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "computeElementType", function () {
	      var _this$props = _this.props,
	          link = _this$props.link,
	          onClick = _this$props.onClick;
	      if (link || onClick) return 'a';
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "handleClick", function (e) {
	      return (0, _invoke2["default"])(_this.props, 'onClick', e, _this.props);
	    });
	    return _this;
	  }

	  (0, _createClass2["default"])(BreadcrumbSection, [{
	    key: "render",
	    value: function render() {
	      var _this$props2 = this.props,
	          active = _this$props2.active,
	          children = _this$props2.children,
	          className = _this$props2.className,
	          content = _this$props2.content,
	          href = _this$props2.href;
	      var classes = (0, _classnames["default"])((0, _lib.useKeyOnly)(active, 'active'), 'section', className);
	      var rest = (0, _lib.getUnhandledProps)(BreadcrumbSection, this.props);
	      var ElementType = (0, _lib.getElementType)(BreadcrumbSection, this.props, this.computeElementType);
	      return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	        className: classes,
	        href: href,
	        onClick: this.handleClick
	      }), _lib.childrenUtils.isNil(children) ? content : children);
	    }
	  }]);
	  return BreadcrumbSection;
	}(_react.Component);

	exports["default"] = BreadcrumbSection;
	(0, _defineProperty2["default"])(BreadcrumbSection, "handledProps", ["active", "as", "children", "className", "content", "href", "link", "onClick"]);
	BreadcrumbSection.propTypes = process.env.NODE_ENV !== "production" ? {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Style as the currently active section. */
	  active: _propTypes["default"].bool,

	  /** Primary content. */
	  children: _propTypes["default"].node,

	  /** Additional classes. */
	  className: _propTypes["default"].string,

	  /** Shorthand for primary content. */
	  content: _lib.customPropTypes.contentShorthand,

	  /** Render as an `a` tag instead of a `div` and adds the href attribute. */
	  href: _lib.customPropTypes.every([_lib.customPropTypes.disallow(['link']), _propTypes["default"].string]),

	  /** Render as an `a` tag instead of a `div`. */
	  link: _lib.customPropTypes.every([_lib.customPropTypes.disallow(['href']), _propTypes["default"].bool]),

	  /**
	   * Called on click. When passed, the component will render as an `a`
	   * tag by default instead of a `div`.
	   *
	   * @param {SyntheticEvent} event - React's original SyntheticEvent.
	   * @param {object} data - All props.
	   */
	  onClick: _propTypes["default"].func
	} : {};
	BreadcrumbSection.create = (0, _lib.createShorthandFactory)(BreadcrumbSection, function (content) {
	  return {
	    content: content,
	    link: true
	  };
	});
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 657 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	Object.defineProperty(exports, "default", {
	  enumerable: true,
	  get: function get() {
	    return _Form["default"];
	  }
	});

	var _Form = _interopRequireDefault(__webpack_require__(658));

/***/ }),
/* 658 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";

	var _interopRequireWildcard = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireWildcard\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _extends2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/extends\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _classCallCheck2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/classCallCheck\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _createClass2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/createClass\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/possibleConstructorReturn\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _getPrototypeOf3 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/getPrototypeOf\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _assertThisInitialized2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/assertThisInitialized\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _inherits2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/inherits\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _defineProperty2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/defineProperty\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _invoke2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/invoke\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _without2 = _interopRequireDefault(__webpack_require__(542));

	var _classnames = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"classnames\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _propTypes = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"prop-types\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _react = _interopRequireWildcard(__webpack_require__(3));

	var _lib = __webpack_require__(256);

	var _FormButton = _interopRequireDefault(__webpack_require__(659));

	var _FormCheckbox = _interopRequireDefault(__webpack_require__(661));

	var _FormDropdown = _interopRequireDefault(__webpack_require__(662));

	var _FormField = _interopRequireDefault(__webpack_require__(660));

	var _FormGroup = _interopRequireDefault(__webpack_require__(663));

	var _FormInput = _interopRequireDefault(__webpack_require__(664));

	var _FormRadio = _interopRequireDefault(__webpack_require__(667));

	var _FormSelect = _interopRequireDefault(__webpack_require__(668));

	var _FormTextArea = _interopRequireDefault(__webpack_require__(669));

	/**
	 * A Form displays a set of related user input fields in a structured way.
	 * @see Button
	 * @see Checkbox
	 * @see Dropdown
	 * @see Input
	 * @see Message
	 * @see Radio
	 * @see Select
	 * @see Visibility
	 */
	var Form =
	/*#__PURE__*/
	function (_Component) {
	  (0, _inherits2["default"])(Form, _Component);

	  function Form() {
	    var _getPrototypeOf2;

	    var _this;

	    (0, _classCallCheck2["default"])(this, Form);

	    for (var _len = arguments.length, _args = new Array(_len), _key = 0; _key < _len; _key++) {
	      _args[_key] = arguments[_key];
	    }

	    _this = (0, _possibleConstructorReturn2["default"])(this, (_getPrototypeOf2 = (0, _getPrototypeOf3["default"])(Form)).call.apply(_getPrototypeOf2, [this].concat(_args)));
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "handleSubmit", function (e) {
	      var action = _this.props.action; // Heads up! Third party libs can pass own data as first argument, we need to check that it has preventDefault()
	      // method.

	      if (typeof action !== 'string') (0, _invoke2["default"])(e, 'preventDefault');

	      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
	        args[_key2 - 1] = arguments[_key2];
	      }

	      _invoke2["default"].apply(void 0, [_this.props, 'onSubmit', e, _this.props].concat(args));
	    });
	    return _this;
	  }

	  (0, _createClass2["default"])(Form, [{
	    key: "render",
	    value: function render() {
	      var _this$props = this.props,
	          action = _this$props.action,
	          children = _this$props.children,
	          className = _this$props.className,
	          error = _this$props.error,
	          inverted = _this$props.inverted,
	          loading = _this$props.loading,
	          reply = _this$props.reply,
	          size = _this$props.size,
	          success = _this$props.success,
	          unstackable = _this$props.unstackable,
	          warning = _this$props.warning,
	          widths = _this$props.widths;
	      var classes = (0, _classnames["default"])('ui', size, (0, _lib.useKeyOnly)(error, 'error'), (0, _lib.useKeyOnly)(inverted, 'inverted'), (0, _lib.useKeyOnly)(loading, 'loading'), (0, _lib.useKeyOnly)(reply, 'reply'), (0, _lib.useKeyOnly)(success, 'success'), (0, _lib.useKeyOnly)(unstackable, 'unstackable'), (0, _lib.useKeyOnly)(warning, 'warning'), (0, _lib.useWidthProp)(widths, null, true), 'form', className);
	      var rest = (0, _lib.getUnhandledProps)(Form, this.props);
	      var ElementType = (0, _lib.getElementType)(Form, this.props);
	      return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	        action: action,
	        className: classes,
	        onSubmit: this.handleSubmit
	      }), children);
	    }
	  }]);
	  return Form;
	}(_react.Component);

	(0, _defineProperty2["default"])(Form, "defaultProps", {
	  as: 'form'
	});
	(0, _defineProperty2["default"])(Form, "Field", _FormField["default"]);
	(0, _defineProperty2["default"])(Form, "Button", _FormButton["default"]);
	(0, _defineProperty2["default"])(Form, "Checkbox", _FormCheckbox["default"]);
	(0, _defineProperty2["default"])(Form, "Dropdown", _FormDropdown["default"]);
	(0, _defineProperty2["default"])(Form, "Group", _FormGroup["default"]);
	(0, _defineProperty2["default"])(Form, "Input", _FormInput["default"]);
	(0, _defineProperty2["default"])(Form, "Radio", _FormRadio["default"]);
	(0, _defineProperty2["default"])(Form, "Select", _FormSelect["default"]);
	(0, _defineProperty2["default"])(Form, "TextArea", _FormTextArea["default"]);
	(0, _defineProperty2["default"])(Form, "handledProps", ["action", "as", "children", "className", "error", "inverted", "loading", "onSubmit", "reply", "size", "success", "unstackable", "warning", "widths"]);
	Form.propTypes = process.env.NODE_ENV !== "production" ? {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** The HTML form action */
	  action: _propTypes["default"].string,

	  /** Primary content. */
	  children: _propTypes["default"].node,

	  /** Additional classes. */
	  className: _propTypes["default"].string,

	  /** Automatically show any error Message children. */
	  error: _propTypes["default"].bool,

	  /** A form can have its color inverted for contrast. */
	  inverted: _propTypes["default"].bool,

	  /** Automatically show a loading indicator. */
	  loading: _propTypes["default"].bool,

	  /** The HTML form submit handler. */
	  onSubmit: _propTypes["default"].func,

	  /** A comment can contain a form to reply to a comment. This may have arbitrary content. */
	  reply: _propTypes["default"].bool,

	  /** A form can vary in size. */
	  size: _propTypes["default"].oneOf((0, _without2["default"])(_lib.SUI.SIZES, 'medium')),

	  /** Automatically show any success Message children. */
	  success: _propTypes["default"].bool,

	  /** A form can prevent itself from stacking on mobile. */
	  unstackable: _propTypes["default"].bool,

	  /** Automatically show any warning Message children. */
	  warning: _propTypes["default"].bool,

	  /** Forms can automatically divide fields to be equal width. */
	  widths: _propTypes["default"].oneOf(['equal'])
	} : {};
	var _default = Form;
	exports["default"] = _default;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 659 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _extends2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/extends\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _react = _interopRequireDefault(__webpack_require__(3));

	var _lib = __webpack_require__(256);

	var _Button = _interopRequireDefault(__webpack_require__(535));

	var _FormField = _interopRequireDefault(__webpack_require__(660));

	/**
	 * Sugar for <Form.Field control={Button} />.
	 * @see Button
	 * @see Form
	 */
	function FormButton(props) {
	  var control = props.control;
	  var rest = (0, _lib.getUnhandledProps)(FormButton, props);
	  var ElementType = (0, _lib.getElementType)(FormButton, props);
	  return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	    control: control
	  }));
	}

	FormButton.handledProps = ["as", "control"];
	FormButton.propTypes = process.env.NODE_ENV !== "production" ? {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** A FormField control prop. */
	  control: _FormField["default"].propTypes.control
	} : {};
	FormButton.defaultProps = {
	  as: _FormField["default"],
	  control: _Button["default"]
	};
	var _default = FormButton;
	exports["default"] = _default;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 660 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";

	var _interopRequireWildcard = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireWildcard\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _objectSpread2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/objectSpread\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _extends2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/extends\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _isNil2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/isNil\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _get2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/get\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _classnames = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"classnames\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _propTypes = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"prop-types\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _react = _interopRequireWildcard(__webpack_require__(3));

	var _lib = __webpack_require__(256);

	var _Label = _interopRequireDefault(__webpack_require__(634));

	var _Checkbox = _interopRequireDefault(__webpack_require__(612));

	var _Radio = _interopRequireDefault(__webpack_require__(610));

	/**
	 * A field is a form element containing a label and an input.
	 * @see Form
	 * @see Button
	 * @see Checkbox
	 * @see Dropdown
	 * @see Input
	 * @see Radio
	 * @see Select
	 * @see Visibility
	 */
	function FormField(props) {
	  var children = props.children,
	      className = props.className,
	      content = props.content,
	      control = props.control,
	      disabled = props.disabled,
	      error = props.error,
	      inline = props.inline,
	      label = props.label,
	      required = props.required,
	      type = props.type,
	      width = props.width;
	  var classes = (0, _classnames["default"])((0, _lib.useKeyOnly)(disabled, 'disabled'), (0, _lib.useKeyOnly)(error, 'error'), (0, _lib.useKeyOnly)(inline, 'inline'), (0, _lib.useKeyOnly)(required, 'required'), (0, _lib.useWidthProp)(width, 'wide'), 'field', className);
	  var rest = (0, _lib.getUnhandledProps)(FormField, props);
	  var ElementType = (0, _lib.getElementType)(FormField, props);
	  var errorPointing = (0, _get2["default"])(error, 'pointing', 'above');

	  var errorLabel = _Label["default"].create(error, {
	    autoGenerateKey: false,
	    defaultProps: {
	      prompt: true,
	      pointing: errorPointing
	    }
	  });

	  var errorLabelBefore = (errorPointing === 'below' || errorPointing === 'right') && errorLabel;
	  var errorLabelAfter = (errorPointing === 'above' || errorPointing === 'left') && errorLabel; // ----------------------------------------
	  // No Control
	  // ----------------------------------------

	  if ((0, _isNil2["default"])(control)) {
	    if ((0, _isNil2["default"])(label)) {
	      return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	        className: classes
	      }), _lib.childrenUtils.isNil(children) ? content : children);
	    }

	    return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	      className: classes
	    }), errorLabelBefore, (0, _lib.createHTMLLabel)(label, {
	      autoGenerateKey: false
	    }), errorLabelAfter);
	  } // ----------------------------------------
	  // Checkbox/Radio Control
	  // ----------------------------------------


	  var controlProps = (0, _objectSpread2["default"])({}, rest, {
	    content: content,
	    children: children,
	    disabled: disabled,
	    required: required,
	    type: type // wrap HTML checkboxes/radios in the label

	  });

	  if (control === 'input' && (type === 'checkbox' || type === 'radio')) {
	    return _react["default"].createElement(ElementType, {
	      className: classes
	    }, _react["default"].createElement("label", null, errorLabelBefore, (0, _react.createElement)(control, controlProps), " ", label, errorLabelAfter));
	  } // pass label prop to controls that support it


	  if (control === _Checkbox["default"] || control === _Radio["default"]) {
	    return _react["default"].createElement(ElementType, {
	      className: classes
	    }, errorLabelBefore, (0, _react.createElement)(control, (0, _objectSpread2["default"])({}, controlProps, {
	      label: label
	    })), errorLabelAfter);
	  } // ----------------------------------------
	  // Other Control
	  // ----------------------------------------


	  return _react["default"].createElement(ElementType, {
	    className: classes
	  }, (0, _lib.createHTMLLabel)(label, {
	    defaultProps: {
	      htmlFor: (0, _get2["default"])(controlProps, 'id')
	    },
	    autoGenerateKey: false
	  }), errorLabelBefore, (0, _react.createElement)(control, controlProps), errorLabelAfter);
	}

	FormField.handledProps = ["as", "children", "className", "content", "control", "disabled", "error", "inline", "label", "required", "type", "width"];
	FormField.propTypes = process.env.NODE_ENV !== "production" ? {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Primary content. */
	  children: _propTypes["default"].node,

	  /** Additional classes. */
	  className: _propTypes["default"].string,

	  /** Shorthand for primary content. */
	  content: _lib.customPropTypes.contentShorthand,

	  /**
	   * A form control component (i.e. Dropdown) or HTML tagName (i.e. 'input').
	   * Extra FormField props are passed to the control component.
	   * Mutually exclusive with children.
	   */
	  control: _lib.customPropTypes.some([_propTypes["default"].func, _propTypes["default"].oneOf(['button', 'input', 'select', 'textarea'])]),

	  /** Individual fields may be disabled. */
	  disabled: _propTypes["default"].bool,

	  /** Individual fields may display an error state along with a message. */
	  error: _propTypes["default"].oneOfType([_propTypes["default"].bool, _lib.customPropTypes.itemShorthand]),

	  /** A field can have its label next to instead of above it. */
	  inline: _propTypes["default"].bool,
	  // Heads Up!
	  // Do not disallow children with `label` shorthand
	  // The `control` might accept a `label` prop and `children`

	  /** Mutually exclusive with children. */
	  label: _propTypes["default"].oneOfType([_propTypes["default"].node, _propTypes["default"].object]),

	  /** A field can show that input is mandatory. */
	  required: _propTypes["default"].bool,

	  /** Passed to the control component (i.e. <input type='password' />) */
	  type: _lib.customPropTypes.every([_lib.customPropTypes.demand(['control'])]),

	  /** A field can specify its width in grid columns */
	  width: _propTypes["default"].oneOf(_lib.SUI.WIDTHS)
	} : {};
	var _default = FormField;
	exports["default"] = _default;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 661 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _extends2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/extends\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _react = _interopRequireDefault(__webpack_require__(3));

	var _lib = __webpack_require__(256);

	var _Checkbox = _interopRequireDefault(__webpack_require__(612));

	var _FormField = _interopRequireDefault(__webpack_require__(660));

	/**
	 * Sugar for <Form.Field control={Checkbox} />.
	 * @see Checkbox
	 * @see Form
	 */
	function FormCheckbox(props) {
	  var control = props.control;
	  var rest = (0, _lib.getUnhandledProps)(FormCheckbox, props);
	  var ElementType = (0, _lib.getElementType)(FormCheckbox, props);
	  return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	    control: control
	  }));
	}

	FormCheckbox.handledProps = ["as", "control"];
	FormCheckbox.propTypes = process.env.NODE_ENV !== "production" ? {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** A FormField control prop. */
	  control: _FormField["default"].propTypes.control
	} : {};
	FormCheckbox.defaultProps = {
	  as: _FormField["default"],
	  control: _Checkbox["default"]
	};
	var _default = FormCheckbox;
	exports["default"] = _default;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 662 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _extends2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/extends\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _react = _interopRequireDefault(__webpack_require__(3));

	var _lib = __webpack_require__(256);

	var _Dropdown = _interopRequireDefault(__webpack_require__(620));

	var _FormField = _interopRequireDefault(__webpack_require__(660));

	/**
	 * Sugar for <Form.Field control={Dropdown} />.
	 * @see Dropdown
	 * @see Form
	 */
	function FormDropdown(props) {
	  var control = props.control;
	  var rest = (0, _lib.getUnhandledProps)(FormDropdown, props);
	  var ElementType = (0, _lib.getElementType)(FormDropdown, props);
	  return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	    control: control
	  }));
	}

	FormDropdown.handledProps = ["as", "control"];
	FormDropdown.propTypes = process.env.NODE_ENV !== "production" ? {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** A FormField control prop. */
	  control: _FormField["default"].propTypes.control
	} : {};
	FormDropdown.defaultProps = {
	  as: _FormField["default"],
	  control: _Dropdown["default"]
	};
	var _default = FormDropdown;
	exports["default"] = _default;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 663 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _toConsumableArray2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/toConsumableArray\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _extends2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/extends\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _classnames = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"classnames\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _propTypes = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"prop-types\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _react = _interopRequireDefault(__webpack_require__(3));

	var _lib = __webpack_require__(256);

	/**
	 * A set of fields can appear grouped together.
	 * @see Form
	 */
	function FormGroup(props) {
	  var children = props.children,
	      className = props.className,
	      grouped = props.grouped,
	      inline = props.inline,
	      unstackable = props.unstackable,
	      widths = props.widths;
	  var classes = (0, _classnames["default"])((0, _lib.useKeyOnly)(grouped, 'grouped'), (0, _lib.useKeyOnly)(inline, 'inline'), (0, _lib.useKeyOnly)(unstackable, 'unstackable'), (0, _lib.useWidthProp)(widths, null, true), 'fields', className);
	  var rest = (0, _lib.getUnhandledProps)(FormGroup, props);
	  var ElementType = (0, _lib.getElementType)(FormGroup, props);
	  return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	    className: classes
	  }), children);
	}

	FormGroup.handledProps = ["as", "children", "className", "grouped", "inline", "unstackable", "widths"];
	FormGroup.propTypes = process.env.NODE_ENV !== "production" ? {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Primary content. */
	  children: _propTypes["default"].node,

	  /** Additional classes. */
	  className: _propTypes["default"].string,

	  /** Fields can show related choices. */
	  grouped: _lib.customPropTypes.every([_lib.customPropTypes.disallow(['inline']), _propTypes["default"].bool]),

	  /** Multiple fields may be inline in a row. */
	  inline: _lib.customPropTypes.every([_lib.customPropTypes.disallow(['grouped']), _propTypes["default"].bool]),

	  /** A form group can prevent itself from stacking on mobile. */
	  unstackable: _propTypes["default"].bool,

	  /** Fields Groups can specify their width in grid columns or automatically divide fields to be equal width. */
	  widths: _propTypes["default"].oneOf([].concat((0, _toConsumableArray2["default"])(_lib.SUI.WIDTHS), ['equal']))
	} : {};
	var _default = FormGroup;
	exports["default"] = _default;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 664 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _extends2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/extends\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _react = _interopRequireDefault(__webpack_require__(3));

	var _lib = __webpack_require__(256);

	var _Input = _interopRequireDefault(__webpack_require__(665));

	var _FormField = _interopRequireDefault(__webpack_require__(660));

	/**
	 * Sugar for <Form.Field control={Input} />.
	 * @see Form
	 * @see Input
	 */
	function FormInput(props) {
	  var control = props.control;
	  var rest = (0, _lib.getUnhandledProps)(FormInput, props);
	  var ElementType = (0, _lib.getElementType)(FormInput, props);
	  return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	    control: control
	  }));
	}

	FormInput.handledProps = ["as", "control"];
	FormInput.propTypes = process.env.NODE_ENV !== "production" ? {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** A FormField control prop. */
	  control: _FormField["default"].propTypes.control
	} : {};
	FormInput.defaultProps = {
	  as: _FormField["default"],
	  control: _Input["default"]
	};
	var _default = FormInput;
	exports["default"] = _default;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 665 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	Object.defineProperty(exports, "default", {
	  enumerable: true,
	  get: function get() {
	    return _Input["default"];
	  }
	});

	var _Input = _interopRequireDefault(__webpack_require__(666));

/***/ }),
/* 666 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";

	var _interopRequireWildcard = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireWildcard\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _extends2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/extends\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _slicedToArray2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/slicedToArray\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _objectSpread2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/objectSpread\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _classCallCheck2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/classCallCheck\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _createClass2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/createClass\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/possibleConstructorReturn\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _getPrototypeOf3 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/getPrototypeOf\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _assertThisInitialized2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/assertThisInitialized\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _inherits2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/inherits\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _defineProperty2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/defineProperty\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _includes2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/includes\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _map2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/map\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _invoke2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/invoke\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _get2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/get\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _isNil2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/isNil\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _classnames = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"classnames\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _propTypes = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"prop-types\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _react = _interopRequireWildcard(__webpack_require__(3));

	var _lib = __webpack_require__(256);

	var _Button = _interopRequireDefault(__webpack_require__(535));

	var _Icon = _interopRequireDefault(__webpack_require__(566));

	var _Label = _interopRequireDefault(__webpack_require__(634));

	/**
	 * An Input is a field used to elicit a response from a user.
	 * @see Button
	 * @see Form
	 * @see Icon
	 * @see Label
	 */
	var Input =
	/*#__PURE__*/
	function (_Component) {
	  (0, _inherits2["default"])(Input, _Component);

	  function Input() {
	    var _getPrototypeOf2;

	    var _this;

	    (0, _classCallCheck2["default"])(this, Input);

	    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    _this = (0, _possibleConstructorReturn2["default"])(this, (_getPrototypeOf2 = (0, _getPrototypeOf3["default"])(Input)).call.apply(_getPrototypeOf2, [this].concat(args)));
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "inputRef", (0, _react.createRef)());
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "computeIcon", function () {
	      var _this$props = _this.props,
	          loading = _this$props.loading,
	          icon = _this$props.icon;
	      if (!(0, _isNil2["default"])(icon)) return icon;
	      if (loading) return 'spinner';
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "computeTabIndex", function () {
	      var _this$props2 = _this.props,
	          disabled = _this$props2.disabled,
	          tabIndex = _this$props2.tabIndex;
	      if (!(0, _isNil2["default"])(tabIndex)) return tabIndex;
	      if (disabled) return -1;
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "focus", function () {
	      return _this.inputRef.current.focus();
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "select", function () {
	      return _this.inputRef.current.select();
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "handleChange", function (e) {
	      var value = (0, _get2["default"])(e, 'target.value');
	      (0, _invoke2["default"])(_this.props, 'onChange', e, (0, _objectSpread2["default"])({}, _this.props, {
	        value: value
	      }));
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "handleChildOverrides", function (child, defaultProps) {
	      return (0, _objectSpread2["default"])({}, defaultProps, child.props, {
	        ref: function ref(c) {
	          (0, _lib.handleRef)(child.ref, c);
	          _this.inputRef.current = c;
	        }
	      });
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "partitionProps", function () {
	      var _this$props3 = _this.props,
	          disabled = _this$props3.disabled,
	          type = _this$props3.type;

	      var tabIndex = _this.computeTabIndex();

	      var unhandled = (0, _lib.getUnhandledProps)(Input, _this.props);

	      var _partitionHTMLProps = (0, _lib.partitionHTMLProps)(unhandled),
	          _partitionHTMLProps2 = (0, _slicedToArray2["default"])(_partitionHTMLProps, 2),
	          htmlInputProps = _partitionHTMLProps2[0],
	          rest = _partitionHTMLProps2[1];

	      return [(0, _objectSpread2["default"])({}, htmlInputProps, {
	        disabled: disabled,
	        type: type,
	        tabIndex: tabIndex,
	        onChange: _this.handleChange,
	        ref: _this.inputRef
	      }), rest];
	    });
	    return _this;
	  }

	  (0, _createClass2["default"])(Input, [{
	    key: "render",
	    value: function render() {
	      var _this2 = this;

	      var _this$props4 = this.props,
	          action = _this$props4.action,
	          actionPosition = _this$props4.actionPosition,
	          children = _this$props4.children,
	          className = _this$props4.className,
	          disabled = _this$props4.disabled,
	          error = _this$props4.error,
	          fluid = _this$props4.fluid,
	          focus = _this$props4.focus,
	          icon = _this$props4.icon,
	          iconPosition = _this$props4.iconPosition,
	          input = _this$props4.input,
	          inverted = _this$props4.inverted,
	          label = _this$props4.label,
	          labelPosition = _this$props4.labelPosition,
	          loading = _this$props4.loading,
	          size = _this$props4.size,
	          transparent = _this$props4.transparent,
	          type = _this$props4.type;
	      var classes = (0, _classnames["default"])('ui', size, (0, _lib.useKeyOnly)(disabled, 'disabled'), (0, _lib.useKeyOnly)(error, 'error'), (0, _lib.useKeyOnly)(fluid, 'fluid'), (0, _lib.useKeyOnly)(focus, 'focus'), (0, _lib.useKeyOnly)(inverted, 'inverted'), (0, _lib.useKeyOnly)(loading, 'loading'), (0, _lib.useKeyOnly)(transparent, 'transparent'), (0, _lib.useValueAndKey)(actionPosition, 'action') || (0, _lib.useKeyOnly)(action, 'action'), (0, _lib.useValueAndKey)(iconPosition, 'icon') || (0, _lib.useKeyOnly)(icon || loading, 'icon'), (0, _lib.useValueAndKey)(labelPosition, 'labeled') || (0, _lib.useKeyOnly)(label, 'labeled'), 'input', className);
	      var ElementType = (0, _lib.getElementType)(Input, this.props);

	      var _this$partitionProps = this.partitionProps(),
	          _this$partitionProps2 = (0, _slicedToArray2["default"])(_this$partitionProps, 2),
	          htmlInputProps = _this$partitionProps2[0],
	          rest = _this$partitionProps2[1]; // Render with children
	      // ----------------------------------------


	      if (!_lib.childrenUtils.isNil(children)) {
	        // add htmlInputProps to the `<input />` child
	        var childElements = (0, _map2["default"])(_react.Children.toArray(children), function (child) {
	          if (child.type !== 'input') return child;
	          return (0, _react.cloneElement)(child, _this2.handleChildOverrides(child, htmlInputProps));
	        });
	        return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	          className: classes
	        }), childElements);
	      } // Render Shorthand
	      // ----------------------------------------


	      var actionElement = _Button["default"].create(action, {
	        autoGenerateKey: false
	      });

	      var labelElement = _Label["default"].create(label, {
	        defaultProps: {
	          className: (0, _classnames["default"])('label', // add 'left|right corner'
	          (0, _includes2["default"])(labelPosition, 'corner') && labelPosition)
	        },
	        autoGenerateKey: false
	      });

	      return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	        className: classes
	      }), actionPosition === 'left' && actionElement, labelPosition !== 'right' && labelElement, (0, _lib.createHTMLInput)(input || type, {
	        defaultProps: htmlInputProps,
	        autoGenerateKey: false
	      }), _Icon["default"].create(this.computeIcon(), {
	        autoGenerateKey: false
	      }), actionPosition !== 'left' && actionElement, labelPosition === 'right' && labelElement);
	    }
	  }]);
	  return Input;
	}(_react.Component);

	(0, _defineProperty2["default"])(Input, "defaultProps", {
	  type: 'text'
	});
	(0, _defineProperty2["default"])(Input, "handledProps", ["action", "actionPosition", "as", "children", "className", "disabled", "error", "fluid", "focus", "icon", "iconPosition", "input", "inverted", "label", "labelPosition", "loading", "onChange", "size", "tabIndex", "transparent", "type"]);
	Input.propTypes = process.env.NODE_ENV !== "production" ? {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** An Input can be formatted to alert the user to an action they may perform. */
	  action: _propTypes["default"].oneOfType([_propTypes["default"].bool, _lib.customPropTypes.itemShorthand]),

	  /** An action can appear along side an Input on the left or right. */
	  actionPosition: _propTypes["default"].oneOf(['left']),

	  /** Primary content. */
	  children: _propTypes["default"].node,

	  /** Additional classes. */
	  className: _propTypes["default"].string,

	  /** An Input field can show that it is disabled. */
	  disabled: _propTypes["default"].bool,

	  /** An Input field can show the data contains errors. */
	  error: _propTypes["default"].bool,

	  /** Take on the size of its container. */
	  fluid: _propTypes["default"].bool,

	  /** An Input field can show a user is currently interacting with it. */
	  focus: _propTypes["default"].bool,

	  /** Optional Icon to display inside the Input. */
	  icon: _propTypes["default"].oneOfType([_propTypes["default"].bool, _lib.customPropTypes.itemShorthand]),

	  /** An Icon can appear inside an Input on the left or right. */
	  iconPosition: _propTypes["default"].oneOf(['left']),

	  /** Shorthand for creating the HTML Input. */
	  input: _lib.customPropTypes.itemShorthand,

	  /** Format to appear on dark backgrounds. */
	  inverted: _propTypes["default"].bool,

	  /** Optional Label to display along side the Input. */
	  label: _lib.customPropTypes.itemShorthand,

	  /** A Label can appear outside an Input on the left or right. */
	  labelPosition: _propTypes["default"].oneOf(['left', 'right', 'left corner', 'right corner']),

	  /** An Icon Input field can show that it is currently loading data. */
	  loading: _propTypes["default"].bool,

	  /**
	   * Called on change.
	   *
	   * @param {ChangeEvent} event - React's original SyntheticEvent.
	   * @param {object} data - All props and a proposed value.
	   */
	  onChange: _propTypes["default"].func,

	  /** An Input can vary in size. */
	  size: _propTypes["default"].oneOf(['mini', 'small', 'large', 'big', 'huge', 'massive']),

	  /** An Input can receive focus. */
	  tabIndex: _propTypes["default"].oneOfType([_propTypes["default"].number, _propTypes["default"].string]),

	  /** Transparent Input has no background. */
	  transparent: _propTypes["default"].bool,

	  /** The HTML input type. */
	  type: _propTypes["default"].string
	} : {};
	Input.create = (0, _lib.createShorthandFactory)(Input, function (type) {
	  return {
	    type: type
	  };
	});
	var _default = Input;
	exports["default"] = _default;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 667 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _extends2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/extends\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _react = _interopRequireDefault(__webpack_require__(3));

	var _lib = __webpack_require__(256);

	var _Radio = _interopRequireDefault(__webpack_require__(610));

	var _FormField = _interopRequireDefault(__webpack_require__(660));

	/**
	 * Sugar for <Form.Field control={Radio} />.
	 * @see Form
	 * @see Radio
	 */
	function FormRadio(props) {
	  var control = props.control;
	  var rest = (0, _lib.getUnhandledProps)(FormRadio, props);
	  var ElementType = (0, _lib.getElementType)(FormRadio, props);
	  return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	    control: control
	  }));
	}

	FormRadio.handledProps = ["as", "control"];
	FormRadio.propTypes = process.env.NODE_ENV !== "production" ? {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** A FormField control prop. */
	  control: _FormField["default"].propTypes.control
	} : {};
	FormRadio.defaultProps = {
	  as: _FormField["default"],
	  control: _Radio["default"]
	};
	var _default = FormRadio;
	exports["default"] = _default;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 668 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _extends2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/extends\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _propTypes = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"prop-types\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _react = _interopRequireDefault(__webpack_require__(3));

	var _lib = __webpack_require__(256);

	var _Select = _interopRequireDefault(__webpack_require__(618));

	var _Dropdown = _interopRequireDefault(__webpack_require__(620));

	var _FormField = _interopRequireDefault(__webpack_require__(660));

	/**
	 * Sugar for <Form.Field control={Select} />.
	 * @see Form
	 * @see Select
	 */
	function FormSelect(props) {
	  var control = props.control,
	      options = props.options;
	  var rest = (0, _lib.getUnhandledProps)(FormSelect, props);
	  var ElementType = (0, _lib.getElementType)(FormSelect, props);
	  return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	    control: control,
	    options: options
	  }));
	}

	FormSelect.handledProps = ["as", "control", "options"];
	FormSelect.propTypes = process.env.NODE_ENV !== "production" ? {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** A FormField control prop. */
	  control: _FormField["default"].propTypes.control,

	  /** Array of Dropdown.Item props e.g. `{ text: '', value: '' }` */
	  options: _propTypes["default"].arrayOf(_propTypes["default"].shape(_Dropdown["default"].Item.propTypes)).isRequired
	} : {};
	FormSelect.defaultProps = {
	  as: _FormField["default"],
	  control: _Select["default"]
	};
	var _default = FormSelect;
	exports["default"] = _default;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 669 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _extends2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/extends\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _react = _interopRequireDefault(__webpack_require__(3));

	var _lib = __webpack_require__(256);

	var _TextArea = _interopRequireDefault(__webpack_require__(643));

	var _FormField = _interopRequireDefault(__webpack_require__(660));

	/**
	 * Sugar for <Form.Field control={TextArea} />.
	 * @see Form
	 * @see TextArea
	 */
	function FormTextArea(props) {
	  var control = props.control;
	  var rest = (0, _lib.getUnhandledProps)(FormTextArea, props);
	  var ElementType = (0, _lib.getElementType)(FormTextArea, props);
	  return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	    control: control
	  }));
	}

	FormTextArea.handledProps = ["as", "control"];
	FormTextArea.propTypes = process.env.NODE_ENV !== "production" ? {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** A FormField control prop. */
	  control: _FormField["default"].propTypes.control
	} : {};
	FormTextArea.defaultProps = {
	  as: _FormField["default"],
	  control: _TextArea["default"]
	};
	var _default = FormTextArea;
	exports["default"] = _default;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 670 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	Object.defineProperty(exports, "default", {
	  enumerable: true,
	  get: function get() {
	    return _Grid["default"];
	  }
	});

	var _Grid = _interopRequireDefault(__webpack_require__(671));

/***/ }),
/* 671 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _toConsumableArray2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/toConsumableArray\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _extends2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/extends\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _classnames = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"classnames\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _propTypes = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"prop-types\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _react = _interopRequireDefault(__webpack_require__(3));

	var _lib = __webpack_require__(256);

	var _GridColumn = _interopRequireDefault(__webpack_require__(672));

	var _GridRow = _interopRequireDefault(__webpack_require__(673));

	/**
	 * A grid is used to harmonize negative space in a layout.
	 */
	function Grid(props) {
	  var celled = props.celled,
	      centered = props.centered,
	      children = props.children,
	      className = props.className,
	      columns = props.columns,
	      container = props.container,
	      divided = props.divided,
	      doubling = props.doubling,
	      inverted = props.inverted,
	      padded = props.padded,
	      relaxed = props.relaxed,
	      reversed = props.reversed,
	      stackable = props.stackable,
	      stretched = props.stretched,
	      textAlign = props.textAlign,
	      verticalAlign = props.verticalAlign;
	  var classes = (0, _classnames["default"])('ui', (0, _lib.useKeyOnly)(centered, 'centered'), (0, _lib.useKeyOnly)(container, 'container'), (0, _lib.useKeyOnly)(doubling, 'doubling'), (0, _lib.useKeyOnly)(inverted, 'inverted'), (0, _lib.useKeyOnly)(stackable, 'stackable'), (0, _lib.useKeyOnly)(stretched, 'stretched'), (0, _lib.useKeyOrValueAndKey)(celled, 'celled'), (0, _lib.useKeyOrValueAndKey)(divided, 'divided'), (0, _lib.useKeyOrValueAndKey)(padded, 'padded'), (0, _lib.useKeyOrValueAndKey)(relaxed, 'relaxed'), (0, _lib.useMultipleProp)(reversed, 'reversed'), (0, _lib.useTextAlignProp)(textAlign), (0, _lib.useVerticalAlignProp)(verticalAlign), (0, _lib.useWidthProp)(columns, 'column', true), 'grid', className);
	  var rest = (0, _lib.getUnhandledProps)(Grid, props);
	  var ElementType = (0, _lib.getElementType)(Grid, props);
	  return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	    className: classes
	  }), children);
	}

	Grid.handledProps = ["as", "celled", "centered", "children", "className", "columns", "container", "divided", "doubling", "inverted", "padded", "relaxed", "reversed", "stackable", "stretched", "textAlign", "verticalAlign"];
	Grid.Column = _GridColumn["default"];
	Grid.Row = _GridRow["default"];
	Grid.propTypes = process.env.NODE_ENV !== "production" ? {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** A grid can have rows divided into cells. */
	  celled: _propTypes["default"].oneOfType([_propTypes["default"].bool, _propTypes["default"].oneOf(['internally'])]),

	  /** A grid can have its columns centered. */
	  centered: _propTypes["default"].bool,

	  /** Primary content. */
	  children: _propTypes["default"].node,

	  /** Additional classes. */
	  className: _propTypes["default"].string,

	  /** Represents column count per row in Grid. */
	  columns: _propTypes["default"].oneOf([].concat((0, _toConsumableArray2["default"])(_lib.SUI.WIDTHS), ['equal'])),

	  /** A grid can be combined with a container to use the available layout and alignment. */
	  container: _propTypes["default"].bool,

	  /** A grid can have dividers between its columns. */
	  divided: _propTypes["default"].oneOfType([_propTypes["default"].bool, _propTypes["default"].oneOf(['vertically'])]),

	  /** A grid can double its column width on tablet and mobile sizes. */
	  doubling: _propTypes["default"].bool,

	  /** A grid's colors can be inverted. */
	  inverted: _propTypes["default"].bool,

	  /** A grid can preserve its vertical and horizontal gutters on first and last columns. */
	  padded: _propTypes["default"].oneOfType([_propTypes["default"].bool, _propTypes["default"].oneOf(['horizontally', 'vertically'])]),

	  /** A grid can increase its gutters to allow for more negative space. */
	  relaxed: _propTypes["default"].oneOfType([_propTypes["default"].bool, _propTypes["default"].oneOf(['very'])]),

	  /** A grid can specify that its columns should reverse order at different device sizes. */
	  reversed: _lib.customPropTypes.multipleProp(['computer', 'computer vertically', 'mobile', 'mobile vertically', 'tablet', 'tablet vertically']),

	  /** A grid can have its columns stack on-top of each other after reaching mobile breakpoints. */
	  stackable: _propTypes["default"].bool,

	  /** A grid can stretch its contents to take up the entire grid height. */
	  stretched: _propTypes["default"].bool,

	  /** A grid can specify its text alignment. */
	  textAlign: _propTypes["default"].oneOf(_lib.SUI.TEXT_ALIGNMENTS),

	  /** A grid can specify its vertical alignment to have all its columns vertically centered. */
	  verticalAlign: _propTypes["default"].oneOf(_lib.SUI.VERTICAL_ALIGNMENTS)
	} : {};
	var _default = Grid;
	exports["default"] = _default;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 672 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _extends2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/extends\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _classnames = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"classnames\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _propTypes = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"prop-types\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _react = _interopRequireDefault(__webpack_require__(3));

	var _lib = __webpack_require__(256);

	/**
	 * A column sub-component for Grid.
	 */
	function GridColumn(props) {
	  var children = props.children,
	      className = props.className,
	      computer = props.computer,
	      color = props.color,
	      floated = props.floated,
	      largeScreen = props.largeScreen,
	      mobile = props.mobile,
	      only = props.only,
	      stretched = props.stretched,
	      tablet = props.tablet,
	      textAlign = props.textAlign,
	      verticalAlign = props.verticalAlign,
	      widescreen = props.widescreen,
	      width = props.width;
	  var classes = (0, _classnames["default"])(color, (0, _lib.useKeyOnly)(stretched, 'stretched'), (0, _lib.useMultipleProp)(only, 'only'), (0, _lib.useTextAlignProp)(textAlign), (0, _lib.useValueAndKey)(floated, 'floated'), (0, _lib.useVerticalAlignProp)(verticalAlign), (0, _lib.useWidthProp)(computer, 'wide computer'), (0, _lib.useWidthProp)(largeScreen, 'wide large screen'), (0, _lib.useWidthProp)(mobile, 'wide mobile'), (0, _lib.useWidthProp)(tablet, 'wide tablet'), (0, _lib.useWidthProp)(widescreen, 'wide widescreen'), (0, _lib.useWidthProp)(width, 'wide'), 'column', className);
	  var rest = (0, _lib.getUnhandledProps)(GridColumn, props);
	  var ElementType = (0, _lib.getElementType)(GridColumn, props);
	  return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	    className: classes
	  }), children);
	}

	GridColumn.handledProps = ["as", "children", "className", "color", "computer", "floated", "largeScreen", "mobile", "only", "stretched", "tablet", "textAlign", "verticalAlign", "widescreen", "width"];
	GridColumn.propTypes = process.env.NODE_ENV !== "production" ? {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Primary content. */
	  children: _propTypes["default"].node,

	  /** Additional classes. */
	  className: _propTypes["default"].string,

	  /** A grid column can be colored. */
	  color: _propTypes["default"].oneOf(_lib.SUI.COLORS),

	  /** A column can specify a width for a computer. */
	  computer: _lib.customPropTypes.every([_lib.customPropTypes.disallow(['width']), _propTypes["default"].oneOf(_lib.SUI.WIDTHS)]),

	  /** A column can sit flush against the left or right edge of a row. */
	  floated: _propTypes["default"].oneOf(_lib.SUI.FLOATS),

	  /** A column can specify a width for a large screen device. */
	  largeScreen: _lib.customPropTypes.every([_lib.customPropTypes.disallow(['width']), _propTypes["default"].oneOf(_lib.SUI.WIDTHS)]),

	  /** A column can specify a width for a mobile device. */
	  mobile: _lib.customPropTypes.every([_lib.customPropTypes.disallow(['width']), _propTypes["default"].oneOf(_lib.SUI.WIDTHS)]),

	  /** A column can appear only for a specific device, or screen sizes. */
	  only: _lib.customPropTypes.multipleProp(_lib.SUI.VISIBILITY),

	  /** A column can stretch its contents to take up the entire grid or row height. */
	  stretched: _propTypes["default"].bool,

	  /** A column can specify a width for a tablet device. */
	  tablet: _lib.customPropTypes.every([_lib.customPropTypes.disallow(['width']), _propTypes["default"].oneOf(_lib.SUI.WIDTHS)]),

	  /** A column can specify its text alignment. */
	  textAlign: _propTypes["default"].oneOf(_lib.SUI.TEXT_ALIGNMENTS),

	  /** A column can specify its vertical alignment to have all its columns vertically centered. */
	  verticalAlign: _propTypes["default"].oneOf(_lib.SUI.VERTICAL_ALIGNMENTS),

	  /** A column can specify a width for a wide screen device. */
	  widescreen: _lib.customPropTypes.every([_lib.customPropTypes.disallow(['width']), _propTypes["default"].oneOf(_lib.SUI.WIDTHS)]),

	  /** Represents width of column. */
	  width: _lib.customPropTypes.every([_lib.customPropTypes.disallow(['computer', 'largeScreen', 'mobile', 'tablet', 'widescreen']), _propTypes["default"].oneOf(_lib.SUI.WIDTHS)])
	} : {};
	GridColumn.create = (0, _lib.createShorthandFactory)(GridColumn, function (children) {
	  return {
	    children: children
	  };
	});
	var _default = GridColumn;
	exports["default"] = _default;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 673 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _toConsumableArray2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/toConsumableArray\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _extends2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/extends\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _classnames = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"classnames\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _propTypes = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"prop-types\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _react = _interopRequireDefault(__webpack_require__(3));

	var _lib = __webpack_require__(256);

	/**
	 * A row sub-component for Grid.
	 */
	function GridRow(props) {
	  var centered = props.centered,
	      children = props.children,
	      className = props.className,
	      color = props.color,
	      columns = props.columns,
	      divided = props.divided,
	      only = props.only,
	      reversed = props.reversed,
	      stretched = props.stretched,
	      textAlign = props.textAlign,
	      verticalAlign = props.verticalAlign;
	  var classes = (0, _classnames["default"])(color, (0, _lib.useKeyOnly)(centered, 'centered'), (0, _lib.useKeyOnly)(divided, 'divided'), (0, _lib.useKeyOnly)(stretched, 'stretched'), (0, _lib.useMultipleProp)(only, 'only'), (0, _lib.useMultipleProp)(reversed, 'reversed'), (0, _lib.useTextAlignProp)(textAlign), (0, _lib.useVerticalAlignProp)(verticalAlign), (0, _lib.useWidthProp)(columns, 'column', true), 'row', className);
	  var rest = (0, _lib.getUnhandledProps)(GridRow, props);
	  var ElementType = (0, _lib.getElementType)(GridRow, props);
	  return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	    className: classes
	  }), children);
	}

	GridRow.handledProps = ["as", "centered", "children", "className", "color", "columns", "divided", "only", "reversed", "stretched", "textAlign", "verticalAlign"];
	GridRow.propTypes = process.env.NODE_ENV !== "production" ? {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** A row can have its columns centered. */
	  centered: _propTypes["default"].bool,

	  /** Primary content. */
	  children: _propTypes["default"].node,

	  /** Additional classes. */
	  className: _propTypes["default"].string,

	  /** A grid row can be colored. */
	  color: _propTypes["default"].oneOf(_lib.SUI.COLORS),

	  /** Represents column count per line in Row. */
	  columns: _propTypes["default"].oneOf([].concat((0, _toConsumableArray2["default"])(_lib.SUI.WIDTHS), ['equal'])),

	  /** A row can have dividers between its columns. */
	  divided: _propTypes["default"].bool,

	  /** A row can appear only for a specific device, or screen sizes. */
	  only: _lib.customPropTypes.multipleProp(_lib.SUI.VISIBILITY),

	  /** A row can specify that its columns should reverse order at different device sizes. */
	  reversed: _lib.customPropTypes.multipleProp(['computer', 'computer vertically', 'mobile', 'mobile vertically', 'tablet', 'tablet vertically']),

	  /** A row can stretch its contents to take up the entire column height. */
	  stretched: _propTypes["default"].bool,

	  /** A row can specify its text alignment. */
	  textAlign: _propTypes["default"].oneOf(_lib.SUI.TEXT_ALIGNMENTS),

	  /** A row can specify its vertical alignment to have all its columns vertically centered. */
	  verticalAlign: _propTypes["default"].oneOf(_lib.SUI.VERTICAL_ALIGNMENTS)
	} : {};
	var _default = GridRow;
	exports["default"] = _default;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 674 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	Object.defineProperty(exports, "default", {
	  enumerable: true,
	  get: function get() {
	    return _Message["default"];
	  }
	});

	var _Message = _interopRequireDefault(__webpack_require__(675));

/***/ }),
/* 675 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";

	var _interopRequireWildcard = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireWildcard\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _extends2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/extends\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _classCallCheck2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/classCallCheck\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _createClass2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/createClass\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/possibleConstructorReturn\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _getPrototypeOf3 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/getPrototypeOf\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _assertThisInitialized2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/assertThisInitialized\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _inherits2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/inherits\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _defineProperty2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/defineProperty\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _isNil2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/isNil\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _without2 = _interopRequireDefault(__webpack_require__(542));

	var _classnames = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"classnames\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _propTypes = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"prop-types\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _react = _interopRequireWildcard(__webpack_require__(3));

	var _lib = __webpack_require__(256);

	var _Icon = _interopRequireDefault(__webpack_require__(566));

	var _MessageContent = _interopRequireDefault(__webpack_require__(676));

	var _MessageHeader = _interopRequireDefault(__webpack_require__(677));

	var _MessageList = _interopRequireDefault(__webpack_require__(678));

	var _MessageItem = _interopRequireDefault(__webpack_require__(679));

	/**
	 * A message displays information that explains nearby content.
	 * @see Form
	 */
	var Message =
	/*#__PURE__*/
	function (_Component) {
	  (0, _inherits2["default"])(Message, _Component);

	  function Message() {
	    var _getPrototypeOf2;

	    var _this;

	    (0, _classCallCheck2["default"])(this, Message);

	    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    _this = (0, _possibleConstructorReturn2["default"])(this, (_getPrototypeOf2 = (0, _getPrototypeOf3["default"])(Message)).call.apply(_getPrototypeOf2, [this].concat(args)));
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "handleDismiss", function (e) {
	      var onDismiss = _this.props.onDismiss;
	      if (onDismiss) onDismiss(e, _this.props);
	    });
	    return _this;
	  }

	  (0, _createClass2["default"])(Message, [{
	    key: "render",
	    value: function render() {
	      var _this$props = this.props,
	          attached = _this$props.attached,
	          children = _this$props.children,
	          className = _this$props.className,
	          color = _this$props.color,
	          compact = _this$props.compact,
	          content = _this$props.content,
	          error = _this$props.error,
	          floating = _this$props.floating,
	          header = _this$props.header,
	          hidden = _this$props.hidden,
	          icon = _this$props.icon,
	          info = _this$props.info,
	          list = _this$props.list,
	          negative = _this$props.negative,
	          onDismiss = _this$props.onDismiss,
	          positive = _this$props.positive,
	          size = _this$props.size,
	          success = _this$props.success,
	          visible = _this$props.visible,
	          warning = _this$props.warning;
	      var classes = (0, _classnames["default"])('ui', color, size, (0, _lib.useKeyOnly)(compact, 'compact'), (0, _lib.useKeyOnly)(error, 'error'), (0, _lib.useKeyOnly)(floating, 'floating'), (0, _lib.useKeyOnly)(hidden, 'hidden'), (0, _lib.useKeyOnly)(icon, 'icon'), (0, _lib.useKeyOnly)(info, 'info'), (0, _lib.useKeyOnly)(negative, 'negative'), (0, _lib.useKeyOnly)(positive, 'positive'), (0, _lib.useKeyOnly)(success, 'success'), (0, _lib.useKeyOnly)(visible, 'visible'), (0, _lib.useKeyOnly)(warning, 'warning'), (0, _lib.useKeyOrValueAndKey)(attached, 'attached'), 'message', className);

	      var dismissIcon = onDismiss && _react["default"].createElement(_Icon["default"], {
	        name: "close",
	        onClick: this.handleDismiss
	      });

	      var rest = (0, _lib.getUnhandledProps)(Message, this.props);
	      var ElementType = (0, _lib.getElementType)(Message, this.props);

	      if (!_lib.childrenUtils.isNil(children)) {
	        return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	          className: classes
	        }), dismissIcon, children);
	      }

	      return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	        className: classes
	      }), dismissIcon, _Icon["default"].create(icon, {
	        autoGenerateKey: false
	      }), (!(0, _isNil2["default"])(header) || !(0, _isNil2["default"])(content) || !(0, _isNil2["default"])(list)) && _react["default"].createElement(_MessageContent["default"], null, _MessageHeader["default"].create(header, {
	        autoGenerateKey: false
	      }), _MessageList["default"].create(list, {
	        autoGenerateKey: false
	      }), (0, _lib.createHTMLParagraph)(content, {
	        autoGenerateKey: false
	      })));
	    }
	  }]);
	  return Message;
	}(_react.Component);

	exports["default"] = Message;
	(0, _defineProperty2["default"])(Message, "Content", _MessageContent["default"]);
	(0, _defineProperty2["default"])(Message, "Header", _MessageHeader["default"]);
	(0, _defineProperty2["default"])(Message, "List", _MessageList["default"]);
	(0, _defineProperty2["default"])(Message, "Item", _MessageItem["default"]);
	(0, _defineProperty2["default"])(Message, "handledProps", ["as", "attached", "children", "className", "color", "compact", "content", "error", "floating", "header", "hidden", "icon", "info", "list", "negative", "onDismiss", "positive", "size", "success", "visible", "warning"]);
	Message.propTypes = process.env.NODE_ENV !== "production" ? {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** A message can be formatted to attach itself to other content. */
	  attached: _propTypes["default"].oneOfType([_propTypes["default"].bool, _propTypes["default"].oneOf(['bottom', 'top'])]),

	  /** Primary content. */
	  children: _propTypes["default"].node,

	  /** Additional classes. */
	  className: _propTypes["default"].string,

	  /** A message can be formatted to be different colors. */
	  color: _propTypes["default"].oneOf(_lib.SUI.COLORS),

	  /** A message can only take up the width of its content. */
	  compact: _propTypes["default"].bool,

	  /** Shorthand for primary content. */
	  content: _lib.customPropTypes.contentShorthand,

	  /** A message may be formatted to display a negative message. Same as `negative`. */
	  error: _propTypes["default"].bool,

	  /** A message can float above content that it is related to. */
	  floating: _propTypes["default"].bool,

	  /** Shorthand for MessageHeader. */
	  header: _lib.customPropTypes.itemShorthand,

	  /** A message can be hidden. */
	  hidden: _propTypes["default"].bool,

	  /** A message can contain an icon. */
	  icon: _propTypes["default"].oneOfType([_lib.customPropTypes.itemShorthand, _propTypes["default"].bool]),

	  /** A message may be formatted to display information. */
	  info: _propTypes["default"].bool,

	  /** Array shorthand items for the MessageList. Mutually exclusive with children. */
	  list: _lib.customPropTypes.collectionShorthand,

	  /** A message may be formatted to display a negative message. Same as `error`. */
	  negative: _propTypes["default"].bool,

	  /**
	   * A message that the user can choose to hide.
	   * Called when the user clicks the "x" icon. This also adds the "x" icon.
	   *
	   * @param {SyntheticEvent} event - React's original SyntheticEvent.
	   * @param {object} data - All props.
	   */
	  onDismiss: _propTypes["default"].func,

	  /** A message may be formatted to display a positive message.  Same as `success`. */
	  positive: _propTypes["default"].bool,

	  /** A message can have different sizes. */
	  size: _propTypes["default"].oneOf((0, _without2["default"])(_lib.SUI.SIZES, 'medium')),

	  /** A message may be formatted to display a positive message.  Same as `positive`. */
	  success: _propTypes["default"].bool,

	  /** A message can be set to visible to force itself to be shown. */
	  visible: _propTypes["default"].bool,

	  /** A message may be formatted to display warning messages. */
	  warning: _propTypes["default"].bool
	} : {};
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 676 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _extends2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/extends\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _classnames = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"classnames\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _propTypes = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"prop-types\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _react = _interopRequireDefault(__webpack_require__(3));

	var _lib = __webpack_require__(256);

	/**
	 * A message can contain a content.
	 */
	function MessageContent(props) {
	  var children = props.children,
	      className = props.className,
	      content = props.content;
	  var classes = (0, _classnames["default"])('content', className);
	  var rest = (0, _lib.getUnhandledProps)(MessageContent, props);
	  var ElementType = (0, _lib.getElementType)(MessageContent, props);
	  return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	    className: classes
	  }), _lib.childrenUtils.isNil(children) ? content : children);
	}

	MessageContent.handledProps = ["as", "children", "className", "content"];
	MessageContent.propTypes = process.env.NODE_ENV !== "production" ? {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Primary content. */
	  children: _propTypes["default"].node,

	  /** Additional classes. */
	  className: _propTypes["default"].string,

	  /** Shorthand for primary content. */
	  content: _lib.customPropTypes.contentShorthand
	} : {};
	var _default = MessageContent;
	exports["default"] = _default;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 677 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _extends2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/extends\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _classnames = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"classnames\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _propTypes = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"prop-types\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _react = _interopRequireDefault(__webpack_require__(3));

	var _lib = __webpack_require__(256);

	/**
	 * A message can contain a header.
	 */
	function MessageHeader(props) {
	  var children = props.children,
	      className = props.className,
	      content = props.content;
	  var classes = (0, _classnames["default"])('header', className);
	  var rest = (0, _lib.getUnhandledProps)(MessageHeader, props);
	  var ElementType = (0, _lib.getElementType)(MessageHeader, props);
	  return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	    className: classes
	  }), _lib.childrenUtils.isNil(children) ? content : children);
	}

	MessageHeader.handledProps = ["as", "children", "className", "content"];
	MessageHeader.propTypes = process.env.NODE_ENV !== "production" ? {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Primary content. */
	  children: _propTypes["default"].node,

	  /** Additional classes. */
	  className: _propTypes["default"].string,

	  /** Shorthand for primary content. */
	  content: _lib.customPropTypes.contentShorthand
	} : {};
	MessageHeader.create = (0, _lib.createShorthandFactory)(MessageHeader, function (val) {
	  return {
	    content: val
	  };
	});
	var _default = MessageHeader;
	exports["default"] = _default;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 678 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _extends2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/extends\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _map2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/map\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _classnames = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"classnames\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _propTypes = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"prop-types\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _react = _interopRequireDefault(__webpack_require__(3));

	var _lib = __webpack_require__(256);

	var _MessageItem = _interopRequireDefault(__webpack_require__(679));

	/**
	 * A message can contain a list of items.
	 */
	function MessageList(props) {
	  var children = props.children,
	      className = props.className,
	      items = props.items;
	  var classes = (0, _classnames["default"])('list', className);
	  var rest = (0, _lib.getUnhandledProps)(MessageList, props);
	  var ElementType = (0, _lib.getElementType)(MessageList, props);
	  return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	    className: classes
	  }), _lib.childrenUtils.isNil(children) ? (0, _map2["default"])(items, _MessageItem["default"].create) : children);
	}

	MessageList.handledProps = ["as", "children", "className", "items"];
	MessageList.propTypes = process.env.NODE_ENV !== "production" ? {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Primary content. */
	  children: _propTypes["default"].node,

	  /** Additional classes. */
	  className: _propTypes["default"].string,

	  /** Shorthand Message.Items. */
	  items: _lib.customPropTypes.collectionShorthand
	} : {};
	MessageList.defaultProps = {
	  as: 'ul'
	};
	MessageList.create = (0, _lib.createShorthandFactory)(MessageList, function (val) {
	  return {
	    items: val
	  };
	});
	var _default = MessageList;
	exports["default"] = _default;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 679 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _extends2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/extends\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _classnames = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"classnames\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _propTypes = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"prop-types\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _react = _interopRequireDefault(__webpack_require__(3));

	var _lib = __webpack_require__(256);

	/**
	 * A message list can contain an item.
	 */
	function MessageItem(props) {
	  var children = props.children,
	      className = props.className,
	      content = props.content;
	  var classes = (0, _classnames["default"])('content', className);
	  var rest = (0, _lib.getUnhandledProps)(MessageItem, props);
	  var ElementType = (0, _lib.getElementType)(MessageItem, props);
	  return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	    className: classes
	  }), _lib.childrenUtils.isNil(children) ? content : children);
	}

	MessageItem.handledProps = ["as", "children", "className", "content"];
	MessageItem.propTypes = process.env.NODE_ENV !== "production" ? {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Primary content. */
	  children: _propTypes["default"].node,

	  /** Additional classes. */
	  className: _propTypes["default"].string,

	  /** Shorthand for primary content. */
	  content: _lib.customPropTypes.contentShorthand
	} : {};
	MessageItem.defaultProps = {
	  as: 'li'
	};
	MessageItem.create = (0, _lib.createShorthandFactory)(MessageItem, function (content) {
	  return {
	    content: content
	  };
	});
	var _default = MessageItem;
	exports["default"] = _default;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 680 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	Object.defineProperty(exports, "default", {
	  enumerable: true,
	  get: function get() {
	    return _Table["default"];
	  }
	});

	var _Table = _interopRequireDefault(__webpack_require__(681));

/***/ }),
/* 681 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _extends2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/extends\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _without2 = _interopRequireDefault(__webpack_require__(542));

	var _map2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/map\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _classnames = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"classnames\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _propTypes = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"prop-types\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _react = _interopRequireDefault(__webpack_require__(3));

	var _lib = __webpack_require__(256);

	var _TableBody = _interopRequireDefault(__webpack_require__(682));

	var _TableCell = _interopRequireDefault(__webpack_require__(683));

	var _TableFooter = _interopRequireDefault(__webpack_require__(684));

	var _TableHeader = _interopRequireDefault(__webpack_require__(685));

	var _TableHeaderCell = _interopRequireDefault(__webpack_require__(686));

	var _TableRow = _interopRequireDefault(__webpack_require__(687));

	/**
	 * A table displays a collections of data grouped into rows.
	 */
	function Table(props) {
	  var attached = props.attached,
	      basic = props.basic,
	      celled = props.celled,
	      children = props.children,
	      className = props.className,
	      collapsing = props.collapsing,
	      color = props.color,
	      columns = props.columns,
	      compact = props.compact,
	      definition = props.definition,
	      fixed = props.fixed,
	      footerRow = props.footerRow,
	      headerRow = props.headerRow,
	      headerRows = props.headerRows,
	      inverted = props.inverted,
	      padded = props.padded,
	      renderBodyRow = props.renderBodyRow,
	      selectable = props.selectable,
	      singleLine = props.singleLine,
	      size = props.size,
	      sortable = props.sortable,
	      stackable = props.stackable,
	      striped = props.striped,
	      structured = props.structured,
	      tableData = props.tableData,
	      textAlign = props.textAlign,
	      unstackable = props.unstackable,
	      verticalAlign = props.verticalAlign;
	  var classes = (0, _classnames["default"])('ui', color, size, (0, _lib.useKeyOnly)(celled, 'celled'), (0, _lib.useKeyOnly)(collapsing, 'collapsing'), (0, _lib.useKeyOnly)(definition, 'definition'), (0, _lib.useKeyOnly)(fixed, 'fixed'), (0, _lib.useKeyOnly)(inverted, 'inverted'), (0, _lib.useKeyOnly)(selectable, 'selectable'), (0, _lib.useKeyOnly)(singleLine, 'single line'), (0, _lib.useKeyOnly)(sortable, 'sortable'), (0, _lib.useKeyOnly)(stackable, 'stackable'), (0, _lib.useKeyOnly)(striped, 'striped'), (0, _lib.useKeyOnly)(structured, 'structured'), (0, _lib.useKeyOnly)(unstackable, 'unstackable'), (0, _lib.useKeyOrValueAndKey)(attached, 'attached'), (0, _lib.useKeyOrValueAndKey)(basic, 'basic'), (0, _lib.useKeyOrValueAndKey)(compact, 'compact'), (0, _lib.useKeyOrValueAndKey)(padded, 'padded'), (0, _lib.useTextAlignProp)(textAlign), (0, _lib.useVerticalAlignProp)(verticalAlign), (0, _lib.useWidthProp)(columns, 'column'), 'table', className);
	  var rest = (0, _lib.getUnhandledProps)(Table, props);
	  var ElementType = (0, _lib.getElementType)(Table, props);

	  if (!_lib.childrenUtils.isNil(children)) {
	    return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	      className: classes
	    }), children);
	  }

	  var hasHeaderRows = headerRow || headerRows;
	  var headerShorthandOptions = {
	    defaultProps: {
	      cellAs: 'th'
	    }
	  };

	  var headerElement = hasHeaderRows && _react["default"].createElement(_TableHeader["default"], null, _TableRow["default"].create(headerRow, headerShorthandOptions), (0, _map2["default"])(headerRows, function (data) {
	    return _TableRow["default"].create(data, headerShorthandOptions);
	  }));

	  return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	    className: classes
	  }), headerElement, _react["default"].createElement(_TableBody["default"], null, renderBodyRow && (0, _map2["default"])(tableData, function (data, index) {
	    return _TableRow["default"].create(renderBodyRow(data, index));
	  })), footerRow && _react["default"].createElement(_TableFooter["default"], null, _TableRow["default"].create(footerRow)));
	}

	Table.handledProps = ["as", "attached", "basic", "celled", "children", "className", "collapsing", "color", "columns", "compact", "definition", "fixed", "footerRow", "headerRow", "headerRows", "inverted", "padded", "renderBodyRow", "selectable", "singleLine", "size", "sortable", "stackable", "striped", "structured", "tableData", "textAlign", "unstackable", "verticalAlign"];
	Table.defaultProps = {
	  as: 'table'
	};
	Table.propTypes = process.env.NODE_ENV !== "production" ? {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Attach table to other content */
	  attached: _propTypes["default"].oneOfType([_propTypes["default"].bool, _propTypes["default"].oneOf(['top', 'bottom'])]),

	  /** A table can reduce its complexity to increase readability. */
	  basic: _propTypes["default"].oneOfType([_propTypes["default"].oneOf(['very']), _propTypes["default"].bool]),

	  /** A table may be divided each row into separate cells. */
	  celled: _propTypes["default"].bool,

	  /** Primary content. */
	  children: _propTypes["default"].node,

	  /** Additional classes. */
	  className: _propTypes["default"].string,

	  /** A table can be collapsing, taking up only as much space as its rows. */
	  collapsing: _propTypes["default"].bool,

	  /** A table can be given a color to distinguish it from other tables. */
	  color: _propTypes["default"].oneOf(_lib.SUI.COLORS),

	  /** A table can specify its column count to divide its content evenly. */
	  columns: _propTypes["default"].oneOf(_lib.SUI.WIDTHS),

	  /** A table may sometimes need to be more compact to make more rows visible at a time. */
	  compact: _propTypes["default"].oneOfType([_propTypes["default"].bool, _propTypes["default"].oneOf(['very'])]),

	  /** A table may be formatted to emphasize a first column that defines a rows content. */
	  definition: _propTypes["default"].bool,

	  /**
	   * A table can use fixed a special faster form of table rendering that does not resize table cells based on content
	   */
	  fixed: _propTypes["default"].bool,

	  /** Shorthand for a TableRow to be placed within Table.Footer. */
	  footerRow: _lib.customPropTypes.itemShorthand,

	  /** Shorthand for a TableRow to be placed within Table.Header. */
	  headerRow: _lib.customPropTypes.every([_lib.customPropTypes.disallow(['headerRows']), _lib.customPropTypes.itemShorthand]),

	  /** Shorthand for multiple TableRows to be placed within Table.Header. */
	  headerRows: _lib.customPropTypes.every([_lib.customPropTypes.disallow(['headerRow']), _lib.customPropTypes.collectionShorthand]),

	  /** A table's colors can be inverted. */
	  inverted: _propTypes["default"].bool,

	  /** A table may sometimes need to be more padded for legibility. */
	  padded: _propTypes["default"].oneOfType([_propTypes["default"].bool, _propTypes["default"].oneOf(['very'])]),

	  /**
	   * Mapped over `tableData` and should return shorthand for each Table.Row to be placed within Table.Body.
	   *
	   * @param {*} data - An element in the `tableData` array.
	   * @param {number} index - The index of the current element in `tableData`.
	   * @returns {*} Shorthand for a Table.Row.
	   */
	  renderBodyRow: _lib.customPropTypes.every([_lib.customPropTypes.disallow(['children']), _lib.customPropTypes.demand(['tableData']), _propTypes["default"].func]),

	  /** A table can have its rows appear selectable. */
	  selectable: _propTypes["default"].bool,

	  /** A table can specify that its cell contents should remain on a single line and not wrap. */
	  singleLine: _propTypes["default"].bool,

	  /** A table can also be small or large. */
	  size: _propTypes["default"].oneOf((0, _without2["default"])(_lib.SUI.SIZES, 'mini', 'tiny', 'medium', 'big', 'huge', 'massive')),

	  /** A table may allow a user to sort contents by clicking on a table header. */
	  sortable: _propTypes["default"].bool,

	  /** A table can specify how it stacks table content responsively. */
	  stackable: _propTypes["default"].bool,

	  /** A table can stripe alternate rows of content with a darker color to increase contrast. */
	  striped: _propTypes["default"].bool,

	  /** A table can be formatted to display complex structured data. */
	  structured: _propTypes["default"].bool,

	  /** Data to be passed to the renderBodyRow function. */
	  tableData: _lib.customPropTypes.every([_lib.customPropTypes.disallow(['children']), _lib.customPropTypes.demand(['renderBodyRow']), _propTypes["default"].array]),

	  /** A table can adjust its text alignment. */
	  textAlign: _propTypes["default"].oneOf((0, _without2["default"])(_lib.SUI.TEXT_ALIGNMENTS, 'justified')),

	  /** A table can specify how it stacks table content responsively. */
	  unstackable: _propTypes["default"].bool,

	  /** A table can adjust its text alignment. */
	  verticalAlign: _propTypes["default"].oneOf(_lib.SUI.VERTICAL_ALIGNMENTS)
	} : {};
	Table.Body = _TableBody["default"];
	Table.Cell = _TableCell["default"];
	Table.Footer = _TableFooter["default"];
	Table.Header = _TableHeader["default"];
	Table.HeaderCell = _TableHeaderCell["default"];
	Table.Row = _TableRow["default"];
	var _default = Table;
	exports["default"] = _default;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 682 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _extends2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/extends\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _classnames = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"classnames\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _propTypes = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"prop-types\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _react = _interopRequireDefault(__webpack_require__(3));

	var _lib = __webpack_require__(256);

	function TableBody(props) {
	  var children = props.children,
	      className = props.className;
	  var classes = (0, _classnames["default"])(className);
	  var rest = (0, _lib.getUnhandledProps)(TableBody, props);
	  var ElementType = (0, _lib.getElementType)(TableBody, props);
	  return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	    className: classes
	  }), children);
	}

	TableBody.handledProps = ["as", "children", "className"];
	TableBody.defaultProps = {
	  as: 'tbody'
	};
	TableBody.propTypes = process.env.NODE_ENV !== "production" ? {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Primary content. */
	  children: _propTypes["default"].node,

	  /** Additional classes. */
	  className: _propTypes["default"].string
	} : {};
	var _default = TableBody;
	exports["default"] = _default;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 683 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _extends2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/extends\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _without2 = _interopRequireDefault(__webpack_require__(542));

	var _classnames = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"classnames\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _propTypes = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"prop-types\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _react = _interopRequireDefault(__webpack_require__(3));

	var _lib = __webpack_require__(256);

	var _Icon = _interopRequireDefault(__webpack_require__(566));

	/**
	 * A table row can have cells.
	 */
	function TableCell(props) {
	  var active = props.active,
	      children = props.children,
	      className = props.className,
	      collapsing = props.collapsing,
	      content = props.content,
	      disabled = props.disabled,
	      error = props.error,
	      icon = props.icon,
	      negative = props.negative,
	      positive = props.positive,
	      selectable = props.selectable,
	      singleLine = props.singleLine,
	      textAlign = props.textAlign,
	      verticalAlign = props.verticalAlign,
	      warning = props.warning,
	      width = props.width;
	  var classes = (0, _classnames["default"])((0, _lib.useKeyOnly)(active, 'active'), (0, _lib.useKeyOnly)(collapsing, 'collapsing'), (0, _lib.useKeyOnly)(disabled, 'disabled'), (0, _lib.useKeyOnly)(error, 'error'), (0, _lib.useKeyOnly)(negative, 'negative'), (0, _lib.useKeyOnly)(positive, 'positive'), (0, _lib.useKeyOnly)(selectable, 'selectable'), (0, _lib.useKeyOnly)(singleLine, 'single line'), (0, _lib.useKeyOnly)(warning, 'warning'), (0, _lib.useTextAlignProp)(textAlign), (0, _lib.useVerticalAlignProp)(verticalAlign), (0, _lib.useWidthProp)(width, 'wide'), className);
	  var rest = (0, _lib.getUnhandledProps)(TableCell, props);
	  var ElementType = (0, _lib.getElementType)(TableCell, props);

	  if (!_lib.childrenUtils.isNil(children)) {
	    return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	      className: classes
	    }), children);
	  }

	  return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	    className: classes
	  }), _Icon["default"].create(icon), content);
	}

	TableCell.handledProps = ["active", "as", "children", "className", "collapsing", "content", "disabled", "error", "icon", "negative", "positive", "selectable", "singleLine", "textAlign", "verticalAlign", "warning", "width"];
	TableCell.defaultProps = {
	  as: 'td'
	};
	TableCell.propTypes = process.env.NODE_ENV !== "production" ? {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** A cell can be active or selected by a user. */
	  active: _propTypes["default"].bool,

	  /** Primary content. */
	  children: _propTypes["default"].node,

	  /** Additional classes. */
	  className: _propTypes["default"].string,

	  /** A cell can be collapsing so that it only uses as much space as required. */
	  collapsing: _propTypes["default"].bool,

	  /** Shorthand for primary content. */
	  content: _lib.customPropTypes.contentShorthand,

	  /** A cell can be disabled. */
	  disabled: _propTypes["default"].bool,

	  /** A cell may call attention to an error or a negative value. */
	  error: _propTypes["default"].bool,

	  /** Add an Icon by name, props object, or pass an <Icon /> */
	  icon: _lib.customPropTypes.itemShorthand,

	  /** A cell may let a user know whether a value is bad. */
	  negative: _propTypes["default"].bool,

	  /** A cell may let a user know whether a value is good. */
	  positive: _propTypes["default"].bool,

	  /** A cell can be selectable. */
	  selectable: _propTypes["default"].bool,

	  /** A cell can specify that its contents should remain on a single line and not wrap. */
	  singleLine: _propTypes["default"].bool,

	  /** A table cell can adjust its text alignment. */
	  textAlign: _propTypes["default"].oneOf((0, _without2["default"])(_lib.SUI.TEXT_ALIGNMENTS, 'justified')),

	  /** A table cell can adjust its text alignment. */
	  verticalAlign: _propTypes["default"].oneOf(_lib.SUI.VERTICAL_ALIGNMENTS),

	  /** A cell may warn a user. */
	  warning: _propTypes["default"].bool,

	  /** A table can specify the width of individual columns independently. */
	  width: _propTypes["default"].oneOf(_lib.SUI.WIDTHS)
	} : {};
	TableCell.create = (0, _lib.createShorthandFactory)(TableCell, function (content) {
	  return {
	    content: content
	  };
	});
	var _default = TableCell;
	exports["default"] = _default;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 684 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _extends2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/extends\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _react = _interopRequireDefault(__webpack_require__(3));

	var _lib = __webpack_require__(256);

	var _TableHeader = _interopRequireDefault(__webpack_require__(685));

	/**
	 * A table can have a footer.
	 */
	function TableFooter(props) {
	  var as = props.as;
	  var rest = (0, _lib.getUnhandledProps)(TableFooter, props);
	  return _react["default"].createElement(_TableHeader["default"], (0, _extends2["default"])({}, rest, {
	    as: as
	  }));
	}

	TableFooter.handledProps = ["as"];
	TableFooter.propTypes = process.env.NODE_ENV !== "production" ? {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as
	} : {};
	TableFooter.defaultProps = {
	  as: 'tfoot'
	};
	var _default = TableFooter;
	exports["default"] = _default;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 685 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _extends2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/extends\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _classnames = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"classnames\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _propTypes = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"prop-types\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _react = _interopRequireDefault(__webpack_require__(3));

	var _lib = __webpack_require__(256);

	/**
	 * A table can have a header.
	 */
	function TableHeader(props) {
	  var children = props.children,
	      className = props.className,
	      content = props.content,
	      fullWidth = props.fullWidth;
	  var classes = (0, _classnames["default"])((0, _lib.useKeyOnly)(fullWidth, 'full-width'), className);
	  var rest = (0, _lib.getUnhandledProps)(TableHeader, props);
	  var ElementType = (0, _lib.getElementType)(TableHeader, props);
	  return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	    className: classes
	  }), _lib.childrenUtils.isNil(children) ? content : children);
	}

	TableHeader.handledProps = ["as", "children", "className", "content", "fullWidth"];
	TableHeader.defaultProps = {
	  as: 'thead'
	};
	TableHeader.propTypes = process.env.NODE_ENV !== "production" ? {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Primary content. */
	  children: _propTypes["default"].node,

	  /** Additional classes. */
	  className: _propTypes["default"].string,

	  /** Shorthand for primary content. */
	  content: _lib.customPropTypes.contentShorthand,

	  /** A definition table can have a full width header or footer, filling in the gap left by the first column. */
	  fullWidth: _propTypes["default"].bool
	} : {};
	var _default = TableHeader;
	exports["default"] = _default;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 686 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _extends2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/extends\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _classnames = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"classnames\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _propTypes = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"prop-types\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _react = _interopRequireDefault(__webpack_require__(3));

	var _lib = __webpack_require__(256);

	var _TableCell = _interopRequireDefault(__webpack_require__(683));

	/**
	 * A table can have a header cell.
	 */
	function TableHeaderCell(props) {
	  var as = props.as,
	      className = props.className,
	      sorted = props.sorted;
	  var classes = (0, _classnames["default"])((0, _lib.useValueAndKey)(sorted, 'sorted'), className);
	  var rest = (0, _lib.getUnhandledProps)(TableHeaderCell, props);
	  return _react["default"].createElement(_TableCell["default"], (0, _extends2["default"])({}, rest, {
	    as: as,
	    className: classes
	  }));
	}

	TableHeaderCell.handledProps = ["as", "className", "sorted"];
	TableHeaderCell.propTypes = process.env.NODE_ENV !== "production" ? {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Additional classes. */
	  className: _propTypes["default"].string,

	  /** A header cell can be sorted in ascending or descending order. */
	  sorted: _propTypes["default"].oneOf(['ascending', 'descending'])
	} : {};
	TableHeaderCell.defaultProps = {
	  as: 'th'
	};
	var _default = TableHeaderCell;
	exports["default"] = _default;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 687 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _extends2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/extends\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _without2 = _interopRequireDefault(__webpack_require__(542));

	var _map2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/map\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _classnames = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"classnames\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _propTypes = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"prop-types\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _react = _interopRequireDefault(__webpack_require__(3));

	var _lib = __webpack_require__(256);

	var _TableCell = _interopRequireDefault(__webpack_require__(683));

	/**
	 * A table can have rows.
	 */
	function TableRow(props) {
	  var active = props.active,
	      cellAs = props.cellAs,
	      cells = props.cells,
	      children = props.children,
	      className = props.className,
	      disabled = props.disabled,
	      error = props.error,
	      negative = props.negative,
	      positive = props.positive,
	      textAlign = props.textAlign,
	      verticalAlign = props.verticalAlign,
	      warning = props.warning;
	  var classes = (0, _classnames["default"])((0, _lib.useKeyOnly)(active, 'active'), (0, _lib.useKeyOnly)(disabled, 'disabled'), (0, _lib.useKeyOnly)(error, 'error'), (0, _lib.useKeyOnly)(negative, 'negative'), (0, _lib.useKeyOnly)(positive, 'positive'), (0, _lib.useKeyOnly)(warning, 'warning'), (0, _lib.useTextAlignProp)(textAlign), (0, _lib.useVerticalAlignProp)(verticalAlign), className);
	  var rest = (0, _lib.getUnhandledProps)(TableRow, props);
	  var ElementType = (0, _lib.getElementType)(TableRow, props);

	  if (!_lib.childrenUtils.isNil(children)) {
	    return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	      className: classes
	    }), children);
	  }

	  return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	    className: classes
	  }), (0, _map2["default"])(cells, function (cell) {
	    return _TableCell["default"].create(cell, {
	      defaultProps: {
	        as: cellAs
	      }
	    });
	  }));
	}

	TableRow.handledProps = ["active", "as", "cellAs", "cells", "children", "className", "disabled", "error", "negative", "positive", "textAlign", "verticalAlign", "warning"];
	TableRow.defaultProps = {
	  as: 'tr',
	  cellAs: 'td'
	};
	TableRow.propTypes = process.env.NODE_ENV !== "production" ? {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** A row can be active or selected by a user. */
	  active: _propTypes["default"].bool,

	  /** An element type to render as (string or function). */
	  cellAs: _lib.customPropTypes.as,

	  /** Shorthand array of props for TableCell. */
	  cells: _lib.customPropTypes.collectionShorthand,

	  /** Primary content. */
	  children: _propTypes["default"].node,

	  /** Additional classes. */
	  className: _propTypes["default"].string,

	  /** A row can be disabled. */
	  disabled: _propTypes["default"].bool,

	  /** A row may call attention to an error or a negative value. */
	  error: _propTypes["default"].bool,

	  /** A row may let a user know whether a value is bad. */
	  negative: _propTypes["default"].bool,

	  /** A row may let a user know whether a value is good. */
	  positive: _propTypes["default"].bool,

	  /** A table row can adjust its text alignment. */
	  textAlign: _propTypes["default"].oneOf((0, _without2["default"])(_lib.SUI.TEXT_ALIGNMENTS, 'justified')),

	  /** A table row can adjust its vertical alignment. */
	  verticalAlign: _propTypes["default"].oneOf(_lib.SUI.VERTICAL_ALIGNMENTS),

	  /** A row may warn a user. */
	  warning: _propTypes["default"].bool
	} : {};
	TableRow.create = (0, _lib.createShorthandFactory)(TableRow, function (cells) {
	  return {
	    cells: cells
	  };
	});
	var _default = TableRow;
	exports["default"] = _default;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 688 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	Object.defineProperty(exports, "default", {
	  enumerable: true,
	  get: function get() {
	    return _Container["default"];
	  }
	});

	var _Container = _interopRequireDefault(__webpack_require__(689));

/***/ }),
/* 689 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _extends2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/extends\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _classnames = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"classnames\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _propTypes = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"prop-types\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _react = _interopRequireDefault(__webpack_require__(3));

	var _lib = __webpack_require__(256);

	/**
	 * A container limits content to a maximum width.
	 */
	function Container(props) {
	  var children = props.children,
	      className = props.className,
	      content = props.content,
	      fluid = props.fluid,
	      text = props.text,
	      textAlign = props.textAlign;
	  var classes = (0, _classnames["default"])('ui', (0, _lib.useKeyOnly)(text, 'text'), (0, _lib.useKeyOnly)(fluid, 'fluid'), (0, _lib.useTextAlignProp)(textAlign), 'container', className);
	  var rest = (0, _lib.getUnhandledProps)(Container, props);
	  var ElementType = (0, _lib.getElementType)(Container, props);
	  return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	    className: classes
	  }), _lib.childrenUtils.isNil(children) ? content : children);
	}

	Container.handledProps = ["as", "children", "className", "content", "fluid", "text", "textAlign"];
	Container.propTypes = process.env.NODE_ENV !== "production" ? {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Primary content. */
	  children: _propTypes["default"].node,

	  /** Additional classes. */
	  className: _propTypes["default"].string,

	  /** Shorthand for primary content. */
	  content: _lib.customPropTypes.contentShorthand,

	  /** Container has no maximum width. */
	  fluid: _propTypes["default"].bool,

	  /** Reduce maximum width to more naturally accommodate text. */
	  text: _propTypes["default"].bool,

	  /** Align container text. */
	  textAlign: _propTypes["default"].oneOf(_lib.SUI.TEXT_ALIGNMENTS)
	} : {};
	var _default = Container;
	exports["default"] = _default;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 690 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	Object.defineProperty(exports, "default", {
	  enumerable: true,
	  get: function get() {
	    return _Divider["default"];
	  }
	});

	var _Divider = _interopRequireDefault(__webpack_require__(691));

/***/ }),
/* 691 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _extends2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/extends\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _classnames = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"classnames\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _propTypes = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"prop-types\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _react = _interopRequireDefault(__webpack_require__(3));

	var _lib = __webpack_require__(256);

	/**
	 * A divider visually segments content into groups.
	 */
	function Divider(props) {
	  var children = props.children,
	      className = props.className,
	      clearing = props.clearing,
	      content = props.content,
	      fitted = props.fitted,
	      hidden = props.hidden,
	      horizontal = props.horizontal,
	      inverted = props.inverted,
	      section = props.section,
	      vertical = props.vertical;
	  var classes = (0, _classnames["default"])('ui', (0, _lib.useKeyOnly)(clearing, 'clearing'), (0, _lib.useKeyOnly)(fitted, 'fitted'), (0, _lib.useKeyOnly)(hidden, 'hidden'), (0, _lib.useKeyOnly)(horizontal, 'horizontal'), (0, _lib.useKeyOnly)(inverted, 'inverted'), (0, _lib.useKeyOnly)(section, 'section'), (0, _lib.useKeyOnly)(vertical, 'vertical'), 'divider', className);
	  var rest = (0, _lib.getUnhandledProps)(Divider, props);
	  var ElementType = (0, _lib.getElementType)(Divider, props);
	  return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	    className: classes
	  }), _lib.childrenUtils.isNil(children) ? content : children);
	}

	Divider.handledProps = ["as", "children", "className", "clearing", "content", "fitted", "hidden", "horizontal", "inverted", "section", "vertical"];
	Divider.propTypes = process.env.NODE_ENV !== "production" ? {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Primary content. */
	  children: _propTypes["default"].node,

	  /** Additional classes. */
	  className: _propTypes["default"].string,

	  /** Divider can clear the content above it. */
	  clearing: _propTypes["default"].bool,

	  /** Shorthand for primary content. */
	  content: _lib.customPropTypes.contentShorthand,

	  /** Divider can be fitted without any space above or below it. */
	  fitted: _propTypes["default"].bool,

	  /** Divider can divide content without creating a dividing line. */
	  hidden: _propTypes["default"].bool,

	  /** Divider can segment content horizontally. */
	  horizontal: _propTypes["default"].bool,

	  /** Divider can have its colours inverted. */
	  inverted: _propTypes["default"].bool,

	  /** Divider can provide greater margins to divide sections of content. */
	  section: _propTypes["default"].bool,

	  /** Divider can segment content vertically. */
	  vertical: _propTypes["default"].bool
	} : {};
	var _default = Divider;
	exports["default"] = _default;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 692 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	Object.defineProperty(exports, "default", {
	  enumerable: true,
	  get: function get() {
	    return _Header["default"];
	  }
	});

	var _Header = _interopRequireDefault(__webpack_require__(693));

/***/ }),
/* 693 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _extends2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/extends\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _without2 = _interopRequireDefault(__webpack_require__(542));

	var _classnames = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"classnames\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _propTypes = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"prop-types\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _react = _interopRequireDefault(__webpack_require__(3));

	var _lib = __webpack_require__(256);

	var _Icon = _interopRequireDefault(__webpack_require__(566));

	var _Image = _interopRequireDefault(__webpack_require__(639));

	var _HeaderSubheader = _interopRequireDefault(__webpack_require__(694));

	var _HeaderContent = _interopRequireDefault(__webpack_require__(695));

	/**
	 * A header provides a short summary of content
	 */
	function Header(props) {
	  var attached = props.attached,
	      block = props.block,
	      children = props.children,
	      className = props.className,
	      color = props.color,
	      content = props.content,
	      disabled = props.disabled,
	      dividing = props.dividing,
	      floated = props.floated,
	      icon = props.icon,
	      image = props.image,
	      inverted = props.inverted,
	      size = props.size,
	      sub = props.sub,
	      subheader = props.subheader,
	      textAlign = props.textAlign;
	  var classes = (0, _classnames["default"])('ui', color, size, (0, _lib.useKeyOnly)(block, 'block'), (0, _lib.useKeyOnly)(disabled, 'disabled'), (0, _lib.useKeyOnly)(dividing, 'dividing'), (0, _lib.useValueAndKey)(floated, 'floated'), (0, _lib.useKeyOnly)(icon === true, 'icon'), (0, _lib.useKeyOnly)(image === true, 'image'), (0, _lib.useKeyOnly)(inverted, 'inverted'), (0, _lib.useKeyOnly)(sub, 'sub'), (0, _lib.useKeyOrValueAndKey)(attached, 'attached'), (0, _lib.useTextAlignProp)(textAlign), 'header', className);
	  var rest = (0, _lib.getUnhandledProps)(Header, props);
	  var ElementType = (0, _lib.getElementType)(Header, props);

	  if (!_lib.childrenUtils.isNil(children)) {
	    return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	      className: classes
	    }), children);
	  }

	  var iconElement = _Icon["default"].create(icon, {
	    autoGenerateKey: false
	  });

	  var imageElement = _Image["default"].create(image, {
	    autoGenerateKey: false
	  });

	  var subheaderElement = _HeaderSubheader["default"].create(subheader, {
	    autoGenerateKey: false
	  });

	  if (iconElement || imageElement) {
	    return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	      className: classes
	    }), iconElement || imageElement, (content || subheaderElement) && _react["default"].createElement(_HeaderContent["default"], null, content, subheaderElement));
	  }

	  return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	    className: classes
	  }), content, subheaderElement);
	}

	Header.handledProps = ["as", "attached", "block", "children", "className", "color", "content", "disabled", "dividing", "floated", "icon", "image", "inverted", "size", "sub", "subheader", "textAlign"];
	Header.propTypes = process.env.NODE_ENV !== "production" ? {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Attach header  to other content, like a segment. */
	  attached: _propTypes["default"].oneOfType([_propTypes["default"].bool, _propTypes["default"].oneOf(['top', 'bottom'])]),

	  /** Format header to appear inside a content block. */
	  block: _propTypes["default"].bool,

	  /** Primary content. */
	  children: _propTypes["default"].node,

	  /** Additional classes. */
	  className: _propTypes["default"].string,

	  /** Color of the header. */
	  color: _propTypes["default"].oneOf(_lib.SUI.COLORS),

	  /** Shorthand for primary content. */
	  content: _lib.customPropTypes.contentShorthand,

	  /** Show that the header is inactive. */
	  disabled: _propTypes["default"].bool,

	  /** Divide header from the content below it. */
	  dividing: _propTypes["default"].bool,

	  /** Header can sit to the left or right of other content. */
	  floated: _propTypes["default"].oneOf(_lib.SUI.FLOATS),

	  /** Add an icon by icon name or pass an Icon. */
	  icon: _lib.customPropTypes.every([_lib.customPropTypes.disallow(['image']), _propTypes["default"].oneOfType([_propTypes["default"].bool, _lib.customPropTypes.itemShorthand])]),

	  /** Add an image by img src or pass an Image. */
	  image: _lib.customPropTypes.every([_lib.customPropTypes.disallow(['icon']), _propTypes["default"].oneOfType([_propTypes["default"].bool, _lib.customPropTypes.itemShorthand])]),

	  /** Inverts the color of the header for dark backgrounds. */
	  inverted: _propTypes["default"].bool,

	  /** Content headings are sized with em and are based on the font-size of their container. */
	  size: _propTypes["default"].oneOf((0, _without2["default"])(_lib.SUI.SIZES, 'big', 'massive', 'mini')),

	  /** Headers may be formatted to label smaller or de-emphasized content. */
	  sub: _propTypes["default"].bool,

	  /** Shorthand for Header.Subheader. */
	  subheader: _lib.customPropTypes.itemShorthand,

	  /** Align header content. */
	  textAlign: _propTypes["default"].oneOf(_lib.SUI.TEXT_ALIGNMENTS)
	} : {};
	Header.Content = _HeaderContent["default"];
	Header.Subheader = _HeaderSubheader["default"];
	var _default = Header;
	exports["default"] = _default;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 694 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _extends2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/extends\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _classnames = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"classnames\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _propTypes = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"prop-types\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _react = _interopRequireDefault(__webpack_require__(3));

	var _lib = __webpack_require__(256);

	/**
	 * Headers may contain subheaders.
	 */
	function HeaderSubheader(props) {
	  var children = props.children,
	      className = props.className,
	      content = props.content;
	  var classes = (0, _classnames["default"])('sub header', className);
	  var rest = (0, _lib.getUnhandledProps)(HeaderSubheader, props);
	  var ElementType = (0, _lib.getElementType)(HeaderSubheader, props);
	  return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	    className: classes
	  }), _lib.childrenUtils.isNil(children) ? content : children);
	}

	HeaderSubheader.handledProps = ["as", "children", "className", "content"];
	HeaderSubheader.propTypes = process.env.NODE_ENV !== "production" ? {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Primary content. */
	  children: _propTypes["default"].node,

	  /** Additional classes. */
	  className: _propTypes["default"].string,

	  /** Shorthand for primary content. */
	  content: _lib.customPropTypes.contentShorthand
	} : {};
	HeaderSubheader.create = (0, _lib.createShorthandFactory)(HeaderSubheader, function (content) {
	  return {
	    content: content
	  };
	});
	var _default = HeaderSubheader;
	exports["default"] = _default;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 695 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _extends2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/extends\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _classnames = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"classnames\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _propTypes = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"prop-types\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _react = _interopRequireDefault(__webpack_require__(3));

	var _lib = __webpack_require__(256);

	/**
	 * Header content wraps the main content when there is an adjacent Icon or Image.
	 */
	function HeaderContent(props) {
	  var children = props.children,
	      className = props.className,
	      content = props.content;
	  var classes = (0, _classnames["default"])('content', className);
	  var rest = (0, _lib.getUnhandledProps)(HeaderContent, props);
	  var ElementType = (0, _lib.getElementType)(HeaderContent, props);
	  return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	    className: classes
	  }), _lib.childrenUtils.isNil(children) ? content : children);
	}

	HeaderContent.handledProps = ["as", "children", "className", "content"];
	HeaderContent.propTypes = process.env.NODE_ENV !== "production" ? {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Primary content. */
	  children: _propTypes["default"].node,

	  /** Additional classes. */
	  className: _propTypes["default"].string,

	  /** Shorthand for primary content. */
	  content: _lib.customPropTypes.contentShorthand
	} : {};
	var _default = HeaderContent;
	exports["default"] = _default;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 696 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	Object.defineProperty(exports, "default", {
	  enumerable: true,
	  get: function get() {
	    return _List["default"];
	  }
	});

	var _List = _interopRequireDefault(__webpack_require__(697));

/***/ }),
/* 697 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";

	var _interopRequireWildcard = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireWildcard\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _extends2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/extends\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _classCallCheck2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/classCallCheck\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _createClass2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/createClass\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/possibleConstructorReturn\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _getPrototypeOf3 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/getPrototypeOf\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _assertThisInitialized2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/assertThisInitialized\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _inherits2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/inherits\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _defineProperty2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/defineProperty\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _map2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/map\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _invoke2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/invoke\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _classnames = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"classnames\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _propTypes = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"prop-types\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _react = _interopRequireWildcard(__webpack_require__(3));

	var _lib = __webpack_require__(256);

	var _ListContent = _interopRequireDefault(__webpack_require__(698));

	var _ListDescription = _interopRequireDefault(__webpack_require__(699));

	var _ListHeader = _interopRequireDefault(__webpack_require__(700));

	var _ListIcon = _interopRequireDefault(__webpack_require__(701));

	var _ListItem = _interopRequireDefault(__webpack_require__(702));

	var _ListList = _interopRequireDefault(__webpack_require__(703));

	/**
	 * A list groups related content.
	 */
	var List =
	/*#__PURE__*/
	function (_Component) {
	  (0, _inherits2["default"])(List, _Component);

	  function List() {
	    var _getPrototypeOf2;

	    var _this;

	    (0, _classCallCheck2["default"])(this, List);

	    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    _this = (0, _possibleConstructorReturn2["default"])(this, (_getPrototypeOf2 = (0, _getPrototypeOf3["default"])(List)).call.apply(_getPrototypeOf2, [this].concat(args)));
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "handleItemOverrides", function (predefinedProps) {
	      return {
	        onClick: function onClick(e, itemProps) {
	          (0, _invoke2["default"])(predefinedProps, 'onClick', e, itemProps);
	          (0, _invoke2["default"])(_this.props, 'onItemClick', e, itemProps);
	        }
	      };
	    });
	    return _this;
	  }

	  (0, _createClass2["default"])(List, [{
	    key: "render",
	    value: function render() {
	      var _this2 = this;

	      var _this$props = this.props,
	          animated = _this$props.animated,
	          bulleted = _this$props.bulleted,
	          celled = _this$props.celled,
	          children = _this$props.children,
	          className = _this$props.className,
	          content = _this$props.content,
	          divided = _this$props.divided,
	          floated = _this$props.floated,
	          horizontal = _this$props.horizontal,
	          inverted = _this$props.inverted,
	          items = _this$props.items,
	          link = _this$props.link,
	          ordered = _this$props.ordered,
	          relaxed = _this$props.relaxed,
	          selection = _this$props.selection,
	          size = _this$props.size,
	          verticalAlign = _this$props.verticalAlign;
	      var classes = (0, _classnames["default"])('ui', size, (0, _lib.useKeyOnly)(animated, 'animated'), (0, _lib.useKeyOnly)(bulleted, 'bulleted'), (0, _lib.useKeyOnly)(celled, 'celled'), (0, _lib.useKeyOnly)(divided, 'divided'), (0, _lib.useKeyOnly)(horizontal, 'horizontal'), (0, _lib.useKeyOnly)(inverted, 'inverted'), (0, _lib.useKeyOnly)(link, 'link'), (0, _lib.useKeyOnly)(ordered, 'ordered'), (0, _lib.useKeyOnly)(selection, 'selection'), (0, _lib.useKeyOrValueAndKey)(relaxed, 'relaxed'), (0, _lib.useValueAndKey)(floated, 'floated'), (0, _lib.useVerticalAlignProp)(verticalAlign), 'list', className);
	      var rest = (0, _lib.getUnhandledProps)(List, this.props);
	      var ElementType = (0, _lib.getElementType)(List, this.props);

	      if (!_lib.childrenUtils.isNil(children)) {
	        return _react["default"].createElement(ElementType, (0, _extends2["default"])({
	          role: "list",
	          className: classes
	        }, rest), children);
	      }

	      if (!_lib.childrenUtils.isNil(content)) {
	        return _react["default"].createElement(ElementType, (0, _extends2["default"])({
	          role: "list",
	          className: classes
	        }, rest), content);
	      }

	      return _react["default"].createElement(ElementType, (0, _extends2["default"])({
	        role: "list",
	        className: classes
	      }, rest), (0, _map2["default"])(items, function (item) {
	        return _ListItem["default"].create(item, {
	          overrideProps: _this2.handleItemOverrides
	        });
	      }));
	    }
	  }]);
	  return List;
	}(_react.Component);

	(0, _defineProperty2["default"])(List, "Content", _ListContent["default"]);
	(0, _defineProperty2["default"])(List, "Description", _ListDescription["default"]);
	(0, _defineProperty2["default"])(List, "Header", _ListHeader["default"]);
	(0, _defineProperty2["default"])(List, "Icon", _ListIcon["default"]);
	(0, _defineProperty2["default"])(List, "Item", _ListItem["default"]);
	(0, _defineProperty2["default"])(List, "List", _ListList["default"]);
	(0, _defineProperty2["default"])(List, "handledProps", ["animated", "as", "bulleted", "celled", "children", "className", "content", "divided", "floated", "horizontal", "inverted", "items", "link", "onItemClick", "ordered", "relaxed", "selection", "size", "verticalAlign"]);
	List.propTypes = process.env.NODE_ENV !== "production" ? {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** A list can animate to set the current item apart from the list. */
	  animated: _propTypes["default"].bool,

	  /** A list can mark items with a bullet. */
	  bulleted: _propTypes["default"].bool,

	  /** A list can divide its items into cells. */
	  celled: _propTypes["default"].bool,

	  /** Primary content. */
	  children: _propTypes["default"].node,

	  /** Additional classes. */
	  className: _propTypes["default"].string,

	  /** Shorthand for primary content. */
	  content: _lib.customPropTypes.contentShorthand,

	  /** A list can show divisions between content. */
	  divided: _propTypes["default"].bool,

	  /** An list can be floated left or right. */
	  floated: _propTypes["default"].oneOf(_lib.SUI.FLOATS),

	  /** A list can be formatted to have items appear horizontally. */
	  horizontal: _propTypes["default"].bool,

	  /** A list can be inverted to appear on a dark background. */
	  inverted: _propTypes["default"].bool,

	  /** Shorthand array of props for ListItem. */
	  items: _lib.customPropTypes.collectionShorthand,

	  /** A list can be specially formatted for navigation links. */
	  link: _propTypes["default"].bool,

	  /**
	   * onClick handler for ListItem. Mutually exclusive with children.
	   *
	   * @param {SyntheticEvent} event - React's original SyntheticEvent.
	   * @param {object} data - All item props.
	   */
	  onItemClick: _lib.customPropTypes.every([_lib.customPropTypes.disallow(['children']), _propTypes["default"].func]),

	  /** A list can be ordered numerically. */
	  ordered: _propTypes["default"].bool,

	  /** A list can relax its padding to provide more negative space. */
	  relaxed: _propTypes["default"].oneOfType([_propTypes["default"].bool, _propTypes["default"].oneOf(['very'])]),

	  /** A selection list formats list items as possible choices. */
	  selection: _propTypes["default"].bool,

	  /** A list can vary in size. */
	  size: _propTypes["default"].oneOf(_lib.SUI.SIZES),

	  /** An element inside a list can be vertically aligned. */
	  verticalAlign: _propTypes["default"].oneOf(_lib.SUI.VERTICAL_ALIGNMENTS)
	} : {};
	var _default = List;
	exports["default"] = _default;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 698 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _extends2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/extends\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _classnames = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"classnames\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _propTypes = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"prop-types\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _react = _interopRequireDefault(__webpack_require__(3));

	var _lib = __webpack_require__(256);

	var _ListDescription = _interopRequireDefault(__webpack_require__(699));

	var _ListHeader = _interopRequireDefault(__webpack_require__(700));

	/**
	 * A list item can contain a content.
	 */
	function ListContent(props) {
	  var children = props.children,
	      className = props.className,
	      content = props.content,
	      description = props.description,
	      floated = props.floated,
	      header = props.header,
	      verticalAlign = props.verticalAlign;
	  var classes = (0, _classnames["default"])((0, _lib.useValueAndKey)(floated, 'floated'), (0, _lib.useVerticalAlignProp)(verticalAlign), 'content', className);
	  var rest = (0, _lib.getUnhandledProps)(ListContent, props);
	  var ElementType = (0, _lib.getElementType)(ListContent, props);

	  if (!_lib.childrenUtils.isNil(children)) {
	    return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	      className: classes
	    }), children);
	  }

	  return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	    className: classes
	  }), _ListHeader["default"].create(header), _ListDescription["default"].create(description), content);
	}

	ListContent.handledProps = ["as", "children", "className", "content", "description", "floated", "header", "verticalAlign"];
	ListContent.propTypes = process.env.NODE_ENV !== "production" ? {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Primary content. */
	  children: _propTypes["default"].node,

	  /** Additional classes. */
	  className: _propTypes["default"].string,

	  /** Shorthand for primary content. */
	  content: _lib.customPropTypes.contentShorthand,

	  /** Shorthand for ListDescription. */
	  description: _lib.customPropTypes.itemShorthand,

	  /** An list content can be floated left or right. */
	  floated: _propTypes["default"].oneOf(_lib.SUI.FLOATS),

	  /** Shorthand for ListHeader. */
	  header: _lib.customPropTypes.itemShorthand,

	  /** An element inside a list can be vertically aligned. */
	  verticalAlign: _propTypes["default"].oneOf(_lib.SUI.VERTICAL_ALIGNMENTS)
	} : {};
	ListContent.create = (0, _lib.createShorthandFactory)(ListContent, function (content) {
	  return {
	    content: content
	  };
	});
	var _default = ListContent;
	exports["default"] = _default;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 699 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _extends2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/extends\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _classnames = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"classnames\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _propTypes = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"prop-types\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _react = _interopRequireDefault(__webpack_require__(3));

	var _lib = __webpack_require__(256);

	/**
	 * A list item can contain a description.
	 */
	function ListDescription(props) {
	  var children = props.children,
	      className = props.className,
	      content = props.content;
	  var classes = (0, _classnames["default"])(className, 'description');
	  var rest = (0, _lib.getUnhandledProps)(ListDescription, props);
	  var ElementType = (0, _lib.getElementType)(ListDescription, props);
	  return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	    className: classes
	  }), _lib.childrenUtils.isNil(children) ? content : children);
	}

	ListDescription.handledProps = ["as", "children", "className", "content"];
	ListDescription.propTypes = process.env.NODE_ENV !== "production" ? {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Primary content. */
	  children: _propTypes["default"].node,

	  /** Additional classes. */
	  className: _propTypes["default"].string,

	  /** Shorthand for primary content. */
	  content: _lib.customPropTypes.contentShorthand
	} : {};
	ListDescription.create = (0, _lib.createShorthandFactory)(ListDescription, function (content) {
	  return {
	    content: content
	  };
	});
	var _default = ListDescription;
	exports["default"] = _default;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 700 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _extends2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/extends\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _classnames = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"classnames\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _propTypes = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"prop-types\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _react = _interopRequireDefault(__webpack_require__(3));

	var _lib = __webpack_require__(256);

	/**
	 * A list item can contain a header.
	 */
	function ListHeader(props) {
	  var children = props.children,
	      className = props.className,
	      content = props.content;
	  var classes = (0, _classnames["default"])('header', className);
	  var rest = (0, _lib.getUnhandledProps)(ListHeader, props);
	  var ElementType = (0, _lib.getElementType)(ListHeader, props);
	  return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	    className: classes
	  }), _lib.childrenUtils.isNil(children) ? content : children);
	}

	ListHeader.handledProps = ["as", "children", "className", "content"];
	ListHeader.propTypes = process.env.NODE_ENV !== "production" ? {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Primary content. */
	  children: _propTypes["default"].node,

	  /** Additional classes. */
	  className: _propTypes["default"].string,

	  /** Shorthand for primary content. */
	  content: _lib.customPropTypes.contentShorthand
	} : {};
	ListHeader.create = (0, _lib.createShorthandFactory)(ListHeader, function (content) {
	  return {
	    content: content
	  };
	});
	var _default = ListHeader;
	exports["default"] = _default;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 701 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _extends2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/extends\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _classnames = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"classnames\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _propTypes = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"prop-types\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _react = _interopRequireDefault(__webpack_require__(3));

	var _lib = __webpack_require__(256);

	var _Icon = _interopRequireDefault(__webpack_require__(541));

	/**
	 * A list item can contain an icon.
	 */
	function ListIcon(props) {
	  var className = props.className,
	      verticalAlign = props.verticalAlign;
	  var classes = (0, _classnames["default"])((0, _lib.useVerticalAlignProp)(verticalAlign), className);
	  var rest = (0, _lib.getUnhandledProps)(ListIcon, props);
	  return _react["default"].createElement(_Icon["default"], (0, _extends2["default"])({}, rest, {
	    className: classes
	  }));
	}

	ListIcon.handledProps = ["className", "verticalAlign"];
	ListIcon.propTypes = process.env.NODE_ENV !== "production" ? {
	  /** Additional classes. */
	  className: _propTypes["default"].string,

	  /** An element inside a list can be vertically aligned. */
	  verticalAlign: _propTypes["default"].oneOf(_lib.SUI.VERTICAL_ALIGNMENTS)
	} : {};
	ListIcon.create = (0, _lib.createShorthandFactory)(ListIcon, function (name) {
	  return {
	    name: name
	  };
	});
	var _default = ListIcon;
	exports["default"] = _default;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 702 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";

	var _interopRequireWildcard = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireWildcard\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _extends2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/extends\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _classCallCheck2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/classCallCheck\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _createClass2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/createClass\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/possibleConstructorReturn\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _getPrototypeOf3 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/getPrototypeOf\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _assertThisInitialized2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/assertThisInitialized\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _inherits2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/inherits\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _defineProperty2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/defineProperty\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _isPlainObject2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/isPlainObject\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _invoke2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/invoke\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _classnames = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"classnames\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _propTypes = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"prop-types\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _react = _interopRequireWildcard(__webpack_require__(3));

	var _lib = __webpack_require__(256);

	var _Image = _interopRequireDefault(__webpack_require__(639));

	var _ListContent = _interopRequireDefault(__webpack_require__(698));

	var _ListDescription = _interopRequireDefault(__webpack_require__(699));

	var _ListHeader = _interopRequireDefault(__webpack_require__(700));

	var _ListIcon = _interopRequireDefault(__webpack_require__(701));

	/**
	 * A list item can contain a set of items.
	 */
	var ListItem =
	/*#__PURE__*/
	function (_Component) {
	  (0, _inherits2["default"])(ListItem, _Component);

	  function ListItem() {
	    var _getPrototypeOf2;

	    var _this;

	    (0, _classCallCheck2["default"])(this, ListItem);

	    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    _this = (0, _possibleConstructorReturn2["default"])(this, (_getPrototypeOf2 = (0, _getPrototypeOf3["default"])(ListItem)).call.apply(_getPrototypeOf2, [this].concat(args)));
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "handleClick", function (e) {
	      var disabled = _this.props.disabled;
	      if (!disabled) (0, _invoke2["default"])(_this.props, 'onClick', e, _this.props);
	    });
	    return _this;
	  }

	  (0, _createClass2["default"])(ListItem, [{
	    key: "render",
	    value: function render() {
	      var _this$props = this.props,
	          active = _this$props.active,
	          children = _this$props.children,
	          className = _this$props.className,
	          content = _this$props.content,
	          description = _this$props.description,
	          disabled = _this$props.disabled,
	          header = _this$props.header,
	          icon = _this$props.icon,
	          image = _this$props.image,
	          value = _this$props.value;
	      var ElementType = (0, _lib.getElementType)(ListItem, this.props);
	      var classes = (0, _classnames["default"])((0, _lib.useKeyOnly)(active, 'active'), (0, _lib.useKeyOnly)(disabled, 'disabled'), (0, _lib.useKeyOnly)(ElementType !== 'li', 'item'), className);
	      var rest = (0, _lib.getUnhandledProps)(ListItem, this.props);
	      var valueProp = ElementType === 'li' ? {
	        value: value
	      } : {
	        'data-value': value
	      };

	      if (!_lib.childrenUtils.isNil(children)) {
	        return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, valueProp, {
	          role: "listitem",
	          className: classes,
	          onClick: this.handleClick
	        }, rest), children);
	      }

	      var iconElement = _ListIcon["default"].create(icon, {
	        autoGenerateKey: false
	      });

	      var imageElement = _Image["default"].create(image, {
	        autoGenerateKey: false
	      }); // See description of `content` prop for explanation about why this is necessary.


	      if (!(0, _react.isValidElement)(content) && (0, _isPlainObject2["default"])(content)) {
	        return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, valueProp, {
	          role: "listitem",
	          className: classes,
	          onClick: this.handleClick
	        }, rest), iconElement || imageElement, _ListContent["default"].create(content, {
	          autoGenerateKey: false,
	          defaultProps: {
	            header: header,
	            description: description
	          }
	        }));
	      }

	      var headerElement = _ListHeader["default"].create(header, {
	        autoGenerateKey: false
	      });

	      var descriptionElement = _ListDescription["default"].create(description, {
	        autoGenerateKey: false
	      });

	      if (iconElement || imageElement) {
	        return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, valueProp, {
	          role: "listitem",
	          className: classes,
	          onClick: this.handleClick
	        }, rest), iconElement || imageElement, (content || headerElement || descriptionElement) && _react["default"].createElement(_ListContent["default"], null, headerElement, descriptionElement, content));
	      }

	      return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, valueProp, {
	        role: "listitem",
	        className: classes,
	        onClick: this.handleClick
	      }, rest), headerElement, descriptionElement, content);
	    }
	  }]);
	  return ListItem;
	}(_react.Component);

	(0, _defineProperty2["default"])(ListItem, "handledProps", ["active", "as", "children", "className", "content", "description", "disabled", "header", "icon", "image", "onClick", "value"]);
	ListItem.propTypes = process.env.NODE_ENV !== "production" ? {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** A list item can active. */
	  active: _propTypes["default"].bool,

	  /** Primary content. */
	  children: _propTypes["default"].node,

	  /** Additional classes. */
	  className: _propTypes["default"].string,

	  /**
	   * Shorthand for primary content.
	   *
	   * Heads up!
	   *
	   * This is handled slightly differently than the typical `content` prop since
	   * the wrapping ListContent is not used when there's no icon or image.
	   *
	   * If you pass content as:
	   * - an element/literal, it's treated as the sibling node to
	   * header/description (whether wrapped in Item.Content or not).
	   * - a props object, it forces the presence of Item.Content and passes those
	   * props to it. If you pass a content prop within that props object, it
	   * will be treated as the sibling node to header/description.
	   */
	  content: _lib.customPropTypes.itemShorthand,

	  /** Shorthand for ListDescription. */
	  description: _lib.customPropTypes.itemShorthand,

	  /** A list item can disabled. */
	  disabled: _propTypes["default"].bool,

	  /** Shorthand for ListHeader. */
	  header: _lib.customPropTypes.itemShorthand,

	  /** Shorthand for ListIcon. */
	  icon: _lib.customPropTypes.every([_lib.customPropTypes.disallow(['image']), _lib.customPropTypes.itemShorthand]),

	  /** Shorthand for Image. */
	  image: _lib.customPropTypes.every([_lib.customPropTypes.disallow(['icon']), _lib.customPropTypes.itemShorthand]),

	  /** A ListItem can be clicked */
	  onClick: _propTypes["default"].func,

	  /** A value for an ordered list. */
	  value: _propTypes["default"].string
	} : {};
	ListItem.create = (0, _lib.createShorthandFactory)(ListItem, function (content) {
	  return {
	    content: content
	  };
	});
	var _default = ListItem;
	exports["default"] = _default;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 703 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _extends2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/extends\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _classnames = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"classnames\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _propTypes = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"prop-types\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _react = _interopRequireDefault(__webpack_require__(3));

	var _lib = __webpack_require__(256);

	/**
	 * A list can contain a sub list.
	 */
	function ListList(props) {
	  var children = props.children,
	      className = props.className,
	      content = props.content;
	  var rest = (0, _lib.getUnhandledProps)(ListList, props);
	  var ElementType = (0, _lib.getElementType)(ListList, props);
	  var classes = (0, _classnames["default"])((0, _lib.useKeyOnly)(ElementType !== 'ul' && ElementType !== 'ol', 'list'), className);
	  return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	    className: classes
	  }), _lib.childrenUtils.isNil(children) ? content : children);
	}

	ListList.handledProps = ["as", "children", "className", "content"];
	ListList.propTypes = process.env.NODE_ENV !== "production" ? {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Primary content. */
	  children: _propTypes["default"].node,

	  /** Additional classes. */
	  className: _propTypes["default"].string,

	  /** Shorthand for primary content. */
	  content: _lib.customPropTypes.contentShorthand
	} : {};
	var _default = ListList;
	exports["default"] = _default;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 704 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	Object.defineProperty(exports, "default", {
	  enumerable: true,
	  get: function get() {
	    return _Loader["default"];
	  }
	});

	var _Loader = _interopRequireDefault(__webpack_require__(705));

/***/ }),
/* 705 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _extends2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/extends\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _classnames = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"classnames\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _propTypes = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"prop-types\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _react = _interopRequireDefault(__webpack_require__(3));

	var _lib = __webpack_require__(256);

	/**
	 * A loader alerts a user to wait for an activity to complete.
	 * @see Dimmer
	 */
	function Loader(props) {
	  var active = props.active,
	      children = props.children,
	      className = props.className,
	      content = props.content,
	      disabled = props.disabled,
	      indeterminate = props.indeterminate,
	      inline = props.inline,
	      inverted = props.inverted,
	      size = props.size;
	  var classes = (0, _classnames["default"])('ui', size, (0, _lib.useKeyOnly)(active, 'active'), (0, _lib.useKeyOnly)(disabled, 'disabled'), (0, _lib.useKeyOnly)(indeterminate, 'indeterminate'), (0, _lib.useKeyOnly)(inverted, 'inverted'), (0, _lib.useKeyOnly)(children || content, 'text'), (0, _lib.useKeyOrValueAndKey)(inline, 'inline'), 'loader', className);
	  var rest = (0, _lib.getUnhandledProps)(Loader, props);
	  var ElementType = (0, _lib.getElementType)(Loader, props);
	  return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	    className: classes
	  }), _lib.childrenUtils.isNil(children) ? content : children);
	}

	Loader.handledProps = ["active", "as", "children", "className", "content", "disabled", "indeterminate", "inline", "inverted", "size"];
	Loader.propTypes = process.env.NODE_ENV !== "production" ? {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** A loader can be active or visible. */
	  active: _propTypes["default"].bool,

	  /** Primary content. */
	  children: _propTypes["default"].node,

	  /** Additional classes. */
	  className: _propTypes["default"].string,

	  /** Shorthand for primary content. */
	  content: _lib.customPropTypes.contentShorthand,

	  /** A loader can be disabled or hidden. */
	  disabled: _propTypes["default"].bool,

	  /** A loader can show it's unsure of how long a task will take. */
	  indeterminate: _propTypes["default"].bool,

	  /** Loaders can appear inline with content. */
	  inline: _propTypes["default"].oneOfType([_propTypes["default"].bool, _propTypes["default"].oneOf(['centered'])]),

	  /** Loaders can have their colors inverted. */
	  inverted: _propTypes["default"].bool,

	  /** Loaders can have different sizes. */
	  size: _propTypes["default"].oneOf(_lib.SUI.SIZES)
	} : {};
	var _default = Loader;
	exports["default"] = _default;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 706 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	Object.defineProperty(exports, "default", {
	  enumerable: true,
	  get: function get() {
	    return _Placeholder["default"];
	  }
	});

	var _Placeholder = _interopRequireDefault(__webpack_require__(707));

/***/ }),
/* 707 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _extends2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/extends\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _classnames = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"classnames\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _propTypes = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"prop-types\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _react = _interopRequireDefault(__webpack_require__(3));

	var _lib = __webpack_require__(256);

	var _PlaceholderHeader = _interopRequireDefault(__webpack_require__(708));

	var _PlaceholderImage = _interopRequireDefault(__webpack_require__(709));

	var _PlaceholderLine = _interopRequireDefault(__webpack_require__(710));

	var _PlaceholderParagraph = _interopRequireDefault(__webpack_require__(711));

	/**
	 * A placeholder is used to reserve splace for content that soon will appear in a layout.
	 */
	function Placeholder(props) {
	  var children = props.children,
	      className = props.className,
	      content = props.content,
	      fluid = props.fluid,
	      inverted = props.inverted;
	  var classes = (0, _classnames["default"])('ui', (0, _lib.useKeyOnly)(fluid, 'fluid'), (0, _lib.useKeyOnly)(inverted, 'inverted'), 'placeholder', className);
	  var rest = (0, _lib.getUnhandledProps)(Placeholder, props);
	  var ElementType = (0, _lib.getElementType)(Placeholder, props);
	  return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	    className: classes
	  }), _lib.childrenUtils.isNil(children) ? content : children);
	}

	Placeholder.handledProps = ["as", "children", "className", "content", "fluid", "inverted"];
	Placeholder.propTypes = process.env.NODE_ENV !== "production" ? {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Primary content. */
	  children: _propTypes["default"].node,

	  /** Additional classes. */
	  className: _propTypes["default"].string,

	  /** Shorthand for primary content. */
	  content: _lib.customPropTypes.contentShorthand,

	  /** A fluid placeholder takes up the width of its container. */
	  fluid: _propTypes["default"].bool,

	  /** A placeholder can have their colors inverted. */
	  inverted: _propTypes["default"].bool
	} : {};
	Placeholder.Header = _PlaceholderHeader["default"];
	Placeholder.Image = _PlaceholderImage["default"];
	Placeholder.Line = _PlaceholderLine["default"];
	Placeholder.Paragraph = _PlaceholderParagraph["default"];
	var _default = Placeholder;
	exports["default"] = _default;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 708 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _extends2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/extends\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _classnames = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"classnames\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _propTypes = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"prop-types\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _react = _interopRequireDefault(__webpack_require__(3));

	var _lib = __webpack_require__(256);

	/**
	 * A placeholder can contain a header.
	 */
	function PlaceholderHeader(props) {
	  var children = props.children,
	      className = props.className,
	      content = props.content,
	      image = props.image;
	  var classes = (0, _classnames["default"])((0, _lib.useKeyOnly)(image, 'image'), 'header', className);
	  var rest = (0, _lib.getUnhandledProps)(PlaceholderHeader, props);
	  var ElementType = (0, _lib.getElementType)(PlaceholderHeader, props);
	  return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	    className: classes
	  }), _lib.childrenUtils.isNil(children) ? content : children);
	}

	PlaceholderHeader.handledProps = ["as", "children", "className", "content", "image"];
	PlaceholderHeader.propTypes = process.env.NODE_ENV !== "production" ? {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Primary content. */
	  children: _propTypes["default"].node,

	  /** Additional classes. */
	  className: _propTypes["default"].string,

	  /** Shorthand for primary content. */
	  content: _lib.customPropTypes.contentShorthand,

	  /** A placeholder can contain an image. */
	  image: _propTypes["default"].bool
	} : {};
	var _default = PlaceholderHeader;
	exports["default"] = _default;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 709 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _extends2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/extends\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _classnames = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"classnames\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _propTypes = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"prop-types\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _react = _interopRequireDefault(__webpack_require__(3));

	var _lib = __webpack_require__(256);

	/**
	 * A placeholder can contain an image.
	 */
	function PlaceholderImage(props) {
	  var className = props.className,
	      square = props.square,
	      rectangular = props.rectangular;
	  var classes = (0, _classnames["default"])((0, _lib.useKeyOnly)(square, 'square'), (0, _lib.useKeyOnly)(rectangular, 'rectangular'), 'image', className);
	  var rest = (0, _lib.getUnhandledProps)(PlaceholderImage, props);
	  var ElementType = (0, _lib.getElementType)(PlaceholderImage, props);
	  return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	    className: classes
	  }));
	}

	PlaceholderImage.handledProps = ["as", "className", "rectangular", "square"];
	PlaceholderImage.propTypes = process.env.NODE_ENV !== "production" ? {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Additional classes. */
	  className: _propTypes["default"].string,

	  /** An image can modify size correctly with responsive styles. */
	  square: _lib.customPropTypes.every([_lib.customPropTypes.disallow(['rectangular']), _propTypes["default"].bool]),

	  /** An image can modify size correctly with responsive styles. */
	  rectangular: _lib.customPropTypes.every([_lib.customPropTypes.disallow(['square']), _propTypes["default"].bool])
	} : {};
	var _default = PlaceholderImage;
	exports["default"] = _default;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 710 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _extends2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/extends\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _classnames = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"classnames\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _propTypes = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"prop-types\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _react = _interopRequireDefault(__webpack_require__(3));

	var _lib = __webpack_require__(256);

	/**
	 * A placeholder can contain have lines of text.
	 */
	function PlaceholderLine(props) {
	  var className = props.className,
	      length = props.length;
	  var classes = (0, _classnames["default"])('line', length, className);
	  var rest = (0, _lib.getUnhandledProps)(PlaceholderLine, props);
	  var ElementType = (0, _lib.getElementType)(PlaceholderLine, props);
	  return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	    className: classes
	  }));
	}

	PlaceholderLine.handledProps = ["as", "className", "length"];
	PlaceholderLine.propTypes = process.env.NODE_ENV !== "production" ? {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Additional classes. */
	  className: _propTypes["default"].string,

	  /** A line can specify how long its contents should appear. */
	  length: _propTypes["default"].oneOf(['full', 'very long', 'long', 'medium', 'short', 'very short'])
	} : {};
	var _default = PlaceholderLine;
	exports["default"] = _default;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 711 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _extends2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/extends\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _classnames = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"classnames\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _propTypes = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"prop-types\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _react = _interopRequireDefault(__webpack_require__(3));

	var _lib = __webpack_require__(256);

	/**
	 * A placeholder can contain a paragraph.
	 */
	function PlaceholderParagraph(props) {
	  var children = props.children,
	      className = props.className,
	      content = props.content;
	  var classes = (0, _classnames["default"])('paragraph', className);
	  var rest = (0, _lib.getUnhandledProps)(PlaceholderParagraph, props);
	  var ElementType = (0, _lib.getElementType)(PlaceholderParagraph, props);
	  return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	    className: classes
	  }), _lib.childrenUtils.isNil(children) ? content : children);
	}

	PlaceholderParagraph.handledProps = ["as", "children", "className", "content"];
	PlaceholderParagraph.propTypes = process.env.NODE_ENV !== "production" ? {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Primary content. */
	  children: _propTypes["default"].node,

	  /** Additional classes. */
	  className: _propTypes["default"].string,

	  /** Shorthand for primary content. */
	  content: _lib.customPropTypes.contentShorthand
	} : {};
	var _default = PlaceholderParagraph;
	exports["default"] = _default;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 712 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	Object.defineProperty(exports, "default", {
	  enumerable: true,
	  get: function get() {
	    return _Rail["default"];
	  }
	});

	var _Rail = _interopRequireDefault(__webpack_require__(713));

/***/ }),
/* 713 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _extends2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/extends\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _without2 = _interopRequireDefault(__webpack_require__(542));

	var _classnames = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"classnames\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _propTypes = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"prop-types\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _react = _interopRequireDefault(__webpack_require__(3));

	var _lib = __webpack_require__(256);

	/**
	 * A rail is used to show accompanying content outside the boundaries of the main view of a site.
	 */
	function Rail(props) {
	  var attached = props.attached,
	      children = props.children,
	      className = props.className,
	      close = props.close,
	      content = props.content,
	      dividing = props.dividing,
	      internal = props.internal,
	      position = props.position,
	      size = props.size;
	  var classes = (0, _classnames["default"])('ui', position, size, (0, _lib.useKeyOnly)(attached, 'attached'), (0, _lib.useKeyOnly)(dividing, 'dividing'), (0, _lib.useKeyOnly)(internal, 'internal'), (0, _lib.useKeyOrValueAndKey)(close, 'close'), 'rail', className);
	  var rest = (0, _lib.getUnhandledProps)(Rail, props);
	  var ElementType = (0, _lib.getElementType)(Rail, props);
	  return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	    className: classes
	  }), _lib.childrenUtils.isNil(children) ? content : children);
	}

	Rail.handledProps = ["as", "attached", "children", "className", "close", "content", "dividing", "internal", "position", "size"];
	Rail.propTypes = process.env.NODE_ENV !== "production" ? {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** A rail can appear attached to the main viewport. */
	  attached: _propTypes["default"].bool,

	  /** Primary content. */
	  children: _propTypes["default"].node,

	  /** Additional classes. */
	  className: _propTypes["default"].string,

	  /** A rail can appear closer to the main viewport. */
	  close: _propTypes["default"].oneOfType([_propTypes["default"].bool, _propTypes["default"].oneOf(['very'])]),

	  /** Shorthand for primary content. */
	  content: _lib.customPropTypes.contentShorthand,

	  /** A rail can create a division between itself and a container. */
	  dividing: _propTypes["default"].bool,

	  /** A rail can attach itself to the inside of a container. */
	  internal: _propTypes["default"].bool,

	  /** A rail can be presented on the left or right side of a container. */
	  position: _propTypes["default"].oneOf(_lib.SUI.FLOATS).isRequired,

	  /** A rail can have different sizes. */
	  size: _propTypes["default"].oneOf((0, _without2["default"])(_lib.SUI.SIZES, 'medium'))
	} : {};
	var _default = Rail;
	exports["default"] = _default;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 714 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	Object.defineProperty(exports, "default", {
	  enumerable: true,
	  get: function get() {
	    return _Reveal["default"];
	  }
	});

	var _Reveal = _interopRequireDefault(__webpack_require__(715));

/***/ }),
/* 715 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _extends2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/extends\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _classnames = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"classnames\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _propTypes = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"prop-types\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _react = _interopRequireDefault(__webpack_require__(3));

	var _lib = __webpack_require__(256);

	var _RevealContent = _interopRequireDefault(__webpack_require__(716));

	/**
	 * A reveal displays additional content in place of previous content when activated.
	 */
	function Reveal(props) {
	  var active = props.active,
	      animated = props.animated,
	      children = props.children,
	      className = props.className,
	      content = props.content,
	      disabled = props.disabled,
	      instant = props.instant;
	  var classes = (0, _classnames["default"])('ui', animated, (0, _lib.useKeyOnly)(active, 'active'), (0, _lib.useKeyOnly)(disabled, 'disabled'), (0, _lib.useKeyOnly)(instant, 'instant'), 'reveal', className);
	  var rest = (0, _lib.getUnhandledProps)(Reveal, props);
	  var ElementType = (0, _lib.getElementType)(Reveal, props);
	  return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	    className: classes
	  }), _lib.childrenUtils.isNil(children) ? content : children);
	}

	Reveal.handledProps = ["active", "animated", "as", "children", "className", "content", "disabled", "instant"];
	Reveal.propTypes = process.env.NODE_ENV !== "production" ? {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** An active reveal displays its hidden content. */
	  active: _propTypes["default"].bool,

	  /** An animation name that will be applied to Reveal. */
	  animated: _propTypes["default"].oneOf(['fade', 'small fade', 'move', 'move right', 'move up', 'move down', 'rotate', 'rotate left']),

	  /** Primary content. */
	  children: _propTypes["default"].node,

	  /** Additional classes. */
	  className: _propTypes["default"].string,

	  /** Shorthand for primary content. */
	  content: _lib.customPropTypes.contentShorthand,

	  /** A disabled reveal will not animate when hovered. */
	  disabled: _propTypes["default"].bool,

	  /** An element can show its content without delay. */
	  instant: _propTypes["default"].bool
	} : {};
	Reveal.Content = _RevealContent["default"];
	var _default = Reveal;
	exports["default"] = _default;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 716 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _extends2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/extends\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _classnames = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"classnames\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _propTypes = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"prop-types\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _react = _interopRequireDefault(__webpack_require__(3));

	var _lib = __webpack_require__(256);

	/**
	 * A content sub-component for the Reveal.
	 */
	function RevealContent(props) {
	  var children = props.children,
	      className = props.className,
	      content = props.content,
	      hidden = props.hidden,
	      visible = props.visible;
	  var classes = (0, _classnames["default"])('ui', (0, _lib.useKeyOnly)(hidden, 'hidden'), (0, _lib.useKeyOnly)(visible, 'visible'), 'content', className);
	  var rest = (0, _lib.getUnhandledProps)(RevealContent, props);
	  var ElementType = (0, _lib.getElementType)(RevealContent, props);
	  return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	    className: classes
	  }), _lib.childrenUtils.isNil(children) ? content : children);
	}

	RevealContent.handledProps = ["as", "children", "className", "content", "hidden", "visible"];
	RevealContent.propTypes = process.env.NODE_ENV !== "production" ? {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Primary content. */
	  children: _propTypes["default"].node,

	  /** Additional classes. */
	  className: _propTypes["default"].string,

	  /** Shorthand for primary content. */
	  content: _lib.customPropTypes.contentShorthand,

	  /** A reveal may contain content that is visible before interaction. */
	  hidden: _propTypes["default"].bool,

	  /** A reveal may contain content that is hidden before user interaction. */
	  visible: _propTypes["default"].bool
	} : {};
	var _default = RevealContent;
	exports["default"] = _default;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 717 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	Object.defineProperty(exports, "default", {
	  enumerable: true,
	  get: function get() {
	    return _Segment["default"];
	  }
	});

	var _Segment = _interopRequireDefault(__webpack_require__(718));

/***/ }),
/* 718 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _extends2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/extends\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _without2 = _interopRequireDefault(__webpack_require__(542));

	var _classnames = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"classnames\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _propTypes = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"prop-types\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _react = _interopRequireDefault(__webpack_require__(3));

	var _lib = __webpack_require__(256);

	var _SegmentGroup = _interopRequireDefault(__webpack_require__(719));

	var _SegmentInline = _interopRequireDefault(__webpack_require__(720));

	/**
	 * A segment is used to create a grouping of related content.
	 */
	function Segment(props) {
	  var attached = props.attached,
	      basic = props.basic,
	      children = props.children,
	      circular = props.circular,
	      className = props.className,
	      clearing = props.clearing,
	      color = props.color,
	      compact = props.compact,
	      content = props.content,
	      disabled = props.disabled,
	      floated = props.floated,
	      inverted = props.inverted,
	      loading = props.loading,
	      placeholder = props.placeholder,
	      padded = props.padded,
	      piled = props.piled,
	      raised = props.raised,
	      secondary = props.secondary,
	      size = props.size,
	      stacked = props.stacked,
	      tertiary = props.tertiary,
	      textAlign = props.textAlign,
	      vertical = props.vertical;
	  var classes = (0, _classnames["default"])('ui', color, size, (0, _lib.useKeyOnly)(basic, 'basic'), (0, _lib.useKeyOnly)(circular, 'circular'), (0, _lib.useKeyOnly)(clearing, 'clearing'), (0, _lib.useKeyOnly)(compact, 'compact'), (0, _lib.useKeyOnly)(disabled, 'disabled'), (0, _lib.useKeyOnly)(inverted, 'inverted'), (0, _lib.useKeyOnly)(loading, 'loading'), (0, _lib.useKeyOnly)(placeholder, 'placeholder'), (0, _lib.useKeyOnly)(piled, 'piled'), (0, _lib.useKeyOnly)(raised, 'raised'), (0, _lib.useKeyOnly)(secondary, 'secondary'), (0, _lib.useKeyOnly)(stacked, 'stacked'), (0, _lib.useKeyOnly)(tertiary, 'tertiary'), (0, _lib.useKeyOnly)(vertical, 'vertical'), (0, _lib.useKeyOrValueAndKey)(attached, 'attached'), (0, _lib.useKeyOrValueAndKey)(padded, 'padded'), (0, _lib.useTextAlignProp)(textAlign), (0, _lib.useValueAndKey)(floated, 'floated'), 'segment', className);
	  var rest = (0, _lib.getUnhandledProps)(Segment, props);
	  var ElementType = (0, _lib.getElementType)(Segment, props);
	  return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	    className: classes
	  }), _lib.childrenUtils.isNil(children) ? content : children);
	}

	Segment.handledProps = ["as", "attached", "basic", "children", "circular", "className", "clearing", "color", "compact", "content", "disabled", "floated", "inverted", "loading", "padded", "piled", "placeholder", "raised", "secondary", "size", "stacked", "tertiary", "textAlign", "vertical"];
	Segment.Group = _SegmentGroup["default"];
	Segment.Inline = _SegmentInline["default"];
	Segment.propTypes = process.env.NODE_ENV !== "production" ? {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Attach segment to other content, like a header. */
	  attached: _propTypes["default"].oneOfType([_propTypes["default"].bool, _propTypes["default"].oneOf(['top', 'bottom'])]),

	  /** A basic segment has no special formatting. */
	  basic: _propTypes["default"].bool,

	  /** Primary content. */
	  children: _propTypes["default"].node,

	  /** A segment can be circular. */
	  circular: _propTypes["default"].bool,

	  /** Additional classes. */
	  className: _propTypes["default"].string,

	  /** A segment can clear floated content. */
	  clearing: _propTypes["default"].bool,

	  /** Segment can be colored. */
	  color: _propTypes["default"].oneOf(_lib.SUI.COLORS),

	  /** A segment may take up only as much space as is necessary. */
	  compact: _propTypes["default"].bool,

	  /** Shorthand for primary content. */
	  content: _lib.customPropTypes.contentShorthand,

	  /** A segment may show its content is disabled. */
	  disabled: _propTypes["default"].bool,

	  /** Segment content can be floated to the left or right. */
	  floated: _propTypes["default"].oneOf(_lib.SUI.FLOATS),

	  /** A segment can have its colors inverted for contrast. */
	  inverted: _propTypes["default"].bool,

	  /** A segment may show its content is being loaded. */
	  loading: _propTypes["default"].bool,

	  /** A segment can increase its padding. */
	  padded: _propTypes["default"].oneOfType([_propTypes["default"].bool, _propTypes["default"].oneOf(['very'])]),

	  /** A segment can be used to reserve space for conditionally displayed content. */
	  placeholder: _propTypes["default"].bool,

	  /** Formatted to look like a pile of pages. */
	  piled: _propTypes["default"].bool,

	  /** A segment may be formatted to raise above the page. */
	  raised: _propTypes["default"].bool,

	  /** A segment can be formatted to appear less noticeable. */
	  secondary: _propTypes["default"].bool,

	  /** A segment can have different sizes. */
	  size: _propTypes["default"].oneOf((0, _without2["default"])(_lib.SUI.SIZES, 'medium')),

	  /** Formatted to show it contains multiple pages. */
	  stacked: _propTypes["default"].bool,

	  /** A segment can be formatted to appear even less noticeable. */
	  tertiary: _propTypes["default"].bool,

	  /** Formats content to be aligned as part of a vertical group. */
	  textAlign: _propTypes["default"].oneOf((0, _without2["default"])(_lib.SUI.TEXT_ALIGNMENTS, 'justified')),

	  /** Formats content to be aligned vertically. */
	  vertical: _propTypes["default"].bool
	} : {};
	var _default = Segment;
	exports["default"] = _default;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 719 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _extends2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/extends\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _without2 = _interopRequireDefault(__webpack_require__(542));

	var _classnames = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"classnames\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _propTypes = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"prop-types\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _react = _interopRequireDefault(__webpack_require__(3));

	var _lib = __webpack_require__(256);

	/**
	 * A group of segments can be formatted to appear together.
	 */
	function SegmentGroup(props) {
	  var children = props.children,
	      className = props.className,
	      compact = props.compact,
	      content = props.content,
	      horizontal = props.horizontal,
	      piled = props.piled,
	      raised = props.raised,
	      size = props.size,
	      stacked = props.stacked;
	  var classes = (0, _classnames["default"])('ui', size, (0, _lib.useKeyOnly)(compact, 'compact'), (0, _lib.useKeyOnly)(horizontal, 'horizontal'), (0, _lib.useKeyOnly)(piled, 'piled'), (0, _lib.useKeyOnly)(raised, 'raised'), (0, _lib.useKeyOnly)(stacked, 'stacked'), 'segments', className);
	  var rest = (0, _lib.getUnhandledProps)(SegmentGroup, props);
	  var ElementType = (0, _lib.getElementType)(SegmentGroup, props);
	  return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	    className: classes
	  }), _lib.childrenUtils.isNil(children) ? content : children);
	}

	SegmentGroup.handledProps = ["as", "children", "className", "compact", "content", "horizontal", "piled", "raised", "size", "stacked"];
	SegmentGroup.propTypes = process.env.NODE_ENV !== "production" ? {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Primary content. */
	  children: _propTypes["default"].node,

	  /** Additional classes. */
	  className: _propTypes["default"].string,

	  /** A segment may take up only as much space as is necessary. */
	  compact: _propTypes["default"].bool,

	  /** Shorthand for primary content. */
	  content: _lib.customPropTypes.contentShorthand,

	  /** Formats content to be aligned horizontally. */
	  horizontal: _propTypes["default"].bool,

	  /** Formatted to look like a pile of pages. */
	  piled: _propTypes["default"].bool,

	  /** A segment group may be formatted to raise above the page. */
	  raised: _propTypes["default"].bool,

	  /** A segment group can have different sizes. */
	  size: _propTypes["default"].oneOf((0, _without2["default"])(_lib.SUI.SIZES, 'medium')),

	  /** Formatted to show it contains multiple pages. */
	  stacked: _propTypes["default"].bool
	} : {};
	var _default = SegmentGroup;
	exports["default"] = _default;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 720 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _extends2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/extends\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _classnames = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"classnames\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _propTypes = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"prop-types\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _react = _interopRequireDefault(__webpack_require__(3));

	var _lib = __webpack_require__(256);

	/**
	 * A placeholder segment can be inline.
	 */
	function SegmentInline(props) {
	  var children = props.children,
	      className = props.className,
	      content = props.content;
	  var classes = (0, _classnames["default"])('inline', className);
	  var rest = (0, _lib.getUnhandledProps)(SegmentInline, props);
	  var ElementType = (0, _lib.getElementType)(SegmentInline, props);
	  return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	    className: classes
	  }), _lib.childrenUtils.isNil(children) ? content : children);
	}

	SegmentInline.handledProps = ["as", "children", "className", "content"];
	SegmentInline.propTypes = process.env.NODE_ENV !== "production" ? {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Primary content. */
	  children: _propTypes["default"].node,

	  /** Additional classes. */
	  className: _propTypes["default"].string,

	  /** Shorthand for primary content. */
	  content: _lib.customPropTypes.contentShorthand
	} : {};
	var _default = SegmentInline;
	exports["default"] = _default;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 721 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	Object.defineProperty(exports, "default", {
	  enumerable: true,
	  get: function get() {
	    return _Step["default"];
	  }
	});

	var _Step = _interopRequireDefault(__webpack_require__(722));

/***/ }),
/* 722 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";

	var _interopRequireWildcard = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireWildcard\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _extends2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/extends\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _classCallCheck2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/classCallCheck\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _createClass2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/createClass\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/possibleConstructorReturn\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _getPrototypeOf3 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/getPrototypeOf\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _assertThisInitialized2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/assertThisInitialized\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _inherits2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/inherits\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _defineProperty2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/defineProperty\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _invoke2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/invoke\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _classnames = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"classnames\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _propTypes = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"prop-types\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _react = _interopRequireWildcard(__webpack_require__(3));

	var _lib = __webpack_require__(256);

	var _Icon = _interopRequireDefault(__webpack_require__(566));

	var _StepContent = _interopRequireDefault(__webpack_require__(723));

	var _StepDescription = _interopRequireDefault(__webpack_require__(724));

	var _StepGroup = _interopRequireDefault(__webpack_require__(726));

	var _StepTitle = _interopRequireDefault(__webpack_require__(725));

	/**
	 * A step shows the completion status of an activity in a series of activities.
	 */
	var Step =
	/*#__PURE__*/
	function (_Component) {
	  (0, _inherits2["default"])(Step, _Component);

	  function Step() {
	    var _getPrototypeOf2;

	    var _this;

	    (0, _classCallCheck2["default"])(this, Step);

	    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    _this = (0, _possibleConstructorReturn2["default"])(this, (_getPrototypeOf2 = (0, _getPrototypeOf3["default"])(Step)).call.apply(_getPrototypeOf2, [this].concat(args)));
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "computeElementType", function () {
	      var onClick = _this.props.onClick;
	      if (onClick) return 'a';
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "handleClick", function (e) {
	      var disabled = _this.props.disabled;
	      if (!disabled) (0, _invoke2["default"])(_this.props, 'onClick', e, _this.props);
	    });
	    return _this;
	  }

	  (0, _createClass2["default"])(Step, [{
	    key: "render",
	    value: function render() {
	      var _this$props = this.props,
	          active = _this$props.active,
	          children = _this$props.children,
	          className = _this$props.className,
	          completed = _this$props.completed,
	          content = _this$props.content,
	          description = _this$props.description,
	          disabled = _this$props.disabled,
	          href = _this$props.href,
	          icon = _this$props.icon,
	          link = _this$props.link,
	          title = _this$props.title;
	      var classes = (0, _classnames["default"])((0, _lib.useKeyOnly)(active, 'active'), (0, _lib.useKeyOnly)(completed, 'completed'), (0, _lib.useKeyOnly)(disabled, 'disabled'), (0, _lib.useKeyOnly)(link, 'link'), 'step', className);
	      var rest = (0, _lib.getUnhandledProps)(Step, this.props);
	      var ElementType = (0, _lib.getElementType)(Step, this.props, this.computeElementType);

	      if (!_lib.childrenUtils.isNil(children)) {
	        return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	          className: classes,
	          href: href,
	          onClick: this.handleClick
	        }), children);
	      }

	      if (!_lib.childrenUtils.isNil(content)) {
	        return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	          className: classes,
	          href: href,
	          onClick: this.handleClick
	        }), content);
	      }

	      return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	        className: classes,
	        href: href,
	        onClick: this.handleClick
	      }), _Icon["default"].create(icon, {
	        autoGenerateKey: false
	      }), _StepContent["default"].create({
	        description: description,
	        title: title
	      }, {
	        autoGenerateKey: false
	      }));
	    }
	  }]);
	  return Step;
	}(_react.Component);

	(0, _defineProperty2["default"])(Step, "Content", _StepContent["default"]);
	(0, _defineProperty2["default"])(Step, "Description", _StepDescription["default"]);
	(0, _defineProperty2["default"])(Step, "Group", _StepGroup["default"]);
	(0, _defineProperty2["default"])(Step, "Title", _StepTitle["default"]);
	(0, _defineProperty2["default"])(Step, "handledProps", ["active", "as", "children", "className", "completed", "content", "description", "disabled", "href", "icon", "link", "onClick", "ordered", "title"]);
	Step.propTypes = process.env.NODE_ENV !== "production" ? {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** A step can be highlighted as active. */
	  active: _propTypes["default"].bool,

	  /** Primary content. */
	  children: _propTypes["default"].node,

	  /** Additional classes. */
	  className: _propTypes["default"].string,

	  /** A step can show that a user has completed it. */
	  completed: _propTypes["default"].bool,

	  /** Shorthand for primary content. */
	  content: _lib.customPropTypes.contentShorthand,

	  /** Shorthand for StepDescription. */
	  description: _lib.customPropTypes.itemShorthand,

	  /** Show that the Loader is inactive. */
	  disabled: _propTypes["default"].bool,

	  /** Render as an `a` tag instead of a `div` and adds the href attribute. */
	  href: _propTypes["default"].string,

	  /** Shorthand for Icon. */
	  icon: _lib.customPropTypes.itemShorthand,

	  /** A step can be link. */
	  link: _propTypes["default"].bool,

	  /**
	   * Called on click. When passed, the component will render as an `a`
	   * tag by default instead of a `div`.
	   *
	   * @param {SyntheticEvent} event - React's original SyntheticEvent.
	   * @param {object} data - All props.
	   */
	  onClick: _propTypes["default"].func,

	  /** A step can show a ordered sequence of steps. Passed from StepGroup. */
	  ordered: _propTypes["default"].bool,

	  /** Shorthand for StepTitle. */
	  title: _lib.customPropTypes.itemShorthand
	} : {};
	Step.create = (0, _lib.createShorthandFactory)(Step, function (content) {
	  return {
	    content: content
	  };
	});
	var _default = Step;
	exports["default"] = _default;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 723 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _extends2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/extends\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _classnames = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"classnames\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _propTypes = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"prop-types\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _react = _interopRequireDefault(__webpack_require__(3));

	var _lib = __webpack_require__(256);

	var _StepDescription = _interopRequireDefault(__webpack_require__(724));

	var _StepTitle = _interopRequireDefault(__webpack_require__(725));

	/**
	 * A step can contain a content.
	 */
	function StepContent(props) {
	  var children = props.children,
	      className = props.className,
	      content = props.content,
	      description = props.description,
	      title = props.title;
	  var classes = (0, _classnames["default"])('content', className);
	  var rest = (0, _lib.getUnhandledProps)(StepContent, props);
	  var ElementType = (0, _lib.getElementType)(StepContent, props);

	  if (!_lib.childrenUtils.isNil(children)) {
	    return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	      className: classes
	    }), children);
	  }

	  if (!_lib.childrenUtils.isNil(content)) {
	    return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	      className: classes
	    }), content);
	  }

	  return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	    className: classes
	  }), _StepTitle["default"].create(title, {
	    autoGenerateKey: false
	  }), _StepDescription["default"].create(description, {
	    autoGenerateKey: false
	  }));
	}

	StepContent.handledProps = ["as", "children", "className", "content", "description", "title"];
	StepContent.propTypes = process.env.NODE_ENV !== "production" ? {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Primary content. */
	  children: _propTypes["default"].node,

	  /** Additional classes. */
	  className: _propTypes["default"].string,

	  /** Shorthand for primary content. */
	  content: _lib.customPropTypes.contentShorthand,

	  /** Shorthand for StepDescription. */
	  description: _lib.customPropTypes.itemShorthand,

	  /** Shorthand for StepTitle. */
	  title: _lib.customPropTypes.itemShorthand
	} : {};
	StepContent.create = (0, _lib.createShorthandFactory)(StepContent, function (content) {
	  return {
	    content: content
	  };
	});
	var _default = StepContent;
	exports["default"] = _default;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 724 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _extends2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/extends\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _classnames = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"classnames\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _propTypes = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"prop-types\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _react = _interopRequireDefault(__webpack_require__(3));

	var _lib = __webpack_require__(256);

	function StepDescription(props) {
	  var children = props.children,
	      className = props.className,
	      content = props.content;
	  var classes = (0, _classnames["default"])('description', className);
	  var rest = (0, _lib.getUnhandledProps)(StepDescription, props);
	  var ElementType = (0, _lib.getElementType)(StepDescription, props);
	  return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	    className: classes
	  }), _lib.childrenUtils.isNil(children) ? content : children);
	}

	StepDescription.handledProps = ["as", "children", "className", "content"];
	StepDescription.propTypes = process.env.NODE_ENV !== "production" ? {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Primary content. */
	  children: _propTypes["default"].node,

	  /** Additional classes. */
	  className: _propTypes["default"].string,

	  /** Shorthand for primary content. */
	  content: _lib.customPropTypes.contentShorthand
	} : {};
	StepDescription.create = (0, _lib.createShorthandFactory)(StepDescription, function (content) {
	  return {
	    content: content
	  };
	});
	var _default = StepDescription;
	exports["default"] = _default;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 725 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _extends2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/extends\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _classnames = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"classnames\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _propTypes = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"prop-types\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _react = _interopRequireDefault(__webpack_require__(3));

	var _lib = __webpack_require__(256);

	/**
	 * A step can contain a title.
	 */
	function StepTitle(props) {
	  var children = props.children,
	      className = props.className,
	      content = props.content;
	  var classes = (0, _classnames["default"])('title', className);
	  var rest = (0, _lib.getUnhandledProps)(StepTitle, props);
	  var ElementType = (0, _lib.getElementType)(StepTitle, props);
	  return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	    className: classes
	  }), _lib.childrenUtils.isNil(children) ? content : children);
	}

	StepTitle.handledProps = ["as", "children", "className", "content"];
	StepTitle.propTypes = process.env.NODE_ENV !== "production" ? {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Primary content. */
	  children: _propTypes["default"].node,

	  /** Additional classes. */
	  className: _propTypes["default"].string,

	  /** Shorthand for primary content. */
	  content: _lib.customPropTypes.contentShorthand
	} : {};
	StepTitle.create = (0, _lib.createShorthandFactory)(StepTitle, function (content) {
	  return {
	    content: content
	  };
	});
	var _default = StepTitle;
	exports["default"] = _default;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 726 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _toConsumableArray2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/toConsumableArray\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _extends2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/extends\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _values2 = _interopRequireDefault(__webpack_require__(511));

	var _keys2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/keys\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _without2 = _interopRequireDefault(__webpack_require__(542));

	var _map2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/map\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _pickBy2 = _interopRequireDefault(__webpack_require__(727));

	var _classnames = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"classnames\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _propTypes = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"prop-types\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _react = _interopRequireDefault(__webpack_require__(3));

	var _lib = __webpack_require__(256);

	var _Step = _interopRequireDefault(__webpack_require__(722));

	var numberMap = process.env.NODE_ENV !== "production" ? (0, _pickBy2["default"])(_lib.numberToWordMap, function (val, key) {
	  return key <= 8;
	}) : {};
	/**
	 * A set of steps.
	 */

	function StepGroup(props) {
	  var attached = props.attached,
	      children = props.children,
	      className = props.className,
	      content = props.content,
	      fluid = props.fluid,
	      items = props.items,
	      ordered = props.ordered,
	      size = props.size,
	      stackable = props.stackable,
	      unstackable = props.unstackable,
	      vertical = props.vertical,
	      widths = props.widths;
	  var classes = (0, _classnames["default"])('ui', size, (0, _lib.useKeyOnly)(fluid, 'fluid'), (0, _lib.useKeyOnly)(ordered, 'ordered'), (0, _lib.useKeyOnly)(unstackable, 'unstackable'), (0, _lib.useKeyOnly)(vertical, 'vertical'), (0, _lib.useKeyOrValueAndKey)(attached, 'attached'), (0, _lib.useValueAndKey)(stackable, 'stackable'), (0, _lib.useWidthProp)(widths), 'steps', className);
	  var rest = (0, _lib.getUnhandledProps)(StepGroup, props);
	  var ElementType = (0, _lib.getElementType)(StepGroup, props);

	  if (!_lib.childrenUtils.isNil(children)) {
	    return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	      className: classes
	    }), children);
	  }

	  if (!_lib.childrenUtils.isNil(content)) {
	    return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	      className: classes
	    }), content);
	  }

	  return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	    className: classes
	  }), (0, _map2["default"])(items, function (item) {
	    return _Step["default"].create(item);
	  }));
	}

	StepGroup.handledProps = ["as", "attached", "children", "className", "content", "fluid", "items", "ordered", "size", "stackable", "unstackable", "vertical", "widths"];
	StepGroup.propTypes = process.env.NODE_ENV !== "production" ? {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Steps can be attached to other elements. */
	  attached: _propTypes["default"].oneOfType([_propTypes["default"].bool, _propTypes["default"].oneOf(['top', 'bottom'])]),

	  /** Primary content. */
	  children: _propTypes["default"].node,

	  /** Additional classes. */
	  className: _propTypes["default"].string,

	  /** Shorthand for primary content. */
	  content: _lib.customPropTypes.contentShorthand,

	  /** A fluid step takes up the width of its container. */
	  fluid: _propTypes["default"].bool,

	  /** Shorthand array of props for Step. */
	  items: _lib.customPropTypes.collectionShorthand,

	  /** A step can show a ordered sequence of steps. */
	  ordered: _propTypes["default"].bool,

	  /** Steps can have different sizes. */
	  size: _propTypes["default"].oneOf((0, _without2["default"])(_lib.SUI.SIZES, 'medium')),

	  /** A step can stack vertically only on smaller screens. */
	  stackable: _propTypes["default"].oneOf(['tablet']),

	  /** A step can prevent itself from stacking on mobile. */
	  unstackable: _propTypes["default"].bool,

	  /** A step can be displayed stacked vertically. */
	  vertical: _propTypes["default"].bool,

	  /** Steps can be divided evenly inside their parent. */
	  widths: _propTypes["default"].oneOf([].concat((0, _toConsumableArray2["default"])((0, _keys2["default"])(numberMap)), (0, _toConsumableArray2["default"])((0, _keys2["default"])(numberMap).map(Number)), (0, _toConsumableArray2["default"])((0, _values2["default"])(numberMap))))
	} : {};
	var _default = StepGroup;
	exports["default"] = _default;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 727 */
/***/ (function(module, exports, __webpack_require__) {

	var arrayMap = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"./_arrayMap\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())),
	    baseIteratee = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"./_baseIteratee\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())),
	    basePickBy = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"./_basePickBy\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())),
	    getAllKeysIn = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"./_getAllKeysIn\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	/**
	 * Creates an object composed of the `object` properties `predicate` returns
	 * truthy for. The predicate is invoked with two arguments: (value, key).
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Object
	 * @param {Object} object The source object.
	 * @param {Function} [predicate=_.identity] The function invoked per property.
	 * @returns {Object} Returns the new object.
	 * @example
	 *
	 * var object = { 'a': 1, 'b': '2', 'c': 3 };
	 *
	 * _.pickBy(object, _.isNumber);
	 * // => { 'a': 1, 'c': 3 }
	 */
	function pickBy(object, predicate) {
	  if (object == null) {
	    return {};
	  }
	  var props = arrayMap(getAllKeysIn(object), function(prop) {
	    return [prop];
	  });
	  predicate = baseIteratee(predicate);
	  return basePickBy(object, props, function(value, path) {
	    return predicate(value, path[0]);
	  });
	}

	module.exports = pickBy;


/***/ }),
/* 728 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _extends2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/extends\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _classnames = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"classnames\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _propTypes = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"prop-types\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _react = _interopRequireDefault(__webpack_require__(3));

	var _lib = __webpack_require__(256);

	var _AccordionAccordion = _interopRequireDefault(__webpack_require__(729));

	var _AccordionContent = _interopRequireDefault(__webpack_require__(732));

	var _AccordionPanel = _interopRequireDefault(__webpack_require__(730));

	var _AccordionTitle = _interopRequireDefault(__webpack_require__(731));

	/**
	 * An accordion allows users to toggle the display of sections of content.
	 */
	function Accordion(props) {
	  var className = props.className,
	      fluid = props.fluid,
	      inverted = props.inverted,
	      styled = props.styled;
	  var classes = (0, _classnames["default"])('ui', (0, _lib.useKeyOnly)(fluid, 'fluid'), (0, _lib.useKeyOnly)(inverted, 'inverted'), (0, _lib.useKeyOnly)(styled, 'styled'), className);
	  var rest = (0, _lib.getUnhandledProps)(Accordion, props);
	  return _react["default"].createElement(_AccordionAccordion["default"], (0, _extends2["default"])({}, rest, {
	    className: classes
	  }));
	}

	Accordion.handledProps = ["className", "fluid", "inverted", "styled"];
	Accordion.propTypes = process.env.NODE_ENV !== "production" ? {
	  /** Additional classes. */
	  className: _propTypes["default"].string,

	  /** Format to take up the width of its container. */
	  fluid: _propTypes["default"].bool,

	  /** Format for dark backgrounds. */
	  inverted: _propTypes["default"].bool,

	  /** Adds some basic styling to accordion panels. */
	  styled: _propTypes["default"].bool
	} : {};
	Accordion.Accordion = _AccordionAccordion["default"];
	Accordion.Content = _AccordionContent["default"];
	Accordion.Panel = _AccordionPanel["default"];
	Accordion.Title = _AccordionTitle["default"];
	var _default = Accordion;
	exports["default"] = _default;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 729 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _extends2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/extends\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _toConsumableArray2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/toConsumableArray\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _classCallCheck2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/classCallCheck\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _createClass2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/createClass\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/possibleConstructorReturn\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _getPrototypeOf3 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/getPrototypeOf\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _assertThisInitialized2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/assertThisInitialized\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _inherits2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/inherits\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _defineProperty2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/defineProperty\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _map2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/map\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _invoke2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/invoke\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _without2 = _interopRequireDefault(__webpack_require__(542));

	var _includes2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/includes\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _isArray2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/isArray\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _classnames = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"classnames\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _propTypes = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"prop-types\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _react = _interopRequireDefault(__webpack_require__(3));

	var _lib = __webpack_require__(256);

	var _AccordionPanel = _interopRequireDefault(__webpack_require__(730));

	var warnIfPropsAreInvalid = function warnIfPropsAreInvalid(props, state) {
	  var exclusive = props.exclusive;
	  var activeIndex = state.activeIndex;
	  /* eslint-disable no-console */

	  if (exclusive && typeof activeIndex !== 'number') {
	    console.error('`activeIndex` must be a number if `exclusive` is true');
	  } else if (!exclusive && !(0, _isArray2["default"])(activeIndex)) {
	    console.error('`activeIndex` must be an array if `exclusive` is false');
	  }
	  /* eslint-enable no-console */

	};
	/**
	 * An Accordion can contain sub-accordions.
	 */


	var AccordionAccordion =
	/*#__PURE__*/
	function (_Component) {
	  (0, _inherits2["default"])(AccordionAccordion, _Component);

	  function AccordionAccordion() {
	    var _getPrototypeOf2;

	    var _this;

	    (0, _classCallCheck2["default"])(this, AccordionAccordion);

	    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    _this = (0, _possibleConstructorReturn2["default"])(this, (_getPrototypeOf2 = (0, _getPrototypeOf3["default"])(AccordionAccordion)).call.apply(_getPrototypeOf2, [this].concat(args)));
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "computeNewIndex", function (index) {
	      var exclusive = _this.props.exclusive;
	      var activeIndex = _this.state.activeIndex;
	      if (exclusive) return index === activeIndex ? -1 : index; // check to see if index is in array, and remove it, if not then add it

	      return (0, _includes2["default"])(activeIndex, index) ? (0, _without2["default"])(activeIndex, index) : [].concat((0, _toConsumableArray2["default"])(activeIndex), [index]);
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "handleTitleClick", function (e, titleProps) {
	      var index = titleProps.index;

	      _this.trySetState({
	        activeIndex: _this.computeNewIndex(index)
	      });

	      (0, _invoke2["default"])(_this.props, 'onTitleClick', e, titleProps);
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "isIndexActive", function (index) {
	      var exclusive = _this.props.exclusive;
	      var activeIndex = _this.state.activeIndex;
	      return exclusive ? activeIndex === index : (0, _includes2["default"])(activeIndex, index);
	    });
	    return _this;
	  }

	  (0, _createClass2["default"])(AccordionAccordion, [{
	    key: "getInitialAutoControlledState",
	    value: function getInitialAutoControlledState(_ref) {
	      var exclusive = _ref.exclusive;
	      return {
	        activeIndex: exclusive ? -1 : []
	      };
	    }
	  }, {
	    key: "componentDidMount",
	    value: function componentDidMount() {
	      if (process.env.NODE_ENV !== 'production') {
	        warnIfPropsAreInvalid(this.props, this.state);
	      }
	    }
	  }, {
	    key: "componentDidUpdate",
	    value: function componentDidUpdate() {
	      if (process.env.NODE_ENV !== 'production') {
	        warnIfPropsAreInvalid(this.props, this.state);
	      }
	    }
	  }, {
	    key: "render",
	    value: function render() {
	      var _this2 = this;

	      var _this$props = this.props,
	          className = _this$props.className,
	          children = _this$props.children,
	          panels = _this$props.panels;
	      var classes = (0, _classnames["default"])('accordion', className);
	      var rest = (0, _lib.getUnhandledProps)(AccordionAccordion, this.props);
	      var ElementType = (0, _lib.getElementType)(AccordionAccordion, this.props);
	      return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	        className: classes
	      }), _lib.childrenUtils.isNil(children) ? (0, _map2["default"])(panels, function (panel, index) {
	        return _AccordionPanel["default"].create(panel, {
	          defaultProps: {
	            active: _this2.isIndexActive(index),
	            index: index,
	            onTitleClick: _this2.handleTitleClick
	          }
	        });
	      }) : children);
	    }
	  }]);
	  return AccordionAccordion;
	}(_lib.AutoControlledComponent);

	exports["default"] = AccordionAccordion;
	(0, _defineProperty2["default"])(AccordionAccordion, "defaultProps", {
	  exclusive: true
	});
	(0, _defineProperty2["default"])(AccordionAccordion, "autoControlledProps", ['activeIndex']);
	(0, _defineProperty2["default"])(AccordionAccordion, "handledProps", ["activeIndex", "as", "children", "className", "defaultActiveIndex", "exclusive", "onTitleClick", "panels"]);
	AccordionAccordion.propTypes = process.env.NODE_ENV !== "production" ? {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Index of the currently active panel. */
	  activeIndex: _lib.customPropTypes.every([_lib.customPropTypes.disallow(['children']), _propTypes["default"].oneOfType([_propTypes["default"].arrayOf(_propTypes["default"].number), _propTypes["default"].number])]),

	  /** Primary content. */
	  children: _propTypes["default"].node,

	  /** Additional classes. */
	  className: _propTypes["default"].string,

	  /** Initial activeIndex value. */
	  defaultActiveIndex: _lib.customPropTypes.every([_lib.customPropTypes.disallow(['children']), _propTypes["default"].oneOfType([_propTypes["default"].arrayOf(_propTypes["default"].number), _propTypes["default"].number])]),

	  /** Only allow one panel open at a time. */
	  exclusive: _propTypes["default"].bool,

	  /**
	   * Called when a panel title is clicked.
	   *
	   * @param {SyntheticEvent} event - React's original SyntheticEvent.
	   * @param {object} data - All item props.
	   */
	  onTitleClick: _lib.customPropTypes.every([_lib.customPropTypes.disallow(['children']), _propTypes["default"].func]),

	  /** Shorthand array of props for Accordion. */
	  panels: _lib.customPropTypes.every([_lib.customPropTypes.disallow(['children']), _propTypes["default"].arrayOf(_propTypes["default"].shape({
	    content: _lib.customPropTypes.itemShorthand,
	    title: _lib.customPropTypes.itemShorthand
	  }))])
	} : {};
	AccordionAccordion.create = (0, _lib.createShorthandFactory)(AccordionAccordion, function (content) {
	  return {
	    content: content
	  };
	});
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 730 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";

	var _interopRequireWildcard = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireWildcard\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _classCallCheck2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/classCallCheck\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _createClass2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/createClass\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/possibleConstructorReturn\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _getPrototypeOf3 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/getPrototypeOf\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _assertThisInitialized2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/assertThisInitialized\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _inherits2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/inherits\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _defineProperty2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/defineProperty\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _invoke2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/invoke\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _propTypes = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"prop-types\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _react = _interopRequireWildcard(__webpack_require__(3));

	var _lib = __webpack_require__(256);

	var _AccordionTitle = _interopRequireDefault(__webpack_require__(731));

	var _AccordionContent = _interopRequireDefault(__webpack_require__(732));

	/**
	 * A panel sub-component for Accordion component.
	 */
	var AccordionPanel =
	/*#__PURE__*/
	function (_Component) {
	  (0, _inherits2["default"])(AccordionPanel, _Component);

	  function AccordionPanel() {
	    var _getPrototypeOf2;

	    var _this;

	    (0, _classCallCheck2["default"])(this, AccordionPanel);

	    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    _this = (0, _possibleConstructorReturn2["default"])(this, (_getPrototypeOf2 = (0, _getPrototypeOf3["default"])(AccordionPanel)).call.apply(_getPrototypeOf2, [this].concat(args)));
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "handleTitleOverrides", function (predefinedProps) {
	      return {
	        onClick: function onClick(e, titleProps) {
	          (0, _invoke2["default"])(predefinedProps, 'onClick', e, titleProps);
	          (0, _invoke2["default"])(_this.props, 'onTitleClick', e, titleProps);
	        }
	      };
	    });
	    return _this;
	  }

	  (0, _createClass2["default"])(AccordionPanel, [{
	    key: "render",
	    value: function render() {
	      var _this$props = this.props,
	          active = _this$props.active,
	          content = _this$props.content,
	          index = _this$props.index,
	          title = _this$props.title;
	      return _react["default"].createElement(_react.Fragment, null, _AccordionTitle["default"].create(title, {
	        autoGenerateKey: false,
	        defaultProps: {
	          active: active,
	          index: index
	        },
	        overrideProps: this.handleTitleOverrides
	      }), _AccordionContent["default"].create(content, {
	        autoGenerateKey: false,
	        defaultProps: {
	          active: active
	        }
	      }));
	    }
	  }]);
	  return AccordionPanel;
	}(_react.Component);

	(0, _defineProperty2["default"])(AccordionPanel, "handledProps", ["active", "content", "index", "onTitleClick", "title"]);
	AccordionPanel.propTypes = process.env.NODE_ENV !== "production" ? {
	  /** Whether or not the title is in the open state. */
	  active: _propTypes["default"].bool,

	  /** A shorthand for Accordion.Content. */
	  content: _lib.customPropTypes.itemShorthand,

	  /** A panel index. */
	  index: _propTypes["default"].oneOfType([_propTypes["default"].number, _propTypes["default"].string]),

	  /**
	   * Called when a panel title is clicked.
	   *
	   * @param {SyntheticEvent} event - React's original SyntheticEvent.
	   * @param {object} data - All item props.
	   */
	  onTitleClick: _propTypes["default"].func,

	  /** A shorthand for Accordion.Title. */
	  title: _lib.customPropTypes.itemShorthand
	} : {};
	AccordionPanel.create = (0, _lib.createShorthandFactory)(AccordionPanel, null);
	var _default = AccordionPanel;
	exports["default"] = _default;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 731 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";

	var _interopRequireWildcard = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireWildcard\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _extends2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/extends\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _classCallCheck2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/classCallCheck\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _createClass2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/createClass\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/possibleConstructorReturn\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _getPrototypeOf3 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/getPrototypeOf\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _assertThisInitialized2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/assertThisInitialized\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _inherits2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/inherits\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _defineProperty2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/defineProperty\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _isNil2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/isNil\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _invoke2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/invoke\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _classnames = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"classnames\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _propTypes = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"prop-types\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _react = _interopRequireWildcard(__webpack_require__(3));

	var _lib = __webpack_require__(256);

	var _Icon = _interopRequireDefault(__webpack_require__(566));

	/**
	 * A title sub-component for Accordion component.
	 */
	var AccordionTitle =
	/*#__PURE__*/
	function (_Component) {
	  (0, _inherits2["default"])(AccordionTitle, _Component);

	  function AccordionTitle() {
	    var _getPrototypeOf2;

	    var _this;

	    (0, _classCallCheck2["default"])(this, AccordionTitle);

	    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    _this = (0, _possibleConstructorReturn2["default"])(this, (_getPrototypeOf2 = (0, _getPrototypeOf3["default"])(AccordionTitle)).call.apply(_getPrototypeOf2, [this].concat(args)));
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "handleClick", function (e) {
	      return (0, _invoke2["default"])(_this.props, 'onClick', e, _this.props);
	    });
	    return _this;
	  }

	  (0, _createClass2["default"])(AccordionTitle, [{
	    key: "render",
	    value: function render() {
	      var _this$props = this.props,
	          active = _this$props.active,
	          children = _this$props.children,
	          className = _this$props.className,
	          content = _this$props.content,
	          icon = _this$props.icon;
	      var classes = (0, _classnames["default"])((0, _lib.useKeyOnly)(active, 'active'), 'title', className);
	      var rest = (0, _lib.getUnhandledProps)(AccordionTitle, this.props);
	      var ElementType = (0, _lib.getElementType)(AccordionTitle, this.props);
	      var iconValue = (0, _isNil2["default"])(icon) ? 'dropdown' : icon;

	      if (!_lib.childrenUtils.isNil(children)) {
	        return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	          className: classes,
	          onClick: this.handleClick
	        }), children);
	      }

	      return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	        className: classes,
	        onClick: this.handleClick
	      }), _Icon["default"].create(iconValue, {
	        autoGenerateKey: false
	      }), content);
	    }
	  }]);
	  return AccordionTitle;
	}(_react.Component);

	exports["default"] = AccordionTitle;
	(0, _defineProperty2["default"])(AccordionTitle, "handledProps", ["active", "as", "children", "className", "content", "icon", "index", "onClick"]);
	AccordionTitle.propTypes = process.env.NODE_ENV !== "production" ? {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Whether or not the title is in the open state. */
	  active: _propTypes["default"].bool,

	  /** Primary content. */
	  children: _propTypes["default"].node,

	  /** Additional classes. */
	  className: _propTypes["default"].string,

	  /** Shorthand for primary content. */
	  content: _lib.customPropTypes.contentShorthand,

	  /** Shorthand for Icon. */
	  icon: _lib.customPropTypes.itemShorthand,

	  /** AccordionTitle index inside Accordion. */
	  index: _propTypes["default"].oneOfType([_propTypes["default"].string, _propTypes["default"].number]),

	  /**
	   * Called on click.
	   *
	   * @param {SyntheticEvent} event - React's original SyntheticEvent.
	   * @param {object} data - All props.
	   */
	  onClick: _propTypes["default"].func
	} : {};
	AccordionTitle.create = (0, _lib.createShorthandFactory)(AccordionTitle, function (content) {
	  return {
	    content: content
	  };
	});
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 732 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _extends2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/extends\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _classnames = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"classnames\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _propTypes = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"prop-types\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _react = _interopRequireDefault(__webpack_require__(3));

	var _lib = __webpack_require__(256);

	/**
	 * A content sub-component for Accordion component.
	 */
	function AccordionContent(props) {
	  var active = props.active,
	      children = props.children,
	      className = props.className,
	      content = props.content;
	  var classes = (0, _classnames["default"])('content', (0, _lib.useKeyOnly)(active, 'active'), className);
	  var rest = (0, _lib.getUnhandledProps)(AccordionContent, props);
	  var ElementType = (0, _lib.getElementType)(AccordionContent, props);
	  return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	    className: classes
	  }), _lib.childrenUtils.isNil(children) ? content : children);
	}

	AccordionContent.handledProps = ["active", "as", "children", "className", "content"];
	AccordionContent.propTypes = process.env.NODE_ENV !== "production" ? {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Whether or not the content is visible. */
	  active: _propTypes["default"].bool,

	  /** Primary content. */
	  children: _propTypes["default"].node,

	  /** Additional classes. */
	  className: _propTypes["default"].string,

	  /** Shorthand for primary content. */
	  content: _lib.customPropTypes.contentShorthand
	} : {};
	AccordionContent.create = (0, _lib.createShorthandFactory)(AccordionContent, function (content) {
	  return {
	    content: content
	  };
	});
	var _default = AccordionContent;
	exports["default"] = _default;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 733 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	Object.defineProperty(exports, "default", {
	  enumerable: true,
	  get: function get() {
	    return _Embed["default"];
	  }
	});

	var _Embed = _interopRequireDefault(__webpack_require__(734));

/***/ }),
/* 734 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _extends2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/extends\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _objectSpread2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/objectSpread\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _classCallCheck2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/classCallCheck\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _createClass2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/createClass\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/possibleConstructorReturn\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _getPrototypeOf3 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/getPrototypeOf\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _assertThisInitialized2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/assertThisInitialized\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _inherits2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/inherits\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _defineProperty2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/defineProperty\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _classnames = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"classnames\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _propTypes = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"prop-types\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _react = _interopRequireDefault(__webpack_require__(3));

	var _lib = __webpack_require__(256);

	var _Icon = _interopRequireDefault(__webpack_require__(566));

	/**
	 * An embed displays content from other websites like YouTube videos or Google Maps.
	 */
	var Embed =
	/*#__PURE__*/
	function (_Component) {
	  (0, _inherits2["default"])(Embed, _Component);

	  function Embed() {
	    var _getPrototypeOf2;

	    var _this;

	    (0, _classCallCheck2["default"])(this, Embed);

	    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    _this = (0, _possibleConstructorReturn2["default"])(this, (_getPrototypeOf2 = (0, _getPrototypeOf3["default"])(Embed)).call.apply(_getPrototypeOf2, [this].concat(args)));
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "handleClick", function (e) {
	      var onClick = _this.props.onClick;
	      var active = _this.state.active;
	      if (onClick) onClick(e, (0, _objectSpread2["default"])({}, _this.props, {
	        active: true
	      }));
	      if (!active) _this.trySetState({
	        active: true
	      });
	    });
	    return _this;
	  }

	  (0, _createClass2["default"])(Embed, [{
	    key: "getSrc",
	    value: function getSrc() {
	      var _this$props = this.props,
	          _this$props$autoplay = _this$props.autoplay,
	          autoplay = _this$props$autoplay === void 0 ? true : _this$props$autoplay,
	          _this$props$brandedUI = _this$props.brandedUI,
	          brandedUI = _this$props$brandedUI === void 0 ? false : _this$props$brandedUI,
	          _this$props$color = _this$props.color,
	          color = _this$props$color === void 0 ? '#444444' : _this$props$color,
	          _this$props$hd = _this$props.hd,
	          hd = _this$props$hd === void 0 ? true : _this$props$hd,
	          id = _this$props.id,
	          source = _this$props.source,
	          url = _this$props.url;

	      if (source === 'youtube') {
	        return ["//www.youtube.com/embed/".concat(id), '?autohide=true', "&amp;autoplay=".concat(autoplay), "&amp;color=".concat(encodeURIComponent(color)), "&amp;hq=".concat(hd), '&amp;jsapi=false', "&amp;modestbranding=".concat(brandedUI), "&amp;rel=".concat(brandedUI ? 0 : 1)].join('');
	      }

	      if (source === 'vimeo') {
	        return ["//player.vimeo.com/video/".concat(id), '?api=false', "&amp;autoplay=".concat(autoplay), '&amp;byline=false', "&amp;color=".concat(encodeURIComponent(color)), '&amp;portrait=false', '&amp;title=false'].join('');
	      }

	      return url;
	    }
	  }, {
	    key: "render",
	    value: function render() {
	      var _this$props2 = this.props,
	          aspectRatio = _this$props2.aspectRatio,
	          className = _this$props2.className,
	          icon = _this$props2.icon,
	          placeholder = _this$props2.placeholder;
	      var active = this.state.active;
	      var classes = (0, _classnames["default"])('ui', aspectRatio, (0, _lib.useKeyOnly)(active, 'active'), 'embed', className);
	      var rest = (0, _lib.getUnhandledProps)(Embed, this.props);
	      var ElementType = (0, _lib.getElementType)(Embed, this.props);
	      var iconShorthand = icon !== undefined ? icon : 'video play';
	      return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	        className: classes,
	        onClick: this.handleClick
	      }), _Icon["default"].create(iconShorthand, {
	        autoGenerateKey: false
	      }), placeholder && _react["default"].createElement("img", {
	        className: "placeholder",
	        src: placeholder
	      }), this.renderEmbed());
	    }
	  }, {
	    key: "renderEmbed",
	    value: function renderEmbed() {
	      var _this$props3 = this.props,
	          children = _this$props3.children,
	          content = _this$props3.content,
	          iframe = _this$props3.iframe,
	          source = _this$props3.source;
	      var active = this.state.active;
	      if (!active) return null;
	      if (!_lib.childrenUtils.isNil(children)) return _react["default"].createElement("div", {
	        className: "embed"
	      }, children);
	      if (!_lib.childrenUtils.isNil(content)) return _react["default"].createElement("div", {
	        className: "embed"
	      }, content);
	      return _react["default"].createElement("div", {
	        className: "embed"
	      }, (0, _lib.createHTMLIframe)(_lib.childrenUtils.isNil(iframe) ? this.getSrc() : iframe, {
	        defaultProps: {
	          allowFullScreen: false,
	          frameBorder: 0,
	          height: '100%',
	          scrolling: 'no',
	          src: this.getSrc(),
	          title: "Embedded content from ".concat(source, "."),
	          width: '100%'
	        },
	        autoGenerateKey: false
	      }));
	    }
	  }]);
	  return Embed;
	}(_lib.AutoControlledComponent);

	exports["default"] = Embed;
	(0, _defineProperty2["default"])(Embed, "autoControlledProps", ['active']);
	(0, _defineProperty2["default"])(Embed, "handledProps", ["active", "as", "aspectRatio", "autoplay", "brandedUI", "children", "className", "color", "content", "defaultActive", "hd", "icon", "id", "iframe", "onClick", "placeholder", "source", "url"]);
	Embed.propTypes = process.env.NODE_ENV !== "production" ? {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** An embed can be active. */
	  active: _propTypes["default"].bool,

	  /** An embed can specify an alternative aspect ratio. */
	  aspectRatio: _propTypes["default"].oneOf(['4:3', '16:9', '21:9']),

	  /** Setting to true or false will force autoplay. */
	  autoplay: _lib.customPropTypes.every([_lib.customPropTypes.demand(['source']), _propTypes["default"].bool]),

	  /** Whether to show networks branded UI like title cards, or after video calls to action. */
	  brandedUI: _lib.customPropTypes.every([_lib.customPropTypes.demand(['source']), _propTypes["default"].bool]),

	  /** Primary content. */
	  children: _propTypes["default"].node,

	  /** Additional classes. */
	  className: _propTypes["default"].string,

	  /** Specifies a default chrome color with Vimeo or YouTube. */
	  color: _lib.customPropTypes.every([_lib.customPropTypes.demand(['source']), _propTypes["default"].string]),

	  /** Shorthand for primary content. */
	  content: _lib.customPropTypes.contentShorthand,

	  /** Initial value of active. */
	  defaultActive: _propTypes["default"].bool,

	  /** Whether to prefer HD content. */
	  hd: _lib.customPropTypes.every([_lib.customPropTypes.demand(['source']), _propTypes["default"].bool]),

	  /** Specifies an icon to use with placeholder content. */
	  icon: _lib.customPropTypes.itemShorthand,

	  /** Specifies an id for source. */
	  id: _lib.customPropTypes.every([_lib.customPropTypes.demand(['source']), _propTypes["default"].string]),

	  /** Shorthand for HTML iframe. */
	  iframe: _lib.customPropTypes.every([_lib.customPropTypes.demand(['source']), _lib.customPropTypes.itemShorthand]),

	  /**
	   * Сalled on click.
	   *
	   * @param {SyntheticEvent} event - React's original SyntheticEvent.
	   * @param {object} data - All props and proposed value.
	   */
	  onClick: _propTypes["default"].func,

	  /** A placeholder image for embed. */
	  placeholder: _propTypes["default"].string,

	  /** Specifies a source to use. */
	  source: _lib.customPropTypes.every([_lib.customPropTypes.disallow(['sourceUrl']), _propTypes["default"].oneOf(['youtube', 'vimeo'])]),

	  /** Specifies a url to use for embed. */
	  url: _lib.customPropTypes.every([_lib.customPropTypes.disallow(['source']), _propTypes["default"].string])
	} : {};
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 735 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	Object.defineProperty(exports, "default", {
	  enumerable: true,
	  get: function get() {
	    return _Popup["default"];
	  }
	});

	var _Popup = _interopRequireDefault(__webpack_require__(736));

/***/ }),
/* 736 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";

	var _interopRequireWildcard = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireWildcard\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _extends2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/extends\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _objectSpread2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/objectSpread\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _classCallCheck2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/classCallCheck\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _createClass2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/createClass\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/possibleConstructorReturn\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _getPrototypeOf3 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/getPrototypeOf\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _assertThisInitialized2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/assertThisInitialized\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _inherits2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/inherits\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _defineProperty2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/defineProperty\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _isNil2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/isNil\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _merge2 = _interopRequireDefault(__webpack_require__(737));

	var _invoke2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/invoke\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _isArray2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/isArray\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _pick2 = _interopRequireDefault(__webpack_require__(460));

	var _includes2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/includes\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _reduce2 = _interopRequireDefault(__webpack_require__(562));

	var _without2 = _interopRequireDefault(__webpack_require__(542));

	var _eventStack = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@semantic-ui-react/event-stack\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _classnames = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"classnames\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _propTypes = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"prop-types\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _react = _interopRequireWildcard(__webpack_require__(3));

	var _reactPopper = __webpack_require__(744);

	var _shallowequal = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"shallowequal\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _lib = __webpack_require__(256);

	var _Portal = _interopRequireDefault(__webpack_require__(548));

	var _Ref = _interopRequireDefault(__webpack_require__(537));

	var _positions = __webpack_require__(758);

	var _createReferenceProxy = _interopRequireDefault(__webpack_require__(762));

	var _PopupContent = _interopRequireDefault(__webpack_require__(763));

	var _PopupHeader = _interopRequireDefault(__webpack_require__(764));

	/**
	 * A Popup displays additional information on top of a page.
	 */
	var Popup =
	/*#__PURE__*/
	function (_Component) {
	  (0, _inherits2["default"])(Popup, _Component);

	  function Popup() {
	    var _getPrototypeOf2;

	    var _this;

	    (0, _classCallCheck2["default"])(this, Popup);

	    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    _this = (0, _possibleConstructorReturn2["default"])(this, (_getPrototypeOf2 = (0, _getPrototypeOf3["default"])(Popup)).call.apply(_getPrototypeOf2, [this].concat(args)));
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "state", {});
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "open", false);
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "triggerRef", (0, _react.createRef)());
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "getPortalProps", function () {
	      var portalProps = {};
	      var _this$props = _this.props,
	          on = _this$props.on,
	          hoverable = _this$props.hoverable;
	      var normalizedOn = (0, _isArray2["default"])(on) ? on : [on];

	      if (hoverable) {
	        portalProps.closeOnPortalMouseLeave = true;
	        portalProps.mouseLeaveDelay = 300;
	      }

	      if ((0, _includes2["default"])(normalizedOn, 'click')) {
	        portalProps.openOnTriggerClick = true;
	        portalProps.closeOnTriggerClick = true;
	        portalProps.closeOnDocumentClick = true;
	      }

	      if ((0, _includes2["default"])(normalizedOn, 'focus')) {
	        portalProps.openOnTriggerFocus = true;
	        portalProps.closeOnTriggerBlur = true;
	      }

	      if ((0, _includes2["default"])(normalizedOn, 'hover')) {
	        portalProps.openOnTriggerMouseEnter = true;
	        portalProps.closeOnTriggerMouseLeave = true; // Taken from SUI: https://git.io/vPmCm

	        portalProps.mouseLeaveDelay = 70;
	        portalProps.mouseEnterDelay = 50;
	      }

	      return portalProps;
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "hideOnScroll", function (e) {
	      _this.setState({
	        closed: true
	      });

	      _lib.eventStack.unsub('scroll', _this.hideOnScroll, {
	        target: window
	      });

	      _this.timeoutId = setTimeout(function () {
	        _this.setState({
	          closed: false
	        });
	      }, 50);

	      _this.handleClose(e);
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "handleClose", function (e) {
	      (0, _invoke2["default"])(_this.props, 'onClose', e, _this.props);
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "handleOpen", function (e) {
	      (0, _invoke2["default"])(_this.props, 'onOpen', e, _this.props);
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "handlePortalMount", function (e) {
	      (0, _invoke2["default"])(_this.props, 'onMount', e, _this.props);
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "handlePortalUnmount", function (e) {
	      _this.positionUpdate = null;
	      (0, _invoke2["default"])(_this.props, 'onUnmount', e, _this.props);
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "renderContent", function (_ref) {
	      var popperPlacement = _ref.placement,
	          popperRef = _ref.ref,
	          scheduleUpdate = _ref.scheduleUpdate,
	          popperStyle = _ref.style;
	      var _this$props2 = _this.props,
	          basic = _this$props2.basic,
	          children = _this$props2.children,
	          className = _this$props2.className,
	          content = _this$props2.content,
	          hideOnScroll = _this$props2.hideOnScroll,
	          flowing = _this$props2.flowing,
	          header = _this$props2.header,
	          inverted = _this$props2.inverted,
	          size = _this$props2.size,
	          style = _this$props2.style,
	          wide = _this$props2.wide;
	      var contentRestProps = _this.state.contentRestProps;
	      _this.positionUpdate = scheduleUpdate;
	      var classes = (0, _classnames["default"])('ui', _positions.placementMapping[popperPlacement], size, (0, _lib.useKeyOrValueAndKey)(wide, 'wide'), (0, _lib.useKeyOnly)(basic, 'basic'), (0, _lib.useKeyOnly)(flowing, 'flowing'), (0, _lib.useKeyOnly)(inverted, 'inverted'), 'popup transition visible', className);
	      var ElementType = (0, _lib.getElementType)(Popup, _this.props);
	      var styles = (0, _objectSpread2["default"])({
	        // Heads up! We need default styles to get working correctly `flowing`
	        left: 'auto',
	        right: 'auto'
	      }, popperStyle, style);
	      return _react["default"].createElement(_Ref["default"], {
	        innerRef: popperRef
	      }, _react["default"].createElement(ElementType, (0, _extends2["default"])({}, contentRestProps, {
	        className: classes,
	        style: styles
	      }), _lib.childrenUtils.isNil(children) ? _react["default"].createElement(_react["default"].Fragment, null, _PopupHeader["default"].create(header, {
	        autoGenerateKey: false
	      }), _PopupContent["default"].create(content, {
	        autoGenerateKey: false
	      })) : children, hideOnScroll && _react["default"].createElement(_eventStack["default"], {
	        on: _this.hideOnScroll,
	        name: "scroll",
	        target: "window"
	      })));
	    });
	    return _this;
	  }

	  (0, _createClass2["default"])(Popup, [{
	    key: "componentDidUpdate",
	    value: function componentDidUpdate(prevProps) {
	      var depsEqual = (0, _shallowequal["default"])(this.props.popperDependencies, prevProps.popperDependencies);

	      if (!depsEqual) {
	        this.handleUpdate();
	      }
	    }
	  }, {
	    key: "componentWillUnmount",
	    value: function componentWillUnmount() {
	      clearTimeout(this.timeoutId);
	    }
	  }, {
	    key: "handleUpdate",
	    value: function handleUpdate() {
	      if (this.positionUpdate) this.positionUpdate();
	    }
	  }, {
	    key: "render",
	    value: function render() {
	      var _this$props3 = this.props,
	          context = _this$props3.context,
	          disabled = _this$props3.disabled,
	          offset = _this$props3.offset,
	          pinned = _this$props3.pinned,
	          popperModifiers = _this$props3.popperModifiers,
	          position = _this$props3.position,
	          trigger = _this$props3.trigger;
	      var _this$state = this.state,
	          closed = _this$state.closed,
	          portalRestProps = _this$state.portalRestProps;
	      if (closed || disabled) return trigger;
	      var modifiers = (0, _merge2["default"])({
	        arrow: {
	          enabled: false
	        },
	        flip: {
	          enabled: !pinned
	        },
	        // There are issues with `keepTogether` and `offset`
	        // https://github.com/FezVrasta/popper.js/issues/557
	        keepTogether: {
	          enabled: !!offset
	        },
	        offset: {
	          offset: offset
	        }
	      }, popperModifiers);
	      var referenceElement = (0, _createReferenceProxy["default"])((0, _isNil2["default"])(context) ? this.triggerRef : context);
	      var mergedPortalProps = (0, _objectSpread2["default"])({}, this.getPortalProps(), portalRestProps);
	      return _react["default"].createElement(_Portal["default"], (0, _extends2["default"])({}, mergedPortalProps, {
	        onClose: this.handleClose,
	        onMount: this.handlePortalMount,
	        onOpen: this.handleOpen,
	        onUnmount: this.handlePortalUnmount,
	        trigger: trigger,
	        triggerRef: this.triggerRef
	      }), _react["default"].createElement(_reactPopper.Popper, {
	        modifiers: modifiers,
	        placement: _positions.positionsMapping[position],
	        referenceElement: referenceElement
	      }, this.renderContent));
	    }
	  }], [{
	    key: "getDerivedStateFromProps",
	    value: function getDerivedStateFromProps(props, state) {
	      if (state.closed || state.disabled) return {};
	      var unhandledProps = (0, _lib.getUnhandledProps)(Popup, props);
	      var contentRestProps = (0, _reduce2["default"])(unhandledProps, function (acc, val, key) {
	        if (!(0, _includes2["default"])(_Portal["default"].handledProps, key)) acc[key] = val;
	        return acc;
	      }, {});
	      var portalRestProps = (0, _pick2["default"])(unhandledProps, _Portal["default"].handledProps);
	      return {
	        contentRestProps: contentRestProps,
	        portalRestProps: portalRestProps
	      };
	    }
	  }]);
	  return Popup;
	}(_react.Component);

	exports["default"] = Popup;
	(0, _defineProperty2["default"])(Popup, "defaultProps", {
	  disabled: false,
	  offset: 0,
	  on: 'hover',
	  pinned: false,
	  position: 'top left'
	});
	(0, _defineProperty2["default"])(Popup, "Content", _PopupContent["default"]);
	(0, _defineProperty2["default"])(Popup, "Header", _PopupHeader["default"]);
	(0, _defineProperty2["default"])(Popup, "handledProps", ["as", "basic", "children", "className", "content", "context", "disabled", "flowing", "header", "hideOnScroll", "hoverable", "inverted", "offset", "on", "onClose", "onMount", "onOpen", "onUnmount", "pinned", "popperDependencies", "popperModifiers", "position", "size", "style", "trigger", "wide"]);
	Popup.propTypes = process.env.NODE_ENV !== "production" ? {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Display the popup without the pointing arrow. */
	  basic: _propTypes["default"].bool,

	  /** Primary content. */
	  children: _propTypes["default"].node,

	  /** Additional classes. */
	  className: _propTypes["default"].string,

	  /** Simple text content for the popover. */
	  content: _lib.customPropTypes.itemShorthand,

	  /** Existing element the pop-up should be bound to. */
	  context: _propTypes["default"].oneOfType([_propTypes["default"].object, _lib.customPropTypes.refObject]),

	  /** A disabled popup only renders its trigger. */
	  disabled: _propTypes["default"].bool,

	  /** A flowing Popup has no maximum width and continues to flow to fit its content. */
	  flowing: _propTypes["default"].bool,

	  /** Takes up the entire width of its offset container. */
	  // TODO: implement the Popup fluid layout
	  // fluid: PropTypes.bool,

	  /** Header displayed above the content in bold. */
	  header: _lib.customPropTypes.itemShorthand,

	  /** Hide the Popup when scrolling the window. */
	  hideOnScroll: _propTypes["default"].bool,

	  /** Whether the popup should not close on hover. */
	  hoverable: _propTypes["default"].bool,

	  /** Invert the colors of the Popup. */
	  inverted: _propTypes["default"].bool,

	  /** Offset value to apply to rendered popup. Accepts the following units:
	   * - px or unit-less, interpreted as pixels
	   * - %, percentage relative to the length of the trigger element
	   * - %p, percentage relative to the length of the popup element
	   * - vw, CSS viewport width unit
	   * - vh, CSS viewport height unit
	   */
	  offset: _propTypes["default"].oneOfType([_propTypes["default"].number, _propTypes["default"].string]),

	  /** Events triggering the popup. */
	  on: _propTypes["default"].oneOfType([_propTypes["default"].oneOf(['hover', 'click', 'focus']), _propTypes["default"].arrayOf(_propTypes["default"].oneOf(['hover', 'click', 'focus']))]),

	  /**
	   * Called when a close event happens.
	   *
	   * @param {SyntheticEvent} event - React's original SyntheticEvent.
	   * @param {object} data - All props.
	   */
	  onClose: _propTypes["default"].func,

	  /**
	   * Called when the portal is mounted on the DOM.
	   *
	   * @param {null}
	   * @param {object} data - All props.
	   */
	  onMount: _propTypes["default"].func,

	  /**
	   * Called when an open event happens.
	   *
	   * @param {SyntheticEvent} event - React's original SyntheticEvent.
	   * @param {object} data - All props.
	   */
	  onOpen: _propTypes["default"].func,

	  /**
	   * Called when the portal is unmounted from the DOM.
	   *
	   * @param {null}
	   * @param {object} data - All props.
	   */
	  onUnmount: _propTypes["default"].func,

	  /** Disables automatic repositioning of the component, it will always be placed according to the position value. */
	  pinned: _propTypes["default"].bool,

	  /** Position for the popover. */
	  position: _propTypes["default"].oneOf(_positions.positions),

	  /** An object containing custom settings for the Popper.js modifiers. */
	  popperModifiers: _propTypes["default"].object,

	  /** A popup can have dependencies which update will schedule a position update. */
	  popperDependencies: _propTypes["default"].array,

	  /** Popup size. */
	  size: _propTypes["default"].oneOf((0, _without2["default"])(_lib.SUI.SIZES, 'medium', 'big', 'massive')),

	  /** Custom Popup style. */
	  style: _propTypes["default"].object,

	  /** Element to be rendered in-place where the popup is defined. */
	  trigger: _propTypes["default"].node,

	  /** Popup width. */
	  wide: _propTypes["default"].oneOfType([_propTypes["default"].bool, _propTypes["default"].oneOf(['very'])])
	} : {};
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 737 */
/***/ (function(module, exports, __webpack_require__) {

	var baseMerge = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"./_baseMerge\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())),
	    createAssigner = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"./_createAssigner\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	/**
	 * This method is like `_.assign` except that it recursively merges own and
	 * inherited enumerable string keyed properties of source objects into the
	 * destination object. Source properties that resolve to `undefined` are
	 * skipped if a destination value exists. Array and plain object properties
	 * are merged recursively. Other objects and value types are overridden by
	 * assignment. Source objects are applied from left to right. Subsequent
	 * sources overwrite property assignments of previous sources.
	 *
	 * **Note:** This method mutates `object`.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.5.0
	 * @category Object
	 * @param {Object} object The destination object.
	 * @param {...Object} [sources] The source objects.
	 * @returns {Object} Returns `object`.
	 * @example
	 *
	 * var object = {
	 *   'a': [{ 'b': 2 }, { 'd': 4 }]
	 * };
	 *
	 * var other = {
	 *   'a': [{ 'c': 3 }, { 'e': 5 }]
	 * };
	 *
	 * _.merge(object, other);
	 * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }
	 */
	var merge = createAssigner(function(object, source, srcIndex) {
	  baseMerge(object, source, srcIndex);
	});

	module.exports = merge;


/***/ }),
/* 738 */,
/* 739 */,
/* 740 */,
/* 741 */,
/* 742 */,
/* 743 */,
/* 744 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	var _interopRequireWildcard = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireWildcard\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	Object.defineProperty(exports, "Popper", {
	  enumerable: true,
	  get: function get() {
	    return _Popper.default;
	  }
	});
	Object.defineProperty(exports, "placements", {
	  enumerable: true,
	  get: function get() {
	    return _Popper.placements;
	  }
	});
	Object.defineProperty(exports, "Manager", {
	  enumerable: true,
	  get: function get() {
	    return _Manager.default;
	  }
	});
	Object.defineProperty(exports, "Reference", {
	  enumerable: true,
	  get: function get() {
	    return _Reference.default;
	  }
	});

	var _Popper = _interopRequireWildcard(__webpack_require__(745));

	var _Manager = _interopRequireDefault(__webpack_require__(749));

	var _Reference = _interopRequireDefault(__webpack_require__(756));

/***/ }),
/* 745 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	var _interopRequireWildcard = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireWildcard\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = Popper;
	exports.placements = exports.InnerPopper = void 0;

	var _objectWithoutPropertiesLoose2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/objectWithoutPropertiesLoose\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _extends2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/extends\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _inheritsLoose2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/inheritsLoose\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _assertThisInitialized2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/assertThisInitialized\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _defineProperty2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/defineProperty\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var React = _interopRequireWildcard(__webpack_require__(3));

	var _popper = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"popper.js\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _Manager = __webpack_require__(749);

	var _utils = __webpack_require__(755);

	var initialStyle = {
	  position: 'absolute',
	  top: 0,
	  left: 0,
	  opacity: 0,
	  pointerEvents: 'none'
	};
	var initialArrowStyle = {};

	var InnerPopper =
	/*#__PURE__*/
	function (_React$Component) {
	  (0, _inheritsLoose2.default)(InnerPopper, _React$Component);

	  function InnerPopper() {
	    var _this;

	    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;
	    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)), "state", {
	      data: undefined,
	      placement: undefined
	    });
	    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)), "popperInstance", void 0);
	    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)), "popperNode", null);
	    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)), "arrowNode", null);
	    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)), "setPopperNode", function (popperNode) {
	      if (!popperNode || _this.popperNode === popperNode) return;
	      (0, _utils.safeInvoke)(_this.props.innerRef, popperNode);
	      _this.popperNode = popperNode;

	      _this.updatePopperInstance();
	    });
	    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)), "setArrowNode", function (arrowNode) {
	      _this.arrowNode = arrowNode;
	    });
	    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)), "updateStateModifier", {
	      enabled: true,
	      order: 900,
	      fn: function fn(data) {
	        var placement = data.placement;

	        _this.setState({
	          data: data,
	          placement: placement
	        });

	        return data;
	      }
	    });
	    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)), "getOptions", function () {
	      return {
	        placement: _this.props.placement,
	        eventsEnabled: _this.props.eventsEnabled,
	        positionFixed: _this.props.positionFixed,
	        modifiers: (0, _extends2.default)({}, _this.props.modifiers, {
	          arrow: (0, _extends2.default)({}, _this.props.modifiers && _this.props.modifiers.arrow, {
	            enabled: !!_this.arrowNode,
	            element: _this.arrowNode
	          }),
	          applyStyle: {
	            enabled: false
	          },
	          updateStateModifier: _this.updateStateModifier
	        })
	      };
	    });
	    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)), "getPopperStyle", function () {
	      return !_this.popperNode || !_this.state.data ? initialStyle : (0, _extends2.default)({
	        position: _this.state.data.offsets.popper.position
	      }, _this.state.data.styles);
	    });
	    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)), "getPopperPlacement", function () {
	      return !_this.state.data ? undefined : _this.state.placement;
	    });
	    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)), "getArrowStyle", function () {
	      return !_this.arrowNode || !_this.state.data ? initialArrowStyle : _this.state.data.arrowStyles;
	    });
	    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)), "getOutOfBoundariesState", function () {
	      return _this.state.data ? _this.state.data.hide : undefined;
	    });
	    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)), "destroyPopperInstance", function () {
	      if (!_this.popperInstance) return;

	      _this.popperInstance.destroy();

	      _this.popperInstance = null;
	    });
	    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)), "updatePopperInstance", function () {
	      _this.destroyPopperInstance();

	      var _assertThisInitialize = (0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)),
	          popperNode = _assertThisInitialize.popperNode;

	      var referenceElement = _this.props.referenceElement;
	      if (!referenceElement || !popperNode) return;
	      _this.popperInstance = new _popper.default(referenceElement, popperNode, _this.getOptions());
	    });
	    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)), "scheduleUpdate", function () {
	      if (_this.popperInstance) {
	        _this.popperInstance.scheduleUpdate();
	      }
	    });
	    return _this;
	  }

	  var _proto = InnerPopper.prototype;

	  _proto.componentDidUpdate = function componentDidUpdate(prevProps, prevState) {
	    // If the Popper.js options have changed, update the instance (destroy + create)
	    if (this.props.placement !== prevProps.placement || this.props.referenceElement !== prevProps.referenceElement || this.props.positionFixed !== prevProps.positionFixed) {
	      this.updatePopperInstance();
	    } else if (this.props.eventsEnabled !== prevProps.eventsEnabled && this.popperInstance) {
	      this.props.eventsEnabled ? this.popperInstance.enableEventListeners() : this.popperInstance.disableEventListeners();
	    } // A placement difference in state means popper determined a new placement
	    // apart from the props value. By the time the popper element is rendered with
	    // the new position Popper has already measured it, if the place change triggers
	    // a size change it will result in a misaligned popper. So we schedule an update to be sure.


	    if (prevState.placement !== this.state.placement) {
	      this.scheduleUpdate();
	    }
	  };

	  _proto.componentWillUnmount = function componentWillUnmount() {
	    (0, _utils.safeInvoke)(this.props.innerRef, null);
	    this.destroyPopperInstance();
	  };

	  _proto.render = function render() {
	    return (0, _utils.unwrapArray)(this.props.children)({
	      ref: this.setPopperNode,
	      style: this.getPopperStyle(),
	      placement: this.getPopperPlacement(),
	      outOfBoundaries: this.getOutOfBoundariesState(),
	      scheduleUpdate: this.scheduleUpdate,
	      arrowProps: {
	        ref: this.setArrowNode,
	        style: this.getArrowStyle()
	      }
	    });
	  };

	  return InnerPopper;
	}(React.Component);

	exports.InnerPopper = InnerPopper;
	(0, _defineProperty2.default)(InnerPopper, "defaultProps", {
	  placement: 'bottom',
	  eventsEnabled: true,
	  referenceElement: undefined,
	  positionFixed: false
	});
	var placements = _popper.default.placements;
	exports.placements = placements;

	function Popper(_ref) {
	  var referenceElement = _ref.referenceElement,
	      props = (0, _objectWithoutPropertiesLoose2.default)(_ref, ["referenceElement"]);
	  return React.createElement(_Manager.ManagerContext.Consumer, null, function (_ref2) {
	    var referenceNode = _ref2.referenceNode;
	    return React.createElement(InnerPopper, (0, _extends2.default)({
	      referenceElement: referenceElement !== undefined ? referenceElement : referenceNode
	    }, props));
	  });
	}

/***/ }),
/* 746 */,
/* 747 */,
/* 748 */,
/* 749 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	var _interopRequireWildcard = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireWildcard\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = exports.ManagerContext = void 0;

	var _extends2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/extends\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _inheritsLoose2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/inheritsLoose\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _assertThisInitialized2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/assertThisInitialized\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _defineProperty2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/defineProperty\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var React = _interopRequireWildcard(__webpack_require__(3));

	var _createReactContext = _interopRequireDefault(__webpack_require__(750));

	var ManagerContext = (0, _createReactContext.default)({
	  setReferenceNode: undefined,
	  referenceNode: undefined
	});
	exports.ManagerContext = ManagerContext;

	var Manager =
	/*#__PURE__*/
	function (_React$Component) {
	  (0, _inheritsLoose2.default)(Manager, _React$Component);

	  function Manager() {
	    var _this;

	    _this = _React$Component.call(this) || this;
	    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)), "setReferenceNode", function (referenceNode) {
	      if (!referenceNode || _this.state.context.referenceNode === referenceNode) {
	        return;
	      }

	      _this.setState(function (_ref) {
	        var context = _ref.context;
	        return {
	          context: (0, _extends2.default)({}, context, {
	            referenceNode: referenceNode
	          })
	        };
	      });
	    });
	    _this.state = {
	      context: {
	        setReferenceNode: _this.setReferenceNode,
	        referenceNode: undefined
	      }
	    };
	    return _this;
	  }

	  var _proto = Manager.prototype;

	  _proto.render = function render() {
	    return React.createElement(ManagerContext.Provider, {
	      value: this.state.context
	    }, this.props.children);
	  };

	  return Manager;
	}(React.Component);

	exports.default = Manager;

/***/ }),
/* 750 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var _implementation = __webpack_require__(751);

	var _implementation2 = _interopRequireDefault(_implementation);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = _react2.default.createContext || _implementation2.default;
	module.exports = exports['default'];

/***/ }),
/* 751 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	exports.__esModule = true;

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"prop-types\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _gud = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"gud\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	var _gud2 = _interopRequireDefault(_gud);

	var _warning = __webpack_require__(753);

	var _warning2 = _interopRequireDefault(_warning);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var MAX_SIGNED_31_BIT_INT = 1073741823;

	// Inlined Object.is polyfill.
	// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
	function objectIs(x, y) {
	  if (x === y) {
	    return x !== 0 || 1 / x === 1 / y;
	  } else {
	    return x !== x && y !== y;
	  }
	}

	function createEventEmitter(value) {
	  var handlers = [];
	  return {
	    on: function on(handler) {
	      handlers.push(handler);
	    },
	    off: function off(handler) {
	      handlers = handlers.filter(function (h) {
	        return h !== handler;
	      });
	    },
	    get: function get() {
	      return value;
	    },
	    set: function set(newValue, changedBits) {
	      value = newValue;
	      handlers.forEach(function (handler) {
	        return handler(value, changedBits);
	      });
	    }
	  };
	}

	function onlyChild(children) {
	  return Array.isArray(children) ? children[0] : children;
	}

	function createReactContext(defaultValue, calculateChangedBits) {
	  var _Provider$childContex, _Consumer$contextType;

	  var contextProp = '__create-react-context-' + (0, _gud2.default)() + '__';

	  var Provider = function (_Component) {
	    _inherits(Provider, _Component);

	    function Provider() {
	      var _temp, _this, _ret;

	      _classCallCheck(this, Provider);

	      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	        args[_key] = arguments[_key];
	      }

	      return _ret = (_temp = (_this = _possibleConstructorReturn(this, _Component.call.apply(_Component, [this].concat(args))), _this), _this.emitter = createEventEmitter(_this.props.value), _temp), _possibleConstructorReturn(_this, _ret);
	    }

	    Provider.prototype.getChildContext = function getChildContext() {
	      var _ref;

	      return _ref = {}, _ref[contextProp] = this.emitter, _ref;
	    };

	    Provider.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
	      if (this.props.value !== nextProps.value) {
	        var oldValue = this.props.value;
	        var newValue = nextProps.value;
	        var changedBits = void 0;

	        if (objectIs(oldValue, newValue)) {
	          changedBits = 0; // No change
	        } else {
	          changedBits = typeof calculateChangedBits === 'function' ? calculateChangedBits(oldValue, newValue) : MAX_SIGNED_31_BIT_INT;
	          if (process.env.NODE_ENV !== 'production') {
	            (0, _warning2.default)((changedBits & MAX_SIGNED_31_BIT_INT) === changedBits, 'calculateChangedBits: Expected the return value to be a ' + '31-bit integer. Instead received: %s', changedBits);
	          }

	          changedBits |= 0;

	          if (changedBits !== 0) {
	            this.emitter.set(nextProps.value, changedBits);
	          }
	        }
	      }
	    };

	    Provider.prototype.render = function render() {
	      return this.props.children;
	    };

	    return Provider;
	  }(_react.Component);

	  Provider.childContextTypes = (_Provider$childContex = {}, _Provider$childContex[contextProp] = _propTypes2.default.object.isRequired, _Provider$childContex);

	  var Consumer = function (_Component2) {
	    _inherits(Consumer, _Component2);

	    function Consumer() {
	      var _temp2, _this2, _ret2;

	      _classCallCheck(this, Consumer);

	      for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
	        args[_key2] = arguments[_key2];
	      }

	      return _ret2 = (_temp2 = (_this2 = _possibleConstructorReturn(this, _Component2.call.apply(_Component2, [this].concat(args))), _this2), _this2.state = {
	        value: _this2.getValue()
	      }, _this2.onUpdate = function (newValue, changedBits) {
	        var observedBits = _this2.observedBits | 0;
	        if ((observedBits & changedBits) !== 0) {
	          _this2.setState({ value: _this2.getValue() });
	        }
	      }, _temp2), _possibleConstructorReturn(_this2, _ret2);
	    }

	    Consumer.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
	      var observedBits = nextProps.observedBits;

	      this.observedBits = observedBits === undefined || observedBits === null ? MAX_SIGNED_31_BIT_INT // Subscribe to all changes by default
	      : observedBits;
	    };

	    Consumer.prototype.componentDidMount = function componentDidMount() {
	      if (this.context[contextProp]) {
	        this.context[contextProp].on(this.onUpdate);
	      }
	      var observedBits = this.props.observedBits;

	      this.observedBits = observedBits === undefined || observedBits === null ? MAX_SIGNED_31_BIT_INT // Subscribe to all changes by default
	      : observedBits;
	    };

	    Consumer.prototype.componentWillUnmount = function componentWillUnmount() {
	      if (this.context[contextProp]) {
	        this.context[contextProp].off(this.onUpdate);
	      }
	    };

	    Consumer.prototype.getValue = function getValue() {
	      if (this.context[contextProp]) {
	        return this.context[contextProp].get();
	      } else {
	        return defaultValue;
	      }
	    };

	    Consumer.prototype.render = function render() {
	      return onlyChild(this.props.children)(this.state.value);
	    };

	    return Consumer;
	  }(_react.Component);

	  Consumer.contextTypes = (_Consumer$contextType = {}, _Consumer$contextType[contextProp] = _propTypes2.default.object, _Consumer$contextType);


	  return {
	    Provider: Provider,
	    Consumer: Consumer
	  };
	}

	exports.default = createReactContext;
	module.exports = exports['default'];
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 752 */,
/* 753 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright (c) 2014-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var emptyFunction = __webpack_require__(754);

	/**
	 * Similar to invariant but only logs a warning if the condition is not met.
	 * This can be used to log issues in development environments in critical
	 * paths. Removing the logging code for production environments will keep the
	 * same logic and follow the same code paths.
	 */

	var warning = emptyFunction;

	if (process.env.NODE_ENV !== 'production') {
	  var printWarning = function printWarning(format) {
	    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
	      args[_key - 1] = arguments[_key];
	    }

	    var argIndex = 0;
	    var message = 'Warning: ' + format.replace(/%s/g, function () {
	      return args[argIndex++];
	    });
	    if (typeof console !== 'undefined') {
	      console.error(message);
	    }
	    try {
	      // --- Welcome to debugging React ---
	      // This error was thrown as a convenience so that you can use this stack
	      // to find the callsite that caused this warning to fire.
	      throw new Error(message);
	    } catch (x) {}
	  };

	  warning = function warning(condition, format) {
	    if (format === undefined) {
	      throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');
	    }

	    if (format.indexOf('Failed Composite propType: ') === 0) {
	      return; // Ignore CompositeComponent proptype check.
	    }

	    if (!condition) {
	      for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
	        args[_key2 - 2] = arguments[_key2];
	      }

	      printWarning.apply(undefined, [format].concat(args));
	    }
	  };
	}

	module.exports = warning;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 754 */
/***/ (function(module, exports) {

	"use strict";

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * 
	 */

	function makeEmptyFunction(arg) {
	  return function () {
	    return arg;
	  };
	}

	/**
	 * This function accepts and discards inputs; it has no side effects. This is
	 * primarily useful idiomatically for overridable function endpoints which
	 * always need to be callable, since JS lacks a null-call idiom ala Cocoa.
	 */
	var emptyFunction = function emptyFunction() {};

	emptyFunction.thatReturns = makeEmptyFunction;
	emptyFunction.thatReturnsFalse = makeEmptyFunction(false);
	emptyFunction.thatReturnsTrue = makeEmptyFunction(true);
	emptyFunction.thatReturnsNull = makeEmptyFunction(null);
	emptyFunction.thatReturnsThis = function () {
	  return this;
	};
	emptyFunction.thatReturnsArgument = function (arg) {
	  return arg;
	};

	module.exports = emptyFunction;

/***/ }),
/* 755 */
/***/ (function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.safeInvoke = exports.unwrapArray = void 0;

	/**
	 * Takes an argument and if it's an array, returns the first item in the array,
	 * otherwise returns the argument. Used for Preact compatibility.
	 */
	var unwrapArray = function unwrapArray(arg) {
	  return Array.isArray(arg) ? arg[0] : arg;
	};
	/**
	 * Takes a maybe-undefined function and arbitrary args and invokes the function
	 * only if it is defined.
	 */


	exports.unwrapArray = unwrapArray;

	var safeInvoke = function safeInvoke(fn) {
	  if (typeof fn === "function") {
	    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
	      args[_key - 1] = arguments[_key];
	    }

	    return fn.apply(void 0, args);
	  }
	};

	exports.safeInvoke = safeInvoke;

/***/ }),
/* 756 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	var _interopRequireWildcard = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireWildcard\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = Reference;

	var _extends2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/extends\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _inheritsLoose2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/inheritsLoose\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _assertThisInitialized2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/assertThisInitialized\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _defineProperty2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/defineProperty\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var React = _interopRequireWildcard(__webpack_require__(3));

	var _warning = _interopRequireDefault(__webpack_require__(757));

	var _Manager = __webpack_require__(749);

	var _utils = __webpack_require__(755);

	var InnerReference =
	/*#__PURE__*/
	function (_React$Component) {
	  (0, _inheritsLoose2.default)(InnerReference, _React$Component);

	  function InnerReference() {
	    var _this;

	    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;
	    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)), "refHandler", function (node) {
	      (0, _utils.safeInvoke)(_this.props.innerRef, node);
	      (0, _utils.safeInvoke)(_this.props.setReferenceNode, node);
	    });
	    return _this;
	  }

	  var _proto = InnerReference.prototype;

	  _proto.render = function render() {
	    (0, _warning.default)(Boolean(this.props.setReferenceNode), '`Reference` should not be used outside of a `Manager` component.');
	    return (0, _utils.unwrapArray)(this.props.children)({
	      ref: this.refHandler
	    });
	  };

	  return InnerReference;
	}(React.Component);

	function Reference(props) {
	  return React.createElement(_Manager.ManagerContext.Consumer, null, function (_ref) {
	    var setReferenceNode = _ref.setReferenceNode;
	    return React.createElement(InnerReference, (0, _extends2.default)({
	      setReferenceNode: setReferenceNode
	    }, props));
	  });
	}

/***/ }),
/* 757 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright (c) 2014-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 */

	'use strict';

	/**
	 * Similar to invariant but only logs a warning if the condition is not met.
	 * This can be used to log issues in development environments in critical
	 * paths. Removing the logging code for production environments will keep the
	 * same logic and follow the same code paths.
	 */

	var __DEV__ = process.env.NODE_ENV !== 'production';

	var warning = function() {};

	if (__DEV__) {
	  var printWarning = function printWarning(format, args) {
	    var len = arguments.length;
	    args = new Array(len > 1 ? len - 1 : 0);
	    for (var key = 1; key < len; key++) {
	      args[key - 1] = arguments[key];
	    }
	    var argIndex = 0;
	    var message = 'Warning: ' +
	      format.replace(/%s/g, function() {
	        return args[argIndex++];
	      });
	    if (typeof console !== 'undefined') {
	      console.error(message);
	    }
	    try {
	      // --- Welcome to debugging React ---
	      // This error was thrown as a convenience so that you can use this stack
	      // to find the callsite that caused this warning to fire.
	      throw new Error(message);
	    } catch (x) {}
	  }

	  warning = function(condition, format, args) {
	    var len = arguments.length;
	    args = new Array(len > 2 ? len - 2 : 0);
	    for (var key = 2; key < len; key++) {
	      args[key - 2] = arguments[key];
	    }
	    if (format === undefined) {
	      throw new Error(
	          '`warning(condition, format, ...args)` requires a warning ' +
	          'message argument'
	      );
	    }
	    if (!condition) {
	      printWarning.apply(null, [format].concat(args));
	    }
	  };
	}

	module.exports = warning;

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 758 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.placementMapping = exports.positions = exports.positionsMapping = void 0;

	var _invert2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/invert\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _keys2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/keys\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var positionsMapping = {
	  'top center': 'top',
	  'top left': 'top-start',
	  'top right': 'top-end',
	  'bottom center': 'bottom',
	  'bottom left': 'bottom-start',
	  'bottom right': 'bottom-end',
	  'right center': 'right',
	  'left center': 'left'
	};
	exports.positionsMapping = positionsMapping;
	var positions = (0, _keys2["default"])(positionsMapping);
	exports.positions = positions;
	var placementMapping = (0, _invert2["default"])(positionsMapping);
	exports.placementMapping = placementMapping;

/***/ }),
/* 759 */,
/* 760 */,
/* 761 */,
/* 762 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _classCallCheck2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/classCallCheck\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _createClass2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/createClass\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _memoize2 = _interopRequireDefault(__webpack_require__(194));

	var _invoke2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/invoke\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _refUtils = __webpack_require__(534);

	var ReferenceProxy =
	/*#__PURE__*/
	function () {
	  function ReferenceProxy(refObject) {
	    (0, _classCallCheck2["default"])(this, ReferenceProxy);
	    this.ref = refObject;
	  }

	  (0, _createClass2["default"])(ReferenceProxy, [{
	    key: "getBoundingClientRect",
	    value: function getBoundingClientRect() {
	      return (0, _invoke2["default"])(this.ref.current, 'getBoundingClientRect', {});
	    }
	  }, {
	    key: "clientWidth",
	    get: function get() {
	      return this.getBoundingClientRect().width;
	    }
	  }, {
	    key: "clientHeight",
	    get: function get() {
	      return this.getBoundingClientRect().height;
	    }
	  }, {
	    key: "parentNode",
	    get: function get() {
	      return this.ref.current ? this.ref.current.parentNode : undefined;
	    }
	  }]);
	  return ReferenceProxy;
	}();
	/**
	 * Popper.js does not support ref objects from `createRef()` as referenceElement. If we will pass
	 * directly `ref`, `ref.current` will be `null` at the render process. We use memoize to keep the
	 * same reference between renders.
	 *
	 * @see https://popper.js.org/popper-documentation.html#referenceObject
	 */


	var createReferenceProxy = (0, _memoize2["default"])(function (reference) {
	  return new ReferenceProxy( // TODO: use toRefObject from Stardust
	  // https://github.com/stardust-ui/react/issues/998
	  (0, _refUtils.isRefObject)(reference) ? reference : {
	    current: reference
	  });
	});
	var _default = createReferenceProxy;
	exports["default"] = _default;

/***/ }),
/* 763 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = PopupContent;

	var _extends2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/extends\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _classnames = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"classnames\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _propTypes = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"prop-types\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _react = _interopRequireDefault(__webpack_require__(3));

	var _lib = __webpack_require__(256);

	/**
	 * A PopupContent displays the content body of a Popover.
	 */
	function PopupContent(props) {
	  var children = props.children,
	      className = props.className,
	      content = props.content;
	  var classes = (0, _classnames["default"])('content', className);
	  var rest = (0, _lib.getUnhandledProps)(PopupContent, props);
	  var ElementType = (0, _lib.getElementType)(PopupContent, props);
	  return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	    className: classes
	  }), _lib.childrenUtils.isNil(children) ? content : children);
	}

	PopupContent.handledProps = ["as", "children", "className", "content"];
	PopupContent.propTypes = process.env.NODE_ENV !== "production" ? {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** The content of the Popup */
	  children: _propTypes["default"].node,

	  /** Classes to add to the Popup content className. */
	  className: _propTypes["default"].string,

	  /** Shorthand for primary content. */
	  content: _lib.customPropTypes.contentShorthand
	} : {};
	PopupContent.create = (0, _lib.createShorthandFactory)(PopupContent, function (children) {
	  return {
	    children: children
	  };
	});
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 764 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = PopupHeader;

	var _extends2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/extends\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _classnames = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"classnames\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _propTypes = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"prop-types\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _react = _interopRequireDefault(__webpack_require__(3));

	var _lib = __webpack_require__(256);

	/**
	 * A PopupHeader displays a header in a Popover.
	 */
	function PopupHeader(props) {
	  var children = props.children,
	      className = props.className,
	      content = props.content;
	  var classes = (0, _classnames["default"])('header', className);
	  var rest = (0, _lib.getUnhandledProps)(PopupHeader, props);
	  var ElementType = (0, _lib.getElementType)(PopupHeader, props);
	  return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	    className: classes
	  }), _lib.childrenUtils.isNil(children) ? content : children);
	}

	PopupHeader.handledProps = ["as", "children", "className", "content"];
	PopupHeader.propTypes = process.env.NODE_ENV !== "production" ? {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Primary content. */
	  children: _propTypes["default"].node,

	  /** Additional classes. */
	  className: _propTypes["default"].string,

	  /** Shorthand for primary content. */
	  content: _lib.customPropTypes.contentShorthand
	} : {};
	PopupHeader.create = (0, _lib.createShorthandFactory)(PopupHeader, function (children) {
	  return {
	    children: children
	  };
	});
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 765 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	Object.defineProperty(exports, "default", {
	  enumerable: true,
	  get: function get() {
	    return _Progress["default"];
	  }
	});

	var _Progress = _interopRequireDefault(__webpack_require__(766));

/***/ }),
/* 766 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";

	var _interopRequireWildcard = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireWildcard\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _extends2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/extends\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _classCallCheck2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/classCallCheck\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _createClass2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/createClass\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/possibleConstructorReturn\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _getPrototypeOf3 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/getPrototypeOf\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _assertThisInitialized2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/assertThisInitialized\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _inherits2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/inherits\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _defineProperty2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/defineProperty\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _round2 = _interopRequireDefault(__webpack_require__(767));

	var _clamp2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/clamp\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _isUndefined2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/isUndefined\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _without2 = _interopRequireDefault(__webpack_require__(542));

	var _classnames = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"classnames\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _propTypes = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"prop-types\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _react = _interopRequireWildcard(__webpack_require__(3));

	var _lib = __webpack_require__(256);

	/**
	 * A progress bar shows the progression of a task.
	 */
	var Progress =
	/*#__PURE__*/
	function (_Component) {
	  (0, _inherits2["default"])(Progress, _Component);

	  function Progress() {
	    var _getPrototypeOf2;

	    var _this;

	    (0, _classCallCheck2["default"])(this, Progress);

	    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    _this = (0, _possibleConstructorReturn2["default"])(this, (_getPrototypeOf2 = (0, _getPrototypeOf3["default"])(Progress)).call.apply(_getPrototypeOf2, [this].concat(args)));
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "calculatePercent", function () {
	      var _this$props = _this.props,
	          percent = _this$props.percent,
	          total = _this$props.total,
	          value = _this$props.value;
	      if (!(0, _isUndefined2["default"])(percent)) return percent;
	      if (!(0, _isUndefined2["default"])(total) && !(0, _isUndefined2["default"])(value)) return value / total * 100;
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "computeValueText", function (percent) {
	      var _this$props2 = _this.props,
	          progress = _this$props2.progress,
	          total = _this$props2.total,
	          value = _this$props2.value;
	      if (progress === 'value') return value;
	      if (progress === 'ratio') return "".concat(value, "/").concat(total);
	      return "".concat(percent, "%");
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "getPercent", function () {
	      var _this$props3 = _this.props,
	          precision = _this$props3.precision,
	          progress = _this$props3.progress,
	          total = _this$props3.total,
	          value = _this$props3.value;
	      var percent = (0, _clamp2["default"])(_this.calculatePercent(), 0, 100);

	      if (!(0, _isUndefined2["default"])(total) && !(0, _isUndefined2["default"])(value) && progress === 'value') {
	        return value / total * 100;
	      }

	      if (progress === 'value') return value;
	      if ((0, _isUndefined2["default"])(precision)) return percent;
	      return (0, _round2["default"])(percent, precision);
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "isAutoSuccess", function () {
	      var _this$props4 = _this.props,
	          autoSuccess = _this$props4.autoSuccess,
	          percent = _this$props4.percent,
	          total = _this$props4.total,
	          value = _this$props4.value;
	      return autoSuccess && (percent >= 100 || value >= total);
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "renderLabel", function () {
	      var _this$props5 = _this.props,
	          children = _this$props5.children,
	          content = _this$props5.content,
	          label = _this$props5.label;
	      if (!_lib.childrenUtils.isNil(children)) return _react["default"].createElement("div", {
	        className: "label"
	      }, children);
	      if (!_lib.childrenUtils.isNil(content)) return _react["default"].createElement("div", {
	        className: "label"
	      }, content);
	      return (0, _lib.createHTMLDivision)(label, {
	        autoGenerateKey: false,
	        defaultProps: {
	          className: 'label'
	        }
	      });
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "renderProgress", function (percent) {
	      var _this$props6 = _this.props,
	          precision = _this$props6.precision,
	          progress = _this$props6.progress;
	      if (!progress && (0, _isUndefined2["default"])(precision)) return;
	      return _react["default"].createElement("div", {
	        className: "progress"
	      }, _this.computeValueText(percent));
	    });
	    return _this;
	  }

	  (0, _createClass2["default"])(Progress, [{
	    key: "render",
	    value: function render() {
	      var _this$props7 = this.props,
	          active = _this$props7.active,
	          attached = _this$props7.attached,
	          className = _this$props7.className,
	          color = _this$props7.color,
	          disabled = _this$props7.disabled,
	          error = _this$props7.error,
	          indicating = _this$props7.indicating,
	          inverted = _this$props7.inverted,
	          size = _this$props7.size,
	          success = _this$props7.success,
	          warning = _this$props7.warning;
	      var classes = (0, _classnames["default"])('ui', color, size, (0, _lib.useKeyOnly)(active || indicating, 'active'), (0, _lib.useKeyOnly)(disabled, 'disabled'), (0, _lib.useKeyOnly)(error, 'error'), (0, _lib.useKeyOnly)(indicating, 'indicating'), (0, _lib.useKeyOnly)(inverted, 'inverted'), (0, _lib.useKeyOnly)(success || this.isAutoSuccess(), 'success'), (0, _lib.useKeyOnly)(warning, 'warning'), (0, _lib.useValueAndKey)(attached, 'attached'), 'progress', className);
	      var rest = (0, _lib.getUnhandledProps)(Progress, this.props);
	      var ElementType = (0, _lib.getElementType)(Progress, this.props);
	      var percent = this.getPercent() || 0;
	      return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	        className: classes,
	        "data-percent": Math.floor(percent)
	      }), _react["default"].createElement("div", {
	        className: "bar",
	        style: {
	          width: "".concat(percent, "%")
	        }
	      }, this.renderProgress(percent)), this.renderLabel());
	    }
	  }]);
	  return Progress;
	}(_react.Component);

	(0, _defineProperty2["default"])(Progress, "handledProps", ["active", "as", "attached", "autoSuccess", "children", "className", "color", "content", "disabled", "error", "indicating", "inverted", "label", "percent", "precision", "progress", "size", "success", "total", "value", "warning"]);
	Progress.propTypes = process.env.NODE_ENV !== "production" ? {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** A progress bar can show activity. */
	  active: _propTypes["default"].bool,

	  /** A progress bar can attach to and show the progress of an element (i.e. Card or Segment). */
	  attached: _propTypes["default"].oneOf(['top', 'bottom']),

	  /** Whether success state should automatically trigger when progress completes. */
	  autoSuccess: _propTypes["default"].bool,

	  /** Primary content. */
	  children: _propTypes["default"].node,

	  /** Additional classes. */
	  className: _propTypes["default"].string,

	  /** A progress bar can have different colors. */
	  color: _propTypes["default"].oneOf(_lib.SUI.COLORS),

	  /** Shorthand for primary content. */
	  content: _lib.customPropTypes.contentShorthand,

	  /** A progress bar be disabled. */
	  disabled: _propTypes["default"].bool,

	  /** A progress bar can show a error state. */
	  error: _propTypes["default"].bool,

	  /** An indicating progress bar visually indicates the current level of progress of a task. */
	  indicating: _propTypes["default"].bool,

	  /** A progress bar can have its colors inverted. */
	  inverted: _propTypes["default"].bool,

	  /** Can be set to either to display progress as percent or ratio. */
	  label: _lib.customPropTypes.itemShorthand,

	  /** Current percent complete. */
	  percent: _lib.customPropTypes.every([_lib.customPropTypes.disallow(['total', 'value']), _propTypes["default"].oneOfType([_propTypes["default"].number, _propTypes["default"].string])]),

	  /** Decimal point precision for calculated progress. */
	  precision: _propTypes["default"].number,

	  /** A progress bar can contain a text value indicating current progress. */
	  progress: _propTypes["default"].oneOfType([_propTypes["default"].bool, _propTypes["default"].oneOf(['percent', 'ratio', 'value'])]),

	  /** A progress bar can vary in size. */
	  size: _propTypes["default"].oneOf((0, _without2["default"])(_lib.SUI.SIZES, 'mini', 'huge', 'massive')),

	  /** A progress bar can show a success state. */
	  success: _propTypes["default"].bool,

	  /** For use with value. Together, these will calculate the percent. Mutually excludes percent. */
	  total: _lib.customPropTypes.every([_lib.customPropTypes.demand(['value']), _lib.customPropTypes.disallow(['percent']), _propTypes["default"].oneOfType([_propTypes["default"].number, _propTypes["default"].string])]),

	  /** For use with total. Together, these will calculate the percent. Mutually excludes percent. */
	  value: _lib.customPropTypes.every([_lib.customPropTypes.disallow(['percent']), _propTypes["default"].oneOfType([_propTypes["default"].number, _propTypes["default"].string])]),

	  /** A progress bar can show a warning state. */
	  warning: _propTypes["default"].bool
	} : {};
	var _default = Progress;
	exports["default"] = _default;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 767 */
/***/ (function(module, exports, __webpack_require__) {

	var createRound = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"./_createRound\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	/**
	 * Computes `number` rounded to `precision`.
	 *
	 * @static
	 * @memberOf _
	 * @since 3.10.0
	 * @category Math
	 * @param {number} number The number to round.
	 * @param {number} [precision=0] The precision to round to.
	 * @returns {number} Returns the rounded number.
	 * @example
	 *
	 * _.round(4.006);
	 * // => 4
	 *
	 * _.round(4.006, 2);
	 * // => 4.01
	 *
	 * _.round(4060, -2);
	 * // => 4100
	 */
	var round = createRound('round');

	module.exports = round;


/***/ }),
/* 768 */,
/* 769 */,
/* 770 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	Object.defineProperty(exports, "default", {
	  enumerable: true,
	  get: function get() {
	    return _Rating["default"];
	  }
	});

	var _Rating = _interopRequireDefault(__webpack_require__(771));

/***/ }),
/* 771 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _extends2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/extends\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _objectSpread2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/objectSpread\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _classCallCheck2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/classCallCheck\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _createClass2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/createClass\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/possibleConstructorReturn\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _getPrototypeOf3 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/getPrototypeOf\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _assertThisInitialized2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/assertThisInitialized\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _inherits2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/inherits\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _defineProperty2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/defineProperty\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _times2 = _interopRequireDefault(__webpack_require__(772));

	var _invoke2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/invoke\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _without2 = _interopRequireDefault(__webpack_require__(542));

	var _classnames = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"classnames\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _propTypes = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"prop-types\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _react = _interopRequireDefault(__webpack_require__(3));

	var _lib = __webpack_require__(256);

	var _RatingIcon = _interopRequireDefault(__webpack_require__(773));

	/**
	 * A rating indicates user interest in content.
	 */
	var Rating =
	/*#__PURE__*/
	function (_Component) {
	  (0, _inherits2["default"])(Rating, _Component);

	  function Rating() {
	    var _getPrototypeOf2;

	    var _this;

	    (0, _classCallCheck2["default"])(this, Rating);

	    for (var _len = arguments.length, _args = new Array(_len), _key = 0; _key < _len; _key++) {
	      _args[_key] = arguments[_key];
	    }

	    _this = (0, _possibleConstructorReturn2["default"])(this, (_getPrototypeOf2 = (0, _getPrototypeOf3["default"])(Rating)).call.apply(_getPrototypeOf2, [this].concat(_args)));
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "handleIconClick", function (e, _ref) {
	      var index = _ref.index;
	      var _this$props = _this.props,
	          clearable = _this$props.clearable,
	          disabled = _this$props.disabled,
	          maxRating = _this$props.maxRating,
	          onRate = _this$props.onRate;
	      var rating = _this.state.rating;
	      if (disabled) return; // default newRating is the clicked icon
	      // allow toggling a binary rating
	      // allow clearing ratings

	      var newRating = index + 1;

	      if (clearable === 'auto' && maxRating === 1) {
	        newRating = +!rating;
	      } else if (clearable === true && newRating === rating) {
	        newRating = 0;
	      } // set rating


	      _this.trySetState({
	        rating: newRating
	      }, {
	        isSelecting: false
	      });

	      if (onRate) onRate(e, (0, _objectSpread2["default"])({}, _this.props, {
	        rating: newRating
	      }));
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "handleIconMouseEnter", function (e, _ref2) {
	      var index = _ref2.index;
	      if (_this.props.disabled) return;

	      _this.setState({
	        selectedIndex: index,
	        isSelecting: true
	      });
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "handleMouseLeave", function () {
	      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
	        args[_key2] = arguments[_key2];
	      }

	      _invoke2["default"].apply(void 0, [_this.props, 'onMouseLeave'].concat(args));

	      if (_this.props.disabled) return;

	      _this.setState({
	        selectedIndex: -1,
	        isSelecting: false
	      });
	    });
	    return _this;
	  }

	  (0, _createClass2["default"])(Rating, [{
	    key: "render",
	    value: function render() {
	      var _this2 = this;

	      var _this$props2 = this.props,
	          className = _this$props2.className,
	          disabled = _this$props2.disabled,
	          icon = _this$props2.icon,
	          maxRating = _this$props2.maxRating,
	          size = _this$props2.size;
	      var _this$state = this.state,
	          rating = _this$state.rating,
	          selectedIndex = _this$state.selectedIndex,
	          isSelecting = _this$state.isSelecting;
	      var classes = (0, _classnames["default"])('ui', icon, size, (0, _lib.useKeyOnly)(disabled, 'disabled'), (0, _lib.useKeyOnly)(isSelecting && !disabled && selectedIndex >= 0, 'selected'), 'rating', className);
	      var rest = (0, _lib.getUnhandledProps)(Rating, this.props);
	      var ElementType = (0, _lib.getElementType)(Rating, this.props);
	      return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	        className: classes,
	        role: "radiogroup",
	        onMouseLeave: this.handleMouseLeave,
	        tabIndex: disabled ? 0 : -1
	      }), (0, _times2["default"])(maxRating, function (i) {
	        return _react["default"].createElement(_RatingIcon["default"], {
	          tabIndex: disabled ? -1 : 0,
	          active: rating >= i + 1,
	          "aria-checked": rating === i + 1,
	          "aria-posinset": i + 1,
	          "aria-setsize": maxRating,
	          index: i,
	          key: i,
	          onClick: _this2.handleIconClick,
	          onMouseEnter: _this2.handleIconMouseEnter,
	          selected: selectedIndex >= i && isSelecting
	        });
	      }));
	    }
	  }]);
	  return Rating;
	}(_lib.AutoControlledComponent);

	exports["default"] = Rating;
	(0, _defineProperty2["default"])(Rating, "autoControlledProps", ['rating']);
	(0, _defineProperty2["default"])(Rating, "defaultProps", {
	  clearable: 'auto',
	  maxRating: 1
	});
	(0, _defineProperty2["default"])(Rating, "Icon", _RatingIcon["default"]);
	(0, _defineProperty2["default"])(Rating, "handledProps", ["as", "className", "clearable", "defaultRating", "disabled", "icon", "maxRating", "onRate", "rating", "size"]);
	Rating.propTypes = process.env.NODE_ENV !== "production" ? {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Additional classes. */
	  className: _propTypes["default"].string,

	  /**
	   * You can clear the rating by clicking on the current start rating.
	   * By default a rating will be only clearable if there is 1 icon.
	   * Setting to `true`/`false` will allow or disallow a user to clear their rating.
	   */
	  clearable: _propTypes["default"].oneOfType([_propTypes["default"].bool, _propTypes["default"].oneOf(['auto'])]),

	  /** The initial rating value. */
	  defaultRating: _propTypes["default"].oneOfType([_propTypes["default"].number, _propTypes["default"].string]),

	  /** You can disable or enable interactive rating.  Makes a read-only rating. */
	  disabled: _propTypes["default"].bool,

	  /** A rating can use a set of star or heart icons. */
	  icon: _propTypes["default"].oneOf(['star', 'heart']),

	  /** The total number of icons. */
	  maxRating: _propTypes["default"].oneOfType([_propTypes["default"].number, _propTypes["default"].string]),

	  /**
	   * Called after user selects a new rating.
	   *
	   * @param {SyntheticEvent} event - React's original SyntheticEvent.
	   * @param {object} data - All props and proposed rating.
	   */
	  onRate: _propTypes["default"].func,

	  /** The current number of active icons. */
	  rating: _propTypes["default"].oneOfType([_propTypes["default"].number, _propTypes["default"].string]),

	  /** A progress bar can vary in size. */
	  size: _propTypes["default"].oneOf((0, _without2["default"])(_lib.SUI.SIZES, 'medium', 'big'))
	} : {};
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 772 */
/***/ (function(module, exports, __webpack_require__) {

	var baseTimes = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"./_baseTimes\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())),
	    castFunction = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"./_castFunction\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())),
	    toInteger = __webpack_require__(280);

	/** Used as references for various `Number` constants. */
	var MAX_SAFE_INTEGER = 9007199254740991;

	/** Used as references for the maximum length and index of an array. */
	var MAX_ARRAY_LENGTH = 4294967295;

	/* Built-in method references for those with the same name as other `lodash` methods. */
	var nativeMin = Math.min;

	/**
	 * Invokes the iteratee `n` times, returning an array of the results of
	 * each invocation. The iteratee is invoked with one argument; (index).
	 *
	 * @static
	 * @since 0.1.0
	 * @memberOf _
	 * @category Util
	 * @param {number} n The number of times to invoke `iteratee`.
	 * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	 * @returns {Array} Returns the array of results.
	 * @example
	 *
	 * _.times(3, String);
	 * // => ['0', '1', '2']
	 *
	 *  _.times(4, _.constant(0));
	 * // => [0, 0, 0, 0]
	 */
	function times(n, iteratee) {
	  n = toInteger(n);
	  if (n < 1 || n > MAX_SAFE_INTEGER) {
	    return [];
	  }
	  var index = MAX_ARRAY_LENGTH,
	      length = nativeMin(n, MAX_ARRAY_LENGTH);

	  iteratee = castFunction(iteratee);
	  n -= MAX_ARRAY_LENGTH;

	  var result = baseTimes(length, iteratee);
	  while (++index < n) {
	    iteratee(index);
	  }
	  return result;
	}

	module.exports = times;


/***/ }),
/* 773 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";

	var _interopRequireWildcard = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireWildcard\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _extends2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/extends\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _classCallCheck2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/classCallCheck\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _createClass2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/createClass\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/possibleConstructorReturn\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _getPrototypeOf3 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/getPrototypeOf\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _assertThisInitialized2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/assertThisInitialized\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _inherits2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/inherits\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _defineProperty2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/defineProperty\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _invoke2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/invoke\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _classnames = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"classnames\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _keyboardKey = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"keyboard-key\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _propTypes = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"prop-types\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _react = _interopRequireWildcard(__webpack_require__(3));

	var _lib = __webpack_require__(256);

	/**
	 * An internal icon sub-component for Rating component
	 */
	var RatingIcon =
	/*#__PURE__*/
	function (_Component) {
	  (0, _inherits2["default"])(RatingIcon, _Component);

	  function RatingIcon() {
	    var _getPrototypeOf2;

	    var _this;

	    (0, _classCallCheck2["default"])(this, RatingIcon);

	    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    _this = (0, _possibleConstructorReturn2["default"])(this, (_getPrototypeOf2 = (0, _getPrototypeOf3["default"])(RatingIcon)).call.apply(_getPrototypeOf2, [this].concat(args)));
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "handleClick", function (e) {
	      (0, _invoke2["default"])(_this.props, 'onClick', e, _this.props);
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "handleKeyUp", function (e) {
	      (0, _invoke2["default"])(_this.props, 'onKeyUp', e, _this.props);

	      switch (_keyboardKey["default"].getCode(e)) {
	        case _keyboardKey["default"].Enter:
	        case _keyboardKey["default"].Spacebar:
	          e.preventDefault();
	          (0, _invoke2["default"])(_this.props, 'onClick', e, _this.props);
	          break;

	        default:
	      }
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "handleMouseEnter", function (e) {
	      (0, _invoke2["default"])(_this.props, 'onMouseEnter', e, _this.props);
	    });
	    return _this;
	  }

	  (0, _createClass2["default"])(RatingIcon, [{
	    key: "render",
	    value: function render() {
	      var _this$props = this.props,
	          active = _this$props.active,
	          className = _this$props.className,
	          selected = _this$props.selected;
	      var classes = (0, _classnames["default"])((0, _lib.useKeyOnly)(active, 'active'), (0, _lib.useKeyOnly)(selected, 'selected'), 'icon', className);
	      var rest = (0, _lib.getUnhandledProps)(RatingIcon, this.props);
	      var ElementType = (0, _lib.getElementType)(RatingIcon, this.props);
	      return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	        className: classes,
	        onClick: this.handleClick,
	        onKeyUp: this.handleKeyUp,
	        onMouseEnter: this.handleMouseEnter,
	        role: "radio"
	      }));
	    }
	  }]);
	  return RatingIcon;
	}(_react.Component);

	exports["default"] = RatingIcon;
	(0, _defineProperty2["default"])(RatingIcon, "defaultProps", {
	  as: 'i'
	});
	(0, _defineProperty2["default"])(RatingIcon, "handledProps", ["active", "as", "className", "index", "onClick", "onKeyUp", "onMouseEnter", "selected"]);
	RatingIcon.propTypes = process.env.NODE_ENV !== "production" ? {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Indicates activity of an icon. */
	  active: _propTypes["default"].bool,

	  /** Additional classes. */
	  className: _propTypes["default"].string,

	  /** An index of icon inside Rating. */
	  index: _propTypes["default"].number,

	  /**
	   * Called on click.
	   *
	   * @param {SyntheticEvent} event - React's original SyntheticEvent.
	   * @param {object} data - All props.
	   */
	  onClick: _propTypes["default"].func,

	  /**
	   * Called on keyup.
	   *
	   * @param {SyntheticEvent} event - React's original SyntheticEvent.
	   * @param {object} data - All props.
	   */
	  onKeyUp: _propTypes["default"].func,

	  /**
	   * Called on mouseenter.
	   *
	   * @param {SyntheticEvent} event - React's original SyntheticEvent.
	   * @param {object} data - All props.
	   */
	  onMouseEnter: _propTypes["default"].func,

	  /** Indicates selection of an icon. */
	  selected: _propTypes["default"].bool
	} : {};
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 774 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	Object.defineProperty(exports, "default", {
	  enumerable: true,
	  get: function get() {
	    return _Search["default"];
	  }
	});

	var _Search = _interopRequireDefault(__webpack_require__(775));

/***/ }),
/* 775 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _slicedToArray2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/slicedToArray\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _extends2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/extends\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _objectWithoutProperties2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/objectWithoutProperties\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _objectSpread2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/objectSpread\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _classCallCheck2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/classCallCheck\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _createClass2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/createClass\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/possibleConstructorReturn\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _assertThisInitialized2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/assertThisInitialized\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _getPrototypeOf3 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/getPrototypeOf\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _get3 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/get\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _inherits2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/inherits\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _defineProperty2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/defineProperty\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _isEmpty2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/isEmpty\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _partialRight2 = _interopRequireDefault(__webpack_require__(777));

	var _inRange2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/inRange\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _map2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/map\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _get4 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/get\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _reduce2 = _interopRequireDefault(__webpack_require__(562));

	var _invoke2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/invoke\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _without2 = _interopRequireDefault(__webpack_require__(542));

	var _classnames = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"classnames\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _keyboardKey = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"keyboard-key\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _propTypes = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"prop-types\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _react = _interopRequireDefault(__webpack_require__(3));

	var _shallowequal = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"shallowequal\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _lib = __webpack_require__(256);

	var _Input = _interopRequireDefault(__webpack_require__(665));

	var _SearchCategory = _interopRequireDefault(__webpack_require__(778));

	var _SearchResult = _interopRequireDefault(__webpack_require__(779));

	var _SearchResults = _interopRequireDefault(__webpack_require__(780));

	/**
	 * A search module allows a user to query for results from a selection of data
	 */
	var Search =
	/*#__PURE__*/
	function (_Component) {
	  (0, _inherits2["default"])(Search, _Component);

	  function Search() {
	    var _getPrototypeOf2;

	    var _this;

	    (0, _classCallCheck2["default"])(this, Search);

	    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    _this = (0, _possibleConstructorReturn2["default"])(this, (_getPrototypeOf2 = (0, _getPrototypeOf3["default"])(Search)).call.apply(_getPrototypeOf2, [this].concat(args)));
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "handleResultSelect", function (e, result) {
	      (0, _invoke2["default"])(_this.props, 'onResultSelect', e, (0, _objectSpread2["default"])({}, _this.props, {
	        result: result
	      }));
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "handleSelectionChange", function (e) {
	      var result = _this.getSelectedResult();

	      (0, _invoke2["default"])(_this.props, 'onSelectionChange', e, (0, _objectSpread2["default"])({}, _this.props, {
	        result: result
	      }));
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "closeOnEscape", function (e) {
	      if (_keyboardKey["default"].getCode(e) !== _keyboardKey["default"].Escape) return;
	      e.preventDefault();

	      _this.close();
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "moveSelectionOnKeyDown", function (e) {
	      switch (_keyboardKey["default"].getCode(e)) {
	        case _keyboardKey["default"].ArrowDown:
	          e.preventDefault();

	          _this.moveSelectionBy(e, 1);

	          break;

	        case _keyboardKey["default"].ArrowUp:
	          e.preventDefault();

	          _this.moveSelectionBy(e, -1);

	          break;

	        default:
	          break;
	      }
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "selectItemOnEnter", function (e) {
	      if (_keyboardKey["default"].getCode(e) !== _keyboardKey["default"].Enter) return;

	      var result = _this.getSelectedResult(); // prevent selecting null if there was no selected item value


	      if (!result) return;
	      e.preventDefault(); // notify the onResultSelect prop that the user is trying to change value

	      _this.setValue(result.title);

	      _this.handleResultSelect(e, result);

	      _this.close();
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "closeOnDocumentClick", function (e) {
	      _this.close();
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "handleMouseDown", function (e) {
	      _this.isMouseDown = true;
	      (0, _invoke2["default"])(_this.props, 'onMouseDown', e, _this.props);

	      _lib.eventStack.sub('mouseup', _this.handleDocumentMouseUp);
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "handleDocumentMouseUp", function () {
	      _this.isMouseDown = false;

	      _lib.eventStack.unsub('mouseup', _this.handleDocumentMouseUp);
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "handleInputClick", function (e) {
	      // prevent closeOnDocumentClick()
	      e.nativeEvent.stopImmediatePropagation();

	      _this.tryOpen();
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "handleItemClick", function (e, _ref) {
	      var id = _ref.id;

	      var result = _this.getSelectedResult(id); // prevent closeOnDocumentClick()


	      e.nativeEvent.stopImmediatePropagation(); // notify the onResultSelect prop that the user is trying to change value

	      _this.setValue(result.title);

	      _this.handleResultSelect(e, result);

	      _this.close();
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "handleItemMouseDown", function (e) {
	      // Heads up! We should prevent default to prevent blur events.
	      // https://github.com/Semantic-Org/Semantic-UI-React/issues/3298
	      e.preventDefault();
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "handleFocus", function (e) {
	      (0, _invoke2["default"])(_this.props, 'onFocus', e, _this.props);

	      _this.setState({
	        focus: true
	      });
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "handleBlur", function (e) {
	      (0, _invoke2["default"])(_this.props, 'onBlur', e, _this.props);

	      _this.setState({
	        focus: false
	      });
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "handleSearchChange", function (e) {
	      // prevent propagating to this.props.onChange()
	      e.stopPropagation();
	      var minCharacters = _this.props.minCharacters;
	      var open = _this.state.open;
	      var newQuery = e.target.value;
	      (0, _invoke2["default"])(_this.props, 'onSearchChange', e, (0, _objectSpread2["default"])({}, _this.props, {
	        value: newQuery
	      })); // open search dropdown on search query

	      if (newQuery.length < minCharacters) {
	        _this.close();
	      } else if (!open) {
	        _this.tryOpen(newQuery);
	      }

	      _this.setValue(newQuery);
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "getFlattenedResults", function () {
	      var _this$props = _this.props,
	          category = _this$props.category,
	          results = _this$props.results;
	      return !category ? results : (0, _reduce2["default"])(results, function (memo, categoryData) {
	        return memo.concat(categoryData.results);
	      }, []);
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "getSelectedResult", function () {
	      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _this.state.selectedIndex;

	      var results = _this.getFlattenedResults();

	      return (0, _get4["default"])(results, index);
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "setValue", function (value) {
	      var selectFirstResult = _this.props.selectFirstResult;

	      _this.trySetState({
	        value: value
	      }, {
	        selectedIndex: selectFirstResult ? 0 : -1
	      });
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "moveSelectionBy", function (e, offset) {
	      var selectedIndex = _this.state.selectedIndex;

	      var results = _this.getFlattenedResults();

	      var lastIndex = results.length - 1; // next is after last, wrap to beginning
	      // next is before first, wrap to end

	      var nextIndex = selectedIndex + offset;
	      if (nextIndex > lastIndex) nextIndex = 0;else if (nextIndex < 0) nextIndex = lastIndex;

	      _this.setState({
	        selectedIndex: nextIndex
	      });

	      _this.scrollSelectedItemIntoView();

	      _this.handleSelectionChange(e);
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "scrollSelectedItemIntoView", function () {
	      // Do not access document when server side rendering
	      if (!(0, _lib.isBrowser)()) return;
	      var menu = document.querySelector('.ui.search.active.visible .results.visible');
	      var item = menu.querySelector('.result.active');
	      if (!item) return;
	      var isOutOfUpperView = item.offsetTop < menu.scrollTop;
	      var isOutOfLowerView = item.offsetTop + item.clientHeight > menu.scrollTop + menu.clientHeight;

	      if (isOutOfUpperView) {
	        menu.scrollTop = item.offsetTop;
	      } else if (isOutOfLowerView) {
	        menu.scrollTop = item.offsetTop + item.clientHeight - menu.clientHeight;
	      }
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "tryOpen", function () {
	      var currentValue = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _this.state.value;
	      var minCharacters = _this.props.minCharacters;
	      if (currentValue.length < minCharacters) return;

	      _this.open();
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "open", function () {
	      _this.trySetState({
	        open: true
	      });
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "close", function () {
	      _this.trySetState({
	        open: false
	      });
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "renderSearchInput", function (rest) {
	      var _this$props2 = _this.props,
	          icon = _this$props2.icon,
	          input = _this$props2.input;
	      var value = _this.state.value;
	      return _Input["default"].create(input, {
	        autoGenerateKey: false,
	        defaultProps: (0, _objectSpread2["default"])({}, rest, {
	          icon: icon,
	          input: {
	            className: 'prompt',
	            tabIndex: '0',
	            autoComplete: 'off'
	          },
	          onChange: _this.handleSearchChange,
	          onClick: _this.handleInputClick,
	          value: value
	        })
	      });
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "renderNoResults", function () {
	      var _this$props3 = _this.props,
	          noResultsDescription = _this$props3.noResultsDescription,
	          noResultsMessage = _this$props3.noResultsMessage;
	      return _react["default"].createElement("div", {
	        className: "message empty"
	      }, _react["default"].createElement("div", {
	        className: "header"
	      }, noResultsMessage), noResultsDescription && _react["default"].createElement("div", {
	        className: "description"
	      }, noResultsDescription));
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "renderResult", function (_ref2, index, _array) {
	      var childKey = _ref2.childKey,
	          result = (0, _objectWithoutProperties2["default"])(_ref2, ["childKey"]);
	      var offset = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;
	      var resultRenderer = _this.props.resultRenderer;
	      var selectedIndex = _this.state.selectedIndex;
	      var offsetIndex = index + offset;
	      return _react["default"].createElement(_SearchResult["default"], (0, _extends2["default"])({
	        key: childKey || result.title,
	        active: selectedIndex === offsetIndex,
	        onClick: _this.handleItemClick,
	        onMouseDown: _this.handleItemMouseDown,
	        renderer: resultRenderer
	      }, result, {
	        id: offsetIndex // Used to lookup the result on item click

	      }));
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "renderResults", function () {
	      var results = _this.props.results;
	      return (0, _map2["default"])(results, _this.renderResult);
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "renderCategories", function () {
	      var _this$props4 = _this.props,
	          categoryRenderer = _this$props4.categoryRenderer,
	          categories = _this$props4.results;
	      var selectedIndex = _this.state.selectedIndex;
	      var count = 0;
	      return (0, _map2["default"])(categories, function (_ref3) {
	        var childKey = _ref3.childKey,
	            category = (0, _objectWithoutProperties2["default"])(_ref3, ["childKey"]);
	        var categoryProps = (0, _objectSpread2["default"])({
	          key: childKey || category.name,
	          active: (0, _inRange2["default"])(selectedIndex, count, count + category.results.length),
	          renderer: categoryRenderer
	        }, category);
	        var renderFn = (0, _partialRight2["default"])(_this.renderResult, count);
	        count += category.results.length;
	        return _react["default"].createElement(_SearchCategory["default"], categoryProps, category.results.map(renderFn));
	      });
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "renderMenuContent", function () {
	      var _this$props5 = _this.props,
	          category = _this$props5.category,
	          showNoResults = _this$props5.showNoResults,
	          results = _this$props5.results;

	      if ((0, _isEmpty2["default"])(results)) {
	        return showNoResults ? _this.renderNoResults() : null;
	      }

	      return category ? _this.renderCategories() : _this.renderResults();
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "renderResultsMenu", function () {
	      var open = _this.state.open;
	      var resultsClasses = open ? 'visible' : '';

	      var menuContent = _this.renderMenuContent();

	      if (!menuContent) return;
	      return _react["default"].createElement(_SearchResults["default"], {
	        className: resultsClasses
	      }, menuContent);
	    });
	    return _this;
	  }

	  (0, _createClass2["default"])(Search, [{
	    key: "componentWillMount",
	    value: function componentWillMount() {
	      var _this$state = this.state,
	          open = _this$state.open,
	          value = _this$state.value;
	      this.setValue(value);
	      if (open) this.open();
	    }
	  }, {
	    key: "componentWillReceiveProps",
	    value: function componentWillReceiveProps(nextProps) {
	      (0, _get3["default"])((0, _getPrototypeOf3["default"])(Search.prototype), "componentWillReceiveProps", this).call(this, nextProps);

	      if (!(0, _shallowequal["default"])(nextProps.value, this.props.value)) {
	        this.setValue(nextProps.value);
	      }
	    }
	  }, {
	    key: "shouldComponentUpdate",
	    value: function shouldComponentUpdate(nextProps, nextState) {
	      return !(0, _shallowequal["default"])(nextProps, this.props) || !(0, _shallowequal["default"])(nextState, this.state);
	    }
	  }, {
	    key: "componentDidUpdate",
	    value: function componentDidUpdate(prevProps, prevState) {
	      // eslint-disable-line complexity
	      // focused / blurred
	      if (!prevState.focus && this.state.focus) {
	        if (!this.isMouseDown) {
	          this.tryOpen();
	        }

	        if (this.state.open) {
	          _lib.eventStack.sub('keydown', [this.moveSelectionOnKeyDown, this.selectItemOnEnter]);
	        }
	      } else if (prevState.focus && !this.state.focus) {
	        if (!this.isMouseDown) {
	          this.close();
	        }

	        _lib.eventStack.unsub('keydown', [this.moveSelectionOnKeyDown, this.selectItemOnEnter]);
	      } // opened / closed


	      if (!prevState.open && this.state.open) {
	        this.open();

	        _lib.eventStack.sub('click', this.closeOnDocumentClick);

	        _lib.eventStack.sub('keydown', [this.closeOnEscape, this.moveSelectionOnKeyDown, this.selectItemOnEnter]);
	      } else if (prevState.open && !this.state.open) {
	        this.close();

	        _lib.eventStack.unsub('click', this.closeOnDocumentClick);

	        _lib.eventStack.unsub('keydown', [this.closeOnEscape, this.moveSelectionOnKeyDown, this.selectItemOnEnter]);
	      }
	    }
	  }, {
	    key: "componentWillUnmount",
	    value: function componentWillUnmount() {
	      _lib.eventStack.unsub('click', this.closeOnDocumentClick);

	      _lib.eventStack.unsub('keydown', [this.closeOnEscape, this.moveSelectionOnKeyDown, this.selectItemOnEnter]);
	    } // ----------------------------------------
	    // Document Event Handlers
	    // ----------------------------------------

	  }, {
	    key: "render",
	    value: function render() {
	      var _this$state2 = this.state,
	          searchClasses = _this$state2.searchClasses,
	          focus = _this$state2.focus,
	          open = _this$state2.open;
	      var _this$props6 = this.props,
	          aligned = _this$props6.aligned,
	          category = _this$props6.category,
	          className = _this$props6.className,
	          fluid = _this$props6.fluid,
	          loading = _this$props6.loading,
	          size = _this$props6.size; // Classes

	      var classes = (0, _classnames["default"])('ui', open && 'active visible', size, searchClasses, (0, _lib.useKeyOnly)(category, 'category'), (0, _lib.useKeyOnly)(focus, 'focus'), (0, _lib.useKeyOnly)(fluid, 'fluid'), (0, _lib.useKeyOnly)(loading, 'loading'), (0, _lib.useValueAndKey)(aligned, 'aligned'), 'search', className);
	      var unhandled = (0, _lib.getUnhandledProps)(Search, this.props);
	      var ElementType = (0, _lib.getElementType)(Search, this.props);

	      var _partitionHTMLProps = (0, _lib.partitionHTMLProps)(unhandled, {
	        htmlProps: _lib.htmlInputAttrs
	      }),
	          _partitionHTMLProps2 = (0, _slicedToArray2["default"])(_partitionHTMLProps, 2),
	          htmlInputProps = _partitionHTMLProps2[0],
	          rest = _partitionHTMLProps2[1];

	      return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	        className: classes,
	        onBlur: this.handleBlur,
	        onFocus: this.handleFocus,
	        onMouseDown: this.handleMouseDown
	      }), this.renderSearchInput(htmlInputProps), this.renderResultsMenu());
	    }
	  }]);
	  return Search;
	}(_lib.AutoControlledComponent);

	exports["default"] = Search;
	(0, _defineProperty2["default"])(Search, "defaultProps", {
	  icon: 'search',
	  input: 'text',
	  minCharacters: 1,
	  noResultsMessage: 'No results found.',
	  showNoResults: true
	});
	(0, _defineProperty2["default"])(Search, "autoControlledProps", ['open', 'value']);
	(0, _defineProperty2["default"])(Search, "Category", _SearchCategory["default"]);
	(0, _defineProperty2["default"])(Search, "Result", _SearchResult["default"]);
	(0, _defineProperty2["default"])(Search, "Results", _SearchResults["default"]);
	(0, _defineProperty2["default"])(Search, "handledProps", ["aligned", "as", "category", "categoryRenderer", "className", "defaultOpen", "defaultValue", "fluid", "icon", "input", "loading", "minCharacters", "noResultsDescription", "noResultsMessage", "onBlur", "onFocus", "onMouseDown", "onResultSelect", "onSearchChange", "onSelectionChange", "open", "resultRenderer", "results", "selectFirstResult", "showNoResults", "size", "value"]);
	Search.propTypes = process.env.NODE_ENV !== "production" ? {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,
	  // ------------------------------------
	  // Behavior
	  // ------------------------------------

	  /** Initial value of open. */
	  defaultOpen: _propTypes["default"].bool,

	  /** Initial value. */
	  defaultValue: _propTypes["default"].string,

	  /** Shorthand for Icon. */
	  icon: _propTypes["default"].oneOfType([_propTypes["default"].node, _propTypes["default"].object]),

	  /** Minimum characters to query for results */
	  minCharacters: _propTypes["default"].number,

	  /** Additional text for "No Results" message with less emphasis. */
	  noResultsDescription: _propTypes["default"].node,

	  /** Message to display when there are no results. */
	  noResultsMessage: _propTypes["default"].node,

	  /** Controls whether or not the results menu is displayed. */
	  open: _propTypes["default"].bool,

	  /**
	   * One of:
	   * - array of Search.Result props e.g. `{ title: '', description: '' }` or
	   * - object of categories e.g. `{ name: '', results: [{ title: '', description: '' }]`
	   */
	  results: _propTypes["default"].oneOfType([_propTypes["default"].arrayOf(_propTypes["default"].shape(_SearchResult["default"].propTypes)), _propTypes["default"].shape(_SearchCategory["default"].propTypes)]),

	  /** Whether the search should automatically select the first result after searching. */
	  selectFirstResult: _propTypes["default"].bool,

	  /** Whether a "no results" message should be shown if no results are found. */
	  showNoResults: _propTypes["default"].bool,

	  /** Current value of the search input. Creates a controlled component. */
	  value: _propTypes["default"].string,
	  // ------------------------------------
	  // Rendering
	  // ------------------------------------

	  /**
	   * Renders the SearchCategory contents.
	   *
	   * @param {object} props - The SearchCategory props object.
	   * @returns {*} - Renderable SearchCategory contents.
	   */
	  categoryRenderer: _propTypes["default"].func,

	  /**
	   * Renders the SearchResult contents.
	   *
	   * @param {object} props - The SearchResult props object.
	   * @returns {*} - Renderable SearchResult contents.
	   */
	  resultRenderer: _propTypes["default"].func,
	  // ------------------------------------
	  // Callbacks
	  // ------------------------------------

	  /**
	   * Called on blur.
	   *
	   * @param {SyntheticEvent} event - React's original SyntheticEvent.
	   * @param {object} data - All props.
	   */
	  onBlur: _propTypes["default"].func,

	  /**
	   * Called on focus.
	   *
	   * @param {SyntheticEvent} event - React's original SyntheticEvent.
	   * @param {object} data - All props.
	   */
	  onFocus: _propTypes["default"].func,

	  /**
	   * Called on mousedown.
	   *
	   * @param {SyntheticEvent} event - React's original SyntheticEvent.
	   * @param {object} data - All props.
	   */
	  onMouseDown: _propTypes["default"].func,

	  /**
	   * Called when a result is selected.
	   *
	   * @param {SyntheticEvent} event - React's original SyntheticEvent.
	   * @param {object} data - All props.
	   */
	  onResultSelect: _propTypes["default"].func,

	  /**
	   * Called on search input change.
	   *
	   * @param {SyntheticEvent} event - React's original SyntheticEvent.
	   * @param {object} data - All props, includes current value of search input.
	   */
	  onSearchChange: _propTypes["default"].func,

	  /**
	   * Called when the active selection index is changed.
	   *
	   * @param {SyntheticEvent} event - React's original SyntheticEvent.
	   * @param {object} data - All props.
	   */
	  onSelectionChange: _propTypes["default"].func,
	  // ------------------------------------
	  // Style
	  // ------------------------------------

	  /** A search can have its results aligned to its left or right container edge. */
	  aligned: _propTypes["default"].string,

	  /** A search can display results from remote content ordered by categories. */
	  category: _propTypes["default"].bool,

	  /** Additional classes. */
	  className: _propTypes["default"].string,

	  /** A search can have its results take up the width of its container. */
	  fluid: _propTypes["default"].bool,

	  /** A search input can take up the width of its container. */
	  input: _lib.customPropTypes.itemShorthand,

	  /** A search can show a loading indicator. */
	  loading: _propTypes["default"].bool,

	  /** A search can have different sizes. */
	  size: _propTypes["default"].oneOf((0, _without2["default"])(_lib.SUI.SIZES, 'medium'))
	} : {};
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 776 */,
/* 777 */
/***/ (function(module, exports, __webpack_require__) {

	var baseRest = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"./_baseRest\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())),
	    createWrap = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"./_createWrap\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())),
	    getHolder = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"./_getHolder\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())),
	    replaceHolders = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"./_replaceHolders\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	/** Used to compose bitmasks for function metadata. */
	var WRAP_PARTIAL_RIGHT_FLAG = 64;

	/**
	 * This method is like `_.partial` except that partially applied arguments
	 * are appended to the arguments it receives.
	 *
	 * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic
	 * builds, may be used as a placeholder for partially applied arguments.
	 *
	 * **Note:** This method doesn't set the "length" property of partially
	 * applied functions.
	 *
	 * @static
	 * @memberOf _
	 * @since 1.0.0
	 * @category Function
	 * @param {Function} func The function to partially apply arguments to.
	 * @param {...*} [partials] The arguments to be partially applied.
	 * @returns {Function} Returns the new partially applied function.
	 * @example
	 *
	 * function greet(greeting, name) {
	 *   return greeting + ' ' + name;
	 * }
	 *
	 * var greetFred = _.partialRight(greet, 'fred');
	 * greetFred('hi');
	 * // => 'hi fred'
	 *
	 * // Partially applied with placeholders.
	 * var sayHelloTo = _.partialRight(greet, 'hello', _);
	 * sayHelloTo('fred');
	 * // => 'hello fred'
	 */
	var partialRight = baseRest(function(func, partials) {
	  var holders = replaceHolders(partials, getHolder(partialRight));
	  return createWrap(func, WRAP_PARTIAL_RIGHT_FLAG, undefined, partials, holders);
	});

	// Assign default placeholders.
	partialRight.placeholder = {};

	module.exports = partialRight;


/***/ }),
/* 778 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _extends2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/extends\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _classnames = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"classnames\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _propTypes = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"prop-types\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _react = _interopRequireDefault(__webpack_require__(3));

	var _lib = __webpack_require__(256);

	function SearchCategory(props) {
	  var active = props.active,
	      children = props.children,
	      className = props.className,
	      content = props.content,
	      renderer = props.renderer;
	  var classes = (0, _classnames["default"])((0, _lib.useKeyOnly)(active, 'active'), 'category', className);
	  var rest = (0, _lib.getUnhandledProps)(SearchCategory, props);
	  var ElementType = (0, _lib.getElementType)(SearchCategory, props);
	  return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	    className: classes
	  }), _react["default"].createElement("div", {
	    className: "name"
	  }, renderer(props)), _react["default"].createElement("div", {
	    className: "results"
	  }, _lib.childrenUtils.isNil(children) ? content : children));
	}

	SearchCategory.handledProps = ["active", "as", "children", "className", "content", "name", "renderer", "results"];
	SearchCategory.defaultProps = {
	  renderer: function renderer(_ref) {
	    var name = _ref.name;
	    return name;
	  }
	};
	SearchCategory.propTypes = process.env.NODE_ENV !== "production" ? {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** The item currently selected by keyboard shortcut. */
	  active: _propTypes["default"].bool,

	  /** Primary content. */
	  children: _propTypes["default"].node,

	  /** Additional classes. */
	  className: _propTypes["default"].string,

	  /** Shorthand for primary content. */
	  content: _lib.customPropTypes.contentShorthand,

	  /** Display name. */
	  name: _propTypes["default"].string,

	  /**
	   * Renders the category contents.
	   *
	   * @param {object} props - The SearchCategory props object.
	   * @returns {*} - Renderable category contents.
	   */
	  renderer: _propTypes["default"].func,

	  /** Array of Search.Result props. */
	  results: _propTypes["default"].array
	} : {};
	var _default = SearchCategory;
	exports["default"] = _default;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 779 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";

	var _interopRequireWildcard = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireWildcard\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _extends2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/extends\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _classCallCheck2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/classCallCheck\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _createClass2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/createClass\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/possibleConstructorReturn\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _getPrototypeOf3 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/getPrototypeOf\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _assertThisInitialized2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/assertThisInitialized\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _inherits2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/inherits\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _defineProperty2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/defineProperty\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _classnames = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"classnames\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _propTypes = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"prop-types\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _react = _interopRequireWildcard(__webpack_require__(3));

	var _lib = __webpack_require__(256);

	// Note: You technically only need the 'content' wrapper when there's an
	// image. However, optionally wrapping it makes this function a lot more
	// complicated and harder to read. Since always wrapping it doesn't affect
	// the style in any way let's just do that.
	//
	// Note: To avoid requiring a wrapping div, we return an array here so to
	// prevent rendering issues each node needs a unique key.
	var defaultRenderer = function defaultRenderer(_ref) {
	  var image = _ref.image,
	      price = _ref.price,
	      title = _ref.title,
	      description = _ref.description;
	  return [image && _react["default"].createElement("div", {
	    key: "image",
	    className: "image"
	  }, (0, _lib.createHTMLImage)(image, {
	    autoGenerateKey: false
	  })), _react["default"].createElement("div", {
	    key: "content",
	    className: "content"
	  }, price && _react["default"].createElement("div", {
	    className: "price"
	  }, price), title && _react["default"].createElement("div", {
	    className: "title"
	  }, title), description && _react["default"].createElement("div", {
	    className: "description"
	  }, description))];
	};

	defaultRenderer.handledProps = [];

	var SearchResult =
	/*#__PURE__*/
	function (_Component) {
	  (0, _inherits2["default"])(SearchResult, _Component);

	  function SearchResult() {
	    var _getPrototypeOf2;

	    var _this;

	    (0, _classCallCheck2["default"])(this, SearchResult);

	    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    _this = (0, _possibleConstructorReturn2["default"])(this, (_getPrototypeOf2 = (0, _getPrototypeOf3["default"])(SearchResult)).call.apply(_getPrototypeOf2, [this].concat(args)));
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "handleClick", function (e) {
	      var onClick = _this.props.onClick;
	      if (onClick) onClick(e, _this.props);
	    });
	    return _this;
	  }

	  (0, _createClass2["default"])(SearchResult, [{
	    key: "render",
	    value: function render() {
	      var _this$props = this.props,
	          active = _this$props.active,
	          className = _this$props.className,
	          renderer = _this$props.renderer;
	      var classes = (0, _classnames["default"])((0, _lib.useKeyOnly)(active, 'active'), 'result', className);
	      var rest = (0, _lib.getUnhandledProps)(SearchResult, this.props);
	      var ElementType = (0, _lib.getElementType)(SearchResult, this.props); // Note: You technically only need the 'content' wrapper when there's an
	      // image. However, optionally wrapping it makes this function a lot more
	      // complicated and harder to read. Since always wrapping it doesn't affect
	      // the style in any way let's just do that.

	      return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	        className: classes,
	        onClick: this.handleClick
	      }), renderer(this.props));
	    }
	  }]);
	  return SearchResult;
	}(_react.Component);

	exports["default"] = SearchResult;
	(0, _defineProperty2["default"])(SearchResult, "defaultProps", {
	  renderer: defaultRenderer
	});
	(0, _defineProperty2["default"])(SearchResult, "handledProps", ["active", "as", "className", "content", "description", "id", "image", "onClick", "price", "renderer", "title"]);
	SearchResult.propTypes = process.env.NODE_ENV !== "production" ? {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** The item currently selected by keyboard shortcut. */
	  active: _propTypes["default"].bool,

	  /** Additional classes. */
	  className: _propTypes["default"].string,

	  /** Shorthand for primary content. */
	  content: _lib.customPropTypes.contentShorthand,

	  /** Additional text with less emphasis. */
	  description: _propTypes["default"].string,

	  /** A unique identifier. */
	  id: _propTypes["default"].oneOfType([_propTypes["default"].number, _propTypes["default"].string]),

	  /** Add an image to the item. */
	  image: _propTypes["default"].string,

	  /**
	   * Called on click.
	   *
	   * @param {SyntheticEvent} event - React's original SyntheticEvent.
	   * @param {object} data - All props.
	   */
	  onClick: _propTypes["default"].func,

	  /** Customized text for price. */
	  price: _propTypes["default"].string,

	  /**
	   * Renders the result contents.
	   *
	   * @param {object} props - The SearchResult props object.
	   * @returns {*} - Renderable result contents.
	   */
	  renderer: _propTypes["default"].func,

	  /** Display title. */
	  title: _propTypes["default"].string.isRequired
	} : {};
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 780 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _extends2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/extends\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _classnames = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"classnames\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _propTypes = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"prop-types\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _react = _interopRequireDefault(__webpack_require__(3));

	var _lib = __webpack_require__(256);

	function SearchResults(props) {
	  var children = props.children,
	      className = props.className,
	      content = props.content;
	  var classes = (0, _classnames["default"])('results transition', className);
	  var rest = (0, _lib.getUnhandledProps)(SearchResults, props);
	  var ElementType = (0, _lib.getElementType)(SearchResults, props);
	  return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	    className: classes
	  }), _lib.childrenUtils.isNil(children) ? content : children);
	}

	SearchResults.handledProps = ["as", "children", "className", "content"];
	SearchResults.propTypes = process.env.NODE_ENV !== "production" ? {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Primary content. */
	  children: _propTypes["default"].node,

	  /** Additional classes. */
	  className: _propTypes["default"].string,

	  /** Shorthand for primary content. */
	  content: _lib.customPropTypes.contentShorthand
	} : {};
	var _default = SearchResults;
	exports["default"] = _default;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 781 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	Object.defineProperty(exports, "default", {
	  enumerable: true,
	  get: function get() {
	    return _Sidebar["default"];
	  }
	});

	var _Sidebar = _interopRequireDefault(__webpack_require__(782));

/***/ }),
/* 782 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";

	var _interopRequireWildcard = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireWildcard\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _extends2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/extends\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _objectSpread2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/objectSpread\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _classCallCheck2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/classCallCheck\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _createClass2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/createClass\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/possibleConstructorReturn\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/getPrototypeOf\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _assertThisInitialized2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/assertThisInitialized\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _inherits2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/inherits\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _defineProperty2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/defineProperty\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _invoke2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/invoke\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _eventStack = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@semantic-ui-react/event-stack\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _classnames = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"classnames\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _propTypes = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"prop-types\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _react = _interopRequireWildcard(__webpack_require__(3));

	var _Ref = _interopRequireDefault(__webpack_require__(537));

	var _lib = __webpack_require__(256);

	var _SidebarPushable = _interopRequireDefault(__webpack_require__(783));

	var _SidebarPusher = _interopRequireDefault(__webpack_require__(784));

	/**
	 * A sidebar hides additional content beside a page.
	 */
	var Sidebar =
	/*#__PURE__*/
	function (_Component) {
	  (0, _inherits2["default"])(Sidebar, _Component);

	  function Sidebar(props) {
	    var _this;

	    (0, _classCallCheck2["default"])(this, Sidebar);
	    _this = (0, _possibleConstructorReturn2["default"])(this, (0, _getPrototypeOf2["default"])(Sidebar).call(this, props));
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "ref", (0, _react.createRef)());
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "handleAnimationStart", function () {
	      var visible = _this.props.visible;
	      var callback = visible ? 'onVisible' : 'onHide';
	      clearTimeout(_this.animationTimer);
	      _this.animationTimer = setTimeout(_this.handleAnimationEnd, Sidebar.animationDuration);

	      if (_this.skipNextCallback) {
	        _this.skipNextCallback = false;
	        return;
	      }

	      (0, _invoke2["default"])(_this.props, callback, null, _this.props);
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "handleAnimationEnd", function () {
	      var visible = _this.props.visible;
	      var callback = visible ? 'onShow' : 'onHidden';

	      _this.setState({
	        animationTick: 0
	      });

	      (0, _invoke2["default"])(_this.props, callback, null, _this.props);
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "handleDocumentClick", function (e) {
	      if (!(0, _lib.doesNodeContainClick)(_this.ref.current, e)) {
	        _this.skipNextCallback = true;
	        (0, _invoke2["default"])(_this.props, 'onHide', e, (0, _objectSpread2["default"])({}, _this.props, {
	          visible: false
	        }));
	      }
	    });
	    _this.state = {
	      animationTick: 0,
	      visible: props.visible
	    };
	    return _this;
	  }

	  (0, _createClass2["default"])(Sidebar, [{
	    key: "componentDidUpdate",
	    value: function componentDidUpdate(prevProps, prevState) {
	      if (this.state.animationTick > prevState.animationTick) {
	        this.handleAnimationStart();
	      }
	    }
	  }, {
	    key: "componentWillUnmount",
	    value: function componentWillUnmount() {
	      clearTimeout(this.animationTimer);
	    }
	  }, {
	    key: "render",
	    value: function render() {
	      var _this$props = this.props,
	          animation = _this$props.animation,
	          className = _this$props.className,
	          children = _this$props.children,
	          content = _this$props.content,
	          direction = _this$props.direction,
	          target = _this$props.target,
	          visible = _this$props.visible,
	          width = _this$props.width;
	      var animationTick = this.state.animationTick;
	      var classes = (0, _classnames["default"])('ui', animation, direction, width, (0, _lib.useKeyOnly)(animationTick > 0, 'animating'), (0, _lib.useKeyOnly)(visible, 'visible'), 'sidebar', className);
	      var rest = (0, _lib.getUnhandledProps)(Sidebar, this.props);
	      var ElementType = (0, _lib.getElementType)(Sidebar, this.props);
	      return _react["default"].createElement(_Ref["default"], {
	        innerRef: this.ref
	      }, _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	        className: classes
	      }), _lib.childrenUtils.isNil(children) ? content : children, visible && _react["default"].createElement(_eventStack["default"], {
	        name: "click",
	        on: this.handleDocumentClick,
	        target: target
	      })));
	    }
	  }], [{
	    key: "getDerivedStateFromProps",
	    value: function getDerivedStateFromProps(props, state) {
	      // We use `animationTick` to understand when an animation should be scheduled
	      var tickIncrement = !!props.visible === !!state.visible ? 0 : 1;
	      return {
	        animationTick: state.animationTick + tickIncrement,
	        visible: props.visible
	      };
	    }
	  }]);
	  return Sidebar;
	}(_react.Component);

	(0, _defineProperty2["default"])(Sidebar, "defaultProps", {
	  direction: 'left',
	  visible: false
	});
	(0, _defineProperty2["default"])(Sidebar, "animationDuration", 500);
	(0, _defineProperty2["default"])(Sidebar, "autoControlledProps", ['visible']);
	(0, _defineProperty2["default"])(Sidebar, "Pushable", _SidebarPushable["default"]);
	(0, _defineProperty2["default"])(Sidebar, "Pusher", _SidebarPusher["default"]);
	(0, _defineProperty2["default"])(Sidebar, "handledProps", ["animation", "as", "children", "className", "content", "direction", "onHidden", "onHide", "onShow", "onVisible", "target", "visible", "width"]);
	Sidebar.propTypes = process.env.NODE_ENV !== "production" ? {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Animation style. */
	  animation: _propTypes["default"].oneOf(['overlay', 'push', 'scale down', 'uncover', 'slide out', 'slide along']),

	  /** Primary content. */
	  children: _propTypes["default"].node,

	  /** Additional classes. */
	  className: _propTypes["default"].string,

	  /** Shorthand for primary content. */
	  content: _lib.customPropTypes.contentShorthand,

	  /** Direction the sidebar should appear on. */
	  direction: _propTypes["default"].oneOf(['top', 'right', 'bottom', 'left']),

	  /**
	   * Called before a sidebar begins to animate out.
	   *
	   * @param {SyntheticEvent} event - React's original SyntheticEvent.
	   * @param {object} data - All props.
	   */
	  onHide: _propTypes["default"].func,

	  /**
	   * Called after a sidebar has finished animating out.
	   *
	   * @param {null}
	   * @param {object} data - All props.
	   */
	  onHidden: _propTypes["default"].func,

	  /**
	   * Called when a sidebar has finished animating in.
	   *
	   * @param {null}
	   * @param {object} data - All props.
	   */
	  onShow: _propTypes["default"].func,

	  /**
	   * Called when a sidebar begins animating in.
	   *
	   * @param {null}
	   * @param {object} data - All props.
	   */
	  onVisible: _propTypes["default"].func,

	  /** A sidebar can handle clicks on the passed element. */
	  target: _propTypes["default"].oneOfType([_lib.customPropTypes.domNode, _lib.customPropTypes.refObject]),

	  /** Controls whether or not the sidebar is visible on the page. */
	  visible: _propTypes["default"].bool,

	  /** Sidebar width. */
	  width: _propTypes["default"].oneOf(['very thin', 'thin', 'wide', 'very wide'])
	} : {};
	var _default = Sidebar;
	exports["default"] = _default;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 783 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _extends2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/extends\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _classnames = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"classnames\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _propTypes = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"prop-types\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _react = _interopRequireDefault(__webpack_require__(3));

	var _lib = __webpack_require__(256);

	/**
	 * A pushable sub-component for Sidebar.
	 */
	function SidebarPushable(props) {
	  var className = props.className,
	      children = props.children,
	      content = props.content;
	  var classes = (0, _classnames["default"])('pushable', className);
	  var rest = (0, _lib.getUnhandledProps)(SidebarPushable, props);
	  var ElementType = (0, _lib.getElementType)(SidebarPushable, props);
	  return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	    className: classes
	  }), _lib.childrenUtils.isNil(children) ? content : children);
	}

	SidebarPushable.handledProps = ["as", "children", "className", "content"];
	SidebarPushable.propTypes = process.env.NODE_ENV !== "production" ? {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Primary content. */
	  children: _propTypes["default"].node,

	  /** Additional classes. */
	  className: _propTypes["default"].string,

	  /** Shorthand for primary content. */
	  content: _lib.customPropTypes.contentShorthand
	} : {};
	var _default = SidebarPushable;
	exports["default"] = _default;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 784 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _extends2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/extends\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _classnames = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"classnames\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _propTypes = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"prop-types\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _react = _interopRequireDefault(__webpack_require__(3));

	var _lib = __webpack_require__(256);

	/**
	 * A pushable sub-component for Sidebar.
	 */
	function SidebarPusher(props) {
	  var className = props.className,
	      dimmed = props.dimmed,
	      children = props.children,
	      content = props.content;
	  var classes = (0, _classnames["default"])('pusher', (0, _lib.useKeyOnly)(dimmed, 'dimmed'), className);
	  var rest = (0, _lib.getUnhandledProps)(SidebarPusher, props);
	  var ElementType = (0, _lib.getElementType)(SidebarPusher, props);
	  return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	    className: classes
	  }), _lib.childrenUtils.isNil(children) ? content : children);
	}

	SidebarPusher.handledProps = ["as", "children", "className", "content", "dimmed"];
	SidebarPusher.propTypes = process.env.NODE_ENV !== "production" ? {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Primary content. */
	  children: _propTypes["default"].node,

	  /** Additional classes. */
	  className: _propTypes["default"].string,

	  /** Shorthand for primary content. */
	  content: _lib.customPropTypes.contentShorthand,

	  /** Controls whether or not the dim is displayed. */
	  dimmed: _propTypes["default"].bool
	} : {};
	var _default = SidebarPusher;
	exports["default"] = _default;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 785 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	Object.defineProperty(exports, "default", {
	  enumerable: true,
	  get: function get() {
	    return _Sticky["default"];
	  }
	});

	var _Sticky = _interopRequireDefault(__webpack_require__(786));

/***/ }),
/* 786 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";

	var _interopRequireWildcard = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireWildcard\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _extends2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/extends\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _objectSpread2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/objectSpread\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _classCallCheck2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/classCallCheck\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _createClass2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/createClass\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/possibleConstructorReturn\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _getPrototypeOf3 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/getPrototypeOf\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _assertThisInitialized2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/assertThisInitialized\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _inherits2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/inherits\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _defineProperty2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/defineProperty\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _invoke2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/invoke\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _classnames = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"classnames\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _propTypes = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"prop-types\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _react = _interopRequireWildcard(__webpack_require__(3));

	var _lib = __webpack_require__(256);

	/**
	 * Sticky content stays fixed to the browser viewport while another column of content is visible on the page.
	 */
	var Sticky =
	/*#__PURE__*/
	function (_Component) {
	  (0, _inherits2["default"])(Sticky, _Component);

	  function Sticky() {
	    var _getPrototypeOf2;

	    var _this;

	    (0, _classCallCheck2["default"])(this, Sticky);

	    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    _this = (0, _possibleConstructorReturn2["default"])(this, (_getPrototypeOf2 = (0, _getPrototypeOf3["default"])(Sticky)).call.apply(_getPrototypeOf2, [this].concat(args)));
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "state", {
	      sticky: false
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "stickyRef", (0, _react.createRef)());
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "triggerRef", (0, _react.createRef)());
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "addListeners", function (props) {
	      var scrollContext = props.scrollContext;
	      var scrollContextNode = (0, _lib.isRefObject)(scrollContext) ? scrollContext.current : scrollContext;

	      if (scrollContextNode) {
	        _lib.eventStack.sub('resize', _this.handleUpdate, {
	          target: scrollContextNode
	        });

	        _lib.eventStack.sub('scroll', _this.handleUpdate, {
	          target: scrollContextNode
	        });
	      }
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "removeListeners", function () {
	      var scrollContext = _this.props.scrollContext;
	      var scrollContextNode = (0, _lib.isRefObject)(scrollContext) ? scrollContext.current : scrollContext;

	      if (scrollContextNode) {
	        _lib.eventStack.unsub('resize', _this.handleUpdate, {
	          target: scrollContextNode
	        });

	        _lib.eventStack.unsub('scroll', _this.handleUpdate, {
	          target: scrollContextNode
	        });
	      }
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "update", function (e) {
	      var pushing = _this.state.pushing;
	      _this.ticking = false;

	      _this.assignRects();

	      if (pushing) {
	        if (_this.didReachStartingPoint()) return _this.stickToContextTop(e);
	        if (_this.didTouchScreenBottom()) return _this.stickToScreenBottom(e);
	        return _this.stickToContextBottom(e);
	      }

	      if (_this.isOversized()) {
	        if (_this.contextRect.top > 0) return _this.stickToContextTop(e);
	        if (_this.contextRect.bottom < window.innerHeight) return _this.stickToContextBottom(e);
	      }

	      if (_this.didTouchScreenTop()) {
	        if (_this.didReachContextBottom()) return _this.stickToContextBottom(e);
	        return _this.stickToScreenTop(e);
	      }

	      return _this.stickToContextTop(e);
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "handleUpdate", function (e) {
	      if (!_this.ticking) {
	        _this.ticking = true;
	        _this.frameId = requestAnimationFrame(function () {
	          return _this.update(e);
	        });
	      }
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "assignRects", function () {
	      var context = _this.props.context;
	      var contextNode = (0, _lib.isRefObject)(context) ? context.current : context || document.body;
	      _this.triggerRect = _this.triggerRef.current.getBoundingClientRect();
	      _this.contextRect = contextNode.getBoundingClientRect();
	      _this.stickyRect = _this.stickyRef.current.getBoundingClientRect();
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "didReachContextBottom", function () {
	      var offset = _this.props.offset;
	      return _this.stickyRect.height + offset >= _this.contextRect.bottom;
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "didReachStartingPoint", function () {
	      return _this.stickyRect.top <= _this.triggerRect.top;
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "didTouchScreenTop", function () {
	      return _this.triggerRect.top < _this.props.offset;
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "didTouchScreenBottom", function () {
	      var bottomOffset = _this.props.bottomOffset;
	      return _this.contextRect.bottom + bottomOffset > window.innerHeight;
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "isOversized", function () {
	      return _this.stickyRect.height > window.innerHeight;
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "pushing", function (pushing) {
	      var possible = _this.props.pushing;
	      if (possible) _this.setState({
	        pushing: pushing
	      });
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "stick", function (e, bound) {
	      _this.setState({
	        bound: bound,
	        sticky: true
	      });

	      (0, _invoke2["default"])(_this.props, 'onStick', e, _this.props);
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "unstick", function (e, bound) {
	      _this.setState({
	        bound: bound,
	        sticky: false
	      });

	      (0, _invoke2["default"])(_this.props, 'onUnstick', e, _this.props);
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "stickToContextBottom", function (e) {
	      (0, _invoke2["default"])(_this.props, 'onBottom', e, _this.props);

	      _this.stick(e, true);

	      _this.pushing(true);
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "stickToContextTop", function (e) {
	      (0, _invoke2["default"])(_this.props, 'onTop', e, _this.props);

	      _this.unstick(e, false);

	      _this.pushing(false);
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "stickToScreenBottom", function (e) {
	      var bottom = _this.props.bottomOffset;

	      _this.stick(e, false);

	      _this.setState({
	        bottom: bottom,
	        top: null
	      });
	    });
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "stickToScreenTop", function (e) {
	      var top = _this.props.offset;

	      _this.stick(e, false);

	      _this.setState({
	        top: top,
	        bottom: null
	      });
	    });
	    return _this;
	  }

	  (0, _createClass2["default"])(Sticky, [{
	    key: "componentDidMount",
	    value: function componentDidMount() {
	      if (!(0, _lib.isBrowser)()) return;
	      var active = this.props.active;

	      if (active) {
	        this.handleUpdate();
	        this.addListeners(this.props);
	      }
	    }
	  }, {
	    key: "componentWillReceiveProps",
	    value: function componentWillReceiveProps(nextProps) {
	      var _this$props = this.props,
	          current = _this$props.active,
	          currentScrollContext = _this$props.scrollContext;
	      var next = nextProps.active,
	          nextScrollContext = nextProps.scrollContext;

	      if (current === next) {
	        if (currentScrollContext !== nextScrollContext) {
	          this.removeListeners();
	          this.addListeners(nextProps);
	        }

	        return;
	      }

	      if (next) {
	        this.handleUpdate();
	        this.addListeners(nextProps);
	        return;
	      }

	      this.removeListeners();
	      this.setState({
	        sticky: false
	      });
	    }
	  }, {
	    key: "componentWillUnmount",
	    value: function componentWillUnmount() {
	      if (!(0, _lib.isBrowser)()) return;
	      var active = this.props.active;

	      if (active) {
	        this.removeListeners();
	        cancelAnimationFrame(this.frameId);
	      }
	    } // ----------------------------------------
	    // Events
	    // ----------------------------------------

	  }, {
	    key: "computeStyle",
	    value: function computeStyle() {
	      var styleElement = this.props.styleElement;
	      var _this$state = this.state,
	          bottom = _this$state.bottom,
	          bound = _this$state.bound,
	          sticky = _this$state.sticky,
	          top = _this$state.top;
	      if (!sticky) return styleElement;
	      return (0, _objectSpread2["default"])({
	        bottom: bound ? 0 : bottom,
	        top: bound ? undefined : top,
	        width: this.triggerRect.width
	      }, styleElement);
	    } // Return true when the component reached the bottom of the context

	  }, {
	    key: "render",
	    // ----------------------------------------
	    // Render
	    // ----------------------------------------
	    value: function render() {
	      var _this$props2 = this.props,
	          children = _this$props2.children,
	          className = _this$props2.className;
	      var _this$state2 = this.state,
	          bottom = _this$state2.bottom,
	          bound = _this$state2.bound,
	          sticky = _this$state2.sticky;
	      var rest = (0, _lib.getUnhandledProps)(Sticky, this.props);
	      var ElementType = (0, _lib.getElementType)(Sticky, this.props);
	      var containerClasses = (0, _classnames["default"])(sticky && 'ui', sticky && 'stuck-container', sticky && (bound ? 'bound-container' : 'fixed-container'), className);
	      var elementClasses = (0, _classnames["default"])('ui', sticky && (bound ? 'bound bottom' : 'fixed'), sticky && !bound && (bottom === null ? 'top' : 'bottom'), 'sticky');
	      var triggerStyles = sticky && this.stickyRect ? {
	        height: this.stickyRect.height
	      } : {};
	      return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	        className: containerClasses
	      }), _react["default"].createElement("div", {
	        ref: this.triggerRef,
	        style: triggerStyles
	      }), _react["default"].createElement("div", {
	        className: elementClasses,
	        ref: this.stickyRef,
	        style: this.computeStyle()
	      }, children));
	    }
	  }]);
	  return Sticky;
	}(_react.Component);

	exports["default"] = Sticky;
	(0, _defineProperty2["default"])(Sticky, "defaultProps", {
	  active: true,
	  bottomOffset: 0,
	  offset: 0,
	  scrollContext: (0, _lib.isBrowser)() ? window : null
	});
	(0, _defineProperty2["default"])(Sticky, "handledProps", ["active", "as", "bottomOffset", "children", "className", "context", "offset", "onBottom", "onStick", "onTop", "onUnstick", "pushing", "scrollContext", "styleElement"]);
	Sticky.propTypes = process.env.NODE_ENV !== "production" ? {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** A Sticky can be active. */
	  active: _propTypes["default"].bool,

	  /** Offset in pixels from the bottom of the screen when fixing element to viewport. */
	  bottomOffset: _propTypes["default"].number,

	  /** Primary content. */
	  children: _propTypes["default"].node,

	  /** Additional classes. */
	  className: _propTypes["default"].string,

	  /** Context which sticky element should stick to. */
	  context: _propTypes["default"].oneOfType([_lib.customPropTypes.domNode, _lib.customPropTypes.refObject]),

	  /** Offset in pixels from the top of the screen when fixing element to viewport. */
	  offset: _propTypes["default"].number,

	  /**
	   * Callback when element is bound to bottom of parent container.
	   *
	   * @param {SyntheticEvent} event - React's original SyntheticEvent.
	   * @param {object} data - All props.
	   */
	  onBottom: _propTypes["default"].func,

	  /**
	   * Callback when element is fixed to page.
	   *
	   * @param {SyntheticEvent} event - React's original SyntheticEvent.
	   * @param {object} data - All props.
	   */
	  onStick: _propTypes["default"].func,

	  /**
	   * Callback when element is bound to top of parent container.
	   *
	   * @param {SyntheticEvent} event - React's original SyntheticEvent.
	   * @param {object} data - All props.
	   */
	  onTop: _propTypes["default"].func,

	  /**
	   * Callback when element is unfixed from page.
	   *
	   * @param {SyntheticEvent} event - React's original SyntheticEvent.
	   * @param {object} data - All props.
	   */
	  onUnstick: _propTypes["default"].func,

	  /** Whether element should be "pushed" by the viewport, attaching to the bottom of the screen when scrolling up. */
	  pushing: _propTypes["default"].bool,

	  /** Context which sticky should attach onscroll events. */
	  scrollContext: _propTypes["default"].oneOfType([_lib.customPropTypes.domNode, _lib.customPropTypes.refObject]),

	  /** Custom style for sticky element. */
	  styleElement: _propTypes["default"].object
	} : {};
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 787 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	Object.defineProperty(exports, "default", {
	  enumerable: true,
	  get: function get() {
	    return _Tab["default"];
	  }
	});

	var _Tab = _interopRequireDefault(__webpack_require__(788));

/***/ }),
/* 788 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _objectWithoutProperties2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/objectWithoutProperties\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _objectSpread2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/objectSpread\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _classCallCheck2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/classCallCheck\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _createClass2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/createClass\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/possibleConstructorReturn\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _getPrototypeOf3 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/getPrototypeOf\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _assertThisInitialized2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/assertThisInitialized\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _inherits2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/inherits\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _defineProperty2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/defineProperty\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _map2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/map\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _get2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/get\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _invoke2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/invoke\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _propTypes = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"prop-types\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _react = _interopRequireDefault(__webpack_require__(3));

	var _lib = __webpack_require__(256);

	var _Grid = _interopRequireDefault(__webpack_require__(671));

	var _GridColumn = _interopRequireDefault(__webpack_require__(672));

	var _Menu = _interopRequireDefault(__webpack_require__(594));

	var _TabPane = _interopRequireDefault(__webpack_require__(789));

	/**
	 * A Tab is a hidden section of content activated by a Menu.
	 * @see Menu
	 * @see Segment
	 */
	var Tab =
	/*#__PURE__*/
	function (_Component) {
	  (0, _inherits2["default"])(Tab, _Component);

	  function Tab() {
	    var _getPrototypeOf2;

	    var _this;

	    (0, _classCallCheck2["default"])(this, Tab);

	    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    _this = (0, _possibleConstructorReturn2["default"])(this, (_getPrototypeOf2 = (0, _getPrototypeOf3["default"])(Tab)).call.apply(_getPrototypeOf2, [this].concat(args)));
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "handleItemClick", function (e, _ref) {
	      var index = _ref.index;
	      (0, _invoke2["default"])(_this.props, 'onTabChange', e, (0, _objectSpread2["default"])({}, _this.props, {
	        activeIndex: index
	      }));

	      _this.trySetState({
	        activeIndex: index
	      });
	    });
	    return _this;
	  }

	  (0, _createClass2["default"])(Tab, [{
	    key: "getInitialAutoControlledState",
	    value: function getInitialAutoControlledState() {
	      return {
	        activeIndex: 0
	      };
	    }
	  }, {
	    key: "renderItems",
	    value: function renderItems() {
	      var _this$props = this.props,
	          panes = _this$props.panes,
	          renderActiveOnly = _this$props.renderActiveOnly;
	      var activeIndex = this.state.activeIndex;
	      if (renderActiveOnly) return (0, _invoke2["default"])((0, _get2["default"])(panes, "[".concat(activeIndex, "]")), 'render', this.props);
	      return (0, _map2["default"])(panes, function (_ref2, index) {
	        var pane = _ref2.pane;
	        return _TabPane["default"].create(pane, {
	          overrideProps: {
	            active: index === activeIndex
	          }
	        });
	      });
	    }
	  }, {
	    key: "renderMenu",
	    value: function renderMenu() {
	      var _this$props2 = this.props,
	          menu = _this$props2.menu,
	          panes = _this$props2.panes,
	          menuPosition = _this$props2.menuPosition;
	      var activeIndex = this.state.activeIndex;

	      if (menu.tabular === true && menuPosition === 'right') {
	        menu.tabular = 'right';
	      }

	      return _Menu["default"].create(menu, {
	        autoGenerateKey: false,
	        overrideProps: {
	          items: (0, _map2["default"])(panes, 'menuItem'),
	          onItemClick: this.handleItemClick,
	          activeIndex: activeIndex
	        }
	      });
	    }
	  }, {
	    key: "renderVertical",
	    value: function renderVertical(menu) {
	      var _this$props3 = this.props,
	          grid = _this$props3.grid,
	          menuPosition = _this$props3.menuPosition;
	      var paneWidth = grid.paneWidth,
	          tabWidth = grid.tabWidth,
	          gridProps = (0, _objectWithoutProperties2["default"])(grid, ["paneWidth", "tabWidth"]);
	      var position = menuPosition || menu.props.tabular === 'right' && 'right' || 'left';
	      return _react["default"].createElement(_Grid["default"], gridProps, position === 'left' && _GridColumn["default"].create({
	        width: tabWidth,
	        children: menu
	      }, {
	        autoGenerateKey: false
	      }), _GridColumn["default"].create({
	        width: paneWidth,
	        children: this.renderItems(),
	        stretched: true
	      }, {
	        autoGenerateKey: false
	      }), position === 'right' && _GridColumn["default"].create({
	        width: tabWidth,
	        children: menu
	      }, {
	        autoGenerateKey: false
	      }));
	    }
	  }, {
	    key: "render",
	    value: function render() {
	      var menu = this.renderMenu();
	      var rest = (0, _lib.getUnhandledProps)(Tab, this.props);
	      var ElementType = (0, _lib.getElementType)(Tab, this.props);

	      if (menu.props.vertical) {
	        return _react["default"].createElement(ElementType, rest, this.renderVertical(menu));
	      }

	      return _react["default"].createElement(ElementType, rest, menu.props.attached !== 'bottom' && menu, this.renderItems(), menu.props.attached === 'bottom' && menu);
	    }
	  }]);
	  return Tab;
	}(_lib.AutoControlledComponent);

	(0, _defineProperty2["default"])(Tab, "autoControlledProps", ['activeIndex']);
	(0, _defineProperty2["default"])(Tab, "defaultProps", {
	  grid: {
	    paneWidth: 12,
	    tabWidth: 4
	  },
	  menu: {
	    attached: true,
	    tabular: true
	  },
	  renderActiveOnly: true
	});
	(0, _defineProperty2["default"])(Tab, "Pane", _TabPane["default"]);
	(0, _defineProperty2["default"])(Tab, "handledProps", ["activeIndex", "as", "defaultActiveIndex", "grid", "menu", "menuPosition", "onTabChange", "panes", "renderActiveOnly"]);
	Tab.propTypes = process.env.NODE_ENV !== "production" ? {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** The initial activeIndex. */
	  defaultActiveIndex: _propTypes["default"].oneOfType([_propTypes["default"].number, _propTypes["default"].string]),

	  /** Index of the currently active tab. */
	  activeIndex: _propTypes["default"].oneOfType([_propTypes["default"].number, _propTypes["default"].string]),

	  /**
	   * Shorthand props for the Menu.
	   * tabular, if true, will derive final value from `menuPosition`, otherwise set 'left' or 'right' explicitly.
	   */
	  menu: _propTypes["default"].object,

	  /** Align vertical menu */
	  menuPosition: _propTypes["default"].oneOf(['left', 'right']),

	  /** Shorthand props for the Grid. */
	  grid: _propTypes["default"].object,

	  /**
	   * Called on tab change.
	   *
	   * @param {SyntheticEvent} event - React's original SyntheticEvent.
	   * @param {object} data - All props and proposed new activeIndex.
	   * @param {object} data.activeIndex - The new proposed activeIndex.
	   */
	  onTabChange: _propTypes["default"].func,

	  /**
	   * Array of objects describing each Menu.Item and Tab.Pane:
	   * { menuItem: 'Home', render: () => <Tab.Pane /> }
	   * or
	   * { menuItem: 'Home', pane: 'Welcome' }
	   */
	  panes: _propTypes["default"].arrayOf(_propTypes["default"].shape({
	    menuItem: _lib.customPropTypes.itemShorthand,
	    pane: _lib.customPropTypes.itemShorthand,
	    render: _propTypes["default"].func
	  })),

	  /** A Tab can render only active pane. */
	  renderActiveOnly: _propTypes["default"].bool
	} : {};
	var _default = Tab;
	exports["default"] = _default;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 789 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _extends2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/extends\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _classnames = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"classnames\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _propTypes = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"prop-types\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _react = _interopRequireDefault(__webpack_require__(3));

	var _lib = __webpack_require__(256);

	var _Segment = _interopRequireDefault(__webpack_require__(718));

	/**
	 * A tab pane holds the content of a tab.
	 */
	function TabPane(props) {
	  var active = props.active,
	      children = props.children,
	      className = props.className,
	      content = props.content,
	      loading = props.loading;
	  var classes = (0, _classnames["default"])((0, _lib.useKeyOnly)(active, 'active'), (0, _lib.useKeyOnly)(loading, 'loading'), 'tab', className);
	  var rest = (0, _lib.getUnhandledProps)(TabPane, props);
	  var ElementType = (0, _lib.getElementType)(TabPane, props);
	  var calculatedDefaultProps = {};

	  if (ElementType === _Segment["default"]) {
	    calculatedDefaultProps.attached = 'bottom';
	  }

	  return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, calculatedDefaultProps, rest, {
	    className: classes
	  }), _lib.childrenUtils.isNil(children) ? content : children);
	}

	TabPane.handledProps = ["active", "as", "children", "className", "content", "loading"];
	TabPane.defaultProps = {
	  as: _Segment["default"],
	  active: true
	};
	TabPane.propTypes = process.env.NODE_ENV !== "production" ? {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** A tab pane can be active. */
	  active: _propTypes["default"].bool,

	  /** Primary content. */
	  children: _propTypes["default"].node,

	  /** Additional classes. */
	  className: _propTypes["default"].string,

	  /** Shorthand for primary content. */
	  content: _lib.customPropTypes.contentShorthand,

	  /** A Tab.Pane can display a loading indicator. */
	  loading: _propTypes["default"].bool
	} : {};
	TabPane.create = (0, _lib.createShorthandFactory)(TabPane, function (content) {
	  return {
	    content: content
	  };
	});
	var _default = TabPane;
	exports["default"] = _default;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 790 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	Object.defineProperty(exports, "default", {
	  enumerable: true,
	  get: function get() {
	    return _Advertisement["default"];
	  }
	});

	var _Advertisement = _interopRequireDefault(__webpack_require__(791));

/***/ }),
/* 791 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _extends2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/extends\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _classnames = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"classnames\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _propTypes = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"prop-types\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _react = _interopRequireDefault(__webpack_require__(3));

	var _lib = __webpack_require__(256);

	/**
	 * An ad displays third-party promotional content.
	 */
	function Advertisement(props) {
	  var centered = props.centered,
	      children = props.children,
	      className = props.className,
	      content = props.content,
	      test = props.test,
	      unit = props.unit;
	  var classes = (0, _classnames["default"])('ui', unit, (0, _lib.useKeyOnly)(centered, 'centered'), (0, _lib.useKeyOnly)(test, 'test'), 'ad', className);
	  var rest = (0, _lib.getUnhandledProps)(Advertisement, props);
	  var ElementType = (0, _lib.getElementType)(Advertisement, props);
	  return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	    className: classes,
	    "data-text": test
	  }), _lib.childrenUtils.isNil(children) ? content : children);
	}

	Advertisement.handledProps = ["as", "centered", "children", "className", "content", "test", "unit"];
	Advertisement.propTypes = process.env.NODE_ENV !== "production" ? {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Center the advertisement. */
	  centered: _propTypes["default"].bool,

	  /** Primary content. */
	  children: _propTypes["default"].node,

	  /** Additional classes. */
	  className: _propTypes["default"].string,

	  /** Shorthand for primary content. */
	  content: _lib.customPropTypes.contentShorthand,

	  /** Text to be displayed on the advertisement. */
	  test: _propTypes["default"].oneOfType([_propTypes["default"].bool, _propTypes["default"].number, _propTypes["default"].string]),

	  /** Varies the size of the advertisement. */
	  unit: _propTypes["default"].oneOf(['medium rectangle', 'large rectangle', 'vertical rectangle', 'small rectangle', 'mobile banner', 'banner', 'vertical banner', 'top banner', 'half banner', 'button', 'square button', 'small button', 'skyscraper', 'wide skyscraper', 'leaderboard', 'large leaderboard', 'mobile leaderboard', 'billboard', 'panorama', 'netboard', 'half page', 'square', 'small square']).isRequired
	} : {};
	var _default = Advertisement;
	exports["default"] = _default;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 792 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";

	var _interopRequireWildcard = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireWildcard\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _extends2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/extends\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _classCallCheck2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/classCallCheck\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _createClass2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/createClass\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/possibleConstructorReturn\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _getPrototypeOf3 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/getPrototypeOf\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _assertThisInitialized2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/assertThisInitialized\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _inherits2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/inherits\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _defineProperty2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/defineProperty\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _classnames = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"classnames\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _propTypes = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"prop-types\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _react = _interopRequireWildcard(__webpack_require__(3));

	var _lib = __webpack_require__(256);

	var _Image = _interopRequireDefault(__webpack_require__(639));

	var _CardContent = _interopRequireDefault(__webpack_require__(793));

	var _CardDescription = _interopRequireDefault(__webpack_require__(794));

	var _CardGroup = _interopRequireDefault(__webpack_require__(797));

	var _CardHeader = _interopRequireDefault(__webpack_require__(795));

	var _CardMeta = _interopRequireDefault(__webpack_require__(796));

	/**
	 * A card displays site content in a manner similar to a playing card.
	 */
	var Card =
	/*#__PURE__*/
	function (_Component) {
	  (0, _inherits2["default"])(Card, _Component);

	  function Card() {
	    var _getPrototypeOf2;

	    var _this;

	    (0, _classCallCheck2["default"])(this, Card);

	    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    _this = (0, _possibleConstructorReturn2["default"])(this, (_getPrototypeOf2 = (0, _getPrototypeOf3["default"])(Card)).call.apply(_getPrototypeOf2, [this].concat(args)));
	    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "handleClick", function (e) {
	      var onClick = _this.props.onClick;
	      if (onClick) onClick(e, _this.props);
	    });
	    return _this;
	  }

	  (0, _createClass2["default"])(Card, [{
	    key: "render",
	    value: function render() {
	      var _this$props = this.props,
	          centered = _this$props.centered,
	          children = _this$props.children,
	          className = _this$props.className,
	          color = _this$props.color,
	          content = _this$props.content,
	          description = _this$props.description,
	          extra = _this$props.extra,
	          fluid = _this$props.fluid,
	          header = _this$props.header,
	          href = _this$props.href,
	          image = _this$props.image,
	          link = _this$props.link,
	          meta = _this$props.meta,
	          onClick = _this$props.onClick,
	          raised = _this$props.raised;
	      var classes = (0, _classnames["default"])('ui', color, (0, _lib.useKeyOnly)(centered, 'centered'), (0, _lib.useKeyOnly)(fluid, 'fluid'), (0, _lib.useKeyOnly)(link, 'link'), (0, _lib.useKeyOnly)(raised, 'raised'), 'card', className);
	      var rest = (0, _lib.getUnhandledProps)(Card, this.props);
	      var ElementType = (0, _lib.getElementType)(Card, this.props, function () {
	        if (onClick) return 'a';
	      });

	      if (!_lib.childrenUtils.isNil(children)) {
	        return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	          className: classes,
	          href: href,
	          onClick: this.handleClick
	        }), children);
	      }

	      if (!_lib.childrenUtils.isNil(content)) {
	        return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	          className: classes,
	          href: href,
	          onClick: this.handleClick
	        }), content);
	      }

	      return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	        className: classes,
	        href: href,
	        onClick: this.handleClick
	      }), _Image["default"].create(image, {
	        autoGenerateKey: false,
	        defaultProps: {
	          ui: false,
	          wrapped: true
	        }
	      }), (description || header || meta) && _react["default"].createElement(_CardContent["default"], {
	        description: description,
	        header: header,
	        meta: meta
	      }), extra && _react["default"].createElement(_CardContent["default"], {
	        extra: true
	      }, extra));
	    }
	  }]);
	  return Card;
	}(_react.Component);

	exports["default"] = Card;
	(0, _defineProperty2["default"])(Card, "Content", _CardContent["default"]);
	(0, _defineProperty2["default"])(Card, "Description", _CardDescription["default"]);
	(0, _defineProperty2["default"])(Card, "Group", _CardGroup["default"]);
	(0, _defineProperty2["default"])(Card, "Header", _CardHeader["default"]);
	(0, _defineProperty2["default"])(Card, "Meta", _CardMeta["default"]);
	(0, _defineProperty2["default"])(Card, "handledProps", ["as", "centered", "children", "className", "color", "content", "description", "extra", "fluid", "header", "href", "image", "link", "meta", "onClick", "raised"]);
	Card.propTypes = process.env.NODE_ENV !== "production" ? {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** A Card can center itself inside its container. */
	  centered: _propTypes["default"].bool,

	  /** Primary content. */
	  children: _propTypes["default"].node,

	  /** Additional classes. */
	  className: _propTypes["default"].string,

	  /** A Card can be formatted to display different colors. */
	  color: _propTypes["default"].oneOf(_lib.SUI.COLORS),

	  /** Shorthand for primary content. */
	  content: _lib.customPropTypes.contentShorthand,

	  /** Shorthand for CardDescription. */
	  description: _lib.customPropTypes.itemShorthand,

	  /** Shorthand for primary content of CardContent. */
	  extra: _lib.customPropTypes.contentShorthand,

	  /** A Card can be formatted to take up the width of its container. */
	  fluid: _propTypes["default"].bool,

	  /** Shorthand for CardHeader. */
	  header: _lib.customPropTypes.itemShorthand,

	  /** Render as an `a` tag instead of a `div` and adds the href attribute. */
	  href: _propTypes["default"].string,

	  /** A card can contain an Image component. */
	  image: _lib.customPropTypes.itemShorthand,

	  /** A card can be formatted to link to other content. */
	  link: _propTypes["default"].bool,

	  /** Shorthand for CardMeta. */
	  meta: _lib.customPropTypes.itemShorthand,

	  /**
	   * Called on click. When passed, the component renders as an `a`
	   * tag by default instead of a `div`.
	   *
	   * @param {SyntheticEvent} event - React's original SyntheticEvent.
	   * @param {object} data - All props.
	   */
	  onClick: _propTypes["default"].func,

	  /** A Card can be formatted to raise above the page. */
	  raised: _propTypes["default"].bool
	} : {};
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 793 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _extends2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/extends\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _without2 = _interopRequireDefault(__webpack_require__(542));

	var _classnames = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"classnames\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _propTypes = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"prop-types\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _react = _interopRequireDefault(__webpack_require__(3));

	var _lib = __webpack_require__(256);

	var _CardDescription = _interopRequireDefault(__webpack_require__(794));

	var _CardHeader = _interopRequireDefault(__webpack_require__(795));

	var _CardMeta = _interopRequireDefault(__webpack_require__(796));

	/**
	 * A card can contain blocks of content or extra content meant to be formatted separately from the main content.
	 */
	function CardContent(props) {
	  var children = props.children,
	      className = props.className,
	      content = props.content,
	      description = props.description,
	      extra = props.extra,
	      header = props.header,
	      meta = props.meta,
	      textAlign = props.textAlign;
	  var classes = (0, _classnames["default"])((0, _lib.useKeyOnly)(extra, 'extra'), (0, _lib.useTextAlignProp)(textAlign), 'content', className);
	  var rest = (0, _lib.getUnhandledProps)(CardContent, props);
	  var ElementType = (0, _lib.getElementType)(CardContent, props);

	  if (!_lib.childrenUtils.isNil(children)) {
	    return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	      className: classes
	    }), children);
	  }

	  if (!_lib.childrenUtils.isNil(content)) {
	    return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	      className: classes
	    }), content);
	  }

	  return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	    className: classes
	  }), (0, _lib.createShorthand)(_CardHeader["default"], function (val) {
	    return {
	      content: val
	    };
	  }, header, {
	    autoGenerateKey: false
	  }), (0, _lib.createShorthand)(_CardMeta["default"], function (val) {
	    return {
	      content: val
	    };
	  }, meta, {
	    autoGenerateKey: false
	  }), (0, _lib.createShorthand)(_CardDescription["default"], function (val) {
	    return {
	      content: val
	    };
	  }, description, {
	    autoGenerateKey: false
	  }));
	}

	CardContent.handledProps = ["as", "children", "className", "content", "description", "extra", "header", "meta", "textAlign"];
	CardContent.propTypes = process.env.NODE_ENV !== "production" ? {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Primary content. */
	  children: _propTypes["default"].node,

	  /** Additional classes. */
	  className: _propTypes["default"].string,

	  /** Shorthand for primary content. */
	  content: _lib.customPropTypes.contentShorthand,

	  /** Shorthand for CardDescription. */
	  description: _lib.customPropTypes.itemShorthand,

	  /** A card can contain extra content meant to be formatted separately from the main content. */
	  extra: _propTypes["default"].bool,

	  /** Shorthand for CardHeader. */
	  header: _lib.customPropTypes.itemShorthand,

	  /** Shorthand for CardMeta. */
	  meta: _lib.customPropTypes.itemShorthand,

	  /** A card content can adjust its text alignment. */
	  textAlign: _propTypes["default"].oneOf((0, _without2["default"])(_lib.SUI.TEXT_ALIGNMENTS, 'justified'))
	} : {};
	var _default = CardContent;
	exports["default"] = _default;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 794 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _extends2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/extends\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _without2 = _interopRequireDefault(__webpack_require__(542));

	var _classnames = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"classnames\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _propTypes = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"prop-types\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _react = _interopRequireDefault(__webpack_require__(3));

	var _lib = __webpack_require__(256);

	/**
	 * A card can contain a description with one or more paragraphs.
	 */
	function CardDescription(props) {
	  var children = props.children,
	      className = props.className,
	      content = props.content,
	      textAlign = props.textAlign;
	  var classes = (0, _classnames["default"])((0, _lib.useTextAlignProp)(textAlign), 'description', className);
	  var rest = (0, _lib.getUnhandledProps)(CardDescription, props);
	  var ElementType = (0, _lib.getElementType)(CardDescription, props);
	  return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	    className: classes
	  }), _lib.childrenUtils.isNil(children) ? content : children);
	}

	CardDescription.handledProps = ["as", "children", "className", "content", "textAlign"];
	CardDescription.propTypes = process.env.NODE_ENV !== "production" ? {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Primary content. */
	  children: _propTypes["default"].node,

	  /** Additional classes. */
	  className: _propTypes["default"].string,

	  /** Shorthand for primary content. */
	  content: _lib.customPropTypes.contentShorthand,

	  /** A card content can adjust its text alignment. */
	  textAlign: _propTypes["default"].oneOf((0, _without2["default"])(_lib.SUI.TEXT_ALIGNMENTS, 'justified'))
	} : {};
	var _default = CardDescription;
	exports["default"] = _default;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 795 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _extends2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/extends\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _without2 = _interopRequireDefault(__webpack_require__(542));

	var _classnames = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"classnames\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _propTypes = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"prop-types\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _react = _interopRequireDefault(__webpack_require__(3));

	var _lib = __webpack_require__(256);

	/**
	 * A card can contain a header.
	 */
	function CardHeader(props) {
	  var children = props.children,
	      className = props.className,
	      content = props.content,
	      textAlign = props.textAlign;
	  var classes = (0, _classnames["default"])((0, _lib.useTextAlignProp)(textAlign), 'header', className);
	  var rest = (0, _lib.getUnhandledProps)(CardHeader, props);
	  var ElementType = (0, _lib.getElementType)(CardHeader, props);
	  return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	    className: classes
	  }), _lib.childrenUtils.isNil(children) ? content : children);
	}

	CardHeader.handledProps = ["as", "children", "className", "content", "textAlign"];
	CardHeader.propTypes = process.env.NODE_ENV !== "production" ? {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Primary content. */
	  children: _propTypes["default"].node,

	  /** Additional classes. */
	  className: _propTypes["default"].string,

	  /** Shorthand for primary content. */
	  content: _lib.customPropTypes.contentShorthand,

	  /** A card header can adjust its text alignment. */
	  textAlign: _propTypes["default"].oneOf((0, _without2["default"])(_lib.SUI.TEXT_ALIGNMENTS, 'justified'))
	} : {};
	var _default = CardHeader;
	exports["default"] = _default;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 796 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _extends2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/extends\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _without2 = _interopRequireDefault(__webpack_require__(542));

	var _classnames = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"classnames\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _propTypes = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"prop-types\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _react = _interopRequireDefault(__webpack_require__(3));

	var _lib = __webpack_require__(256);

	/**
	 * A card can contain content metadata.
	 */
	function CardMeta(props) {
	  var children = props.children,
	      className = props.className,
	      content = props.content,
	      textAlign = props.textAlign;
	  var classes = (0, _classnames["default"])((0, _lib.useTextAlignProp)(textAlign), 'meta', className);
	  var rest = (0, _lib.getUnhandledProps)(CardMeta, props);
	  var ElementType = (0, _lib.getElementType)(CardMeta, props);
	  return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	    className: classes
	  }), _lib.childrenUtils.isNil(children) ? content : children);
	}

	CardMeta.handledProps = ["as", "children", "className", "content", "textAlign"];
	CardMeta.propTypes = process.env.NODE_ENV !== "production" ? {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Primary content. */
	  children: _propTypes["default"].node,

	  /** Additional classes. */
	  className: _propTypes["default"].string,

	  /** Shorthand for primary content. */
	  content: _lib.customPropTypes.contentShorthand,

	  /** A card meta can adjust its text alignment. */
	  textAlign: _propTypes["default"].oneOf((0, _without2["default"])(_lib.SUI.TEXT_ALIGNMENTS, 'justified'))
	} : {};
	var _default = CardMeta;
	exports["default"] = _default;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 797 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _extends2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/extends\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _without2 = _interopRequireDefault(__webpack_require__(542));

	var _map2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/map\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _classnames = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"classnames\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _propTypes = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"prop-types\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _react = _interopRequireDefault(__webpack_require__(3));

	var _lib = __webpack_require__(256);

	var _Card = _interopRequireDefault(__webpack_require__(792));

	/**
	 * A group of cards.
	 */
	function CardGroup(props) {
	  var centered = props.centered,
	      children = props.children,
	      className = props.className,
	      content = props.content,
	      doubling = props.doubling,
	      items = props.items,
	      itemsPerRow = props.itemsPerRow,
	      stackable = props.stackable,
	      textAlign = props.textAlign;
	  var classes = (0, _classnames["default"])('ui', (0, _lib.useKeyOnly)(centered, 'centered'), (0, _lib.useKeyOnly)(doubling, 'doubling'), (0, _lib.useKeyOnly)(stackable, 'stackable'), (0, _lib.useTextAlignProp)(textAlign), (0, _lib.useWidthProp)(itemsPerRow), 'cards', className);
	  var rest = (0, _lib.getUnhandledProps)(CardGroup, props);
	  var ElementType = (0, _lib.getElementType)(CardGroup, props);

	  if (!_lib.childrenUtils.isNil(children)) {
	    return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	      className: classes
	    }), children);
	  }

	  if (!_lib.childrenUtils.isNil(content)) {
	    return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	      className: classes
	    }), content);
	  }

	  var itemsJSX = (0, _map2["default"])(items, function (item) {
	    var key = item.key || [item.header, item.description].join('-');
	    return _react["default"].createElement(_Card["default"], (0, _extends2["default"])({
	      key: key
	    }, item));
	  });
	  return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	    className: classes
	  }), itemsJSX);
	}

	CardGroup.handledProps = ["as", "centered", "children", "className", "content", "doubling", "items", "itemsPerRow", "stackable", "textAlign"];
	CardGroup.propTypes = process.env.NODE_ENV !== "production" ? {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** A group of cards can center itself inside its container. */
	  centered: _propTypes["default"].bool,

	  /** Primary content. */
	  children: _propTypes["default"].node,

	  /** Additional classes. */
	  className: _propTypes["default"].string,

	  /** Shorthand for primary content. */
	  content: _lib.customPropTypes.contentShorthand,

	  /** A group of cards can double its column width for mobile. */
	  doubling: _propTypes["default"].bool,

	  /** Shorthand array of props for Card. */
	  items: _lib.customPropTypes.collectionShorthand,

	  /** A group of cards can set how many cards should exist in a row. */
	  itemsPerRow: _propTypes["default"].oneOf(_lib.SUI.WIDTHS),

	  /** A group of cards can automatically stack rows to a single columns on mobile devices. */
	  stackable: _propTypes["default"].bool,

	  /** A card group can adjust its text alignment. */
	  textAlign: _propTypes["default"].oneOf((0, _without2["default"])(_lib.SUI.TEXT_ALIGNMENTS, 'justified'))
	} : {};
	var _default = CardGroup;
	exports["default"] = _default;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 798 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	Object.defineProperty(exports, "default", {
	  enumerable: true,
	  get: function get() {
	    return _Comment["default"];
	  }
	});

	var _Comment = _interopRequireDefault(__webpack_require__(799));

/***/ }),
/* 799 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _extends2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/extends\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _classnames = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"classnames\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _propTypes = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"prop-types\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _react = _interopRequireDefault(__webpack_require__(3));

	var _lib = __webpack_require__(256);

	var _CommentAction = _interopRequireDefault(__webpack_require__(800));

	var _CommentActions = _interopRequireDefault(__webpack_require__(801));

	var _CommentAuthor = _interopRequireDefault(__webpack_require__(802));

	var _CommentAvatar = _interopRequireDefault(__webpack_require__(803));

	var _CommentContent = _interopRequireDefault(__webpack_require__(804));

	var _CommentGroup = _interopRequireDefault(__webpack_require__(805));

	var _CommentMetadata = _interopRequireDefault(__webpack_require__(806));

	var _CommentText = _interopRequireDefault(__webpack_require__(807));

	/**
	 * A comment displays user feedback to site content.
	 */
	function Comment(props) {
	  var className = props.className,
	      children = props.children,
	      collapsed = props.collapsed,
	      content = props.content;
	  var classes = (0, _classnames["default"])((0, _lib.useKeyOnly)(collapsed, 'collapsed'), 'comment', className);
	  var rest = (0, _lib.getUnhandledProps)(Comment, props);
	  var ElementType = (0, _lib.getElementType)(Comment, props);
	  return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	    className: classes
	  }), _lib.childrenUtils.isNil(children) ? content : children);
	}

	Comment.handledProps = ["as", "children", "className", "collapsed", "content"];
	Comment.propTypes = process.env.NODE_ENV !== "production" ? {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Primary content. */
	  children: _propTypes["default"].node,

	  /** Additional classes. */
	  className: _propTypes["default"].string,

	  /** Comment can be collapsed, or hidden from view. */
	  collapsed: _propTypes["default"].bool,

	  /** Shorthand for primary content. */
	  content: _lib.customPropTypes.contentShorthand
	} : {};
	Comment.Author = _CommentAuthor["default"];
	Comment.Action = _CommentAction["default"];
	Comment.Actions = _CommentActions["default"];
	Comment.Avatar = _CommentAvatar["default"];
	Comment.Content = _CommentContent["default"];
	Comment.Group = _CommentGroup["default"];
	Comment.Metadata = _CommentMetadata["default"];
	Comment.Text = _CommentText["default"];
	var _default = Comment;
	exports["default"] = _default;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 800 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _extends2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/extends\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _classnames = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"classnames\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _propTypes = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"prop-types\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _react = _interopRequireDefault(__webpack_require__(3));

	var _lib = __webpack_require__(256);

	/**
	 * A comment can contain an action.
	 */
	function CommentAction(props) {
	  var active = props.active,
	      className = props.className,
	      children = props.children,
	      content = props.content;
	  var classes = (0, _classnames["default"])((0, _lib.useKeyOnly)(active, 'active'), className);
	  var rest = (0, _lib.getUnhandledProps)(CommentAction, props);
	  var ElementType = (0, _lib.getElementType)(CommentAction, props);
	  return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	    className: classes
	  }), _lib.childrenUtils.isNil(children) ? content : children);
	}

	CommentAction.handledProps = ["active", "as", "children", "className", "content"];
	CommentAction.defaultProps = {
	  as: 'a'
	};
	CommentAction.propTypes = process.env.NODE_ENV !== "production" ? {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Style as the currently active action. */
	  active: _propTypes["default"].bool,

	  /** Primary content. */
	  children: _propTypes["default"].node,

	  /** Additional classes. */
	  className: _propTypes["default"].string,

	  /** Shorthand for primary content. */
	  content: _lib.customPropTypes.contentShorthand
	} : {};
	var _default = CommentAction;
	exports["default"] = _default;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 801 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _extends2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/extends\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _classnames = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"classnames\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _propTypes = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"prop-types\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _react = _interopRequireDefault(__webpack_require__(3));

	var _lib = __webpack_require__(256);

	/**
	 * A comment can contain an list of actions a user may perform related to this comment.
	 */
	function CommentActions(props) {
	  var className = props.className,
	      children = props.children,
	      content = props.content;
	  var classes = (0, _classnames["default"])('actions', className);
	  var rest = (0, _lib.getUnhandledProps)(CommentActions, props);
	  var ElementType = (0, _lib.getElementType)(CommentActions, props);
	  return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	    className: classes
	  }), _lib.childrenUtils.isNil(children) ? content : children);
	}

	CommentActions.handledProps = ["as", "children", "className", "content"];
	CommentActions.propTypes = process.env.NODE_ENV !== "production" ? {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Primary content. */
	  children: _propTypes["default"].node,

	  /** Additional classes. */
	  className: _propTypes["default"].string,

	  /** Shorthand for primary content. */
	  content: _lib.customPropTypes.contentShorthand
	} : {};
	var _default = CommentActions;
	exports["default"] = _default;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 802 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _extends2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/extends\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _classnames = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"classnames\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _propTypes = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"prop-types\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _react = _interopRequireDefault(__webpack_require__(3));

	var _lib = __webpack_require__(256);

	/**
	 * A comment can contain an author.
	 */
	function CommentAuthor(props) {
	  var className = props.className,
	      children = props.children,
	      content = props.content;
	  var classes = (0, _classnames["default"])('author', className);
	  var rest = (0, _lib.getUnhandledProps)(CommentAuthor, props);
	  var ElementType = (0, _lib.getElementType)(CommentAuthor, props);
	  return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	    className: classes
	  }), _lib.childrenUtils.isNil(children) ? content : children);
	}

	CommentAuthor.handledProps = ["as", "children", "className", "content"];
	CommentAuthor.propTypes = process.env.NODE_ENV !== "production" ? {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Primary content. */
	  children: _propTypes["default"].node,

	  /** Additional classes. */
	  className: _propTypes["default"].string,

	  /** Shorthand for primary content. */
	  content: _lib.customPropTypes.contentShorthand
	} : {};
	var _default = CommentAuthor;
	exports["default"] = _default;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 803 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _extends2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/extends\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _slicedToArray2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/slicedToArray\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _classnames = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"classnames\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _propTypes = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"prop-types\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _react = _interopRequireDefault(__webpack_require__(3));

	var _lib = __webpack_require__(256);

	/**
	 * A comment can contain an image or avatar.
	 */
	function CommentAvatar(props) {
	  var className = props.className,
	      src = props.src;
	  var classes = (0, _classnames["default"])('avatar', className);
	  var rest = (0, _lib.getUnhandledProps)(CommentAvatar, props);

	  var _partitionHTMLProps = (0, _lib.partitionHTMLProps)(rest, {
	    htmlProps: _lib.htmlImageProps
	  }),
	      _partitionHTMLProps2 = (0, _slicedToArray2["default"])(_partitionHTMLProps, 2),
	      imageProps = _partitionHTMLProps2[0],
	      rootProps = _partitionHTMLProps2[1];

	  var ElementType = (0, _lib.getElementType)(CommentAvatar, props);
	  return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rootProps, {
	    className: classes
	  }), (0, _lib.createHTMLImage)(src, {
	    autoGenerateKey: false,
	    defaultProps: imageProps
	  }));
	}

	CommentAvatar.handledProps = ["as", "className", "src"];
	CommentAvatar.propTypes = process.env.NODE_ENV !== "production" ? {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Additional classes. */
	  className: _propTypes["default"].string,

	  /** Specifies the URL of the image. */
	  src: _propTypes["default"].string
	} : {};
	var _default = CommentAvatar;
	exports["default"] = _default;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 804 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _extends2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/extends\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _classnames = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"classnames\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _propTypes = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"prop-types\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _react = _interopRequireDefault(__webpack_require__(3));

	var _lib = __webpack_require__(256);

	/**
	 * A comment can contain content.
	 */
	function CommentContent(props) {
	  var className = props.className,
	      children = props.children,
	      content = props.content;
	  var classes = (0, _classnames["default"])(className, 'content');
	  var rest = (0, _lib.getUnhandledProps)(CommentContent, props);
	  var ElementType = (0, _lib.getElementType)(CommentContent, props);
	  return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	    className: classes
	  }), _lib.childrenUtils.isNil(children) ? content : children);
	}

	CommentContent.handledProps = ["as", "children", "className", "content"];
	CommentContent.propTypes = process.env.NODE_ENV !== "production" ? {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Primary content. */
	  children: _propTypes["default"].node,

	  /** Additional classes. */
	  className: _propTypes["default"].string,

	  /** Shorthand for primary content. */
	  content: _lib.customPropTypes.contentShorthand
	} : {};
	var _default = CommentContent;
	exports["default"] = _default;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 805 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _extends2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/extends\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _without2 = _interopRequireDefault(__webpack_require__(542));

	var _classnames = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"classnames\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _propTypes = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"prop-types\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _react = _interopRequireDefault(__webpack_require__(3));

	var _lib = __webpack_require__(256);

	/**
	 * Comments can be grouped.
	 */
	function CommentGroup(props) {
	  var className = props.className,
	      children = props.children,
	      collapsed = props.collapsed,
	      content = props.content,
	      minimal = props.minimal,
	      size = props.size,
	      threaded = props.threaded;
	  var classes = (0, _classnames["default"])('ui', size, (0, _lib.useKeyOnly)(collapsed, 'collapsed'), (0, _lib.useKeyOnly)(minimal, 'minimal'), (0, _lib.useKeyOnly)(threaded, 'threaded'), 'comments', className);
	  var rest = (0, _lib.getUnhandledProps)(CommentGroup, props);
	  var ElementType = (0, _lib.getElementType)(CommentGroup, props);
	  return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	    className: classes
	  }), _lib.childrenUtils.isNil(children) ? content : children);
	}

	CommentGroup.handledProps = ["as", "children", "className", "collapsed", "content", "minimal", "size", "threaded"];
	CommentGroup.propTypes = process.env.NODE_ENV !== "production" ? {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Primary content. */
	  children: _propTypes["default"].node,

	  /** Additional classes. */
	  className: _propTypes["default"].string,

	  /** Comments can be collapsed, or hidden from view. */
	  collapsed: _propTypes["default"].bool,

	  /** Shorthand for primary content. */
	  content: _lib.customPropTypes.contentShorthand,

	  /** Comments can hide extra information unless a user shows intent to interact with a comment. */
	  minimal: _propTypes["default"].bool,

	  /** Comments can have different sizes. */
	  size: _propTypes["default"].oneOf((0, _without2["default"])(_lib.SUI.SIZES, 'medium')),

	  /** A comment list can be threaded to showing the relationship between conversations. */
	  threaded: _propTypes["default"].bool
	} : {};
	var _default = CommentGroup;
	exports["default"] = _default;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 806 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _extends2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/extends\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _classnames = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"classnames\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _propTypes = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"prop-types\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _react = _interopRequireDefault(__webpack_require__(3));

	var _lib = __webpack_require__(256);

	/**
	 * A comment can contain metadata about the comment, an arbitrary amount of metadata may be defined.
	 */
	function CommentMetadata(props) {
	  var className = props.className,
	      children = props.children,
	      content = props.content;
	  var classes = (0, _classnames["default"])('metadata', className);
	  var rest = (0, _lib.getUnhandledProps)(CommentMetadata, props);
	  var ElementType = (0, _lib.getElementType)(CommentMetadata, props);
	  return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	    className: classes
	  }), _lib.childrenUtils.isNil(children) ? content : children);
	}

	CommentMetadata.handledProps = ["as", "children", "className", "content"];
	CommentMetadata.propTypes = process.env.NODE_ENV !== "production" ? {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Primary content. */
	  children: _propTypes["default"].node,

	  /** Additional classes. */
	  className: _propTypes["default"].string,

	  /** Shorthand for primary content. */
	  content: _lib.customPropTypes.contentShorthand
	} : {};
	var _default = CommentMetadata;
	exports["default"] = _default;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 807 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _extends2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/extends\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _classnames = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"classnames\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _propTypes = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"prop-types\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _react = _interopRequireDefault(__webpack_require__(3));

	var _lib = __webpack_require__(256);

	/**
	 * A comment can contain text.
	 */
	function CommentText(props) {
	  var className = props.className,
	      children = props.children,
	      content = props.content;
	  var classes = (0, _classnames["default"])(className, 'text');
	  var rest = (0, _lib.getUnhandledProps)(CommentText, props);
	  var ElementType = (0, _lib.getElementType)(CommentText, props);
	  return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	    className: classes
	  }), _lib.childrenUtils.isNil(children) ? content : children);
	}

	CommentText.handledProps = ["as", "children", "className", "content"];
	CommentText.propTypes = process.env.NODE_ENV !== "production" ? {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Primary content. */
	  children: _propTypes["default"].node,

	  /** Additional classes. */
	  className: _propTypes["default"].string,

	  /** Shorthand for primary content. */
	  content: _lib.customPropTypes.contentShorthand
	} : {};
	var _default = CommentText;
	exports["default"] = _default;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 808 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	Object.defineProperty(exports, "default", {
	  enumerable: true,
	  get: function get() {
	    return _Feed["default"];
	  }
	});

	var _Feed = _interopRequireDefault(__webpack_require__(809));

/***/ }),
/* 809 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _objectWithoutProperties2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/objectWithoutProperties\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _extends2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/extends\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _without2 = _interopRequireDefault(__webpack_require__(542));

	var _map2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/map\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _classnames = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"classnames\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _propTypes = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"prop-types\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _react = _interopRequireDefault(__webpack_require__(3));

	var _lib = __webpack_require__(256);

	var _FeedContent = _interopRequireDefault(__webpack_require__(810));

	var _FeedDate = _interopRequireDefault(__webpack_require__(811));

	var _FeedEvent = _interopRequireDefault(__webpack_require__(817));

	var _FeedExtra = _interopRequireDefault(__webpack_require__(812));

	var _FeedLabel = _interopRequireDefault(__webpack_require__(818));

	var _FeedLike = _interopRequireDefault(__webpack_require__(814));

	var _FeedMeta = _interopRequireDefault(__webpack_require__(813));

	var _FeedSummary = _interopRequireDefault(__webpack_require__(815));

	var _FeedUser = _interopRequireDefault(__webpack_require__(816));

	/**
	 * A feed presents user activity chronologically.
	 */
	function Feed(props) {
	  var children = props.children,
	      className = props.className,
	      events = props.events,
	      size = props.size;
	  var classes = (0, _classnames["default"])('ui', size, 'feed', className);
	  var rest = (0, _lib.getUnhandledProps)(Feed, props);
	  var ElementType = (0, _lib.getElementType)(Feed, props);

	  if (!_lib.childrenUtils.isNil(children)) {
	    return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	      className: classes
	    }), children);
	  }

	  var eventElements = (0, _map2["default"])(events, function (eventProps) {
	    var childKey = eventProps.childKey,
	        date = eventProps.date,
	        meta = eventProps.meta,
	        summary = eventProps.summary,
	        eventData = (0, _objectWithoutProperties2["default"])(eventProps, ["childKey", "date", "meta", "summary"]);
	    var finalKey = childKey || [date, meta, summary].join('-');
	    return _react["default"].createElement(_FeedEvent["default"], (0, _extends2["default"])({
	      date: date,
	      key: finalKey,
	      meta: meta,
	      summary: summary
	    }, eventData));
	  });
	  return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	    className: classes
	  }), eventElements);
	}

	Feed.handledProps = ["as", "children", "className", "events", "size"];
	Feed.propTypes = process.env.NODE_ENV !== "production" ? {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Primary content. */
	  children: _propTypes["default"].node,

	  /** Additional classes. */
	  className: _propTypes["default"].string,

	  /** Shorthand array of props for FeedEvent. */
	  events: _lib.customPropTypes.collectionShorthand,

	  /** A feed can have different sizes. */
	  size: _propTypes["default"].oneOf((0, _without2["default"])(_lib.SUI.SIZES, 'mini', 'tiny', 'medium', 'big', 'huge', 'massive'))
	} : {};
	Feed.Content = _FeedContent["default"];
	Feed.Date = _FeedDate["default"];
	Feed.Event = _FeedEvent["default"];
	Feed.Extra = _FeedExtra["default"];
	Feed.Label = _FeedLabel["default"];
	Feed.Like = _FeedLike["default"];
	Feed.Meta = _FeedMeta["default"];
	Feed.Summary = _FeedSummary["default"];
	Feed.User = _FeedUser["default"];
	var _default = Feed;
	exports["default"] = _default;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 810 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _extends2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/extends\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _classnames = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"classnames\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _propTypes = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"prop-types\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _react = _interopRequireDefault(__webpack_require__(3));

	var _lib = __webpack_require__(256);

	var _FeedDate = _interopRequireDefault(__webpack_require__(811));

	var _FeedExtra = _interopRequireDefault(__webpack_require__(812));

	var _FeedMeta = _interopRequireDefault(__webpack_require__(813));

	var _FeedSummary = _interopRequireDefault(__webpack_require__(815));

	function FeedContent(props) {
	  var children = props.children,
	      className = props.className,
	      content = props.content,
	      extraImages = props.extraImages,
	      extraText = props.extraText,
	      date = props.date,
	      meta = props.meta,
	      summary = props.summary;
	  var classes = (0, _classnames["default"])('content', className);
	  var rest = (0, _lib.getUnhandledProps)(FeedContent, props);
	  var ElementType = (0, _lib.getElementType)(FeedContent, props);

	  if (!_lib.childrenUtils.isNil(children)) {
	    return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	      className: classes
	    }), children);
	  }

	  return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	    className: classes
	  }), (0, _lib.createShorthand)(_FeedDate["default"], function (val) {
	    return {
	      content: val
	    };
	  }, date, {
	    autoGenerateKey: false
	  }), (0, _lib.createShorthand)(_FeedSummary["default"], function (val) {
	    return {
	      content: val
	    };
	  }, summary, {
	    autoGenerateKey: false
	  }), content, (0, _lib.createShorthand)(_FeedExtra["default"], function (val) {
	    return {
	      text: true,
	      content: val
	    };
	  }, extraText, {
	    autoGenerateKey: false
	  }), (0, _lib.createShorthand)(_FeedExtra["default"], function (val) {
	    return {
	      images: val
	    };
	  }, extraImages, {
	    autoGenerateKey: false
	  }), (0, _lib.createShorthand)(_FeedMeta["default"], function (val) {
	    return {
	      content: val
	    };
	  }, meta, {
	    autoGenerateKey: false
	  }));
	}

	FeedContent.handledProps = ["as", "children", "className", "content", "date", "extraImages", "extraText", "meta", "summary"];
	FeedContent.propTypes = process.env.NODE_ENV !== "production" ? {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Primary content. */
	  children: _propTypes["default"].node,

	  /** Additional classes. */
	  className: _propTypes["default"].string,

	  /** Shorthand for primary content. */
	  content: _lib.customPropTypes.contentShorthand,

	  /** An event can contain a date. */
	  date: _lib.customPropTypes.itemShorthand,

	  /** Shorthand for FeedExtra with images. */
	  extraImages: _FeedExtra["default"].propTypes.images,

	  /** Shorthand for FeedExtra with text. */
	  extraText: _lib.customPropTypes.itemShorthand,

	  /** Shorthand for FeedMeta. */
	  meta: _lib.customPropTypes.itemShorthand,

	  /** Shorthand for FeedSummary. */
	  summary: _lib.customPropTypes.itemShorthand
	} : {};
	var _default = FeedContent;
	exports["default"] = _default;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 811 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _extends2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/extends\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _classnames = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"classnames\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _propTypes = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"prop-types\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _react = _interopRequireDefault(__webpack_require__(3));

	var _lib = __webpack_require__(256);

	/**
	 * An event or an event summary can contain a date.
	 */
	function FeedDate(props) {
	  var children = props.children,
	      className = props.className,
	      content = props.content;
	  var classes = (0, _classnames["default"])('date', className);
	  var rest = (0, _lib.getUnhandledProps)(FeedDate, props);
	  var ElementType = (0, _lib.getElementType)(FeedDate, props);
	  return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	    className: classes
	  }), _lib.childrenUtils.isNil(children) ? content : children);
	}

	FeedDate.handledProps = ["as", "children", "className", "content"];
	FeedDate.propTypes = process.env.NODE_ENV !== "production" ? {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Primary content. */
	  children: _propTypes["default"].node,

	  /** Additional classes. */
	  className: _propTypes["default"].string,

	  /** Shorthand for primary content. */
	  content: _lib.customPropTypes.contentShorthand
	} : {};
	var _default = FeedDate;
	exports["default"] = _default;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 812 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _extends2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/extends\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _map2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/map\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _classnames = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"classnames\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _propTypes = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"prop-types\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _react = _interopRequireDefault(__webpack_require__(3));

	var _lib = __webpack_require__(256);

	/**
	 * A feed can contain an extra content.
	 */
	function FeedExtra(props) {
	  var children = props.children,
	      className = props.className,
	      content = props.content,
	      images = props.images,
	      text = props.text;
	  var classes = (0, _classnames["default"])((0, _lib.useKeyOnly)(images, 'images'), (0, _lib.useKeyOnly)(content || text, 'text'), 'extra', className);
	  var rest = (0, _lib.getUnhandledProps)(FeedExtra, props);
	  var ElementType = (0, _lib.getElementType)(FeedExtra, props);

	  if (!_lib.childrenUtils.isNil(children)) {
	    return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	      className: classes
	    }), children);
	  } // TODO need a "collection factory" to handle creating multiple image elements and their keys


	  var imageElements = (0, _map2["default"])(images, function (image, index) {
	    var key = [index, image].join('-');
	    return (0, _lib.createHTMLImage)(image, {
	      key: key
	    });
	  });
	  return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	    className: classes
	  }), content, imageElements);
	}

	FeedExtra.handledProps = ["as", "children", "className", "content", "images", "text"];
	FeedExtra.propTypes = process.env.NODE_ENV !== "production" ? {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Primary content. */
	  children: _propTypes["default"].node,

	  /** Additional classes. */
	  className: _propTypes["default"].string,

	  /** Shorthand for primary content. */
	  content: _lib.customPropTypes.contentShorthand,

	  /** An event can contain additional information like a set of images. */
	  images: _lib.customPropTypes.every([_lib.customPropTypes.disallow(['text']), _propTypes["default"].oneOfType([_propTypes["default"].bool, _lib.customPropTypes.collectionShorthand])]),

	  /** An event can contain additional text information. */
	  text: _propTypes["default"].bool
	} : {};
	var _default = FeedExtra;
	exports["default"] = _default;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 813 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _extends2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/extends\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _classnames = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"classnames\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _propTypes = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"prop-types\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _react = _interopRequireDefault(__webpack_require__(3));

	var _lib = __webpack_require__(256);

	var _FeedLike = _interopRequireDefault(__webpack_require__(814));

	/**
	 * A feed can contain a meta.
	 */
	function FeedMeta(props) {
	  var children = props.children,
	      className = props.className,
	      content = props.content,
	      like = props.like;
	  var classes = (0, _classnames["default"])('meta', className);
	  var rest = (0, _lib.getUnhandledProps)(FeedMeta, props);
	  var ElementType = (0, _lib.getElementType)(FeedMeta, props);

	  if (!_lib.childrenUtils.isNil(children)) {
	    return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	      className: classes
	    }), children);
	  }

	  return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	    className: classes
	  }), (0, _lib.createShorthand)(_FeedLike["default"], function (val) {
	    return {
	      content: val
	    };
	  }, like, {
	    autoGenerateKey: false
	  }), content);
	}

	FeedMeta.handledProps = ["as", "children", "className", "content", "like"];
	FeedMeta.propTypes = process.env.NODE_ENV !== "production" ? {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Primary content. */
	  children: _propTypes["default"].node,

	  /** Additional classes. */
	  className: _propTypes["default"].string,

	  /** Shorthand for primary content. */
	  content: _lib.customPropTypes.contentShorthand,

	  /** Shorthand for FeedLike. */
	  like: _lib.customPropTypes.itemShorthand
	} : {};
	var _default = FeedMeta;
	exports["default"] = _default;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 814 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _extends2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/extends\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _classnames = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"classnames\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _propTypes = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"prop-types\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _react = _interopRequireDefault(__webpack_require__(3));

	var _lib = __webpack_require__(256);

	var _Icon = _interopRequireDefault(__webpack_require__(566));

	/**
	 * A feed can contain a like element.
	 */
	function FeedLike(props) {
	  var children = props.children,
	      className = props.className,
	      content = props.content,
	      icon = props.icon;
	  var classes = (0, _classnames["default"])('like', className);
	  var rest = (0, _lib.getUnhandledProps)(FeedLike, props);
	  var ElementType = (0, _lib.getElementType)(FeedLike, props);

	  if (!_lib.childrenUtils.isNil(children)) {
	    return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	      className: classes
	    }), children);
	  }

	  return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	    className: classes
	  }), _Icon["default"].create(icon, {
	    autoGenerateKey: false
	  }), content);
	}

	FeedLike.handledProps = ["as", "children", "className", "content", "icon"];
	FeedLike.defaultProps = {
	  as: 'a'
	};
	FeedLike.propTypes = process.env.NODE_ENV !== "production" ? {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Primary content. */
	  children: _propTypes["default"].node,

	  /** Additional classes. */
	  className: _propTypes["default"].string,

	  /** Shorthand for primary content. */
	  content: _lib.customPropTypes.contentShorthand,

	  /** Shorthand for icon. Mutually exclusive with children. */
	  icon: _lib.customPropTypes.itemShorthand
	} : {};
	var _default = FeedLike;
	exports["default"] = _default;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 815 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _extends2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/extends\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _classnames = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"classnames\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _propTypes = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"prop-types\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _react = _interopRequireDefault(__webpack_require__(3));

	var _lib = __webpack_require__(256);

	var _FeedDate = _interopRequireDefault(__webpack_require__(811));

	var _FeedUser = _interopRequireDefault(__webpack_require__(816));

	/**
	 * A feed can contain a summary.
	 */
	function FeedSummary(props) {
	  var children = props.children,
	      className = props.className,
	      content = props.content,
	      date = props.date,
	      user = props.user;
	  var classes = (0, _classnames["default"])('summary', className);
	  var rest = (0, _lib.getUnhandledProps)(FeedSummary, props);
	  var ElementType = (0, _lib.getElementType)(FeedSummary, props);

	  if (!_lib.childrenUtils.isNil(children)) {
	    return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	      className: classes
	    }), children);
	  }

	  return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	    className: classes
	  }), (0, _lib.createShorthand)(_FeedUser["default"], function (val) {
	    return {
	      content: val
	    };
	  }, user, {
	    autoGenerateKey: false
	  }), content, (0, _lib.createShorthand)(_FeedDate["default"], function (val) {
	    return {
	      content: val
	    };
	  }, date, {
	    autoGenerateKey: false
	  }));
	}

	FeedSummary.handledProps = ["as", "children", "className", "content", "date", "user"];
	FeedSummary.propTypes = process.env.NODE_ENV !== "production" ? {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Primary content. */
	  children: _propTypes["default"].node,

	  /** Additional classes. */
	  className: _propTypes["default"].string,

	  /** Shorthand for primary content. */
	  content: _lib.customPropTypes.contentShorthand,

	  /** Shorthand for FeedDate. */
	  date: _lib.customPropTypes.itemShorthand,

	  /** Shorthand for FeedUser. */
	  user: _lib.customPropTypes.itemShorthand
	} : {};
	var _default = FeedSummary;
	exports["default"] = _default;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 816 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _extends2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/extends\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _classnames = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"classnames\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _propTypes = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"prop-types\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _react = _interopRequireDefault(__webpack_require__(3));

	var _lib = __webpack_require__(256);

	/**
	 * A feed can contain a user element.
	 */
	function FeedUser(props) {
	  var children = props.children,
	      className = props.className,
	      content = props.content;
	  var classes = (0, _classnames["default"])('user', className);
	  var rest = (0, _lib.getUnhandledProps)(FeedUser, props);
	  var ElementType = (0, _lib.getElementType)(FeedUser, props);
	  return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	    className: classes
	  }), _lib.childrenUtils.isNil(children) ? content : children);
	}

	FeedUser.handledProps = ["as", "children", "className", "content"];
	FeedUser.propTypes = process.env.NODE_ENV !== "production" ? {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Primary content. */
	  children: _propTypes["default"].node,

	  /** Additional classes. */
	  className: _propTypes["default"].string,

	  /** Shorthand for primary content. */
	  content: _lib.customPropTypes.contentShorthand
	} : {};
	FeedUser.defaultProps = {
	  as: 'a'
	};
	var _default = FeedUser;
	exports["default"] = _default;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 817 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _extends2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/extends\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _classnames = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"classnames\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _propTypes = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"prop-types\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _react = _interopRequireDefault(__webpack_require__(3));

	var _lib = __webpack_require__(256);

	var _FeedContent = _interopRequireDefault(__webpack_require__(810));

	var _FeedLabel = _interopRequireDefault(__webpack_require__(818));

	/**
	 * A feed contains an event.
	 */
	function FeedEvent(props) {
	  var content = props.content,
	      children = props.children,
	      className = props.className,
	      date = props.date,
	      extraImages = props.extraImages,
	      extraText = props.extraText,
	      image = props.image,
	      icon = props.icon,
	      meta = props.meta,
	      summary = props.summary;
	  var classes = (0, _classnames["default"])('event', className);
	  var rest = (0, _lib.getUnhandledProps)(FeedEvent, props);
	  var ElementType = (0, _lib.getElementType)(FeedEvent, props);
	  var hasContentProp = content || date || extraImages || extraText || meta || summary;
	  var contentProps = {
	    content: content,
	    date: date,
	    extraImages: extraImages,
	    extraText: extraText,
	    meta: meta,
	    summary: summary
	  };
	  return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	    className: classes
	  }), (0, _lib.createShorthand)(_FeedLabel["default"], function (val) {
	    return {
	      icon: val
	    };
	  }, icon, {
	    autoGenerateKey: false
	  }), (0, _lib.createShorthand)(_FeedLabel["default"], function (val) {
	    return {
	      image: val
	    };
	  }, image, {
	    autoGenerateKey: false
	  }), hasContentProp && _react["default"].createElement(_FeedContent["default"], contentProps), children);
	}

	FeedEvent.handledProps = ["as", "children", "className", "content", "date", "extraImages", "extraText", "icon", "image", "meta", "summary"];
	FeedEvent.propTypes = process.env.NODE_ENV !== "production" ? {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Primary content. */
	  children: _propTypes["default"].node,

	  /** Additional classes. */
	  className: _propTypes["default"].string,

	  /** Shorthand for FeedContent. */
	  content: _lib.customPropTypes.itemShorthand,

	  /** Shorthand for FeedDate. */
	  date: _lib.customPropTypes.itemShorthand,

	  /** Shorthand for FeedExtra with images. */
	  extraImages: _lib.customPropTypes.itemShorthand,

	  /** Shorthand for FeedExtra with content. */
	  extraText: _lib.customPropTypes.itemShorthand,

	  /** An event can contain icon label. */
	  icon: _lib.customPropTypes.itemShorthand,

	  /** An event can contain image label. */
	  image: _lib.customPropTypes.itemShorthand,

	  /** Shorthand for FeedMeta. */
	  meta: _lib.customPropTypes.itemShorthand,

	  /** Shorthand for FeedSummary. */
	  summary: _lib.customPropTypes.itemShorthand
	} : {};
	var _default = FeedEvent;
	exports["default"] = _default;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 818 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _extends2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/extends\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _classnames = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"classnames\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _propTypes = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"prop-types\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _react = _interopRequireDefault(__webpack_require__(3));

	var _lib = __webpack_require__(256);

	var _Icon = _interopRequireDefault(__webpack_require__(566));

	/**
	 * An event can contain an image or icon label.
	 */
	function FeedLabel(props) {
	  var children = props.children,
	      className = props.className,
	      content = props.content,
	      icon = props.icon,
	      image = props.image;
	  var classes = (0, _classnames["default"])('label', className);
	  var rest = (0, _lib.getUnhandledProps)(FeedLabel, props);
	  var ElementType = (0, _lib.getElementType)(FeedLabel, props);

	  if (!_lib.childrenUtils.isNil(children)) {
	    return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	      className: classes
	    }), children);
	  }

	  return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	    className: classes
	  }), content, _Icon["default"].create(icon, {
	    autoGenerateKey: false
	  }), (0, _lib.createHTMLImage)(image));
	}

	FeedLabel.handledProps = ["as", "children", "className", "content", "icon", "image"];
	FeedLabel.propTypes = process.env.NODE_ENV !== "production" ? {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Primary content. */
	  children: _propTypes["default"].node,

	  /** Additional classes. */
	  className: _propTypes["default"].string,

	  /** Shorthand for primary content. */
	  content: _lib.customPropTypes.contentShorthand,

	  /** An event can contain icon label. */
	  icon: _lib.customPropTypes.itemShorthand,

	  /** An event can contain image label. */
	  image: _lib.customPropTypes.itemShorthand
	} : {};
	var _default = FeedLabel;
	exports["default"] = _default;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 819 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	Object.defineProperty(exports, "default", {
	  enumerable: true,
	  get: function get() {
	    return _Item["default"];
	  }
	});

	var _Item = _interopRequireDefault(__webpack_require__(820));

/***/ }),
/* 820 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _extends2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/extends\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _classnames = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"classnames\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _propTypes = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"prop-types\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _react = _interopRequireDefault(__webpack_require__(3));

	var _lib = __webpack_require__(256);

	var _ItemContent = _interopRequireDefault(__webpack_require__(821));

	var _ItemDescription = _interopRequireDefault(__webpack_require__(823));

	var _ItemExtra = _interopRequireDefault(__webpack_require__(824));

	var _ItemGroup = _interopRequireDefault(__webpack_require__(826));

	var _ItemHeader = _interopRequireDefault(__webpack_require__(822));

	var _ItemImage = _interopRequireDefault(__webpack_require__(827));

	var _ItemMeta = _interopRequireDefault(__webpack_require__(825));

	/**
	 * An item view presents large collections of site content for display.
	 */
	function Item(props) {
	  var children = props.children,
	      className = props.className,
	      content = props.content,
	      description = props.description,
	      extra = props.extra,
	      header = props.header,
	      image = props.image,
	      meta = props.meta;
	  var classes = (0, _classnames["default"])('item', className);
	  var rest = (0, _lib.getUnhandledProps)(Item, props);
	  var ElementType = (0, _lib.getElementType)(Item, props);

	  if (!_lib.childrenUtils.isNil(children)) {
	    return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	      className: classes
	    }), children);
	  }

	  return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	    className: classes
	  }), _ItemImage["default"].create(image, {
	    autoGenerateKey: false
	  }), _react["default"].createElement(_ItemContent["default"], {
	    content: content,
	    description: description,
	    extra: extra,
	    header: header,
	    meta: meta
	  }));
	}

	Item.handledProps = ["as", "children", "className", "content", "description", "extra", "header", "image", "meta"];
	Item.Content = _ItemContent["default"];
	Item.Description = _ItemDescription["default"];
	Item.Extra = _ItemExtra["default"];
	Item.Group = _ItemGroup["default"];
	Item.Header = _ItemHeader["default"];
	Item.Image = _ItemImage["default"];
	Item.Meta = _ItemMeta["default"];
	Item.propTypes = process.env.NODE_ENV !== "production" ? {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Primary content. */
	  children: _propTypes["default"].node,

	  /** Additional classes. */
	  className: _propTypes["default"].string,

	  /** Shorthand for ItemContent component. */
	  content: _lib.customPropTypes.contentShorthand,

	  /** Shorthand for ItemDescription component. */
	  description: _lib.customPropTypes.itemShorthand,

	  /** Shorthand for ItemExtra component. */
	  extra: _lib.customPropTypes.itemShorthand,

	  /** Shorthand for ItemHeader component. */
	  header: _lib.customPropTypes.itemShorthand,

	  /** Shorthand for ItemImage component. */
	  image: _lib.customPropTypes.itemShorthand,

	  /** Shorthand for ItemMeta component. */
	  meta: _lib.customPropTypes.itemShorthand
	} : {};
	var _default = Item;
	exports["default"] = _default;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 821 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _extends2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/extends\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _classnames = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"classnames\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _propTypes = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"prop-types\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _react = _interopRequireDefault(__webpack_require__(3));

	var _lib = __webpack_require__(256);

	var _ItemHeader = _interopRequireDefault(__webpack_require__(822));

	var _ItemDescription = _interopRequireDefault(__webpack_require__(823));

	var _ItemExtra = _interopRequireDefault(__webpack_require__(824));

	var _ItemMeta = _interopRequireDefault(__webpack_require__(825));

	/**
	 * An item can contain content.
	 */
	function ItemContent(props) {
	  var children = props.children,
	      className = props.className,
	      content = props.content,
	      description = props.description,
	      extra = props.extra,
	      header = props.header,
	      meta = props.meta,
	      verticalAlign = props.verticalAlign;
	  var classes = (0, _classnames["default"])((0, _lib.useVerticalAlignProp)(verticalAlign), 'content', className);
	  var rest = (0, _lib.getUnhandledProps)(ItemContent, props);
	  var ElementType = (0, _lib.getElementType)(ItemContent, props);

	  if (!_lib.childrenUtils.isNil(children)) {
	    return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	      className: classes
	    }), children);
	  }

	  return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	    className: classes
	  }), _ItemHeader["default"].create(header, {
	    autoGenerateKey: false
	  }), _ItemMeta["default"].create(meta, {
	    autoGenerateKey: false
	  }), _ItemDescription["default"].create(description, {
	    autoGenerateKey: false
	  }), _ItemExtra["default"].create(extra, {
	    autoGenerateKey: false
	  }), content);
	}

	ItemContent.handledProps = ["as", "children", "className", "content", "description", "extra", "header", "meta", "verticalAlign"];
	ItemContent.propTypes = process.env.NODE_ENV !== "production" ? {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Primary content. */
	  children: _propTypes["default"].node,

	  /** Additional classes. */
	  className: _propTypes["default"].string,

	  /** Shorthand for primary content. */
	  content: _lib.customPropTypes.contentShorthand,

	  /** Shorthand for ItemDescription component. */
	  description: _lib.customPropTypes.itemShorthand,

	  /** Shorthand for ItemExtra component. */
	  extra: _lib.customPropTypes.itemShorthand,

	  /** Shorthand for ItemHeader component. */
	  header: _lib.customPropTypes.itemShorthand,

	  /** Shorthand for ItemMeta component. */
	  meta: _lib.customPropTypes.itemShorthand,

	  /** Content can specify its vertical alignment. */
	  verticalAlign: _propTypes["default"].oneOf(_lib.SUI.VERTICAL_ALIGNMENTS)
	} : {};
	var _default = ItemContent;
	exports["default"] = _default;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 822 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _extends2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/extends\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _classnames = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"classnames\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _propTypes = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"prop-types\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _react = _interopRequireDefault(__webpack_require__(3));

	var _lib = __webpack_require__(256);

	/**
	 * An item can contain a header.
	 */
	function ItemHeader(props) {
	  var children = props.children,
	      className = props.className,
	      content = props.content;
	  var classes = (0, _classnames["default"])('header', className);
	  var rest = (0, _lib.getUnhandledProps)(ItemHeader, props);
	  var ElementType = (0, _lib.getElementType)(ItemHeader, props);
	  return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	    className: classes
	  }), _lib.childrenUtils.isNil(children) ? content : children);
	}

	ItemHeader.handledProps = ["as", "children", "className", "content"];
	ItemHeader.propTypes = process.env.NODE_ENV !== "production" ? {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Primary content. */
	  children: _propTypes["default"].node,

	  /** Additional classes. */
	  className: _propTypes["default"].string,

	  /** Shorthand for primary content. */
	  content: _lib.customPropTypes.contentShorthand
	} : {};
	ItemHeader.create = (0, _lib.createShorthandFactory)(ItemHeader, function (content) {
	  return {
	    content: content
	  };
	});
	var _default = ItemHeader;
	exports["default"] = _default;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 823 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _extends2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/extends\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _classnames = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"classnames\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _propTypes = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"prop-types\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _react = _interopRequireDefault(__webpack_require__(3));

	var _lib = __webpack_require__(256);

	/**
	 * An item can contain a description with a single or multiple paragraphs.
	 */
	function ItemDescription(props) {
	  var children = props.children,
	      className = props.className,
	      content = props.content;
	  var classes = (0, _classnames["default"])('description', className);
	  var rest = (0, _lib.getUnhandledProps)(ItemDescription, props);
	  var ElementType = (0, _lib.getElementType)(ItemDescription, props);
	  return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	    className: classes
	  }), _lib.childrenUtils.isNil(children) ? content : children);
	}

	ItemDescription.handledProps = ["as", "children", "className", "content"];
	ItemDescription.propTypes = process.env.NODE_ENV !== "production" ? {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Primary content. */
	  children: _propTypes["default"].node,

	  /** Additional classes. */
	  className: _propTypes["default"].string,

	  /** Shorthand for primary content. */
	  content: _lib.customPropTypes.contentShorthand
	} : {};
	ItemDescription.create = (0, _lib.createShorthandFactory)(ItemDescription, function (content) {
	  return {
	    content: content
	  };
	});
	var _default = ItemDescription;
	exports["default"] = _default;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 824 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _extends2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/extends\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _classnames = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"classnames\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _propTypes = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"prop-types\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _react = _interopRequireDefault(__webpack_require__(3));

	var _lib = __webpack_require__(256);

	/**
	 * An item can contain extra content meant to be formatted separately from the main content.
	 */
	function ItemExtra(props) {
	  var children = props.children,
	      className = props.className,
	      content = props.content;
	  var classes = (0, _classnames["default"])('extra', className);
	  var rest = (0, _lib.getUnhandledProps)(ItemExtra, props);
	  var ElementType = (0, _lib.getElementType)(ItemExtra, props);
	  return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	    className: classes
	  }), _lib.childrenUtils.isNil(children) ? content : children);
	}

	ItemExtra.handledProps = ["as", "children", "className", "content"];
	ItemExtra.propTypes = process.env.NODE_ENV !== "production" ? {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Primary content. */
	  children: _propTypes["default"].node,

	  /** Additional classes. */
	  className: _propTypes["default"].string,

	  /** Shorthand for primary content. */
	  content: _lib.customPropTypes.contentShorthand
	} : {};
	ItemExtra.create = (0, _lib.createShorthandFactory)(ItemExtra, function (content) {
	  return {
	    content: content
	  };
	});
	var _default = ItemExtra;
	exports["default"] = _default;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 825 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _extends2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/extends\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _classnames = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"classnames\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _propTypes = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"prop-types\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _react = _interopRequireDefault(__webpack_require__(3));

	var _lib = __webpack_require__(256);

	/**
	 * An item can contain content metadata.
	 */
	function ItemMeta(props) {
	  var children = props.children,
	      className = props.className,
	      content = props.content;
	  var classes = (0, _classnames["default"])('meta', className);
	  var rest = (0, _lib.getUnhandledProps)(ItemMeta, props);
	  var ElementType = (0, _lib.getElementType)(ItemMeta, props);
	  return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	    className: classes
	  }), _lib.childrenUtils.isNil(children) ? content : children);
	}

	ItemMeta.handledProps = ["as", "children", "className", "content"];
	ItemMeta.propTypes = process.env.NODE_ENV !== "production" ? {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Primary content. */
	  children: _propTypes["default"].node,

	  /** Additional classes. */
	  className: _propTypes["default"].string,

	  /** Shorthand for primary content. */
	  content: _lib.customPropTypes.contentShorthand
	} : {};
	ItemMeta.create = (0, _lib.createShorthandFactory)(ItemMeta, function (content) {
	  return {
	    content: content
	  };
	});
	var _default = ItemMeta;
	exports["default"] = _default;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 826 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _objectWithoutProperties2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/objectWithoutProperties\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _extends2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/extends\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _map2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/map\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _classnames = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"classnames\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _propTypes = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"prop-types\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _react = _interopRequireDefault(__webpack_require__(3));

	var _lib = __webpack_require__(256);

	var _Item = _interopRequireDefault(__webpack_require__(820));

	/**
	 * A group of items.
	 */
	function ItemGroup(props) {
	  var children = props.children,
	      className = props.className,
	      content = props.content,
	      divided = props.divided,
	      items = props.items,
	      link = props.link,
	      relaxed = props.relaxed,
	      unstackable = props.unstackable;
	  var classes = (0, _classnames["default"])('ui', (0, _lib.useKeyOnly)(divided, 'divided'), (0, _lib.useKeyOnly)(link, 'link'), (0, _lib.useKeyOnly)(unstackable, 'unstackable'), (0, _lib.useKeyOrValueAndKey)(relaxed, 'relaxed'), 'items', className);
	  var rest = (0, _lib.getUnhandledProps)(ItemGroup, props);
	  var ElementType = (0, _lib.getElementType)(ItemGroup, props);

	  if (!_lib.childrenUtils.isNil(children)) {
	    return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	      className: classes
	    }), children);
	  }

	  if (!_lib.childrenUtils.isNil(content)) {
	    return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	      className: classes
	    }), content);
	  }

	  var itemsJSX = (0, _map2["default"])(items, function (item) {
	    var childKey = item.childKey,
	        itemProps = (0, _objectWithoutProperties2["default"])(item, ["childKey"]);
	    var finalKey = childKey || [itemProps.content, itemProps.description, itemProps.header, itemProps.meta].join('-');
	    return _react["default"].createElement(_Item["default"], (0, _extends2["default"])({}, itemProps, {
	      key: finalKey
	    }));
	  });
	  return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	    className: classes
	  }), itemsJSX);
	}

	ItemGroup.handledProps = ["as", "children", "className", "content", "divided", "items", "link", "relaxed", "unstackable"];
	ItemGroup.propTypes = process.env.NODE_ENV !== "production" ? {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Primary content. */
	  children: _propTypes["default"].node,

	  /** Additional classes. */
	  className: _propTypes["default"].string,

	  /** Shorthand for primary content. */
	  content: _lib.customPropTypes.contentShorthand,

	  /** Items can be divided to better distinguish between grouped content. */
	  divided: _propTypes["default"].bool,

	  /** Shorthand array of props for Item. */
	  items: _lib.customPropTypes.collectionShorthand,

	  /** An item can be formatted so that the entire contents link to another page. */
	  link: _propTypes["default"].bool,

	  /** A group of items can relax its padding to provide more negative space. */
	  relaxed: _propTypes["default"].oneOfType([_propTypes["default"].bool, _propTypes["default"].oneOf(['very'])]),

	  /** Prevent items from stacking on mobile. */
	  unstackable: _propTypes["default"].bool
	} : {};
	var _default = ItemGroup;
	exports["default"] = _default;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 827 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _extends2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/extends\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _react = _interopRequireDefault(__webpack_require__(3));

	var _lib = __webpack_require__(256);

	var _Image = _interopRequireDefault(__webpack_require__(639));

	/**
	 * An item can contain an image.
	 */
	function ItemImage(props) {
	  var size = props.size;
	  var rest = (0, _lib.getUnhandledProps)(ItemImage, props);
	  return _react["default"].createElement(_Image["default"], (0, _extends2["default"])({}, rest, {
	    size: size,
	    ui: !!size,
	    wrapped: true
	  }));
	}

	ItemImage.handledProps = ["size"];
	ItemImage.propTypes = process.env.NODE_ENV !== "production" ? {
	  /** An image may appear at different sizes. */
	  size: _Image["default"].propTypes.size
	} : {};
	ItemImage.create = (0, _lib.createShorthandFactory)(ItemImage, function (src) {
	  return {
	    src: src
	  };
	});
	var _default = ItemImage;
	exports["default"] = _default;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 828 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	Object.defineProperty(exports, "default", {
	  enumerable: true,
	  get: function get() {
	    return _Statistic["default"];
	  }
	});

	var _Statistic = _interopRequireDefault(__webpack_require__(829));

/***/ }),
/* 829 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _extends2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/extends\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _without2 = _interopRequireDefault(__webpack_require__(542));

	var _classnames = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"classnames\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _propTypes = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"prop-types\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _react = _interopRequireDefault(__webpack_require__(3));

	var _lib = __webpack_require__(256);

	var _StatisticGroup = _interopRequireDefault(__webpack_require__(830));

	var _StatisticLabel = _interopRequireDefault(__webpack_require__(831));

	var _StatisticValue = _interopRequireDefault(__webpack_require__(832));

	/**
	 * A statistic emphasizes the current value of an attribute.
	 */
	function Statistic(props) {
	  var children = props.children,
	      className = props.className,
	      color = props.color,
	      content = props.content,
	      floated = props.floated,
	      horizontal = props.horizontal,
	      inverted = props.inverted,
	      label = props.label,
	      size = props.size,
	      text = props.text,
	      value = props.value;
	  var classes = (0, _classnames["default"])('ui', color, size, (0, _lib.useValueAndKey)(floated, 'floated'), (0, _lib.useKeyOnly)(horizontal, 'horizontal'), (0, _lib.useKeyOnly)(inverted, 'inverted'), 'statistic', className);
	  var rest = (0, _lib.getUnhandledProps)(Statistic, props);
	  var ElementType = (0, _lib.getElementType)(Statistic, props);

	  if (!_lib.childrenUtils.isNil(children)) {
	    return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	      className: classes
	    }), children);
	  }

	  if (!_lib.childrenUtils.isNil(content)) {
	    return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	      className: classes
	    }), content);
	  }

	  return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	    className: classes
	  }), _StatisticValue["default"].create(value, {
	    defaultProps: {
	      text: text
	    },
	    autoGenerateKey: false
	  }), _StatisticLabel["default"].create(label, {
	    autoGenerateKey: false
	  }));
	}

	Statistic.handledProps = ["as", "children", "className", "color", "content", "floated", "horizontal", "inverted", "label", "size", "text", "value"];
	Statistic.propTypes = process.env.NODE_ENV !== "production" ? {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Primary content. */
	  children: _propTypes["default"].node,

	  /** Additional classes. */
	  className: _propTypes["default"].string,

	  /** A statistic can be formatted to be different colors. */
	  color: _propTypes["default"].oneOf(_lib.SUI.COLORS),

	  /** Shorthand for primary content. */
	  content: _lib.customPropTypes.contentShorthand,

	  /** A statistic can sit to the left or right of other content. */
	  floated: _propTypes["default"].oneOf(_lib.SUI.FLOATS),

	  /** A statistic can present its measurement horizontally. */
	  horizontal: _propTypes["default"].bool,

	  /** A statistic can be formatted to fit on a dark background. */
	  inverted: _propTypes["default"].bool,

	  /** Label content of the Statistic. */
	  label: _lib.customPropTypes.contentShorthand,

	  /** A statistic can vary in size. */
	  size: _propTypes["default"].oneOf((0, _without2["default"])(_lib.SUI.SIZES, 'big', 'massive', 'medium')),

	  /** Format the StatisticValue with smaller font size to fit nicely beside number values. */
	  text: _propTypes["default"].bool,

	  /** Value content of the Statistic. */
	  value: _lib.customPropTypes.contentShorthand
	} : {};
	Statistic.Group = _StatisticGroup["default"];
	Statistic.Label = _StatisticLabel["default"];
	Statistic.Value = _StatisticValue["default"];
	Statistic.create = (0, _lib.createShorthandFactory)(Statistic, function (content) {
	  return {
	    content: content
	  };
	});
	var _default = Statistic;
	exports["default"] = _default;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 830 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _extends2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/extends\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _without2 = _interopRequireDefault(__webpack_require__(542));

	var _map2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lodash/map\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _classnames = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"classnames\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _propTypes = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"prop-types\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _react = _interopRequireDefault(__webpack_require__(3));

	var _lib = __webpack_require__(256);

	var _Statistic = _interopRequireDefault(__webpack_require__(829));

	/**
	 * A group of statistics.
	 */
	function StatisticGroup(props) {
	  var children = props.children,
	      className = props.className,
	      color = props.color,
	      content = props.content,
	      horizontal = props.horizontal,
	      inverted = props.inverted,
	      items = props.items,
	      size = props.size,
	      widths = props.widths;
	  var classes = (0, _classnames["default"])('ui', color, size, (0, _lib.useKeyOnly)(horizontal, 'horizontal'), (0, _lib.useKeyOnly)(inverted, 'inverted'), (0, _lib.useWidthProp)(widths), 'statistics', className);
	  var rest = (0, _lib.getUnhandledProps)(StatisticGroup, props);
	  var ElementType = (0, _lib.getElementType)(StatisticGroup, props);

	  if (!_lib.childrenUtils.isNil(children)) {
	    return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	      className: classes
	    }), children);
	  }

	  if (!_lib.childrenUtils.isNil(content)) {
	    return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	      className: classes
	    }), content);
	  }

	  return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	    className: classes
	  }), (0, _map2["default"])(items, function (item) {
	    return _Statistic["default"].create(item);
	  }));
	}

	StatisticGroup.handledProps = ["as", "children", "className", "color", "content", "horizontal", "inverted", "items", "size", "widths"];
	StatisticGroup.propTypes = process.env.NODE_ENV !== "production" ? {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Primary content. */
	  children: _propTypes["default"].node,

	  /** Additional classes. */
	  className: _propTypes["default"].string,

	  /** A statistic group can be formatted to be different colors. */
	  color: _propTypes["default"].oneOf(_lib.SUI.COLORS),

	  /** Shorthand for primary content. */
	  content: _lib.customPropTypes.contentShorthand,

	  /** A statistic group can present its measurement horizontally. */
	  horizontal: _propTypes["default"].bool,

	  /** A statistic group can be formatted to fit on a dark background. */
	  inverted: _propTypes["default"].bool,

	  /** Array of props for Statistic. */
	  items: _lib.customPropTypes.collectionShorthand,

	  /** A statistic group can vary in size. */
	  size: _propTypes["default"].oneOf((0, _without2["default"])(_lib.SUI.SIZES, 'big', 'massive', 'medium')),

	  /** A statistic group can have its items divided evenly. */
	  widths: _propTypes["default"].oneOf(_lib.SUI.WIDTHS)
	} : {};
	var _default = StatisticGroup;
	exports["default"] = _default;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 831 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _extends2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/extends\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _classnames = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"classnames\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _propTypes = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"prop-types\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _react = _interopRequireDefault(__webpack_require__(3));

	var _lib = __webpack_require__(256);

	/**
	 * A statistic can contain a label to help provide context for the presented value.
	 */
	function StatisticLabel(props) {
	  var children = props.children,
	      className = props.className,
	      content = props.content;
	  var classes = (0, _classnames["default"])('label', className);
	  var rest = (0, _lib.getUnhandledProps)(StatisticLabel, props);
	  var ElementType = (0, _lib.getElementType)(StatisticLabel, props);
	  return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	    className: classes
	  }), _lib.childrenUtils.isNil(children) ? content : children);
	}

	StatisticLabel.handledProps = ["as", "children", "className", "content"];
	StatisticLabel.propTypes = process.env.NODE_ENV !== "production" ? {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Primary content. */
	  children: _propTypes["default"].node,

	  /** Additional classes. */
	  className: _propTypes["default"].string,

	  /** Shorthand for primary content. */
	  content: _lib.customPropTypes.contentShorthand
	} : {};
	StatisticLabel.create = (0, _lib.createShorthandFactory)(StatisticLabel, function (content) {
	  return {
	    content: content
	  };
	});
	var _default = StatisticLabel;
	exports["default"] = _default;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 832 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";

	var _interopRequireDefault = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/interopRequireDefault\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = void 0;

	var _extends2 = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"@babel/runtime/helpers/extends\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _classnames = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"classnames\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _propTypes = _interopRequireDefault(__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"prop-types\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())));

	var _react = _interopRequireDefault(__webpack_require__(3));

	var _lib = __webpack_require__(256);

	/**
	 * A statistic can contain a numeric, icon, image, or text value.
	 */
	function StatisticValue(props) {
	  var children = props.children,
	      className = props.className,
	      content = props.content,
	      text = props.text;
	  var classes = (0, _classnames["default"])((0, _lib.useKeyOnly)(text, 'text'), 'value', className);
	  var rest = (0, _lib.getUnhandledProps)(StatisticValue, props);
	  var ElementType = (0, _lib.getElementType)(StatisticValue, props);
	  return _react["default"].createElement(ElementType, (0, _extends2["default"])({}, rest, {
	    className: classes
	  }), _lib.childrenUtils.isNil(children) ? content : children);
	}

	StatisticValue.handledProps = ["as", "children", "className", "content", "text"];
	StatisticValue.propTypes = process.env.NODE_ENV !== "production" ? {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Primary content. */
	  children: _propTypes["default"].node,

	  /** Additional classes. */
	  className: _propTypes["default"].string,

	  /** Shorthand for primary content. */
	  content: _lib.customPropTypes.contentShorthand,

	  /** Format the value with smaller font size to fit nicely beside number values. */
	  text: _propTypes["default"].bool
	} : {};
	StatisticValue.create = (0, _lib.createShorthandFactory)(StatisticValue, function (content) {
	  return {
	    content: content
	  };
	});
	var _default = StatisticValue;
	exports["default"] = _default;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 833 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	var strictUriEncode = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"strict-uri-encode\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));
	var objectAssign = __webpack_require__(6);

	function encoderForArrayFormat(opts) {
		switch (opts.arrayFormat) {
			case 'index':
				return function (key, value, index) {
					return value === null ? [
						encode(key, opts),
						'[',
						index,
						']'
					].join('') : [
						encode(key, opts),
						'[',
						encode(index, opts),
						']=',
						encode(value, opts)
					].join('');
				};

			case 'bracket':
				return function (key, value) {
					return value === null ? encode(key, opts) : [
						encode(key, opts),
						'[]=',
						encode(value, opts)
					].join('');
				};

			default:
				return function (key, value) {
					return value === null ? encode(key, opts) : [
						encode(key, opts),
						'=',
						encode(value, opts)
					].join('');
				};
		}
	}

	function parserForArrayFormat(opts) {
		var result;

		switch (opts.arrayFormat) {
			case 'index':
				return function (key, value, accumulator) {
					result = /\[(\d*)\]$/.exec(key);

					key = key.replace(/\[\d*\]$/, '');

					if (!result) {
						accumulator[key] = value;
						return;
					}

					if (accumulator[key] === undefined) {
						accumulator[key] = {};
					}

					accumulator[key][result[1]] = value;
				};

			case 'bracket':
				return function (key, value, accumulator) {
					result = /(\[\])$/.exec(key);
					key = key.replace(/\[\]$/, '');

					if (!result) {
						accumulator[key] = value;
						return;
					} else if (accumulator[key] === undefined) {
						accumulator[key] = [value];
						return;
					}

					accumulator[key] = [].concat(accumulator[key], value);
				};

			default:
				return function (key, value, accumulator) {
					if (accumulator[key] === undefined) {
						accumulator[key] = value;
						return;
					}

					accumulator[key] = [].concat(accumulator[key], value);
				};
		}
	}

	function encode(value, opts) {
		if (opts.encode) {
			return opts.strict ? strictUriEncode(value) : encodeURIComponent(value);
		}

		return value;
	}

	function keysSorter(input) {
		if (Array.isArray(input)) {
			return input.sort();
		} else if (typeof input === 'object') {
			return keysSorter(Object.keys(input)).sort(function (a, b) {
				return Number(a) - Number(b);
			}).map(function (key) {
				return input[key];
			});
		}

		return input;
	}

	exports.extract = function (str) {
		return str.split('?')[1] || '';
	};

	exports.parse = function (str, opts) {
		opts = objectAssign({arrayFormat: 'none'}, opts);

		var formatter = parserForArrayFormat(opts);

		// Create an object with no prototype
		// https://github.com/sindresorhus/query-string/issues/47
		var ret = Object.create(null);

		if (typeof str !== 'string') {
			return ret;
		}

		str = str.trim().replace(/^(\?|#|&)/, '');

		if (!str) {
			return ret;
		}

		str.split('&').forEach(function (param) {
			var parts = param.replace(/\+/g, ' ').split('=');
			// Firefox (pre 40) decodes `%3D` to `=`
			// https://github.com/sindresorhus/query-string/pull/37
			var key = parts.shift();
			var val = parts.length > 0 ? parts.join('=') : undefined;

			// missing `=` should be `null`:
			// http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters
			val = val === undefined ? null : decodeURIComponent(val);

			formatter(decodeURIComponent(key), val, ret);
		});

		return Object.keys(ret).sort().reduce(function (result, key) {
			var val = ret[key];
			if (Boolean(val) && typeof val === 'object' && !Array.isArray(val)) {
				// Sort object keys, not values
				result[key] = keysSorter(val);
			} else {
				result[key] = val;
			}

			return result;
		}, Object.create(null));
	};

	exports.stringify = function (obj, opts) {
		var defaults = {
			encode: true,
			strict: true,
			arrayFormat: 'none'
		};

		opts = objectAssign(defaults, opts);

		var formatter = encoderForArrayFormat(opts);

		return obj ? Object.keys(obj).sort().map(function (key) {
			var val = obj[key];

			if (val === undefined) {
				return '';
			}

			if (val === null) {
				return encode(key, opts);
			}

			if (Array.isArray(val)) {
				var result = [];

				val.slice().forEach(function (val2) {
					if (val2 === undefined) {
						return;
					}

					result.push(formatter(key, val2, result.length));
				});

				return result.join('&');
			}

			return encode(key, opts) + '=' + encode(val, opts);
		}).filter(function (x) {
			return x.length > 0;
		}).join('&') : '';
	};


/***/ }),
/* 834 */,
/* 835 */
/***/ (function(module, exports, __webpack_require__) {

	var require;/* WEBPACK VAR INJECTION */(function(process, global) {/*!
	 * @overview es6-promise - a tiny implementation of Promises/A+.
	 * @copyright Copyright (c) 2014 Yehuda Katz, Tom Dale, Stefan Penner and contributors (Conversion to ES6 API by Jake Archibald)
	 * @license   Licensed under MIT license
	 *            See https://raw.githubusercontent.com/stefanpenner/es6-promise/master/LICENSE
	 * @version   3.3.1
	 */

	(function (global, factory) {
	     true ? module.exports = factory() :
	    typeof define === 'function' && define.amd ? define(factory) :
	    (global.ES6Promise = factory());
	}(this, (function () { 'use strict';

	function objectOrFunction(x) {
	  return typeof x === 'function' || typeof x === 'object' && x !== null;
	}

	function isFunction(x) {
	  return typeof x === 'function';
	}

	var _isArray = undefined;
	if (!Array.isArray) {
	  _isArray = function (x) {
	    return Object.prototype.toString.call(x) === '[object Array]';
	  };
	} else {
	  _isArray = Array.isArray;
	}

	var isArray = _isArray;

	var len = 0;
	var vertxNext = undefined;
	var customSchedulerFn = undefined;

	var asap = function asap(callback, arg) {
	  queue[len] = callback;
	  queue[len + 1] = arg;
	  len += 2;
	  if (len === 2) {
	    // If len is 2, that means that we need to schedule an async flush.
	    // If additional callbacks are queued before the queue is flushed, they
	    // will be processed by this flush that we are scheduling.
	    if (customSchedulerFn) {
	      customSchedulerFn(flush);
	    } else {
	      scheduleFlush();
	    }
	  }
	};

	function setScheduler(scheduleFn) {
	  customSchedulerFn = scheduleFn;
	}

	function setAsap(asapFn) {
	  asap = asapFn;
	}

	var browserWindow = typeof window !== 'undefined' ? window : undefined;
	var browserGlobal = browserWindow || {};
	var BrowserMutationObserver = browserGlobal.MutationObserver || browserGlobal.WebKitMutationObserver;
	var isNode = typeof self === 'undefined' && typeof process !== 'undefined' && ({}).toString.call(process) === '[object process]';

	// test for web worker but not in IE10
	var isWorker = typeof Uint8ClampedArray !== 'undefined' && typeof importScripts !== 'undefined' && typeof MessageChannel !== 'undefined';

	// node
	function useNextTick() {
	  // node version 0.10.x displays a deprecation warning when nextTick is used recursively
	  // see https://github.com/cujojs/when/issues/410 for details
	  return function () {
	    return process.nextTick(flush);
	  };
	}

	// vertx
	function useVertxTimer() {
	  return function () {
	    vertxNext(flush);
	  };
	}

	function useMutationObserver() {
	  var iterations = 0;
	  var observer = new BrowserMutationObserver(flush);
	  var node = document.createTextNode('');
	  observer.observe(node, { characterData: true });

	  return function () {
	    node.data = iterations = ++iterations % 2;
	  };
	}

	// web worker
	function useMessageChannel() {
	  var channel = new MessageChannel();
	  channel.port1.onmessage = flush;
	  return function () {
	    return channel.port2.postMessage(0);
	  };
	}

	function useSetTimeout() {
	  // Store setTimeout reference so es6-promise will be unaffected by
	  // other code modifying setTimeout (like sinon.useFakeTimers())
	  var globalSetTimeout = setTimeout;
	  return function () {
	    return globalSetTimeout(flush, 1);
	  };
	}

	var queue = new Array(1000);
	function flush() {
	  for (var i = 0; i < len; i += 2) {
	    var callback = queue[i];
	    var arg = queue[i + 1];

	    callback(arg);

	    queue[i] = undefined;
	    queue[i + 1] = undefined;
	  }

	  len = 0;
	}

	function attemptVertx() {
	  try {
	    var r = require;
	    var vertx = __webpack_require__(836);
	    vertxNext = vertx.runOnLoop || vertx.runOnContext;
	    return useVertxTimer();
	  } catch (e) {
	    return useSetTimeout();
	  }
	}

	var scheduleFlush = undefined;
	// Decide what async method to use to triggering processing of queued callbacks:
	if (isNode) {
	  scheduleFlush = useNextTick();
	} else if (BrowserMutationObserver) {
	  scheduleFlush = useMutationObserver();
	} else if (isWorker) {
	  scheduleFlush = useMessageChannel();
	} else if (browserWindow === undefined && "function" === 'function') {
	  scheduleFlush = attemptVertx();
	} else {
	  scheduleFlush = useSetTimeout();
	}

	function then(onFulfillment, onRejection) {
	  var _arguments = arguments;

	  var parent = this;

	  var child = new this.constructor(noop);

	  if (child[PROMISE_ID] === undefined) {
	    makePromise(child);
	  }

	  var _state = parent._state;

	  if (_state) {
	    (function () {
	      var callback = _arguments[_state - 1];
	      asap(function () {
	        return invokeCallback(_state, child, callback, parent._result);
	      });
	    })();
	  } else {
	    subscribe(parent, child, onFulfillment, onRejection);
	  }

	  return child;
	}

	/**
	  `Promise.resolve` returns a promise that will become resolved with the
	  passed `value`. It is shorthand for the following:

	  ```javascript
	  let promise = new Promise(function(resolve, reject){
	    resolve(1);
	  });

	  promise.then(function(value){
	    // value === 1
	  });
	  ```

	  Instead of writing the above, your code now simply becomes the following:

	  ```javascript
	  let promise = Promise.resolve(1);

	  promise.then(function(value){
	    // value === 1
	  });
	  ```

	  @method resolve
	  @static
	  @param {Any} value value that the returned promise will be resolved with
	  Useful for tooling.
	  @return {Promise} a promise that will become fulfilled with the given
	  `value`
	*/
	function resolve(object) {
	  /*jshint validthis:true */
	  var Constructor = this;

	  if (object && typeof object === 'object' && object.constructor === Constructor) {
	    return object;
	  }

	  var promise = new Constructor(noop);
	  _resolve(promise, object);
	  return promise;
	}

	var PROMISE_ID = Math.random().toString(36).substring(16);

	function noop() {}

	var PENDING = void 0;
	var FULFILLED = 1;
	var REJECTED = 2;

	var GET_THEN_ERROR = new ErrorObject();

	function selfFulfillment() {
	  return new TypeError("You cannot resolve a promise with itself");
	}

	function cannotReturnOwn() {
	  return new TypeError('A promises callback cannot return that same promise.');
	}

	function getThen(promise) {
	  try {
	    return promise.then;
	  } catch (error) {
	    GET_THEN_ERROR.error = error;
	    return GET_THEN_ERROR;
	  }
	}

	function tryThen(then, value, fulfillmentHandler, rejectionHandler) {
	  try {
	    then.call(value, fulfillmentHandler, rejectionHandler);
	  } catch (e) {
	    return e;
	  }
	}

	function handleForeignThenable(promise, thenable, then) {
	  asap(function (promise) {
	    var sealed = false;
	    var error = tryThen(then, thenable, function (value) {
	      if (sealed) {
	        return;
	      }
	      sealed = true;
	      if (thenable !== value) {
	        _resolve(promise, value);
	      } else {
	        fulfill(promise, value);
	      }
	    }, function (reason) {
	      if (sealed) {
	        return;
	      }
	      sealed = true;

	      _reject(promise, reason);
	    }, 'Settle: ' + (promise._label || ' unknown promise'));

	    if (!sealed && error) {
	      sealed = true;
	      _reject(promise, error);
	    }
	  }, promise);
	}

	function handleOwnThenable(promise, thenable) {
	  if (thenable._state === FULFILLED) {
	    fulfill(promise, thenable._result);
	  } else if (thenable._state === REJECTED) {
	    _reject(promise, thenable._result);
	  } else {
	    subscribe(thenable, undefined, function (value) {
	      return _resolve(promise, value);
	    }, function (reason) {
	      return _reject(promise, reason);
	    });
	  }
	}

	function handleMaybeThenable(promise, maybeThenable, then$$) {
	  if (maybeThenable.constructor === promise.constructor && then$$ === then && maybeThenable.constructor.resolve === resolve) {
	    handleOwnThenable(promise, maybeThenable);
	  } else {
	    if (then$$ === GET_THEN_ERROR) {
	      _reject(promise, GET_THEN_ERROR.error);
	    } else if (then$$ === undefined) {
	      fulfill(promise, maybeThenable);
	    } else if (isFunction(then$$)) {
	      handleForeignThenable(promise, maybeThenable, then$$);
	    } else {
	      fulfill(promise, maybeThenable);
	    }
	  }
	}

	function _resolve(promise, value) {
	  if (promise === value) {
	    _reject(promise, selfFulfillment());
	  } else if (objectOrFunction(value)) {
	    handleMaybeThenable(promise, value, getThen(value));
	  } else {
	    fulfill(promise, value);
	  }
	}

	function publishRejection(promise) {
	  if (promise._onerror) {
	    promise._onerror(promise._result);
	  }

	  publish(promise);
	}

	function fulfill(promise, value) {
	  if (promise._state !== PENDING) {
	    return;
	  }

	  promise._result = value;
	  promise._state = FULFILLED;

	  if (promise._subscribers.length !== 0) {
	    asap(publish, promise);
	  }
	}

	function _reject(promise, reason) {
	  if (promise._state !== PENDING) {
	    return;
	  }
	  promise._state = REJECTED;
	  promise._result = reason;

	  asap(publishRejection, promise);
	}

	function subscribe(parent, child, onFulfillment, onRejection) {
	  var _subscribers = parent._subscribers;
	  var length = _subscribers.length;

	  parent._onerror = null;

	  _subscribers[length] = child;
	  _subscribers[length + FULFILLED] = onFulfillment;
	  _subscribers[length + REJECTED] = onRejection;

	  if (length === 0 && parent._state) {
	    asap(publish, parent);
	  }
	}

	function publish(promise) {
	  var subscribers = promise._subscribers;
	  var settled = promise._state;

	  if (subscribers.length === 0) {
	    return;
	  }

	  var child = undefined,
	      callback = undefined,
	      detail = promise._result;

	  for (var i = 0; i < subscribers.length; i += 3) {
	    child = subscribers[i];
	    callback = subscribers[i + settled];

	    if (child) {
	      invokeCallback(settled, child, callback, detail);
	    } else {
	      callback(detail);
	    }
	  }

	  promise._subscribers.length = 0;
	}

	function ErrorObject() {
	  this.error = null;
	}

	var TRY_CATCH_ERROR = new ErrorObject();

	function tryCatch(callback, detail) {
	  try {
	    return callback(detail);
	  } catch (e) {
	    TRY_CATCH_ERROR.error = e;
	    return TRY_CATCH_ERROR;
	  }
	}

	function invokeCallback(settled, promise, callback, detail) {
	  var hasCallback = isFunction(callback),
	      value = undefined,
	      error = undefined,
	      succeeded = undefined,
	      failed = undefined;

	  if (hasCallback) {
	    value = tryCatch(callback, detail);

	    if (value === TRY_CATCH_ERROR) {
	      failed = true;
	      error = value.error;
	      value = null;
	    } else {
	      succeeded = true;
	    }

	    if (promise === value) {
	      _reject(promise, cannotReturnOwn());
	      return;
	    }
	  } else {
	    value = detail;
	    succeeded = true;
	  }

	  if (promise._state !== PENDING) {
	    // noop
	  } else if (hasCallback && succeeded) {
	      _resolve(promise, value);
	    } else if (failed) {
	      _reject(promise, error);
	    } else if (settled === FULFILLED) {
	      fulfill(promise, value);
	    } else if (settled === REJECTED) {
	      _reject(promise, value);
	    }
	}

	function initializePromise(promise, resolver) {
	  try {
	    resolver(function resolvePromise(value) {
	      _resolve(promise, value);
	    }, function rejectPromise(reason) {
	      _reject(promise, reason);
	    });
	  } catch (e) {
	    _reject(promise, e);
	  }
	}

	var id = 0;
	function nextId() {
	  return id++;
	}

	function makePromise(promise) {
	  promise[PROMISE_ID] = id++;
	  promise._state = undefined;
	  promise._result = undefined;
	  promise._subscribers = [];
	}

	function Enumerator(Constructor, input) {
	  this._instanceConstructor = Constructor;
	  this.promise = new Constructor(noop);

	  if (!this.promise[PROMISE_ID]) {
	    makePromise(this.promise);
	  }

	  if (isArray(input)) {
	    this._input = input;
	    this.length = input.length;
	    this._remaining = input.length;

	    this._result = new Array(this.length);

	    if (this.length === 0) {
	      fulfill(this.promise, this._result);
	    } else {
	      this.length = this.length || 0;
	      this._enumerate();
	      if (this._remaining === 0) {
	        fulfill(this.promise, this._result);
	      }
	    }
	  } else {
	    _reject(this.promise, validationError());
	  }
	}

	function validationError() {
	  return new Error('Array Methods must be provided an Array');
	};

	Enumerator.prototype._enumerate = function () {
	  var length = this.length;
	  var _input = this._input;

	  for (var i = 0; this._state === PENDING && i < length; i++) {
	    this._eachEntry(_input[i], i);
	  }
	};

	Enumerator.prototype._eachEntry = function (entry, i) {
	  var c = this._instanceConstructor;
	  var resolve$$ = c.resolve;

	  if (resolve$$ === resolve) {
	    var _then = getThen(entry);

	    if (_then === then && entry._state !== PENDING) {
	      this._settledAt(entry._state, i, entry._result);
	    } else if (typeof _then !== 'function') {
	      this._remaining--;
	      this._result[i] = entry;
	    } else if (c === Promise) {
	      var promise = new c(noop);
	      handleMaybeThenable(promise, entry, _then);
	      this._willSettleAt(promise, i);
	    } else {
	      this._willSettleAt(new c(function (resolve$$) {
	        return resolve$$(entry);
	      }), i);
	    }
	  } else {
	    this._willSettleAt(resolve$$(entry), i);
	  }
	};

	Enumerator.prototype._settledAt = function (state, i, value) {
	  var promise = this.promise;

	  if (promise._state === PENDING) {
	    this._remaining--;

	    if (state === REJECTED) {
	      _reject(promise, value);
	    } else {
	      this._result[i] = value;
	    }
	  }

	  if (this._remaining === 0) {
	    fulfill(promise, this._result);
	  }
	};

	Enumerator.prototype._willSettleAt = function (promise, i) {
	  var enumerator = this;

	  subscribe(promise, undefined, function (value) {
	    return enumerator._settledAt(FULFILLED, i, value);
	  }, function (reason) {
	    return enumerator._settledAt(REJECTED, i, reason);
	  });
	};

	/**
	  `Promise.all` accepts an array of promises, and returns a new promise which
	  is fulfilled with an array of fulfillment values for the passed promises, or
	  rejected with the reason of the first passed promise to be rejected. It casts all
	  elements of the passed iterable to promises as it runs this algorithm.

	  Example:

	  ```javascript
	  let promise1 = resolve(1);
	  let promise2 = resolve(2);
	  let promise3 = resolve(3);
	  let promises = [ promise1, promise2, promise3 ];

	  Promise.all(promises).then(function(array){
	    // The array here would be [ 1, 2, 3 ];
	  });
	  ```

	  If any of the `promises` given to `all` are rejected, the first promise
	  that is rejected will be given as an argument to the returned promises's
	  rejection handler. For example:

	  Example:

	  ```javascript
	  let promise1 = resolve(1);
	  let promise2 = reject(new Error("2"));
	  let promise3 = reject(new Error("3"));
	  let promises = [ promise1, promise2, promise3 ];

	  Promise.all(promises).then(function(array){
	    // Code here never runs because there are rejected promises!
	  }, function(error) {
	    // error.message === "2"
	  });
	  ```

	  @method all
	  @static
	  @param {Array} entries array of promises
	  @param {String} label optional string for labeling the promise.
	  Useful for tooling.
	  @return {Promise} promise that is fulfilled when all `promises` have been
	  fulfilled, or rejected if any of them become rejected.
	  @static
	*/
	function all(entries) {
	  return new Enumerator(this, entries).promise;
	}

	/**
	  `Promise.race` returns a new promise which is settled in the same way as the
	  first passed promise to settle.

	  Example:

	  ```javascript
	  let promise1 = new Promise(function(resolve, reject){
	    setTimeout(function(){
	      resolve('promise 1');
	    }, 200);
	  });

	  let promise2 = new Promise(function(resolve, reject){
	    setTimeout(function(){
	      resolve('promise 2');
	    }, 100);
	  });

	  Promise.race([promise1, promise2]).then(function(result){
	    // result === 'promise 2' because it was resolved before promise1
	    // was resolved.
	  });
	  ```

	  `Promise.race` is deterministic in that only the state of the first
	  settled promise matters. For example, even if other promises given to the
	  `promises` array argument are resolved, but the first settled promise has
	  become rejected before the other promises became fulfilled, the returned
	  promise will become rejected:

	  ```javascript
	  let promise1 = new Promise(function(resolve, reject){
	    setTimeout(function(){
	      resolve('promise 1');
	    }, 200);
	  });

	  let promise2 = new Promise(function(resolve, reject){
	    setTimeout(function(){
	      reject(new Error('promise 2'));
	    }, 100);
	  });

	  Promise.race([promise1, promise2]).then(function(result){
	    // Code here never runs
	  }, function(reason){
	    // reason.message === 'promise 2' because promise 2 became rejected before
	    // promise 1 became fulfilled
	  });
	  ```

	  An example real-world use case is implementing timeouts:

	  ```javascript
	  Promise.race([ajax('foo.json'), timeout(5000)])
	  ```

	  @method race
	  @static
	  @param {Array} promises array of promises to observe
	  Useful for tooling.
	  @return {Promise} a promise which settles in the same way as the first passed
	  promise to settle.
	*/
	function race(entries) {
	  /*jshint validthis:true */
	  var Constructor = this;

	  if (!isArray(entries)) {
	    return new Constructor(function (_, reject) {
	      return reject(new TypeError('You must pass an array to race.'));
	    });
	  } else {
	    return new Constructor(function (resolve, reject) {
	      var length = entries.length;
	      for (var i = 0; i < length; i++) {
	        Constructor.resolve(entries[i]).then(resolve, reject);
	      }
	    });
	  }
	}

	/**
	  `Promise.reject` returns a promise rejected with the passed `reason`.
	  It is shorthand for the following:

	  ```javascript
	  let promise = new Promise(function(resolve, reject){
	    reject(new Error('WHOOPS'));
	  });

	  promise.then(function(value){
	    // Code here doesn't run because the promise is rejected!
	  }, function(reason){
	    // reason.message === 'WHOOPS'
	  });
	  ```

	  Instead of writing the above, your code now simply becomes the following:

	  ```javascript
	  let promise = Promise.reject(new Error('WHOOPS'));

	  promise.then(function(value){
	    // Code here doesn't run because the promise is rejected!
	  }, function(reason){
	    // reason.message === 'WHOOPS'
	  });
	  ```

	  @method reject
	  @static
	  @param {Any} reason value that the returned promise will be rejected with.
	  Useful for tooling.
	  @return {Promise} a promise rejected with the given `reason`.
	*/
	function reject(reason) {
	  /*jshint validthis:true */
	  var Constructor = this;
	  var promise = new Constructor(noop);
	  _reject(promise, reason);
	  return promise;
	}

	function needsResolver() {
	  throw new TypeError('You must pass a resolver function as the first argument to the promise constructor');
	}

	function needsNew() {
	  throw new TypeError("Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.");
	}

	/**
	  Promise objects represent the eventual result of an asynchronous operation. The
	  primary way of interacting with a promise is through its `then` method, which
	  registers callbacks to receive either a promise's eventual value or the reason
	  why the promise cannot be fulfilled.

	  Terminology
	  -----------

	  - `promise` is an object or function with a `then` method whose behavior conforms to this specification.
	  - `thenable` is an object or function that defines a `then` method.
	  - `value` is any legal JavaScript value (including undefined, a thenable, or a promise).
	  - `exception` is a value that is thrown using the throw statement.
	  - `reason` is a value that indicates why a promise was rejected.
	  - `settled` the final resting state of a promise, fulfilled or rejected.

	  A promise can be in one of three states: pending, fulfilled, or rejected.

	  Promises that are fulfilled have a fulfillment value and are in the fulfilled
	  state.  Promises that are rejected have a rejection reason and are in the
	  rejected state.  A fulfillment value is never a thenable.

	  Promises can also be said to *resolve* a value.  If this value is also a
	  promise, then the original promise's settled state will match the value's
	  settled state.  So a promise that *resolves* a promise that rejects will
	  itself reject, and a promise that *resolves* a promise that fulfills will
	  itself fulfill.


	  Basic Usage:
	  ------------

	  ```js
	  let promise = new Promise(function(resolve, reject) {
	    // on success
	    resolve(value);

	    // on failure
	    reject(reason);
	  });

	  promise.then(function(value) {
	    // on fulfillment
	  }, function(reason) {
	    // on rejection
	  });
	  ```

	  Advanced Usage:
	  ---------------

	  Promises shine when abstracting away asynchronous interactions such as
	  `XMLHttpRequest`s.

	  ```js
	  function getJSON(url) {
	    return new Promise(function(resolve, reject){
	      let xhr = new XMLHttpRequest();

	      xhr.open('GET', url);
	      xhr.onreadystatechange = handler;
	      xhr.responseType = 'json';
	      xhr.setRequestHeader('Accept', 'application/json');
	      xhr.send();

	      function handler() {
	        if (this.readyState === this.DONE) {
	          if (this.status === 200) {
	            resolve(this.response);
	          } else {
	            reject(new Error('getJSON: `' + url + '` failed with status: [' + this.status + ']'));
	          }
	        }
	      };
	    });
	  }

	  getJSON('/posts.json').then(function(json) {
	    // on fulfillment
	  }, function(reason) {
	    // on rejection
	  });
	  ```

	  Unlike callbacks, promises are great composable primitives.

	  ```js
	  Promise.all([
	    getJSON('/posts'),
	    getJSON('/comments')
	  ]).then(function(values){
	    values[0] // => postsJSON
	    values[1] // => commentsJSON

	    return values;
	  });
	  ```

	  @class Promise
	  @param {function} resolver
	  Useful for tooling.
	  @constructor
	*/
	function Promise(resolver) {
	  this[PROMISE_ID] = nextId();
	  this._result = this._state = undefined;
	  this._subscribers = [];

	  if (noop !== resolver) {
	    typeof resolver !== 'function' && needsResolver();
	    this instanceof Promise ? initializePromise(this, resolver) : needsNew();
	  }
	}

	Promise.all = all;
	Promise.race = race;
	Promise.resolve = resolve;
	Promise.reject = reject;
	Promise._setScheduler = setScheduler;
	Promise._setAsap = setAsap;
	Promise._asap = asap;

	Promise.prototype = {
	  constructor: Promise,

	  /**
	    The primary way of interacting with a promise is through its `then` method,
	    which registers callbacks to receive either a promise's eventual value or the
	    reason why the promise cannot be fulfilled.
	  
	    ```js
	    findUser().then(function(user){
	      // user is available
	    }, function(reason){
	      // user is unavailable, and you are given the reason why
	    });
	    ```
	  
	    Chaining
	    --------
	  
	    The return value of `then` is itself a promise.  This second, 'downstream'
	    promise is resolved with the return value of the first promise's fulfillment
	    or rejection handler, or rejected if the handler throws an exception.
	  
	    ```js
	    findUser().then(function (user) {
	      return user.name;
	    }, function (reason) {
	      return 'default name';
	    }).then(function (userName) {
	      // If `findUser` fulfilled, `userName` will be the user's name, otherwise it
	      // will be `'default name'`
	    });
	  
	    findUser().then(function (user) {
	      throw new Error('Found user, but still unhappy');
	    }, function (reason) {
	      throw new Error('`findUser` rejected and we're unhappy');
	    }).then(function (value) {
	      // never reached
	    }, function (reason) {
	      // if `findUser` fulfilled, `reason` will be 'Found user, but still unhappy'.
	      // If `findUser` rejected, `reason` will be '`findUser` rejected and we're unhappy'.
	    });
	    ```
	    If the downstream promise does not specify a rejection handler, rejection reasons will be propagated further downstream.
	  
	    ```js
	    findUser().then(function (user) {
	      throw new PedagogicalException('Upstream error');
	    }).then(function (value) {
	      // never reached
	    }).then(function (value) {
	      // never reached
	    }, function (reason) {
	      // The `PedgagocialException` is propagated all the way down to here
	    });
	    ```
	  
	    Assimilation
	    ------------
	  
	    Sometimes the value you want to propagate to a downstream promise can only be
	    retrieved asynchronously. This can be achieved by returning a promise in the
	    fulfillment or rejection handler. The downstream promise will then be pending
	    until the returned promise is settled. This is called *assimilation*.
	  
	    ```js
	    findUser().then(function (user) {
	      return findCommentsByAuthor(user);
	    }).then(function (comments) {
	      // The user's comments are now available
	    });
	    ```
	  
	    If the assimliated promise rejects, then the downstream promise will also reject.
	  
	    ```js
	    findUser().then(function (user) {
	      return findCommentsByAuthor(user);
	    }).then(function (comments) {
	      // If `findCommentsByAuthor` fulfills, we'll have the value here
	    }, function (reason) {
	      // If `findCommentsByAuthor` rejects, we'll have the reason here
	    });
	    ```
	  
	    Simple Example
	    --------------
	  
	    Synchronous Example
	  
	    ```javascript
	    let result;
	  
	    try {
	      result = findResult();
	      // success
	    } catch(reason) {
	      // failure
	    }
	    ```
	  
	    Errback Example
	  
	    ```js
	    findResult(function(result, err){
	      if (err) {
	        // failure
	      } else {
	        // success
	      }
	    });
	    ```
	  
	    Promise Example;
	  
	    ```javascript
	    findResult().then(function(result){
	      // success
	    }, function(reason){
	      // failure
	    });
	    ```
	  
	    Advanced Example
	    --------------
	  
	    Synchronous Example
	  
	    ```javascript
	    let author, books;
	  
	    try {
	      author = findAuthor();
	      books  = findBooksByAuthor(author);
	      // success
	    } catch(reason) {
	      // failure
	    }
	    ```
	  
	    Errback Example
	  
	    ```js
	  
	    function foundBooks(books) {
	  
	    }
	  
	    function failure(reason) {
	  
	    }
	  
	    findAuthor(function(author, err){
	      if (err) {
	        failure(err);
	        // failure
	      } else {
	        try {
	          findBoooksByAuthor(author, function(books, err) {
	            if (err) {
	              failure(err);
	            } else {
	              try {
	                foundBooks(books);
	              } catch(reason) {
	                failure(reason);
	              }
	            }
	          });
	        } catch(error) {
	          failure(err);
	        }
	        // success
	      }
	    });
	    ```
	  
	    Promise Example;
	  
	    ```javascript
	    findAuthor().
	      then(findBooksByAuthor).
	      then(function(books){
	        // found books
	    }).catch(function(reason){
	      // something went wrong
	    });
	    ```
	  
	    @method then
	    @param {Function} onFulfilled
	    @param {Function} onRejected
	    Useful for tooling.
	    @return {Promise}
	  */
	  then: then,

	  /**
	    `catch` is simply sugar for `then(undefined, onRejection)` which makes it the same
	    as the catch block of a try/catch statement.
	  
	    ```js
	    function findAuthor(){
	      throw new Error('couldn't find that author');
	    }
	  
	    // synchronous
	    try {
	      findAuthor();
	    } catch(reason) {
	      // something went wrong
	    }
	  
	    // async with promises
	    findAuthor().catch(function(reason){
	      // something went wrong
	    });
	    ```
	  
	    @method catch
	    @param {Function} onRejection
	    Useful for tooling.
	    @return {Promise}
	  */
	  'catch': function _catch(onRejection) {
	    return this.then(null, onRejection);
	  }
	};

	function polyfill() {
	    var local = undefined;

	    if (typeof global !== 'undefined') {
	        local = global;
	    } else if (typeof self !== 'undefined') {
	        local = self;
	    } else {
	        try {
	            local = Function('return this')();
	        } catch (e) {
	            throw new Error('polyfill failed because global object is unavailable in this environment');
	        }
	    }

	    var P = local.Promise;

	    if (P) {
	        var promiseToString = null;
	        try {
	            promiseToString = Object.prototype.toString.call(P.resolve());
	        } catch (e) {
	            // silently ignored
	        }

	        if (promiseToString === '[object Promise]' && !P.cast) {
	            return;
	        }
	    }

	    local.Promise = Promise;
	}

	polyfill();
	// Strange compat..
	Promise.polyfill = polyfill;
	Promise.Promise = Promise;

	return Promise;

	})));
	//# sourceMappingURL=es6-promise.map
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4), (function() { return this; }())))

/***/ }),
/* 836 */
/***/ (function(module, exports) {

	/* (ignored) */

/***/ })
/******/ ]);